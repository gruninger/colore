#summary This page highlights alignments and disparities between the objectives of the COLORE project and the OOR initiative.

= Initial OOR Scope and Vision = 

This section summarizes the initial scope and vision of the OOR initiatives as set out in the [http://ontolog.cim3.net/cgi-bin/wiki.pl?OntologySummit2008_Communique Ontology Summit 2008 Communique].

= Current Understanding of the OOR Objectives and Requirements = 

This section summarizes the [http://ontolog.cim3.net/file/work/OOR-Ontolog-Panel/2010-04-01_OOR-Use-Cases-III/OOR-UseCaseReview--ToddSchneider_20100401.pdf OOR Use Case Review] presented to the OOR team by Todd Schneider on April 1, 2010.

 # *Ontology Repository (Ontolog):* An ontology repository is a facility where ontologies and related information artifacts can be stored, retrieved and managed
 # Primary goal is to provide an architecture and an infrastructure that supports:
  * ontology creation
  * ontology sharing
  * ontology searching
  * ontology mapping
  * ontology integration
  * ontology governance/management
  * linkages to database
  * linkages to XML schema
  * linkages to structured data
  * linkages to documents
 # Complementary Goals:
  * foster use of ontologies and semantic technologies
  * aid the Semantic Web community
  * identify and promote best practices
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDF instance stores
 # Architectural Principles:
  * support evolutionary development
  * support distributed instances
  * support federation
  * scalable
  * ontology services decoupled from core repository functionality
  * no hierarchical dependencies
  * support arbitrary ontology representation languages
  * ontologically driven – Development & Runtime
  * platform independent
 # Assumptions:
  * supports evolutionary development
  * partitioning of functionality
  * instance data not stored apart from infrastructure data (e.g. polices, rules)
  * repository architecture (mostly) independent of knowledge representation language
  * initial support for OWL
  * meta/provenance information ontologically based
  * standards based to extent possible
  * not near-real time
  * federatable
 # Core Requirements:
  * storing, management, governance of ontologies & related items
  * discovery/searching ontologies
  * scalable (parallelism, federation)
  * multi-language support
  * arbitrary knowledge domain
  * platform independent
  * don’t impede storing of instance data
 # Ontology User Role:
  * find and browse ontology
  * find a term or relation
  * find a mapping
  * find a theory or rule
  * review ontology
  * subscribe to ontology (development?)
  * get help with an ontology
 # Ontology Designer Role:
  * manage an ontology
  * manage an ontology's metadata
  * manage a rule set
  * manage a rule set's metadata
  * manage an ontology mapping
  * download an ontology
  * download a rule set
  * merge ontologies
  * integrate ontologies
  * split an ontology
 # Administrator Role:
  * manage system reports
  * manage system users
  * manage system services
  * manage system policies
  * manage system persistence
  * manage system federation							
 # QUESTIONS:
  * What's the difference between an ontology and a theory?
  * Why are rules considered independently from ontologies?
  * Should CRUD operations on an entities metadata be folded into the CRUD operations of the entity itself?

= OOR Use Cases =

This section summarizes the current collection of OOR Use cases as defined on the [http://ontolog.cim3.net/cgi-bin/wiki.pl?OpenOntologyRepository_UseCases Ontolog Wiki] and on [http://ontolog.cim3.net/file/work/OOR/OOR-Use-Cases/oor-usecase-v2.xml Ken Baclawski's site].


I) Taken from , August 20, 2010.

	1) Query Administered Item
	2) Navigate Administered Item
	3) Retrieve Administered Item
	4) Extract Administered Item Part
	5) Advertise Administered Items
	6) Accredit Registration Authority
	7) Steward Registration
	8) Submitter Registration
	9) Retire Process Participant
	10) Query the registration authorities
	11) Query Contact Information
	12) Update Contact Information
	13) Upload Administered Item Map
	14) Compose Administered Items
	15) Use Administered Item
	16) Register Item
	17) Update Administered Item
	18) Validate Item
	19) Upload Administered Item Version
	20) Upload Process or Policy Definition
	21) Process Instance Form Completion
	22) Query procedures
	23) Review an administered item
	24) Query reviews 
	25) Query metrics
	26) Reassign Process Participant 
	27) Notify Registrar
	28) Map Administered Item Version



II) Taken from http://ontolog.cim3.net/cgi-bin/wiki.pl?OpenOntologyRepository_UseCases, August 20, 2010.

	1) Find Ontology
	2) Browse a single Ontology
	3) Add Comment for an Uncontrolled Review
	4) Review an OOR Ontology
	5) Add Change Request
	6) Specify Axioms via Examples / DB's
	7) Upload Ontology
	8) Update Ontology
	9) Create Mapping among existing ontologies
	10) Download Ontology
	11) Correct Ontology Errors