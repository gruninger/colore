#summary This page highlights alignments and disparities between the objectives of the COLORE project and the OOR initiative.

= Initial OOR Scope and Vision = 

This section summarizes the initial scope and vision of the OOR initiatives as set out in the [http://ontolog.cim3.net/cgi-bin/wiki.pl?OntologySummit2008_Communique Ontology Summit 2008 Communique].

= Current Understanding of the OOR Objectives and Requirements = 

This section summarizes the [http://ontolog.cim3.net/file/work/OOR-Ontolog-Panel/2010-04-01_OOR-Use-Cases-III/OOR-UseCaseReview--ToddSchneider_20100401.pdf OOR Use Case Review] presented to the OOR team by Todd Schneider on April 1, 2010.

 # *Ontology Repository (Ontolog):* An ontology repository is a facility where ontologies and related information artifacts can be stored, retrieved and managed
 # Primary goal is to provide an architecture and an infrastructure that supports:
  * ontology creation
  * ontology sharing
  * ontology searching
  * ontology mapping
  * ontology integration
  * ontology governance/management
  * linkages to database
  * linkages to XML schema
  * linkages to structured data
  * linkages to documents
 # Complementary Goals:
  * foster use of ontologies and semantic technologies
  * aid the Semantic Web community
  * identify and promote best practices
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDFS, OWL, CL ontologies
  * provision services relevant to RDF instance stores
 # Architectural Principles:
  * support evolutionary development
  * support distributed instances
  * support federation
  * scalable
  * ontology services decoupled from core repository functionality
  * no hierarchical dependencies
  * support arbitrary ontology representation languages
  * ontologically driven – Development & Runtime
  * platform independent
 # Assumptions:
  * supports evolutionary development
  * partitioning of functionality
  * instance data not stored apart from infrastructure data (e.g. polices, rules)
  * repository architecture (mostly) independent of knowledge representation language
  * initial support for OWL
  * meta/provenance information ontologically based
  * standards based to extent possible
  * not near-real time
  * federatable
 # Core Requirements:
  * storing, management, governance of ontologies & related items
  * discovery/searching ontologies
  * scalable (parallelism, federation)
  * multi-language support
  * arbitrary knowledge domain
  * platform independent
  * don’t impede storing of instance data
 # Ontology User Role:
  * find and browse ontology
  * find a term or relation
  * find a mapping
  * find a theory or rule
  * review ontology
  * subscribe to ontology (development?)
  * get help with an ontology
 # Ontology Designer Role:
  * manage an ontology
  * manage an ontology's metadata
  * manage a rule set
  * manage a rule set's metadata
  * manage an ontology mapping
  * download an ontology
  * download a rule set
  * merge ontologies
  * integrate ontologies
  * split an ontology
 # Administrator Role:
  * manage system reports
  * manage system users
  * manage system services
  * manage system policies
  * manage system persistence
  * manage system federation							
 # QUESTIONS:
  * What's the difference between an ontology and a theory?
  * Why are rules considered independently from ontologies?
  * Should CRUD operations on an entities metadata be folded into the CRUD operations of the entity itself?