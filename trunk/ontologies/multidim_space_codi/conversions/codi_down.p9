% Automatically generated from CL/KIF
formulas(sos).
% 'space/codi_down'
%imports("http:/colore.oor.net/multidim_mereotopology_codi/definitions/min_max_in_dim").
%imports("http:/colore.oor.net/multidim_mereotopology_codi/definitions/po").
%imports("http:/colore.oor.net/multidim_mereotopology_codi/definitions/inc").
%imports("http:/colore.oor.net/multidim_mereotopology_codi/definitions/sc").
% 'CD-A1: containment requires that the contained entity has a dimension that is lower or equal to the entity containing it'
 all x all y ((Cont(x, y) -> <(x, y) | EqDim(x, y))).
% 'Int-A1: disconnected entities have empty intersection'
 all x all y ((S(x) & S(y) & -(C(x, y)) <-> ZEX(intersection(x, y)))).
% 'Int-A2: the intersection is contained in the intersecting entities (also ensures the intersection is of no greater dimension than necessary)'
 all x all y ((S(x) & S(y) & -(ZEX(intersection(x, y))) -> Cont(intersection(x, y), x))).
% 'Int-A3: the intersection is of greatest possible dimension (determines the dimension of the intersection)'
 all x all y all z ((Cont(z, x) & Cont(z, y) -> <=(z, intersection(x, y)))).
% 'Int-A4: the intersection contains everything of the greatest possible dimension (and whatever those things contain)'
 all x all y all z ((Cont(z, x) & Cont(z, y) & EqDim(z, intersection(x, y)) <-> P(z, intersection(x, y)))).
% 'Closure under differences'
% 'Dif-A1: difference is of same dimension'
 all x all y ((S(x) & S(y) & -(ZEX(difference(x, y))) -> EqDim(x, difference(x, y)))).
% 'Dif-A2: difference with a entity of lower dimension'
 all x all y ((<(y, x) -> (x = difference(x, y)))).
% 'Dif-A3a: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((<=(x, y) & Cont(z, x) & <(intersection(z, y), z) -> Cont(z, difference(x, y)))).
% 'Dif-A3b: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((<=(x, y) & Cont(z, difference(x, y)) -> Cont(z, x))).
% 'Dif-A3c: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((<=(x, y) & P(z, difference(x, y)) -> <(intersection(z, y), z))).
% 'Dif-A4: zero difference only for contained entities or for zero entity'
 all x all y ((ZEX(difference(x, y)) <-> ZEX(x) | Cont(x, y))).

end_of_list.
