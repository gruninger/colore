============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 2759 was started by torsten on stl-ws2,
Tue Oct  8 20:43:15 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/sc_theorems_goal4.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/sc.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/sc_theorems_goal4.p9


formulas(goals).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x all y (x <= y -> S(x))).
(all x all y (x <= y -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> x <= x)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
3 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
4 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
5 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
6 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
7 (all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))) # label(non_clause).  [assumption].
8 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))) # label(non_clause).  [assumption].
9 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
11 (exists x MinDim(x)) # label(non_clause).  [assumption].
12 (all x all y (x <= y -> S(x))) # label(non_clause).  [assumption].
13 (all x all y (x <= y -> S(y))) # label(non_clause).  [assumption].
14 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
15 (all x (S(x) -> x <= x)) # label(non_clause).  [assumption].
16 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
17 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
18 (all x all y (ZEX(x) & S(y) -> x <= y)) # label(non_clause).  [assumption].
19 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
20 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
21 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
22 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
23 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
24 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
-S(x) | ZEX(x) | Cont(x,x).  [clausify(2)].
S(x) | -Cont(x,x).  [clausify(2)].
-ZEX(x) | -Cont(x,x).  [clausify(2)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(3)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(4)].
-ZEX(x) | S(x).  [clausify(5)].
-ZEX(x) | -Cont(y,x).  [clausify(5)].
-ZEX(x) | -Cont(x,y).  [clausify(5)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(6)].
-MaxDim(x) | S(x).  [clausify(7)].
-MaxDim(x) | -S(y) | y <= x.  [clausify(7)].
MaxDim(x) | -S(x) | S(f1(x)).  [clausify(7)].
MaxDim(x) | -S(x) | -(f1(x) <= x).  [clausify(7)].
-MinDim(x) | S(x).  [clausify(8)].
-MinDim(x) | -ZEX(x).  [clausify(8)].
-MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(8)].
MinDim(x) | -S(x) | ZEX(x) | S(f2(x)).  [clausify(8)].
MinDim(x) | -S(x) | ZEX(x) | f2(x) < x.  [clausify(8)].
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(8)].
-C(x,y) | Cont(f3(x,y),x).  [clausify(9)].
-C(x,y) | Cont(f3(x,y),y).  [clausify(9)].
C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(9)].
-P(x,y) | Cont(x,y).  [clausify(10)].
-P(x,y) | EqDim(x,y).  [clausify(10)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(10)].
MinDim(c1).  [clausify(11)].
-(x <= y) | S(x).  [clausify(12)].
-(x <= y) | S(y).  [clausify(13)].
-ZEX(x) | S(x).  [clausify(14)].
-S(x) | x <= x.  [clausify(15)].
-(x <= y) | -(y <= z) | x <= z.  [clausify(16)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(17)].
-ZEX(x) | -S(y) | x <= y.  [clausify(18)].
-(x > y) | y < x.  [clausify(19)].
x > y | -(y < x).  [clausify(19)].
-(x >= y) | y <= x.  [clausify(20)].
x >= y | -(y <= x).  [clausify(20)].
-(x < y) | x <= y.  [clausify(21)].
-(x < y) | -EqDim(x,y).  [clausify(21)].
x < y | -(x <= y) | EqDim(x,y).  [clausify(21)].
-EqDim(x,y) | x <= y.  [clausify(22)].
-EqDim(x,y) | y <= x.  [clausify(22)].
EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(22)].
-SC(x,y) | Cont(f4(x,y),x).  [clausify(23)].
-SC(x,y) | Cont(f4(x,y),y).  [clausify(23)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(23)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(23)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(23)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(23)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(23)].
C(c2,c3).  [deny(24)].
-Cont(x,c2) | -Cont(x,c3) | -P(x,c2).  [deny(24)].
-Cont(x,c2) | -Cont(x,c3) | -P(x,c3).  [deny(24)].
-SC(c2,c3).  [deny(24)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
25 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(10)].
26 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
27 -P(x,y) | EqDim(x,y).  [clausify(10)].
Derived: P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(25,c,26,c)].
28 -(x < y) | -EqDim(x,y).  [clausify(21)].
Derived: -(x < y) | -P(x,y).  [resolve(28,b,27,b)].
29 x < y | -(x <= y) | EqDim(x,y).  [clausify(21)].
30 -EqDim(x,y) | x <= y.  [clausify(22)].
Derived: x <= y | -Cont(x,y) | x < y.  [resolve(30,a,26,c)].
Derived: x <= y | -P(x,y).  [resolve(30,a,27,b)].
31 -EqDim(x,y) | y <= x.  [clausify(22)].
Derived: x <= y | -Cont(y,x) | y < x.  [resolve(31,a,26,c)].
Derived: x <= y | -P(y,x).  [resolve(31,a,27,b)].
Derived: x <= y | y < x | -(y <= x).  [resolve(31,a,29,c)].
32 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(22)].
Derived: -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(32,a,25,c)].
Derived: -(x <= y) | -(y <= x) | -(x < y).  [resolve(32,a,28,b)].

Eliminating MaxDim/1
33 MaxDim(x) | -S(x) | S(f1(x)).  [clausify(7)].
34 -MaxDim(x) | S(x).  [clausify(7)].
35 -MaxDim(x) | -S(y) | y <= x.  [clausify(7)].
Derived: -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(33,a,35,a)].
36 MaxDim(x) | -S(x) | -(f1(x) <= x).  [clausify(7)].
Derived: -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(36,a,35,a)].

Eliminating MinDim/1
37 MinDim(x) | -S(x) | ZEX(x) | S(f2(x)).  [clausify(8)].
38 -MinDim(x) | S(x).  [clausify(8)].
39 -MinDim(x) | -ZEX(x).  [clausify(8)].
40 -MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(8)].
Derived: -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(37,a,40,a)].
41 MinDim(x) | -S(x) | ZEX(x) | f2(x) < x.  [clausify(8)].
Derived: -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(41,a,40,a)].
42 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(8)].
Derived: -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(42,a,40,a)].
43 MinDim(c1).  [clausify(11)].
Derived: S(c1).  [resolve(43,a,38,a)].
Derived: -ZEX(c1).  [resolve(43,a,39,a)].
Derived: -S(x) | -(x < c1) | ZEX(x).  [resolve(43,a,40,a)].

Eliminating C/2
44 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(9)].
45 -C(x,y) | Cont(f3(x,y),x).  [clausify(9)].
46 -C(x,y) | Cont(f3(x,y),y).  [clausify(9)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),y).  [resolve(44,a,45,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),z).  [resolve(44,a,46,a)].
47 C(c2,c3).  [deny(24)].
Derived: Cont(f3(c2,c3),c2).  [resolve(47,a,45,a)].
Derived: Cont(f3(c2,c3),c3).  [resolve(47,a,46,a)].

Eliminating >/2
48 x > y | -(y < x).  [clausify(19)].
49 -(x > y) | y < x.  [clausify(19)].

Eliminating >=/2
50 x >= y | -(y <= x).  [clausify(20)].
51 -(x >= y) | y <= x.  [clausify(20)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, S, ZEX, Cont, <=, <, SC, P ]).
Function symbol precedence:  function_order([ c1, c2, c3, f3, f4, f5, f1, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      52 -S(x) | ZEX(x) | Cont(x,x).  [clausify(2)].
kept:      53 S(x) | -Cont(x,x).  [clausify(2)].
kept:      54 -ZEX(x) | -Cont(x,x).  [clausify(2)].
kept:      55 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(3)].
kept:      56 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(4)].
kept:      57 -ZEX(x) | S(x).  [clausify(5)].
kept:      58 -ZEX(x) | -Cont(y,x).  [clausify(5)].
kept:      59 -ZEX(x) | -Cont(x,y).  [clausify(5)].
kept:      60 -ZEX(x) | -ZEX(y) | y = x.  [clausify(6)].
kept:      61 -P(x,y) | Cont(x,y).  [clausify(10)].
kept:      62 -(x <= y) | S(x).  [clausify(12)].
kept:      63 -(x <= y) | S(y).  [clausify(13)].
kept:      64 -S(x) | x <= x.  [clausify(15)].
kept:      65 -(x <= y) | -(y <= z) | x <= z.  [clausify(16)].
kept:      66 -ZEX(x) | -S(y) | x <= y.  [clausify(18)].
kept:      67 -(x < y) | x <= y.  [clausify(21)].
kept:      68 -SC(x,y) | Cont(f4(x,y),x).  [clausify(23)].
kept:      69 -SC(x,y) | Cont(f4(x,y),y).  [clausify(23)].
kept:      70 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(23)].
kept:      71 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(23)].
kept:      72 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(23)].
kept:      73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(23)].
kept:      74 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(23)].
kept:      75 -Cont(x,c2) | -Cont(x,c3) | -P(x,c2).  [deny(24)].
kept:      76 -Cont(x,c2) | -Cont(x,c3) | -P(x,c3).  [deny(24)].
kept:      77 -SC(c2,c3).  [deny(24)].
           78 P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(25,c,26,c)].
kept:      79 P(x,y) | -Cont(x,y) | x < y.  [copy(78),merge(c)].
kept:      80 -(x < y) | -P(x,y).  [resolve(28,b,27,b)].
kept:      81 x <= y | -Cont(x,y) | x < y.  [resolve(30,a,26,c)].
kept:      82 x <= y | -P(x,y).  [resolve(30,a,27,b)].
kept:      83 x <= y | -Cont(y,x) | y < x.  [resolve(31,a,26,c)].
kept:      84 x <= y | -P(y,x).  [resolve(31,a,27,b)].
kept:      85 x <= y | y < x | -(y <= x).  [resolve(31,a,29,c)].
kept:      86 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(32,a,25,c)].
kept:      87 -(x <= y) | -(y <= x) | -(x < y).  [resolve(32,a,28,b)].
kept:      88 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(33,a,35,a)].
kept:      89 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(36,a,35,a)].
kept:      90 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(37,a,40,a)].
kept:      91 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(41,a,40,a)].
kept:      92 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(42,a,40,a)].
kept:      93 S(c1).  [resolve(43,a,38,a)].
kept:      94 -ZEX(c1).  [resolve(43,a,39,a)].
kept:      95 -S(x) | -(x < c1) | ZEX(x).  [resolve(43,a,40,a)].
kept:      96 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),y).  [resolve(44,a,45,a)].
kept:      97 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),z).  [resolve(44,a,46,a)].
kept:      98 Cont(f3(c2,c3),c2).  [resolve(47,a,45,a)].
kept:      99 Cont(f3(c2,c3),c3).  [resolve(47,a,46,a)].
kept:      100 -SC(x,x) | -Cont(y,x) | y < x.  [factor(70,b,c)].
kept:      101 SC(x,x) | -Cont(y,x) | Cont(f5(x,x),x).  [factor(72,b,c)].
kept:      102 SC(x,x) | -Cont(y,x) | -(f5(x,x) < x).  [factor(74,b,c),merge(d)].
kept:      103 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(86,a,b)].
kept:      104 -(x <= x) | -(x < x).  [factor(87,a,b)].
kept:      105 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(90,a,d),merge(e)].
kept:      106 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(91,a,d),merge(e)].
kept:      107 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(92,a,d),merge(e)].
kept:      108 -Cont(x,y) | Cont(f3(y,y),y).  [factor(96,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
52 -S(x) | ZEX(x) | Cont(x,x).  [clausify(2)].
53 S(x) | -Cont(x,x).  [clausify(2)].
55 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(3)].
56 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(4)].
57 -ZEX(x) | S(x).  [clausify(5)].
58 -ZEX(x) | -Cont(y,x).  [clausify(5)].
59 -ZEX(x) | -Cont(x,y).  [clausify(5)].
60 -ZEX(x) | -ZEX(y) | y = x.  [clausify(6)].
61 -P(x,y) | Cont(x,y).  [clausify(10)].
62 -(x <= y) | S(x).  [clausify(12)].
63 -(x <= y) | S(y).  [clausify(13)].
64 -S(x) | x <= x.  [clausify(15)].
65 -(x <= y) | -(y <= z) | x <= z.  [clausify(16)].
66 -ZEX(x) | -S(y) | x <= y.  [clausify(18)].
67 -(x < y) | x <= y.  [clausify(21)].
68 -SC(x,y) | Cont(f4(x,y),x).  [clausify(23)].
69 -SC(x,y) | Cont(f4(x,y),y).  [clausify(23)].
70 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(23)].
71 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(23)].
72 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(23)].
73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(23)].
74 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(23)].
75 -Cont(x,c2) | -Cont(x,c3) | -P(x,c2).  [deny(24)].
76 -Cont(x,c2) | -Cont(x,c3) | -P(x,c3).  [deny(24)].
77 -SC(c2,c3).  [deny(24)].
79 P(x,y) | -Cont(x,y) | x < y.  [copy(78),merge(c)].
80 -(x < y) | -P(x,y).  [resolve(28,b,27,b)].
81 x <= y | -Cont(x,y) | x < y.  [resolve(30,a,26,c)].
82 x <= y | -P(x,y).  [resolve(30,a,27,b)].
83 x <= y | -Cont(y,x) | y < x.  [resolve(31,a,26,c)].
84 x <= y | -P(y,x).  [resolve(31,a,27,b)].
85 x <= y | y < x | -(y <= x).  [resolve(31,a,29,c)].
86 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(32,a,25,c)].
87 -(x <= y) | -(y <= x) | -(x < y).  [resolve(32,a,28,b)].
88 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(33,a,35,a)].
89 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(36,a,35,a)].
90 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(37,a,40,a)].
91 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(41,a,40,a)].
92 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(42,a,40,a)].
93 S(c1).  [resolve(43,a,38,a)].
94 -ZEX(c1).  [resolve(43,a,39,a)].
95 -S(x) | -(x < c1) | ZEX(x).  [resolve(43,a,40,a)].
96 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),y).  [resolve(44,a,45,a)].
97 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),z).  [resolve(44,a,46,a)].
98 Cont(f3(c2,c3),c2).  [resolve(47,a,45,a)].
99 Cont(f3(c2,c3),c3).  [resolve(47,a,46,a)].
100 -SC(x,x) | -Cont(y,x) | y < x.  [factor(70,b,c)].
101 SC(x,x) | -Cont(y,x) | Cont(f5(x,x),x).  [factor(72,b,c)].
102 SC(x,x) | -Cont(y,x) | -(f5(x,x) < x).  [factor(74,b,c),merge(d)].
103 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(86,a,b)].
104 -(x <= x) | -(x < x).  [factor(87,a,b)].
105 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(90,a,d),merge(e)].
106 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(91,a,d),merge(e)].
107 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(92,a,d),merge(e)].
108 -Cont(x,y) | Cont(f3(y,y),y).  [factor(96,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=7): 52 -S(x) | ZEX(x) | Cont(x,x).  [clausify(2)].

given #2 (I,wt=5): 53 S(x) | -Cont(x,x).  [clausify(2)].

given #3 (I,wt=9): 55 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(3)].

given #4 (I,wt=9): 56 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(4)].

given #5 (I,wt=4): 57 -ZEX(x) | S(x).  [clausify(5)].

given #6 (I,wt=5): 58 -ZEX(x) | -Cont(y,x).  [clausify(5)].

given #7 (I,wt=5): 59 -ZEX(x) | -Cont(x,y).  [clausify(5)].

given #8 (I,wt=7): 60 -ZEX(x) | -ZEX(y) | y = x.  [clausify(6)].

given #9 (I,wt=6): 61 -P(x,y) | Cont(x,y).  [clausify(10)].

given #10 (I,wt=5): 62 -(x <= y) | S(x).  [clausify(12)].

given #11 (I,wt=5): 63 -(x <= y) | S(y).  [clausify(13)].

given #12 (I,wt=5): 64 -S(x) | x <= x.  [clausify(15)].

given #13 (I,wt=9): 65 -(x <= y) | -(y <= z) | x <= z.  [clausify(16)].

given #14 (I,wt=7): 66 -ZEX(x) | -S(y) | x <= y.  [clausify(18)].

given #15 (I,wt=6): 67 -(x < y) | x <= y.  [clausify(21)].

given #16 (I,wt=8): 68 -SC(x,y) | Cont(f4(x,y),x).  [clausify(23)].

given #17 (I,wt=8): 69 -SC(x,y) | Cont(f4(x,y),y).  [clausify(23)].

given #18 (I,wt=12): 70 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(23)].

given #19 (I,wt=12): 71 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(23)].

given #20 (I,wt=14): 72 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(23)].

given #21 (I,wt=14): 73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(23)].

given #22 (I,wt=19): 74 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(23)].

given #23 (I,wt=9): 75 -Cont(x,c2) | -Cont(x,c3) | -P(x,c2).  [deny(24)].

given #24 (I,wt=9): 76 -Cont(x,c2) | -Cont(x,c3) | -P(x,c3).  [deny(24)].

given #25 (I,wt=3): 77 -SC(c2,c3).  [deny(24)].

given #26 (I,wt=9): 79 P(x,y) | -Cont(x,y) | x < y.  [copy(78),merge(c)].

given #27 (I,wt=6): 80 -(x < y) | -P(x,y).  [resolve(28,b,27,b)].

given #28 (I,wt=9): 81 x <= y | -Cont(x,y) | x < y.  [resolve(30,a,26,c)].

given #29 (I,wt=6): 82 x <= y | -P(x,y).  [resolve(30,a,27,b)].

given #30 (I,wt=9): 83 x <= y | -Cont(y,x) | y < x.  [resolve(31,a,26,c)].

given #31 (I,wt=6): 84 x <= y | -P(y,x).  [resolve(31,a,27,b)].

given #32 (I,wt=9): 85 x <= y | y < x | -(y <= x).  [resolve(31,a,29,c)].

given #33 (I,wt=12): 86 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(32,a,25,c)].

given #34 (I,wt=9): 87 -(x <= y) | -(y <= x) | -(x < y).  [resolve(32,a,28,b)].

given #35 (I,wt=10): 88 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(33,a,35,a)].

given #36 (I,wt=11): 89 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(36,a,35,a)].

given #37 (I,wt=14): 90 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(37,a,40,a)].

given #38 (I,wt=15): 91 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(41,a,40,a)].

given #39 (I,wt=14): 92 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(42,a,40,a)].

given #40 (I,wt=2): 93 S(c1).  [resolve(43,a,38,a)].

given #41 (I,wt=2): 94 -ZEX(c1).  [resolve(43,a,39,a)].

given #42 (I,wt=7): 95 -S(x) | -(x < c1) | ZEX(x).  [resolve(43,a,40,a)].

given #43 (I,wt=11): 96 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),y).  [resolve(44,a,45,a)].

given #44 (I,wt=11): 97 -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),z).  [resolve(44,a,46,a)].

given #45 (I,wt=5): 98 Cont(f3(c2,c3),c2).  [resolve(47,a,45,a)].

given #46 (I,wt=5): 99 Cont(f3(c2,c3),c3).  [resolve(47,a,46,a)].

given #47 (I,wt=9): 100 -SC(x,x) | -Cont(y,x) | y < x.  [factor(70,b,c)].

given #48 (I,wt=11): 101 SC(x,x) | -Cont(y,x) | Cont(f5(x,x),x).  [factor(72,b,c)].

given #49 (I,wt=11): 102 SC(x,x) | -Cont(y,x) | -(f5(x,x) < x).  [factor(74,b,c),merge(d)].

given #50 (I,wt=9): 103 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(86,a,b)].

given #51 (I,wt=6): 104 -(x <= x) | -(x < x).  [factor(87,a,b)].

given #52 (I,wt=10): 105 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(90,a,d),merge(e)].

given #53 (I,wt=11): 106 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(91,a,d),merge(e)].

given #54 (I,wt=10): 107 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(92,a,d),merge(e)].

given #55 (I,wt=8): 108 -Cont(x,y) | Cont(f3(y,y),y).  [factor(96,a,b)].

given #56 (A,wt=8): 109 -S(x) | S(f1(x)) | c1 <= x.  [resolve(93,a,88,c)].

given #57 (F,wt=2): 126 -ZEX(c2).  [resolve(98,a,58,b)].

given #58 (F,wt=2): 141 -ZEX(c3).  [resolve(99,a,58,b)].

given #59 (F,wt=3): 113 -(c1 < c1).  [ur(95,a,93,a,c,94,a)].

given #60 (F,wt=4): 125 -ZEX(f3(c2,c3)).  [resolve(98,a,59,b)].

given #61 (T,wt=3): 111 c1 <= c1.  [resolve(93,a,64,a)].

given #62 (T,wt=3): 112 Cont(c1,c1).  [resolve(93,a,52,a),unit_del(a,94)].

given #63 (T,wt=3): 153 P(c1,c1).  [resolve(111,a,103,a),unit_del(b,112)].

given #64 (T,wt=5): 147 f3(c2,c3) < c3.  [back_unit_del(136),unit_del(a,145)].

given #65 (A,wt=8): 110 S(f1(c1)) | -S(x) | x <= c1.  [resolve(93,a,88,a)].

given #66 (F,wt=3): 164 -SC(c1,c1).  [ur(100,b,112,a,c,113,a)].

given #67 (F,wt=5): 145 -P(f3(c2,c3),c3).  [ur(76,a,98,a,b,99,a)].

given #68 (F,wt=5): 146 -P(f3(c2,c3),c2).  [ur(75,a,98,a,b,99,a)].

given #69 (F,wt=5): 171 -(c3 <= f3(c2,c3)).  [back_unit_del(169),unit_del(a,170)].

given #70 (T,wt=5): 148 f3(c2,c3) < c2.  [back_unit_del(120),unit_del(a,146)].

given #71 (T,wt=5): 151 Cont(f3(c3,c3),c3).  [resolve(108,a,99,a)].

given #72 (T,wt=5): 152 Cont(f3(c2,c2),c2).  [resolve(108,a,98,a)].

given #73 (T,wt=5): 154 Cont(f3(c1,c1),c1).  [resolve(112,a,108,a)].

given #74 (A,wt=10): 114 -Cont(f3(c2,c3),x) | Cont(f3(x,c2),c2).  [resolve(98,a,97,b)].

given #75 (F,wt=4): 192 -ZEX(f3(c3,c3)).  [resolve(151,a,59,b)].

given #76 (F,wt=4): 207 -ZEX(f3(c2,c2)).  [resolve(152,a,59,b)].

given #77 (F,wt=4): 222 -ZEX(f3(c1,c1)).  [resolve(154,a,59,b)].

given #78 (F,wt=5): 172 -(f5(c1,c1) < c1).  [ur(102,a,164,a,b,112,a)].

given #79 (T,wt=5): 165 Cont(f5(c1,c1),c1).  [back_unit_del(155),unit_del(a,164)].

given #80 (T,wt=5): 170 f3(c2,c3) <= c3.  [resolve(147,a,67,a)].

given #81 (T,wt=2): 244 S(c3).  [resolve(170,a,63,a)].

given #82 (T,wt=3): 246 S(f2(c3)).  [back_unit_del(168),unit_del(a,244),unit_del(c,245)].

given #83 (A,wt=10): 115 -Cont(f3(c2,c3),x) | Cont(f3(c2,x),x).  [resolve(98,a,97,a)].

given #84 (F,wt=3): 248 -ZEX(f2(c3)).  [back_unit_del(166),unit_del(a,244),unit_del(c,245)].

given #85 (F,wt=3): 258 -(c3 < c1).  [ur(95,a,244,a,c,141,a)].

given #86 (F,wt=4): 238 -ZEX(f5(c1,c1)).  [resolve(165,a,59,b)].

given #87 (F,wt=4): 265 -(f2(c3) < c1).  [ur(95,a,246,a,c,248,a)].

given #88 (T,wt=3): 256 c3 <= c3.  [resolve(244,a,64,a)].

given #89 (T,wt=3): 257 Cont(c3,c3).  [resolve(244,a,52,a),unit_del(a,141)].

given #90 (T,wt=3): 266 P(c3,c3).  [resolve(256,a,103,a),unit_del(b,257)].

given #91 (T,wt=4): 245 S(f3(c2,c3)).  [resolve(170,a,62,a)].

given #92 (A,wt=10): 116 -Cont(f3(c2,c3),x) | Cont(f3(x,c2),x).  [resolve(98,a,96,b)].

given #93 (F,wt=3): 267 -(c3 < c3).  [ur(104,a,256,a)].

given #94 (F,wt=3): 276 -Cont(c3,c2).  [resolve(266,a,76,c),unit_del(b,257)].

given #95 (F,wt=3): 286 -SC(c3,c3).  [ur(100,b,257,a,c,267,a)].

given #96 (F,wt=3): 288 -P(c3,c2).  [ur(61,b,276,a)].

given #97 (T,wt=4): 247 f2(c3) < c3.  [back_unit_del(167),unit_del(a,244),unit_del(c,245)].

given #98 (T,wt=4): 293 f2(c3) <= c3.  [resolve(247,a,67,a)].

given #99 (T,wt=5): 179 f3(c2,c3) <= c2.  [resolve(148,a,67,a)].

given #100 (T,wt=2): 300 S(c2).  [resolve(179,a,63,a)].

given #101 (A,wt=10): 117 -Cont(f3(c2,c3),x) | Cont(f3(c2,x),c2).  [resolve(98,a,96,a)].

given #102 (F,wt=3): 301 -ZEX(f2(c2)).  [back_unit_del(251),unit_del(a,300)].

given #103 (F,wt=3): 310 -(c2 < c1).  [ur(95,a,300,a,c,126,a)].

given #104 (F,wt=4): 294 -P(f2(c3),c3).  [ur(80,a,247,a)].

given #105 (F,wt=4): 295 -(c3 <= f2(c3)).  [back_unit_del(292),unit_del(a,293)].

given #106 (T,wt=3): 303 S(f2(c2)).  [back_unit_del(249),unit_del(a,300)].

given #107 (T,wt=3): 308 c2 <= c2.  [resolve(300,a,64,a)].

given #108 (T,wt=3): 309 Cont(c2,c2).  [resolve(300,a,52,a),unit_del(a,126)].

given #109 (T,wt=3): 321 P(c2,c2).  [resolve(308,a,103,a),unit_del(b,309)].

given #110 (A,wt=13): 121 SC(x,c2) | -Cont(f3(c2,c3),x) | Cont(f5(x,c2),c2).  [resolve(98,a,73,c)].

given #111 (F,wt=3): 322 -(c2 < c2).  [ur(104,a,308,a)].

given #112 (F,wt=3): 331 -Cont(c2,c3).  [resolve(321,a,75,c),unit_del(a,309)].

given #113 (F,wt=3): 333 -SC(c2,c2).  [ur(100,b,309,a,c,322,a)].

given #114 (F,wt=3): 335 -P(c2,c3).  [ur(61,b,331,a)].

given #115 (T,wt=4): 302 f2(c2) < c2.  [back_unit_del(250),unit_del(a,300)].

given #116 (T,wt=4): 340 f2(c2) <= c2.  [resolve(302,a,67,a)].

given #117 (T,wt=5): 226 Cont(f3(c3,c2),c2).  [resolve(114,a,99,a)].

given #118 (T,wt=5): 231 c1 <= f5(c1,c1).  [resolve(165,a,83,b),unit_del(b,172)].

given #119 (A,wt=13): 122 SC(c2,x) | -Cont(f3(c2,c3),x) | Cont(f5(c2,x),x).  [resolve(98,a,73,b)].

given #120 (F,wt=4): 312 -P(c3,f2(c3)).  [ur(82,a,295,a)].

given #121 (F,wt=4): 313 -(c3 < f2(c3)).  [ur(67,b,295,a)].

given #122 (F,wt=4): 320 -(f2(c2) < c1).  [ur(95,a,303,a,c,301,a)].

given #123 (F,wt=4): 341 -P(f2(c2),c2).  [ur(80,a,302,a)].

given #124 (T,wt=4): 364 S(f5(c1,c1)).  [resolve(231,a,63,a)].

given #125 (T,wt=5): 232 f5(c1,c1) <= c1.  [resolve(165,a,81,b),unit_del(b,172)].

given #126 (T,wt=5): 233 P(f5(c1,c1),c1).  [resolve(165,a,79,b),unit_del(b,172)].

given #127 (T,wt=5): 263 f2(c3) <= f2(c3).  [resolve(246,a,64,a)].

given #128 (A,wt=13): 123 SC(x,c2) | -Cont(f3(c2,c3),x) | Cont(f5(x,c2),x).  [resolve(98,a,72,c)].

given #129 (F,wt=4): 342 -(c2 <= f2(c2)).  [back_unit_del(339),unit_del(a,340)].

given #130 (F,wt=4): 356 -ZEX(f3(c3,c2)).  [resolve(226,a,59,b)].

given #131 (F,wt=4): 366 -Cont(c3,f2(c3)).  [ur(81,a,295,a,c,313,a)].

given #132 (F,wt=4): 378 -P(c2,f2(c2)).  [ur(82,a,342,a)].

given #133 (T,wt=5): 264 Cont(f2(c3),f2(c3)).  [resolve(246,a,52,a),unit_del(a,248)].

given #134 (T,wt=5): 285 Cont(f3(c3,c2),c3).  [resolve(116,a,99,a)].

given #135 (T,wt=5): 287 Cont(f5(c3,c3),c3).  [back_unit_del(149),unit_del(a,286)].

given #136 (T,wt=5): 318 f2(c2) <= f2(c2).  [resolve(303,a,64,a)].

given #137 (A,wt=13): 124 SC(c2,x) | -Cont(f3(c2,c3),x) | Cont(f5(c2,x),c2).  [resolve(98,a,72,b)].

given #138 (F,wt=4): 379 -(c2 < f2(c2)).  [ur(67,b,342,a)].

given #139 (F,wt=4): 419 -ZEX(f5(c3,c3)).  [resolve(287,a,59,b)].

given #140 (F,wt=4): 427 -Cont(c2,f2(c2)).  [ur(81,a,342,a,c,379,a)].

given #141 (F,wt=5): 173 -P(c3,f3(c2,c3)).  [ur(82,a,171,a)].

given #142 (T,wt=5): 319 Cont(f2(c2),f2(c2)).  [resolve(303,a,52,a),unit_del(a,301)].

given #143 (T,wt=5): 334 Cont(f5(c2,c2),c2).  [back_unit_del(150),unit_del(a,333)].

given #144 (T,wt=5): 365 Cont(f5(c2,c3),c3).  [resolve(122,b,99,a),unit_del(a,77)].

given #145 (T,wt=5): 374 P(f2(c3),f2(c3)).  [resolve(263,a,103,a),unit_del(b,264)].

given #146 (A,wt=8): 127 -Cont(x,f3(c2,c3)) | Cont(x,c2).  [resolve(98,a,56,b)].

given #147 (F,wt=4): 449 -ZEX(f5(c2,c2)).  [resolve(334,a,59,b)].

given #148 (F,wt=4): 465 -ZEX(f5(c2,c3)).  [resolve(365,a,59,b)].

given #149 (F,wt=5): 174 -(c3 < f3(c2,c3)).  [ur(67,b,171,a)].

given #150 (F,wt=5): 180 -(c2 <= f3(c2,c3)).  [back_unit_del(178),unit_del(a,179)].

given #151 (T,wt=5): 406 f3(c3,c2) < c3.  [back_unit_del(396),unit_del(a,403)].

given #152 (T,wt=5): 407 f3(c3,c2) < c2.  [back_unit_del(351),unit_del(a,404)].

given #153 (T,wt=5): 412 c3 <= f5(c3,c3).  [resolve(287,a,83,b),unit_del(b,291)].

given #154 (T,wt=4): 481 S(f5(c3,c3)).  [resolve(412,a,63,a)].

given #155 (A,wt=8): 128 -Cont(c2,x) | Cont(f3(c2,c3),x).  [resolve(98,a,56,a)].

given #156 (F,wt=5): 283 -(f3(c2,c3) < c1).  [ur(95,a,245,a,c,125,a)].

given #157 (F,wt=5): 289 -Cont(c3,f3(c2,c2)).  [ur(56,b,152,a,c,276,a)].

given #158 (F,wt=5): 290 -Cont(c3,f3(c2,c3)).  [ur(56,b,98,a,c,276,a)].

given #159 (F,wt=5): 291 -(f5(c3,c3) < c3).  [ur(102,a,286,a,b,257,a)].

given #160 (T,wt=5): 413 f5(c3,c3) <= c3.  [resolve(287,a,81,b),unit_del(b,291)].

given #161 (T,wt=5): 414 P(f5(c3,c3),c3).  [resolve(287,a,79,b),unit_del(b,291)].

given #162 (T,wt=5): 424 P(f2(c2),f2(c2)).  [resolve(318,a,103,a),unit_del(b,319)].

given #163 (T,wt=5): 426 Cont(f5(c2,c3),c2).  [resolve(124,b,99,a),unit_del(a,77)].

given #164 (A,wt=10): 130 -Cont(f3(c2,c3),x) | Cont(f3(x,c3),c3).  [resolve(99,a,97,b)].

given #165 (F,wt=5): 336 -Cont(c2,f3(c3,c3)).  [ur(56,b,151,a,c,331,a)].

given #166 (F,wt=5): 337 -Cont(c2,f3(c2,c3)).  [ur(56,b,99,a,c,331,a)].

given #167 (F,wt=5): 338 -(f5(c2,c2) < c2).  [ur(102,a,333,a,b,309,a)].

given #168 (F,wt=5): 360 -Cont(c3,f3(c3,c2)).  [ur(56,b,226,a,c,276,a)].

given #169 (T,wt=5): 442 c2 <= f5(c2,c2).  [resolve(334,a,83,b),unit_del(b,338)].

given #170 (T,wt=4): 519 S(f5(c2,c2)).  [resolve(442,a,63,a)].

given #171 (T,wt=5): 443 f5(c2,c2) <= c2.  [resolve(334,a,81,b),unit_del(b,338)].

given #172 (T,wt=5): 444 P(f5(c2,c2),c2).  [resolve(334,a,79,b),unit_del(b,338)].

given #173 (A,wt=10): 131 -Cont(f3(c2,c3),x) | Cont(f3(c3,x),x).  [resolve(99,a,97,a)].

given #174 (F,wt=5): 373 -(c1 < f5(c1,c1)).  [ur(87,a,231,a,b,232,a)].

given #175 (F,wt=5): 375 -(f2(c3) < f2(c3)).  [ur(104,a,263,a)].

given #176 (F,wt=5): 403 -P(f3(c3,c2),c3).  [ur(76,a,226,a,b,285,a)].

given #177 (F,wt=5): 404 -P(f3(c3,c2),c2).  [ur(75,a,226,a,b,285,a)].

given #178 (T,wt=5): 473 f3(c3,c2) <= c3.  [resolve(406,a,67,a)].

given #179 (T,wt=4): 537 S(f3(c3,c2)).  [resolve(473,a,62,a)].

given #180 (T,wt=5): 476 f3(c3,c2) <= c2.  [resolve(407,a,67,a)].

given #181 (T,wt=5): 512 f5(c2,c3) < c3.  [back_unit_del(460),unit_del(a,509)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 31.
% Level of proof is 7.
% Maximum clause weight is 19.000.
% Given clauses 181.

1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
9 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
23 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
24 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause) # label(goal).  [goal].
25 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(10)].
26 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
45 -C(x,y) | Cont(f3(x,y),x).  [clausify(9)].
46 -C(x,y) | Cont(f3(x,y),y).  [clausify(9)].
47 C(c2,c3).  [deny(24)].
72 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(23)].
73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(23)].
74 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(23)].
75 -Cont(x,c2) | -Cont(x,c3) | -P(x,c2).  [deny(24)].
76 -Cont(x,c2) | -Cont(x,c3) | -P(x,c3).  [deny(24)].
77 -SC(c2,c3).  [deny(24)].
78 P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(25,c,26,c)].
79 P(x,y) | -Cont(x,y) | x < y.  [copy(78),merge(c)].
98 Cont(f3(c2,c3),c2).  [resolve(47,a,45,a)].
99 Cont(f3(c2,c3),c3).  [resolve(47,a,46,a)].
122 SC(c2,x) | -Cont(f3(c2,c3),x) | Cont(f5(c2,x),x).  [resolve(98,a,73,b)].
124 SC(c2,x) | -Cont(f3(c2,c3),x) | Cont(f5(c2,x),c2).  [resolve(98,a,72,b)].
365 Cont(f5(c2,c3),c3).  [resolve(122,b,99,a),unit_del(a,77)].
426 Cont(f5(c2,c3),c2).  [resolve(124,b,99,a),unit_del(a,77)].
460 P(f5(c2,c3),c3) | f5(c2,c3) < c3.  [resolve(365,a,79,b)].
502 P(f5(c2,c3),c2) | f5(c2,c3) < c2.  [resolve(426,a,79,b)].
509 -P(f5(c2,c3),c3).  [ur(76,a,426,a,b,365,a)].
510 -P(f5(c2,c3),c2).  [ur(75,a,426,a,b,365,a)].
512 f5(c2,c3) < c3.  [back_unit_del(460),unit_del(a,509)].
513 f5(c2,c3) < c2.  [back_unit_del(502),unit_del(a,510)].
550 $F.  [ur(74,a,77,a,b,426,a,c,365,a,e,512,a),unit_del(a,513)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=181. Generated=917. Kept=497. proofs=1.
Usable=181. Sos=271. Demods=0. Limbo=3, Disabled=118. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=419. Back_subsumed=17.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=25.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=768. Nonunit_bsub_feature_tests=1204.
Megabytes=0.70.
User_CPU=0.03, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 2759 exit (max_proofs) ------

Process 2759 exit (max_proofs) Tue Oct  8 20:43:15 2013
============================= prover9 ================================
execution finished: Tue Oct 08 20:43:16 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/sc_theorems_goal4.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/sc.p9"
Input read from 
============================ end of footer ===========================
