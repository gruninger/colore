============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 3834 was started by torsten on stl-ws2,
Tue Oct  8 20:45:30 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/po_theorems_goal1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x all y (x <= y -> S(x))).
(all x all y (x <= y -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> x <= x)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/po_theorems_goal1.p9


formulas(goals).
(all x (S(x) & -ZEX(x) -> PO(x,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))) # label(non_clause).  [assumption].
2 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))) # label(non_clause).  [assumption].
3 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
4 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
5 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
6 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
8 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
9 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
10 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
11 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
12 (exists x MinDim(x)) # label(non_clause).  [assumption].
13 (all x all y (x <= y -> S(x))) # label(non_clause).  [assumption].
14 (all x all y (x <= y -> S(y))) # label(non_clause).  [assumption].
15 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
16 (all x (S(x) -> x <= x)) # label(non_clause).  [assumption].
17 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
18 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
19 (all x all y (ZEX(x) & S(y) -> x <= y)) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
21 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
22 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
23 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
24 (all x (S(x) & -ZEX(x) -> PO(x,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-MaxDim(x) | S(x).  [clausify(1)].
-MaxDim(x) | -S(y) | y <= x.  [clausify(1)].
MaxDim(x) | -S(x) | S(f1(x)).  [clausify(1)].
MaxDim(x) | -S(x) | -(f1(x) <= x).  [clausify(1)].
-MinDim(x) | S(x).  [clausify(2)].
-MinDim(x) | -ZEX(x).  [clausify(2)].
-MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(2)].
MinDim(x) | -S(x) | ZEX(x) | S(f2(x)).  [clausify(2)].
MinDim(x) | -S(x) | ZEX(x) | f2(x) < x.  [clausify(2)].
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(2)].
-S(x) | ZEX(x) | Cont(x,x).  [clausify(3)].
S(x) | -Cont(x,x).  [clausify(3)].
-ZEX(x) | -Cont(x,x).  [clausify(3)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(4)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(5)].
-ZEX(x) | S(x).  [clausify(6)].
-ZEX(x) | -Cont(y,x).  [clausify(6)].
-ZEX(x) | -Cont(x,y).  [clausify(6)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(7)].
-PO(x,y) | P(f3(x,y),x).  [clausify(8)].
-PO(x,y) | P(f3(x,y),y).  [clausify(8)].
PO(x,y) | -P(z,x) | -P(z,y).  [clausify(8)].
-(x > y) | y < x.  [clausify(9)].
x > y | -(y < x).  [clausify(9)].
-(x >= y) | y <= x.  [clausify(10)].
x >= y | -(y <= x).  [clausify(10)].
-(x < y) | x <= y.  [clausify(11)].
-(x < y) | -EqDim(x,y).  [clausify(11)].
x < y | -(x <= y) | EqDim(x,y).  [clausify(11)].
MinDim(c1).  [clausify(12)].
-(x <= y) | S(x).  [clausify(13)].
-(x <= y) | S(y).  [clausify(14)].
-ZEX(x) | S(x).  [clausify(15)].
-S(x) | x <= x.  [clausify(16)].
-(x <= y) | -(y <= z) | x <= z.  [clausify(17)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(18)].
-ZEX(x) | -S(y) | x <= y.  [clausify(19)].
-P(x,y) | Cont(x,y).  [clausify(20)].
-P(x,y) | EqDim(x,y).  [clausify(20)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
-EqDim(x,y) | x <= y.  [clausify(21)].
-EqDim(x,y) | y <= x.  [clausify(21)].
EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
-C(x,y) | Cont(f4(x,y),x).  [clausify(22)].
-C(x,y) | Cont(f4(x,y),y).  [clausify(22)].
C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(22)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(23)].
S(c2).  [deny(24)].
-ZEX(c2).  [deny(24)].
-PO(c2,c2).  [deny(24)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating MaxDim/1
25 MaxDim(x) | -S(x) | S(f1(x)).  [clausify(1)].
26 -MaxDim(x) | S(x).  [clausify(1)].
27 -MaxDim(x) | -S(y) | y <= x.  [clausify(1)].
Derived: -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(25,a,27,a)].
28 MaxDim(x) | -S(x) | -(f1(x) <= x).  [clausify(1)].
Derived: -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(28,a,27,a)].

Eliminating MinDim/1
29 MinDim(x) | -S(x) | ZEX(x) | S(f2(x)).  [clausify(2)].
30 -MinDim(x) | S(x).  [clausify(2)].
31 -MinDim(x) | -ZEX(x).  [clausify(2)].
32 -MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(2)].
Derived: -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(29,a,32,a)].
33 MinDim(x) | -S(x) | ZEX(x) | f2(x) < x.  [clausify(2)].
Derived: -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,32,a)].
34 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(2)].
Derived: -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(34,a,32,a)].
35 MinDim(c1).  [clausify(12)].
Derived: S(c1).  [resolve(35,a,30,a)].
Derived: -ZEX(c1).  [resolve(35,a,31,a)].
Derived: -S(x) | -(x < c1) | ZEX(x).  [resolve(35,a,32,a)].

Eliminating >/2
36 x > y | -(y < x).  [clausify(9)].
37 -(x > y) | y < x.  [clausify(9)].

Eliminating >=/2
38 x >= y | -(y <= x).  [clausify(10)].
39 -(x >= y) | y <= x.  [clausify(10)].

Eliminating EqDim/2
40 x < y | -(x <= y) | EqDim(x,y).  [clausify(11)].
41 -(x < y) | -EqDim(x,y).  [clausify(11)].
42 -P(x,y) | EqDim(x,y).  [clausify(20)].
Derived: -P(x,y) | -(x < y).  [resolve(42,b,41,b)].
43 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
Derived: P(x,y) | -Cont(x,y) | x < y | -(x <= y).  [resolve(43,c,40,c)].
44 -EqDim(x,y) | x <= y.  [clausify(21)].
Derived: x <= y | -P(x,y).  [resolve(44,a,42,b)].
45 -EqDim(x,y) | y <= x.  [clausify(21)].
Derived: x <= y | y < x | -(y <= x).  [resolve(45,a,40,c)].
Derived: x <= y | -P(y,x).  [resolve(45,a,42,b)].
46 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
Derived: -(x <= y) | -(y <= x) | -(x < y).  [resolve(46,a,41,b)].
Derived: -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(46,a,43,c)].
47 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(23)].
Derived: -Cont(x,y) | x < y | P(x,y) | -Cont(x,y).  [resolve(47,c,43,c)].
Derived: -Cont(x,y) | x < y | x <= y.  [resolve(47,c,44,a)].
Derived: -Cont(x,y) | x < y | y <= x.  [resolve(47,c,45,a)].

Eliminating C/2
48 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(22)].
49 -C(x,y) | Cont(f4(x,y),x).  [clausify(22)].
50 -C(x,y) | Cont(f4(x,y),y).  [clausify(22)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),y).  [resolve(48,a,49,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),z).  [resolve(48,a,50,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, S, ZEX, <=, Cont, <, P, PO ]).
Function symbol precedence:  function_order([ c1, c2, f3, f4, f1, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      51 -S(x) | ZEX(x) | Cont(x,x).  [clausify(3)].
kept:      52 S(x) | -Cont(x,x).  [clausify(3)].
kept:      53 -ZEX(x) | -Cont(x,x).  [clausify(3)].
kept:      54 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(4)].
kept:      55 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(5)].
kept:      56 -ZEX(x) | S(x).  [clausify(6)].
kept:      57 -ZEX(x) | -Cont(y,x).  [clausify(6)].
kept:      58 -ZEX(x) | -Cont(x,y).  [clausify(6)].
kept:      59 -ZEX(x) | -ZEX(y) | y = x.  [clausify(7)].
kept:      60 -PO(x,y) | P(f3(x,y),x).  [clausify(8)].
kept:      61 -PO(x,y) | P(f3(x,y),y).  [clausify(8)].
kept:      62 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(8)].
kept:      63 -(x < y) | x <= y.  [clausify(11)].
kept:      64 -(x <= y) | S(x).  [clausify(13)].
kept:      65 -(x <= y) | S(y).  [clausify(14)].
kept:      66 -S(x) | x <= x.  [clausify(16)].
kept:      67 -(x <= y) | -(y <= z) | x <= z.  [clausify(17)].
kept:      68 -ZEX(x) | -S(y) | x <= y.  [clausify(19)].
kept:      69 -P(x,y) | Cont(x,y).  [clausify(20)].
kept:      70 S(c2).  [deny(24)].
kept:      71 -ZEX(c2).  [deny(24)].
kept:      72 -PO(c2,c2).  [deny(24)].
kept:      73 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(25,a,27,a)].
kept:      74 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(28,a,27,a)].
kept:      75 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(29,a,32,a)].
kept:      76 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,32,a)].
kept:      77 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(34,a,32,a)].
kept:      78 S(c1).  [resolve(35,a,30,a)].
kept:      79 -ZEX(c1).  [resolve(35,a,31,a)].
kept:      80 -S(x) | -(x < c1) | ZEX(x).  [resolve(35,a,32,a)].
kept:      81 -P(x,y) | -(x < y).  [resolve(42,b,41,b)].
kept:      82 P(x,y) | -Cont(x,y) | x < y | -(x <= y).  [resolve(43,c,40,c)].
kept:      83 x <= y | -P(x,y).  [resolve(44,a,42,b)].
kept:      84 x <= y | y < x | -(y <= x).  [resolve(45,a,40,c)].
kept:      85 x <= y | -P(y,x).  [resolve(45,a,42,b)].
kept:      86 -(x <= y) | -(y <= x) | -(x < y).  [resolve(46,a,41,b)].
kept:      87 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(46,a,43,c)].
           88 -Cont(x,y) | x < y | P(x,y) | -Cont(x,y).  [resolve(47,c,43,c)].
kept:      89 -Cont(x,y) | x < y | P(x,y).  [copy(88),merge(d)].
kept:      90 -Cont(x,y) | x < y | x <= y.  [resolve(47,c,44,a)].
kept:      91 -Cont(x,y) | x < y | y <= x.  [resolve(47,c,45,a)].
kept:      92 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),y).  [resolve(48,a,49,a)].
kept:      93 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),z).  [resolve(48,a,50,a)].
kept:      94 PO(x,x) | -P(y,x).  [factor(62,b,c)].
kept:      95 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(75,a,d),merge(e)].
kept:      96 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(76,a,d),merge(e)].
kept:      97 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(77,a,d),merge(e)].
kept:      98 -(x <= x) | -(x < x).  [factor(86,a,b)].
kept:      99 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(87,a,b)].
kept:      100 -Cont(x,y) | Cont(f4(y,y),y).  [factor(92,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
51 -S(x) | ZEX(x) | Cont(x,x).  [clausify(3)].
52 S(x) | -Cont(x,x).  [clausify(3)].
54 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(4)].
55 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(5)].
56 -ZEX(x) | S(x).  [clausify(6)].
57 -ZEX(x) | -Cont(y,x).  [clausify(6)].
58 -ZEX(x) | -Cont(x,y).  [clausify(6)].
59 -ZEX(x) | -ZEX(y) | y = x.  [clausify(7)].
60 -PO(x,y) | P(f3(x,y),x).  [clausify(8)].
61 -PO(x,y) | P(f3(x,y),y).  [clausify(8)].
62 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(8)].
63 -(x < y) | x <= y.  [clausify(11)].
64 -(x <= y) | S(x).  [clausify(13)].
65 -(x <= y) | S(y).  [clausify(14)].
66 -S(x) | x <= x.  [clausify(16)].
67 -(x <= y) | -(y <= z) | x <= z.  [clausify(17)].
68 -ZEX(x) | -S(y) | x <= y.  [clausify(19)].
69 -P(x,y) | Cont(x,y).  [clausify(20)].
70 S(c2).  [deny(24)].
71 -ZEX(c2).  [deny(24)].
72 -PO(c2,c2).  [deny(24)].
73 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(25,a,27,a)].
74 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(28,a,27,a)].
75 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(29,a,32,a)].
76 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,32,a)].
77 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(34,a,32,a)].
78 S(c1).  [resolve(35,a,30,a)].
79 -ZEX(c1).  [resolve(35,a,31,a)].
80 -S(x) | -(x < c1) | ZEX(x).  [resolve(35,a,32,a)].
81 -P(x,y) | -(x < y).  [resolve(42,b,41,b)].
83 x <= y | -P(x,y).  [resolve(44,a,42,b)].
84 x <= y | y < x | -(y <= x).  [resolve(45,a,40,c)].
85 x <= y | -P(y,x).  [resolve(45,a,42,b)].
86 -(x <= y) | -(y <= x) | -(x < y).  [resolve(46,a,41,b)].
87 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(46,a,43,c)].
89 -Cont(x,y) | x < y | P(x,y).  [copy(88),merge(d)].
90 -Cont(x,y) | x < y | x <= y.  [resolve(47,c,44,a)].
91 -Cont(x,y) | x < y | y <= x.  [resolve(47,c,45,a)].
92 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),y).  [resolve(48,a,49,a)].
93 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),z).  [resolve(48,a,50,a)].
94 PO(x,x) | -P(y,x).  [factor(62,b,c)].
95 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(75,a,d),merge(e)].
96 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(76,a,d),merge(e)].
97 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(77,a,d),merge(e)].
98 -(x <= x) | -(x < x).  [factor(86,a,b)].
99 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(87,a,b)].
100 -Cont(x,y) | Cont(f4(y,y),y).  [factor(92,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=7): 51 -S(x) | ZEX(x) | Cont(x,x).  [clausify(3)].

given #2 (I,wt=5): 52 S(x) | -Cont(x,x).  [clausify(3)].

given #3 (I,wt=9): 54 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(4)].

given #4 (I,wt=9): 55 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(5)].

given #5 (I,wt=4): 56 -ZEX(x) | S(x).  [clausify(6)].

given #6 (I,wt=5): 57 -ZEX(x) | -Cont(y,x).  [clausify(6)].

given #7 (I,wt=5): 58 -ZEX(x) | -Cont(x,y).  [clausify(6)].

given #8 (I,wt=7): 59 -ZEX(x) | -ZEX(y) | y = x.  [clausify(7)].

given #9 (I,wt=8): 60 -PO(x,y) | P(f3(x,y),x).  [clausify(8)].

given #10 (I,wt=8): 61 -PO(x,y) | P(f3(x,y),y).  [clausify(8)].

given #11 (I,wt=9): 62 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(8)].

given #12 (I,wt=6): 63 -(x < y) | x <= y.  [clausify(11)].

given #13 (I,wt=5): 64 -(x <= y) | S(x).  [clausify(13)].

given #14 (I,wt=5): 65 -(x <= y) | S(y).  [clausify(14)].

given #15 (I,wt=5): 66 -S(x) | x <= x.  [clausify(16)].

given #16 (I,wt=9): 67 -(x <= y) | -(y <= z) | x <= z.  [clausify(17)].

given #17 (I,wt=7): 68 -ZEX(x) | -S(y) | x <= y.  [clausify(19)].

given #18 (I,wt=6): 69 -P(x,y) | Cont(x,y).  [clausify(20)].

given #19 (I,wt=2): 70 S(c2).  [deny(24)].

given #20 (I,wt=2): 71 -ZEX(c2).  [deny(24)].

given #21 (I,wt=3): 72 -PO(c2,c2).  [deny(24)].

given #22 (I,wt=10): 73 -S(x) | S(f1(x)) | -S(y) | y <= x.  [resolve(25,a,27,a)].

given #23 (I,wt=11): 74 -S(x) | -(f1(x) <= x) | -S(y) | y <= x.  [resolve(28,a,27,a)].

given #24 (I,wt=14): 75 -S(x) | ZEX(x) | S(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(29,a,32,a)].

given #25 (I,wt=15): 76 -S(x) | ZEX(x) | f2(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,32,a)].

given #26 (I,wt=14): 77 -S(x) | ZEX(x) | -ZEX(f2(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(34,a,32,a)].

given #27 (I,wt=2): 78 S(c1).  [resolve(35,a,30,a)].

given #28 (I,wt=2): 79 -ZEX(c1).  [resolve(35,a,31,a)].

given #29 (I,wt=7): 80 -S(x) | -(x < c1) | ZEX(x).  [resolve(35,a,32,a)].

given #30 (I,wt=6): 81 -P(x,y) | -(x < y).  [resolve(42,b,41,b)].

given #31 (I,wt=6): 83 x <= y | -P(x,y).  [resolve(44,a,42,b)].

given #32 (I,wt=9): 84 x <= y | y < x | -(y <= x).  [resolve(45,a,40,c)].

given #33 (I,wt=6): 85 x <= y | -P(y,x).  [resolve(45,a,42,b)].

given #34 (I,wt=9): 86 -(x <= y) | -(y <= x) | -(x < y).  [resolve(46,a,41,b)].

given #35 (I,wt=12): 87 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(46,a,43,c)].

given #36 (I,wt=9): 89 -Cont(x,y) | x < y | P(x,y).  [copy(88),merge(d)].

given #37 (I,wt=9): 90 -Cont(x,y) | x < y | x <= y.  [resolve(47,c,44,a)].

given #38 (I,wt=9): 91 -Cont(x,y) | x < y | y <= x.  [resolve(47,c,45,a)].

given #39 (I,wt=11): 92 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),y).  [resolve(48,a,49,a)].

given #40 (I,wt=11): 93 -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),z).  [resolve(48,a,50,a)].

given #41 (I,wt=6): 94 PO(x,x) | -P(y,x).  [factor(62,b,c)].

given #42 (I,wt=10): 95 -S(x) | ZEX(x) | S(f2(x)) | -(x < x).  [factor(75,a,d),merge(e)].

given #43 (I,wt=11): 96 -S(x) | ZEX(x) | f2(x) < x | -(x < x).  [factor(76,a,d),merge(e)].

given #44 (I,wt=10): 97 -S(x) | ZEX(x) | -ZEX(f2(x)) | -(x < x).  [factor(77,a,d),merge(e)].

given #45 (I,wt=6): 98 -(x <= x) | -(x < x).  [factor(86,a,b)].

given #46 (I,wt=9): 99 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(87,a,b)].

given #47 (I,wt=8): 100 -Cont(x,y) | Cont(f4(y,y),y).  [factor(92,a,b)].

given #48 (A,wt=3): 101 c2 <= c2.  [resolve(70,a,66,a)].

given #49 (F,wt=3): 109 -(c1 < c1).  [ur(80,a,78,a,c,79,a)].

given #50 (F,wt=3): 110 -(c2 < c1).  [ur(80,a,70,a,c,71,a)].

given #51 (F,wt=3): 111 -P(x,c2).  [ur(94,a,72,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 4.
% Maximum clause weight is 12.000.
% Given clauses 51.

3 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
8 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
16 (all x (S(x) -> x <= x)) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
21 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
24 (all x (S(x) & -ZEX(x) -> PO(x,x))) # label(non_clause) # label(goal).  [goal].
43 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
46 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
51 -S(x) | ZEX(x) | Cont(x,x).  [clausify(3)].
62 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(8)].
66 -S(x) | x <= x.  [clausify(16)].
70 S(c2).  [deny(24)].
71 -ZEX(c2).  [deny(24)].
72 -PO(c2,c2).  [deny(24)].
87 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(46,a,43,c)].
94 PO(x,x) | -P(y,x).  [factor(62,b,c)].
99 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(87,a,b)].
101 c2 <= c2.  [resolve(70,a,66,a)].
102 Cont(c2,c2).  [resolve(70,a,51,a),unit_del(a,71)].
111 -P(x,c2).  [ur(94,a,72,a)].
113 $F.  [ur(99,a,101,a,b,111,a),unit_del(a,102)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=51. Generated=81. Kept=61. proofs=1.
Usable=51. Sos=8. Demods=0. Limbo=0, Disabled=72. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=19. Back_subsumed=2.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=26. Nonunit_bsub_feature_tests=80.
Megabytes=0.18.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 3834 exit (max_proofs) ------

Process 3834 exit (max_proofs) Tue Oct  8 20:45:30 2013
============================= prover9 ================================
execution finished: Tue Oct 08 20:45:31 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/po_theorems_goal1.p9"
Input read from 
============================ end of footer ===========================
