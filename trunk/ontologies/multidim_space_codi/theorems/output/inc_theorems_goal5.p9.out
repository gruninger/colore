============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 32064 was started by torsten on stl-ws2,
Tue Oct  8 20:36:31 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/inc_theorems_goal5.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/inc_theorems_goal5.p9


formulas(goals).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x all y (x <= y -> S(x))).
(all x all y (x <= y -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> x <= x)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
2 (all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))) # label(non_clause).  [assumption].
3 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))) # label(non_clause).  [assumption].
4 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
5 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
6 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
8 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
9 (all x all y (x <= y -> S(x))) # label(non_clause).  [assumption].
10 (all x all y (x <= y -> S(y))) # label(non_clause).  [assumption].
11 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
12 (all x (S(x) -> x <= x)) # label(non_clause).  [assumption].
13 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & S(y) -> x <= y)) # label(non_clause).  [assumption].
16 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
17 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
18 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
19 (exists x MinDim(x)) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
21 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
22 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
23 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-Inc(x,y) | f1(x,y) < x | f2(x,y) < y.  [clausify(1)].
-Inc(x,y) | f1(x,y) < x | Cont(f2(x,y),y).  [clausify(1)].
-Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).  [clausify(1)].
-Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.  [clausify(1)].
-Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).  [clausify(1)].
-Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).  [clausify(1)].
-Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.  [clausify(1)].
-Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).  [clausify(1)].
-Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).  [clausify(1)].
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(1)].
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(1)].
-MaxDim(x) | S(x).  [clausify(2)].
-MaxDim(x) | -S(y) | y <= x.  [clausify(2)].
MaxDim(x) | -S(x) | S(f3(x)).  [clausify(2)].
MaxDim(x) | -S(x) | -(f3(x) <= x).  [clausify(2)].
-MinDim(x) | S(x).  [clausify(3)].
-MinDim(x) | -ZEX(x).  [clausify(3)].
-MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(3)].
MinDim(x) | -S(x) | ZEX(x) | S(f4(x)).  [clausify(3)].
MinDim(x) | -S(x) | ZEX(x) | f4(x) < x.  [clausify(3)].
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f4(x)).  [clausify(3)].
-S(x) | ZEX(x) | Cont(x,x).  [clausify(4)].
S(x) | -Cont(x,x).  [clausify(4)].
-ZEX(x) | -Cont(x,x).  [clausify(4)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(5)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(6)].
-ZEX(x) | S(x).  [clausify(7)].
-ZEX(x) | -Cont(y,x).  [clausify(7)].
-ZEX(x) | -Cont(x,y).  [clausify(7)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(8)].
-(x <= y) | S(x).  [clausify(9)].
-(x <= y) | S(y).  [clausify(10)].
-ZEX(x) | S(x).  [clausify(11)].
-S(x) | x <= x.  [clausify(12)].
-(x <= y) | -(y <= z) | x <= z.  [clausify(13)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(14)].
-ZEX(x) | -S(y) | x <= y.  [clausify(15)].
-(x > y) | y < x.  [clausify(16)].
x > y | -(y < x).  [clausify(16)].
-(x >= y) | y <= x.  [clausify(17)].
x >= y | -(y <= x).  [clausify(17)].
-(x < y) | x <= y.  [clausify(18)].
-(x < y) | -EqDim(x,y).  [clausify(18)].
x < y | -(x <= y) | EqDim(x,y).  [clausify(18)].
MinDim(c1).  [clausify(19)].
-P(x,y) | Cont(x,y).  [clausify(20)].
-P(x,y) | EqDim(x,y).  [clausify(20)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
-EqDim(x,y) | x <= y.  [clausify(21)].
-EqDim(x,y) | y <= x.  [clausify(21)].
EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(22)].
Cont(c2,c3).  [deny(23)].
c2 < c3.  [deny(23)].
-Inc(c2,c3).  [deny(23)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating MaxDim/1
24 MaxDim(x) | -S(x) | S(f3(x)).  [clausify(2)].
25 -MaxDim(x) | S(x).  [clausify(2)].
26 -MaxDim(x) | -S(y) | y <= x.  [clausify(2)].
Derived: -S(x) | S(f3(x)) | -S(y) | y <= x.  [resolve(24,a,26,a)].
27 MaxDim(x) | -S(x) | -(f3(x) <= x).  [clausify(2)].
Derived: -S(x) | -(f3(x) <= x) | -S(y) | y <= x.  [resolve(27,a,26,a)].

Eliminating MinDim/1
28 MinDim(x) | -S(x) | ZEX(x) | S(f4(x)).  [clausify(3)].
29 -MinDim(x) | S(x).  [clausify(3)].
30 -MinDim(x) | -ZEX(x).  [clausify(3)].
31 -MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(3)].
Derived: -S(x) | ZEX(x) | S(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(28,a,31,a)].
32 MinDim(x) | -S(x) | ZEX(x) | f4(x) < x.  [clausify(3)].
Derived: -S(x) | ZEX(x) | f4(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(32,a,31,a)].
33 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f4(x)).  [clausify(3)].
Derived: -S(x) | ZEX(x) | -ZEX(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,31,a)].
34 MinDim(c1).  [clausify(19)].
Derived: S(c1).  [resolve(34,a,29,a)].
Derived: -ZEX(c1).  [resolve(34,a,30,a)].
Derived: -S(x) | -(x < c1) | ZEX(x).  [resolve(34,a,31,a)].

Eliminating >/2
35 x > y | -(y < x).  [clausify(16)].
36 -(x > y) | y < x.  [clausify(16)].

Eliminating >=/2
37 x >= y | -(y <= x).  [clausify(17)].
38 -(x >= y) | y <= x.  [clausify(17)].

Eliminating EqDim/2
39 x < y | -(x <= y) | EqDim(x,y).  [clausify(18)].
40 -(x < y) | -EqDim(x,y).  [clausify(18)].
41 -P(x,y) | EqDim(x,y).  [clausify(20)].
Derived: -P(x,y) | -(x < y).  [resolve(41,b,40,b)].
42 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
Derived: P(x,y) | -Cont(x,y) | x < y | -(x <= y).  [resolve(42,c,39,c)].
43 -EqDim(x,y) | x <= y.  [clausify(21)].
Derived: x <= y | -P(x,y).  [resolve(43,a,41,b)].
44 -EqDim(x,y) | y <= x.  [clausify(21)].
Derived: x <= y | y < x | -(y <= x).  [resolve(44,a,39,c)].
Derived: x <= y | -P(y,x).  [resolve(44,a,41,b)].
45 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
Derived: -(x <= y) | -(y <= x) | -(x < y).  [resolve(45,a,40,b)].
Derived: -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(45,a,42,c)].
46 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(22)].
Derived: -Cont(x,y) | x < y | P(x,y) | -Cont(x,y).  [resolve(46,c,42,c)].
Derived: -Cont(x,y) | x < y | x <= y.  [resolve(46,c,43,a)].
Derived: -Cont(x,y) | x < y | y <= x.  [resolve(46,c,44,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, S, ZEX, Cont, <, <=, P, Inc ]).
Function symbol precedence:  function_order([ c1, c2, c3, f1, f2, f3, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      47 -Inc(x,y) | f1(x,y) < x | f2(x,y) < y.  [clausify(1)].
kept:      48 -Inc(x,y) | f1(x,y) < x | Cont(f2(x,y),y).  [clausify(1)].
kept:      49 -Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).  [clausify(1)].
kept:      50 -Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.  [clausify(1)].
kept:      51 -Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).  [clausify(1)].
kept:      52 -Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).  [clausify(1)].
kept:      53 -Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.  [clausify(1)].
kept:      54 -Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).  [clausify(1)].
kept:      55 -Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).  [clausify(1)].
kept:      56 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(1)].
kept:      57 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(1)].
kept:      58 -S(x) | ZEX(x) | Cont(x,x).  [clausify(4)].
kept:      59 S(x) | -Cont(x,x).  [clausify(4)].
kept:      60 -ZEX(x) | -Cont(x,x).  [clausify(4)].
kept:      61 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(5)].
kept:      62 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(6)].
kept:      63 -ZEX(x) | S(x).  [clausify(7)].
kept:      64 -ZEX(x) | -Cont(y,x).  [clausify(7)].
kept:      65 -ZEX(x) | -Cont(x,y).  [clausify(7)].
kept:      66 -ZEX(x) | -ZEX(y) | y = x.  [clausify(8)].
kept:      67 -(x <= y) | S(x).  [clausify(9)].
kept:      68 -(x <= y) | S(y).  [clausify(10)].
kept:      69 -S(x) | x <= x.  [clausify(12)].
kept:      70 -(x <= y) | -(y <= z) | x <= z.  [clausify(13)].
kept:      71 -ZEX(x) | -S(y) | x <= y.  [clausify(15)].
kept:      72 -(x < y) | x <= y.  [clausify(18)].
kept:      73 -P(x,y) | Cont(x,y).  [clausify(20)].
kept:      74 Cont(c2,c3).  [deny(23)].
kept:      75 c2 < c3.  [deny(23)].
kept:      76 -Inc(c2,c3).  [deny(23)].
kept:      77 -S(x) | S(f3(x)) | -S(y) | y <= x.  [resolve(24,a,26,a)].
kept:      78 -S(x) | -(f3(x) <= x) | -S(y) | y <= x.  [resolve(27,a,26,a)].
kept:      79 -S(x) | ZEX(x) | S(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(28,a,31,a)].
kept:      80 -S(x) | ZEX(x) | f4(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(32,a,31,a)].
kept:      81 -S(x) | ZEX(x) | -ZEX(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,31,a)].
kept:      82 S(c1).  [resolve(34,a,29,a)].
kept:      83 -ZEX(c1).  [resolve(34,a,30,a)].
kept:      84 -S(x) | -(x < c1) | ZEX(x).  [resolve(34,a,31,a)].
kept:      85 -P(x,y) | -(x < y).  [resolve(41,b,40,b)].
kept:      86 P(x,y) | -Cont(x,y) | x < y | -(x <= y).  [resolve(42,c,39,c)].
kept:      87 x <= y | -P(x,y).  [resolve(43,a,41,b)].
kept:      88 x <= y | y < x | -(y <= x).  [resolve(44,a,39,c)].
kept:      89 x <= y | -P(y,x).  [resolve(44,a,41,b)].
kept:      90 -(x <= y) | -(y <= x) | -(x < y).  [resolve(45,a,40,b)].
kept:      91 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(45,a,42,c)].
           92 -Cont(x,y) | x < y | P(x,y) | -Cont(x,y).  [resolve(46,c,42,c)].
kept:      93 -Cont(x,y) | x < y | P(x,y).  [copy(92),merge(d)].
kept:      94 -Cont(x,y) | x < y | x <= y.  [resolve(46,c,43,a)].
kept:      95 -Cont(x,y) | x < y | y <= x.  [resolve(46,c,44,a)].
kept:      96 -S(x) | ZEX(x) | S(f4(x)) | -(x < x).  [factor(79,a,d),merge(e)].
kept:      97 -S(x) | ZEX(x) | f4(x) < x | -(x < x).  [factor(80,a,d),merge(e)].
kept:      98 -S(x) | ZEX(x) | -ZEX(f4(x)) | -(x < x).  [factor(81,a,d),merge(e)].
kept:      99 -(x <= x) | -(x < x).  [factor(90,a,b)].
kept:      100 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(91,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
47 -Inc(x,y) | f1(x,y) < x | f2(x,y) < y.  [clausify(1)].
48 -Inc(x,y) | f1(x,y) < x | Cont(f2(x,y),y).  [clausify(1)].
49 -Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).  [clausify(1)].
50 -Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.  [clausify(1)].
51 -Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).  [clausify(1)].
52 -Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).  [clausify(1)].
53 -Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.  [clausify(1)].
54 -Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).  [clausify(1)].
55 -Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).  [clausify(1)].
56 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(1)].
57 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(1)].
58 -S(x) | ZEX(x) | Cont(x,x).  [clausify(4)].
59 S(x) | -Cont(x,x).  [clausify(4)].
61 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(5)].
62 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(6)].
63 -ZEX(x) | S(x).  [clausify(7)].
64 -ZEX(x) | -Cont(y,x).  [clausify(7)].
65 -ZEX(x) | -Cont(x,y).  [clausify(7)].
66 -ZEX(x) | -ZEX(y) | y = x.  [clausify(8)].
67 -(x <= y) | S(x).  [clausify(9)].
68 -(x <= y) | S(y).  [clausify(10)].
69 -S(x) | x <= x.  [clausify(12)].
70 -(x <= y) | -(y <= z) | x <= z.  [clausify(13)].
71 -ZEX(x) | -S(y) | x <= y.  [clausify(15)].
72 -(x < y) | x <= y.  [clausify(18)].
73 -P(x,y) | Cont(x,y).  [clausify(20)].
74 Cont(c2,c3).  [deny(23)].
75 c2 < c3.  [deny(23)].
76 -Inc(c2,c3).  [deny(23)].
77 -S(x) | S(f3(x)) | -S(y) | y <= x.  [resolve(24,a,26,a)].
78 -S(x) | -(f3(x) <= x) | -S(y) | y <= x.  [resolve(27,a,26,a)].
79 -S(x) | ZEX(x) | S(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(28,a,31,a)].
80 -S(x) | ZEX(x) | f4(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(32,a,31,a)].
81 -S(x) | ZEX(x) | -ZEX(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,31,a)].
82 S(c1).  [resolve(34,a,29,a)].
83 -ZEX(c1).  [resolve(34,a,30,a)].
84 -S(x) | -(x < c1) | ZEX(x).  [resolve(34,a,31,a)].
85 -P(x,y) | -(x < y).  [resolve(41,b,40,b)].
87 x <= y | -P(x,y).  [resolve(43,a,41,b)].
88 x <= y | y < x | -(y <= x).  [resolve(44,a,39,c)].
89 x <= y | -P(y,x).  [resolve(44,a,41,b)].
90 -(x <= y) | -(y <= x) | -(x < y).  [resolve(45,a,40,b)].
91 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(45,a,42,c)].
93 -Cont(x,y) | x < y | P(x,y).  [copy(92),merge(d)].
94 -Cont(x,y) | x < y | x <= y.  [resolve(46,c,43,a)].
95 -Cont(x,y) | x < y | y <= x.  [resolve(46,c,44,a)].
96 -S(x) | ZEX(x) | S(f4(x)) | -(x < x).  [factor(79,a,d),merge(e)].
97 -S(x) | ZEX(x) | f4(x) < x | -(x < x).  [factor(80,a,d),merge(e)].
98 -S(x) | ZEX(x) | -ZEX(f4(x)) | -(x < x).  [factor(81,a,d),merge(e)].
99 -(x <= x) | -(x < x).  [factor(90,a,b)].
100 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(91,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=13): 47 -Inc(x,y) | f1(x,y) < x | f2(x,y) < y.  [clausify(1)].

given #2 (I,wt=13): 48 -Inc(x,y) | f1(x,y) < x | Cont(f2(x,y),y).  [clausify(1)].

given #3 (I,wt=13): 49 -Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).  [clausify(1)].

given #4 (I,wt=13): 50 -Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.  [clausify(1)].

given #5 (I,wt=13): 51 -Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).  [clausify(1)].

given #6 (I,wt=13): 52 -Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).  [clausify(1)].

given #7 (I,wt=13): 53 -Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.  [clausify(1)].

given #8 (I,wt=13): 54 -Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).  [clausify(1)].

given #9 (I,wt=13): 55 -Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).  [clausify(1)].

given #10 (I,wt=12): 56 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(1)].

given #11 (I,wt=12): 57 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(1)].

given #12 (I,wt=7): 58 -S(x) | ZEX(x) | Cont(x,x).  [clausify(4)].

given #13 (I,wt=5): 59 S(x) | -Cont(x,x).  [clausify(4)].

given #14 (I,wt=9): 61 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(5)].

given #15 (I,wt=9): 62 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(6)].

given #16 (I,wt=4): 63 -ZEX(x) | S(x).  [clausify(7)].

given #17 (I,wt=5): 64 -ZEX(x) | -Cont(y,x).  [clausify(7)].

given #18 (I,wt=5): 65 -ZEX(x) | -Cont(x,y).  [clausify(7)].

given #19 (I,wt=7): 66 -ZEX(x) | -ZEX(y) | y = x.  [clausify(8)].

given #20 (I,wt=5): 67 -(x <= y) | S(x).  [clausify(9)].

given #21 (I,wt=5): 68 -(x <= y) | S(y).  [clausify(10)].

given #22 (I,wt=5): 69 -S(x) | x <= x.  [clausify(12)].

given #23 (I,wt=9): 70 -(x <= y) | -(y <= z) | x <= z.  [clausify(13)].

given #24 (I,wt=7): 71 -ZEX(x) | -S(y) | x <= y.  [clausify(15)].

given #25 (I,wt=6): 72 -(x < y) | x <= y.  [clausify(18)].

given #26 (I,wt=6): 73 -P(x,y) | Cont(x,y).  [clausify(20)].

given #27 (I,wt=3): 74 Cont(c2,c3).  [deny(23)].

given #28 (I,wt=3): 75 c2 < c3.  [deny(23)].

given #29 (I,wt=3): 76 -Inc(c2,c3).  [deny(23)].

given #30 (I,wt=10): 77 -S(x) | S(f3(x)) | -S(y) | y <= x.  [resolve(24,a,26,a)].

given #31 (I,wt=11): 78 -S(x) | -(f3(x) <= x) | -S(y) | y <= x.  [resolve(27,a,26,a)].

given #32 (I,wt=14): 79 -S(x) | ZEX(x) | S(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(28,a,31,a)].

given #33 (I,wt=15): 80 -S(x) | ZEX(x) | f4(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(32,a,31,a)].

given #34 (I,wt=14): 81 -S(x) | ZEX(x) | -ZEX(f4(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(33,a,31,a)].

given #35 (I,wt=2): 82 S(c1).  [resolve(34,a,29,a)].

given #36 (I,wt=2): 83 -ZEX(c1).  [resolve(34,a,30,a)].

given #37 (I,wt=7): 84 -S(x) | -(x < c1) | ZEX(x).  [resolve(34,a,31,a)].

given #38 (I,wt=6): 85 -P(x,y) | -(x < y).  [resolve(41,b,40,b)].

given #39 (I,wt=6): 87 x <= y | -P(x,y).  [resolve(43,a,41,b)].

given #40 (I,wt=9): 88 x <= y | y < x | -(y <= x).  [resolve(44,a,39,c)].

given #41 (I,wt=6): 89 x <= y | -P(y,x).  [resolve(44,a,41,b)].

given #42 (I,wt=9): 90 -(x <= y) | -(y <= x) | -(x < y).  [resolve(45,a,40,b)].

given #43 (I,wt=12): 91 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(45,a,42,c)].

given #44 (I,wt=9): 93 -Cont(x,y) | x < y | P(x,y).  [copy(92),merge(d)].

given #45 (I,wt=9): 94 -Cont(x,y) | x < y | x <= y.  [resolve(46,c,43,a)].

given #46 (I,wt=9): 95 -Cont(x,y) | x < y | y <= x.  [resolve(46,c,44,a)].

given #47 (I,wt=10): 96 -S(x) | ZEX(x) | S(f4(x)) | -(x < x).  [factor(79,a,d),merge(e)].

given #48 (I,wt=11): 97 -S(x) | ZEX(x) | f4(x) < x | -(x < x).  [factor(80,a,d),merge(e)].

given #49 (I,wt=10): 98 -S(x) | ZEX(x) | -ZEX(f4(x)) | -(x < x).  [factor(81,a,d),merge(e)].

given #50 (I,wt=6): 99 -(x <= x) | -(x < x).  [factor(90,a,b)].

given #51 (I,wt=9): 100 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(91,a,b)].

given #52 (A,wt=2): 101 -ZEX(c2).  [resolve(74,a,65,b)].

given #53 (F,wt=2): 102 -ZEX(c3).  [resolve(74,a,64,b)].

given #54 (F,wt=3): 107 -P(c2,c2).  [ur(57,a,76,a,b,75,a,c,74,a)].

given #55 (F,wt=3): 115 -(c1 < c1).  [ur(84,a,82,a,c,83,a)].

given #56 (F,wt=3): 116 -P(c2,c3).  [ur(85,b,75,a)].

given #57 (T,wt=3): 106 c2 <= c3.  [resolve(75,a,72,a)].

given #58 (T,wt=2): 121 S(c3).  [resolve(106,a,68,a)].

given #59 (T,wt=2): 122 S(c2).  [resolve(106,a,67,a)].

given #60 (T,wt=3): 113 c1 <= c1.  [resolve(82,a,69,a)].

given #61 (A,wt=6): 103 -Cont(x,c2) | Cont(x,c3).  [resolve(74,a,62,b)].

given #62 (F,wt=3): 118 -(c3 <= c2).  [resolve(106,a,91,a),unit_del(b,116),unit_del(c,74)].

given #63 (F,wt=3): 123 -ZEX(f4(c3)).  [back_unit_del(110),unit_del(a,121),unit_del(c,122)].

given #64 (F,wt=3): 130 -(c3 < c1).  [ur(84,a,121,a,c,102,a)].

given #65 (F,wt=3): 135 -(c2 < c1).  [ur(84,a,122,a,c,101,a)].

given #66 (T,wt=3): 114 Cont(c1,c1).  [resolve(82,a,58,a),unit_del(a,83)].

given #67 (T,wt=3): 125 S(f4(c3)).  [back_unit_del(108),unit_del(a,121),unit_del(c,122)].

given #68 (T,wt=3): 128 c3 <= c3.  [resolve(121,a,69,a)].

given #69 (T,wt=3): 129 Cont(c3,c3).  [resolve(121,a,58,a),unit_del(a,102)].

given #70 (A,wt=6): 104 -Cont(c3,x) | Cont(c2,x).  [resolve(74,a,62,a)].

given #71 (F,wt=3): 137 -P(c3,c2).  [ur(87,a,118,a)].

given #72 (F,wt=3): 139 -(c3 < c2).  [ur(72,b,118,a)].

given #73 (F,wt=3): 146 -(c3 < c3).  [resolve(128,a,99,a)].

given #74 (F,wt=3): 147 -Cont(c3,c2).  [ur(94,b,139,a,c,118,a)].

given #75 (T,wt=3): 133 c2 <= c2.  [resolve(122,a,69,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 29.
% Level of proof is 5.
% Maximum clause weight is 12.000.
% Given clauses 75.

1 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
4 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
9 (all x all y (x <= y -> S(x))) # label(non_clause).  [assumption].
12 (all x (S(x) -> x <= x)) # label(non_clause).  [assumption].
18 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
21 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
23 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause) # label(goal).  [goal].
42 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(20)].
45 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(21)].
57 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(1)].
58 -S(x) | ZEX(x) | Cont(x,x).  [clausify(4)].
65 -ZEX(x) | -Cont(x,y).  [clausify(7)].
67 -(x <= y) | S(x).  [clausify(9)].
69 -S(x) | x <= x.  [clausify(12)].
72 -(x < y) | x <= y.  [clausify(18)].
74 Cont(c2,c3).  [deny(23)].
75 c2 < c3.  [deny(23)].
76 -Inc(c2,c3).  [deny(23)].
91 -(x <= y) | -(y <= x) | P(x,y) | -Cont(x,y).  [resolve(45,a,42,c)].
100 -(x <= x) | P(x,x) | -Cont(x,x).  [factor(91,a,b)].
101 -ZEX(c2).  [resolve(74,a,65,b)].
106 c2 <= c3.  [resolve(75,a,72,a)].
107 -P(c2,c2).  [ur(57,a,76,a,b,75,a,c,74,a)].
122 S(c2).  [resolve(106,a,67,a)].
133 c2 <= c2.  [resolve(122,a,69,a)].
134 Cont(c2,c2).  [resolve(122,a,58,a),unit_del(a,101)].
148 $F.  [resolve(133,a,100,a),unit_del(a,107),unit_del(b,134)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=75. Generated=180. Kept=100. proofs=1.
Usable=75. Sos=18. Demods=0. Limbo=0, Disabled=80. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=79. Back_subsumed=4.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=3.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=37. Nonunit_bsub_feature_tests=106.
Megabytes=0.24.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 32064 exit (max_proofs) ------

Process 32064 exit (max_proofs) Tue Oct  8 20:36:31 2013
============================= prover9 ================================
execution finished: Tue Oct 08 20:36:32 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/theorems/conversions/inc_theorems_goal5.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_space_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_space_codi/conversions/codi_basic.p9"
Input read from 
============================ end of footer ===========================
