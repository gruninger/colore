/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/

(cl-text http://colore.oor.net/vision_cardworld/obscures.clif

(cl-imports http://colore.oor.net/vision_cardworld/scene_interior.clif)

(cl-comment "If a position is interior to two different surfaces, then either one of the surfaces obscures the other at that position, or the surfaces are abutting each other at that position.")

(forall (s1 s2 t) 
	(iff	(and 	(interior s1 t) 
			(interior s2 t) 
			(not (s1=s2))) 
		(or 	(obscures s1 s2 t) 
			(obscures s2 s1 t) 
			(and 	(part e1 s1) 
				(part e2 s2) 
				(abuts e1 e2 t)))))

(cl-comment "Surfaces cannot obscure each other at the same position.")

(forall (s1 s2 t) 
	(if 	(obscures s1 s2 t) 
		(not (obscures s2 s1 t))))

(cl-comment "At any position, the obscures relation is transitive.")

(forall (s1 s2 s3 t) 
	(if 	(and 	(obscures s1 s2 t) 
			(obscures s2 s3 t)) 
		(obscures s1 s3 t)))

(cl-comment "Surfaces which are abutting each other at a position cannot obscure each other at that position.")

(forall (e1 s1 e2 s2 t) 
	(if 	(and 	(abuts e1 e2 t) 
			(part e1 s1) 
			(part e2 s2)) 
		(not (obscures s1 s2 t))))

(cl-comment "If one surface obscures a surface which is abutting against another surface at the same position, then the first surface obscures both abutting surfaces at that position.")

(forall (e1 e2 s1 s2 s3 t) 
	(if 	(and 	(obscures s1 s2 t) 
			(abuts e1 e2 t) 
			(part e1 s2) 
			(part e2 s3)) 
		(obscures s1 s3 t)))

(cl-comment "At any position, the relation abuts is symmetric in its edge argument.")

(forall (e1 e2 t) 
	(if 	(abuts e1 e2 t) 
		(abuts e2 e1 t)))

(cl-comment "Abutting edges must be parts of distinct surfaces.")

(forall (e1 e2 s t) 
	(if 	(and 	(abuts e1 e2 t) 
			(part e1 s)) 
		(not (part e2 s))))

(cl-comment "The extension of obscures is the same for all positions in the same convex components of the surfaces.")

(forall (s1 s2 t1 t2) 
	(if 	(and 	(obscures s1 s2 t1) 
			(interior s1 t2) 
			(interior s2 t2) 
			(noncrossing s1 t1 t2) 
			(noncrossing s2 t1 t2)) 
		(obscures s1 s2 t2)))

(cl-comment "The obscures ordering is discrete.")

(forall (s1 s2 t) 
	(if 	(obscures s1 s2 t)
		(exists (s3) 
			(and 	(obscures s1 s3 t) 
				(not (exists (s4) 
					(and 	(obscures s1 s4 t) 
						(obscures s4 s3 t))))))))

(cl-comment "At any position, there exists a minimal surface which is not obscured by any other surface.")

(forall (s1 t) 
	(if 	(interior s1 t) 
		(exists (s2) 
			(forall (s3) 
				(and 	(interior s2 t) 
					(not (obscures s3 s2 t)))))))

(cl-comment "A surface is ontop of another surface iff there exists a position at which the surface obscures it.")

(forall (s1 s2) 
	(iff 	(ontop s1 s2) 
		(exists (t) 
			(obscures s1 s2 t))))

(cl-comment "One surface partially occludes another surface iff there exists a position at which the first surface obscures the second surface and another position interior to the second surface at which it is not obscured.")

(forall (s s1) 
	(iff 	(partial_occludes s s1) 
		(exists (t1 t2) 
			(and 	(obscures s s1 t1) 
				(not (obscures s s1 t2)) 
				(interior s1 t2)))))

(cl-comment "One surface totally occludes another surface iff the first surface obscures the second surface at all positions interior to the second surface.")

(forall (s s1) 
	(iff 	(total_occludes s s1) 
		(exists (t1) 
			(and 	(obscures s s1 t1) 
				(forall (t2) 
					(if 	(interior s1 t2) 
						(obscures s s1 t2)))))))

(cl-comment "An edge is an occluding edge iff there exists a point in the edge, and the surface containing the edge obscures another surface at the position of that point.")

(forall (e s t)
	(iff 	(occluding e s)
		(exists (p t s1)
			(and (part e s1)
			(part p e)
			(position p t)
			(obscures s1 s t)))))

)
