/*******************************************************************************
 * Copyright (c) University of Toronto and othersAll rights reserved
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported licenseThe legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * subactivity.owl.clif
 * Hets generated (and modified) common logic translation of OWL version (for testing expressivity)
 * unstructured for easier translation to p9 syntax
 * note: letter cases preserved in accordance with OWL version
 *******************************************************************************/

(cl-text http://colore.oor.net/psl_subactivity/binary_subactivity.clif 

(cl-imports http://colore.oor.net/psl_core/binary_psl_core.clif)

	(cl-comment 'Thing and Nothing axioms removed')

	(cl-comment 'datatype property axioms removed')             
	
	(cl-comment 'top and bottom object property axioms removed')

(forall (a) (iff (Primitive a) (and (Activity a)
                                                                           (not (exists (b) (and (proper_subactivity b
                                                                                                                                                          a)
                                                                                                 (Activity b)))))))
                                                         (cl-comment 'Ax1_1')

(forall (a) (if (Primitive a) (Activity a)))
                                                         (cl-comment 'Ax2_2')

(forall (a) (and (not (and (Activity a)
                             (OccurrenceOrObject a)))
                   (not (and (Activity a)
                             (Timepoint a)))
                   (not (and (OccurrenceOrObject a)
                             (Timepoint a)))))
                                                         (cl-comment 'Ax3_3')

(forall (c
           d) (if (proper_subactivity c
                                                                           d) (subactivity c
                                                                                                                                d)))
                                                         (cl-comment 'Ax4_4')

(forall (a
           b
           c) (if (and (subactivity a b)
                       (subactivity b
                                                                         c)) (subactivity a
                                                                                                                               c)))
                                                         (cl-comment 'Ax5_5')

(forall (a) (exists (b) (if (subactivity a
                                                                                b) (Activity a))))
                                                         (cl-comment 'Ax6_6')

(forall (b) (exists (a) (if (subactivity a
                                                                                b) (Activity b))))
                                                         (cl-comment 'Ax7_7')

)
