============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 26080 was started by torsten on scotus.mie.utoronto.ca,
Wed Oct 24 22:18:37 2012
The command was "prover9 -t 600 -f oig/input/woig.p9 oig/input/b_3d.p9 ig/input/ig.p9 ig/input/ig_2d_lin.p9 ig/input/ig_2d_slin.p9 ig/input/ig_2d.p9 oig/theorems/input/options.txt oig/theorems/input/woig_theorems_3.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file oig/input/woig.p9


formulas(sos).
(all a all b all c (B(a,b,c) -> Pt(a))).
(all a all b all c (B(a,b,c) -> Pt(b))).
(all a all b all c (B(a,b,c) -> Pt(c))).
end_of_list.

% Reading from file oig/input/b_3d.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all a all b all c (B(a,b,c) -> B(c,b,a))).
(all a all b all c (B(a,b,c) -> -B(b,c,a))).
(all a all b all c all p (a != b & a != c & b != c & (exists l (L(l) & on(a,l) & on(b,l) & on(c,l))) <-> B(a,b,c) | B(b,c,a) | B(c,a,b))).
(all a all b all c all p all l (L(l) & on(a,l) & on(b,l) & on(c,l) & on(p,l) & p != a & p != b & p != c & B(a,p,b) -> B(b,p,c) & -B(a,p,c) | B(a,p,c) & -B(b,p,c))).
end_of_list.

% Reading from file ig/input/ig.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))).
(all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))).
(all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)).
(all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))).
end_of_list.

% Reading from file ig/input/ig_2d_lin.p9


formulas(sos).
(all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))).
end_of_list.

% Reading from file ig/input/ig_2d_slin.p9


formulas(sos).
(all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)).
end_of_list.

% Reading from file ig/input/ig_2d.p9


formulas(sos).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))).
end_of_list.

% Reading from file oig/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file oig/theorems/input/woig_theorems_3.p9


formulas(goals).
(all a all b all c all x all l (B(a,x,b) & B(a,x,c) & L(l) & on(a,l) & on(b,l) & on(x,l) & on("y",l) -> -B(b,x,c))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all a all b all c (B(a,b,c) -> Pt(a))) # label(non_clause).  [assumption].
2 (all a all b all c (B(a,b,c) -> Pt(b))) # label(non_clause).  [assumption].
3 (all a all b all c (B(a,b,c) -> Pt(c))) # label(non_clause).  [assumption].
4 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
5 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
6 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
7 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
8 (all a all b all c (B(a,b,c) -> B(c,b,a))) # label(non_clause).  [assumption].
9 (all a all b all c (B(a,b,c) -> -B(b,c,a))) # label(non_clause).  [assumption].
10 (all a all b all c all p (a != b & a != c & b != c & (exists l (L(l) & on(a,l) & on(b,l) & on(c,l))) <-> B(a,b,c) | B(b,c,a) | B(c,a,b))) # label(non_clause).  [assumption].
11 (all a all b all c all p all l (L(l) & on(a,l) & on(b,l) & on(c,l) & on(p,l) & p != a & p != b & p != c & B(a,p,b) -> B(b,p,c) & -B(a,p,c) | B(a,p,c) & -B(b,p,c))) # label(non_clause).  [assumption].
12 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
13 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
14 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
15 (all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))) # label(non_clause).  [assumption].
16 (all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))) # label(non_clause).  [assumption].
17 (all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)) # label(non_clause).  [assumption].
18 (all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))) # label(non_clause).  [assumption].
19 (all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))) # label(non_clause).  [assumption].
20 (all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)) # label(non_clause).  [assumption].
21 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
22 (all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))) # label(non_clause).  [assumption].
23 (all a all b all c all x all l (B(a,x,b) & B(a,x,c) & L(l) & on(a,l) & on(b,l) & on(x,l) & on("y",l) -> -B(b,x,c))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, Pt, Pl, L, on, B ]).
Function symbol precedence:  function_order([ "y", c1, c2, c3, c4, c5, f8, f2, f3, f4, f9, f10, f5, f6, f1, f7 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 23.03 (+ 0.01) seconds.
% Length of proof is 36.
% Level of proof is 6.
% Maximum clause weight is 35.000.
% Given clauses 274.

8 (all a all b all c (B(a,b,c) -> B(c,b,a))) # label(non_clause).  [assumption].
10 (all a all b all c all p (a != b & a != c & b != c & (exists l (L(l) & on(a,l) & on(b,l) & on(c,l))) <-> B(a,b,c) | B(b,c,a) | B(c,a,b))) # label(non_clause).  [assumption].
11 (all a all b all c all p all l (L(l) & on(a,l) & on(b,l) & on(c,l) & on(p,l) & p != a & p != b & p != c & B(a,p,b) -> B(b,p,c) & -B(a,p,c) | B(a,p,c) & -B(b,p,c))) # label(non_clause).  [assumption].
20 (all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)) # label(non_clause).  [assumption].
23 (all a all b all c all x all l (B(a,x,b) & B(a,x,c) & L(l) & on(a,l) & on(b,l) & on(x,l) & on("y",l) -> -B(b,x,c))) # label(non_clause) # label(goal).  [goal].
32 -B(x,y,z) | B(z,y,x).  [clausify(8)].
39 x != y | -B(z,x,y).  [clausify(10)].
40 x != y | -B(x,y,z).  [clausify(10)].
43 L(f1(x,y,z,u)) | -B(z,x,y).  [clausify(10)].
46 on(x,f1(x,y,z,u)) | -B(z,x,y).  [clausify(10)].
49 on(x,f1(y,x,z,u)) | -B(z,y,x).  [clausify(10)].
52 on(x,f1(y,z,x,u)) | -B(x,y,z).  [clausify(10)].
54 -L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | w = y | w = z | w = u | -B(y,w,z) | -B(y,w,u) | -B(z,w,u).  [clausify(11)].
89 x = y | -L(z) | -L(u) | -on(y,z) | -on(x,z) | -on(y,u) | -on(x,u) | u = z.  [clausify(20)].
93 B(c1,c4,c2).  [deny(23)].
94 B(c1,c4,c3).  [deny(23)].
95 L(c5).  [deny(23)].
96 on(c1,c5).  [deny(23)].
97 on(c2,c5).  [deny(23)].
98 on(c4,c5).  [deny(23)].
100 B(c2,c4,c3).  [deny(23)].
167 c4 != c1.  [resolve(93,a,40,b),flip(a)].
168 c4 != c2.  [resolve(93,a,39,b)].
172 B(c2,c4,c1).  [resolve(93,a,32,a)].
180 -L(x) | -on(y,x) | -on(c1,x) | -on(c3,x) | -on(c4,x) | c4 = y | c4 = c3 | -B(y,c4,c1) | -B(y,c4,c3).  [resolve(94,a,54,k),unit_del(g,167)].
196 c4 != c3.  [resolve(94,a,39,b)].
200 B(c3,c4,c1).  [resolve(94,a,32,a)].
205 -L(x) | -on(y,x) | -on(c1,x) | -on(c3,x) | -on(c4,x) | c4 = y | -B(y,c4,c1) | -B(y,c4,c3).  [back_unit_del(180),unit_del(g,196)].
211 c1 = x | -L(y) | -on(x,y) | -on(c1,y) | -on(x,c5) | c5 = y.  [resolve(96,a,89,g),unit_del(c,95)].
853 on(c3,f1(c4,c1,c3,x)).  [resolve(200,a,52,b)].
856 on(c1,f1(c4,c1,c3,x)).  [resolve(200,a,49,b)].
859 on(c4,f1(c4,c1,c3,x)).  [resolve(200,a,46,b)].
862 L(f1(c4,c1,c3,x)).  [resolve(200,a,43,b)].
1580 -on(c2,f1(c4,c1,c3,x)).  [ur(205,a,862,a,c,856,a,d,853,a,e,859,a,f,168,a,g,172,a,h,100,a)].
1587 f1(c4,c1,c3,x) = c5.  [resolve(211,c,859,a),flip(a),flip(e),unit_del(a,167),unit_del(b,862),unit_del(c,856),unit_del(d,98)].
1604 $F.  [back_rewrite(1580),rewrite([1587(5)]),unit_del(a,97)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=274. Generated=9643. Kept=1580. proofs=1.
Usable=274. Sos=1190. Demods=12. Limbo=17, Disabled=190. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=8062. Back_subsumed=84.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=12 (0 lex), Back_demodulated=1. Back_unit_deleted=14.
Demod_attempts=1460. Demod_rewrites=85.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=16248. Nonunit_bsub_feature_tests=14623.
Megabytes=2.31.
User_CPU=23.03, System_CPU=0.01, Wall_clock=23.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 26080 exit (max_proofs) Wed Oct 24 22:19:00 2012
