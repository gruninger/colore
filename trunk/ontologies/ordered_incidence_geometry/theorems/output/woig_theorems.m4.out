============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 26055 was started by torsten on scotus.mie.utoronto.ca,
Wed Oct 24 22:18:12 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f oig/theorems/input/woig_theorems.p9 oig/input/woig.p9 oig/input/b_3d.p9 ig/input/ig.p9 ig/input/ig_2d_lin.p9 ig/input/ig_2d_slin.p9 ig/input/ig_2d.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file oig/theorems/input/woig_theorems.p9


formulas(sos).
(all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(a,b,y) -> B(x,a,y))).
(all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(a,y,b) -> B(x,a,y))).
(all a all b all c all x all l (B(a,x,b) & B(a,x,c) & L(l) & on(a,l) & on(b,l) & on(x,l) & on("y",l) -> -B(b,x,c))).
(all a all b all c (B(a,b,c) -> -B(a,c,b) & -B(b,a,c))).
(all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(a,x,b) & B(a,y,b) & x != y -> B(a,x,y) | B(a,y,x))).
(all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(y,a,b) & x != y -> B(x,y,b) | B(y,x,b))).
end_of_list.

% Reading from file oig/input/woig.p9


formulas(sos).
(all a all b all c (B(a,b,c) -> Pt(a))).
(all a all b all c (B(a,b,c) -> Pt(b))).
(all a all b all c (B(a,b,c) -> Pt(c))).
end_of_list.

% Reading from file oig/input/b_3d.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all a all b all c (B(a,b,c) -> B(c,b,a))).
(all a all b all c (B(a,b,c) -> -B(b,c,a))).
(all a all b all c all p (a != b & a != c & b != c & (exists l (L(l) & on(a,l) & on(b,l) & on(c,l))) <-> B(a,b,c) | B(b,c,a) | B(c,a,b))).
(all a all b all c all p all l (L(l) & on(a,l) & on(b,l) & on(c,l) & on(p,l) & p != a & p != b & p != c & B(a,p,b) -> B(b,p,c) & -B(a,p,c) | B(a,p,c) & -B(b,p,c))).
end_of_list.

% Reading from file ig/input/ig.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))).
(all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))).
(all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)).
(all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))).
end_of_list.

% Reading from file ig/input/ig_2d_lin.p9


formulas(sos).
(all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))).
end_of_list.

% Reading from file ig/input/ig_2d_slin.p9


formulas(sos).
(all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)).
end_of_list.

% Reading from file ig/input/ig_2d.p9


formulas(sos).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(a,b,y) -> B(x,a,y))) # label(non_clause).  [assumption].
2 (all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(a,y,b) -> B(x,a,y))) # label(non_clause).  [assumption].
3 (all a all b all c all x all l (B(a,x,b) & B(a,x,c) & L(l) & on(a,l) & on(b,l) & on(x,l) & on("y",l) -> -B(b,x,c))) # label(non_clause).  [assumption].
4 (all a all b all c (B(a,b,c) -> -B(a,c,b) & -B(b,a,c))) # label(non_clause).  [assumption].
5 (all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(a,x,b) & B(a,y,b) & x != y -> B(a,x,y) | B(a,y,x))) # label(non_clause).  [assumption].
6 (all a all b all x all y all l (L(l) & on(a,l) & on(b,l) & on(x,l) & on(y,l) & B(x,a,b) & B(y,a,b) & x != y -> B(x,y,b) | B(y,x,b))) # label(non_clause).  [assumption].
7 (all a all b all c (B(a,b,c) -> Pt(a))) # label(non_clause).  [assumption].
8 (all a all b all c (B(a,b,c) -> Pt(b))) # label(non_clause).  [assumption].
9 (all a all b all c (B(a,b,c) -> Pt(c))) # label(non_clause).  [assumption].
10 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
11 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
12 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
13 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
14 (all a all b all c (B(a,b,c) -> B(c,b,a))) # label(non_clause).  [assumption].
15 (all a all b all c (B(a,b,c) -> -B(b,c,a))) # label(non_clause).  [assumption].
16 (all a all b all c all p (a != b & a != c & b != c & (exists l (L(l) & on(a,l) & on(b,l) & on(c,l))) <-> B(a,b,c) | B(b,c,a) | B(c,a,b))) # label(non_clause).  [assumption].
17 (all a all b all c all p all l (L(l) & on(a,l) & on(b,l) & on(c,l) & on(p,l) & p != a & p != b & p != c & B(a,p,b) -> B(b,p,c) & -B(a,p,c) | B(a,p,c) & -B(b,p,c))) # label(non_clause).  [assumption].
18 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
19 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
20 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
21 (all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))) # label(non_clause).  [assumption].
22 (all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))) # label(non_clause).  [assumption].
23 (all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)) # label(non_clause).  [assumption].
24 (all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))) # label(non_clause).  [assumption].
25 (all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))) # label(non_clause).  [assumption].
26 (all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)) # label(non_clause).  [assumption].
27 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
28 (all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | -B(u,y,z) | -B(y,z,w) | B(u,y,w).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | -B(u,y,z) | -B(y,w,z) | B(u,y,w).
-B(x,y,z) | -B(x,y,u) | -L(w) | -on(x,w) | -on(z,w) | -on(y,w) | -on("y",w) | -B(z,y,u).
-B(x,y,z) | -B(x,z,y).
-B(x,y,z) | -B(y,x,z).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | -B(y,u,z) | -B(y,w,z) | w = u | B(y,u,w) | B(y,w,u).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | -B(u,y,z) | -B(w,y,z) | w = u | B(u,w,z) | B(w,u,z).
-B(x,y,z) | Pt(x).
-B(x,y,z) | Pt(y).
-B(x,y,z) | Pt(z).
-Pt(x) | -L(x).
-Pt(x) | -Pl(x).
-L(x) | -Pt(x).
-L(x) | -Pl(x).
-Pl(x) | -Pt(x).
-Pl(x) | -L(x).
-on(x,y) | Pt(x).
-on(x,y) | -Pt(y).
-B(x,y,z) | B(z,y,x).
-B(x,y,z) | -B(y,z,x).
x = y | z = y | z = x | -L(u) | -on(y,u) | -on(x,u) | -on(z,u) | B(y,x,z) | B(x,z,y) | B(z,y,x).
x != y | -B(y,x,z).
x != y | -B(x,z,y).
x != y | -B(z,y,x).
x != y | -B(y,z,x).
x != y | -B(z,x,y).
x != y | -B(x,y,z).
x != y | -B(z,y,x).
x != y | -B(y,x,z).
x != y | -B(x,z,y).
L(f1(x,y,z,u)) | -B(x,y,z).
L(f1(x,y,z,u)) | -B(y,z,x).
L(f1(x,y,z,u)) | -B(z,x,y).
on(x,f1(x,y,z,u)) | -B(x,y,z).
on(x,f1(x,y,z,u)) | -B(y,z,x).
on(x,f1(x,y,z,u)) | -B(z,x,y).
on(x,f1(y,x,z,u)) | -B(y,x,z).
on(x,f1(y,x,z,u)) | -B(x,z,y).
on(x,f1(y,x,z,u)) | -B(z,y,x).
on(x,f1(y,z,x,u)) | -B(y,z,x).
on(x,f1(y,z,x,u)) | -B(z,x,y).
on(x,f1(y,z,x,u)) | -B(x,y,z).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | w = y | w = z | w = u | -B(y,w,z) | B(z,w,u) | B(y,w,u).
-L(x) | -on(y,x) | -on(z,x) | -on(u,x) | -on(w,x) | w = y | w = z | w = u | -B(y,w,z) | -B(y,w,u) | -B(z,w,u).
-Pt(x) | -L(x).
-Pt(x) | -Pl(x).
-L(x) | -Pt(x).
-L(x) | -Pl(x).
-Pl(x) | -Pt(x).
-Pl(x) | -L(x).
-Pl(x) | f3(x) != f2(x).
-Pl(x) | f4(x) != f2(x).
-Pl(x) | f4(x) != f3(x).
-Pl(x) | Pt(f2(x)).
-Pl(x) | Pt(f3(x)).
-Pl(x) | Pt(f4(x)).
-Pl(x) | on(f2(x),x).
-Pl(x) | on(f3(x),x).
-Pl(x) | on(f4(x),x).
-Pl(x) | -L(y) | -on(f2(x),y) | -on(f3(x),y) | -on(f4(x),y).
-Pt(x) | -Pt(y) | -Pt(z) | L(f5(x,y,z)) | Pl(f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f5(x,y,z)) | on(x,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f5(x,y,z)) | on(y,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f5(x,y,z)) | on(z,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f5(x,y,z)) | Pl(f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f5(x,y,z)) | on(x,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f5(x,y,z)) | on(y,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f5(x,y,z)) | on(z,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f5(x,y,z)) | Pl(f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f5(x,y,z)) | on(x,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f5(x,y,z)) | on(y,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f5(x,y,z)) | on(z,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f5(x,y,z)) | Pl(f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f5(x,y,z)) | on(x,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f5(x,y,z)) | on(y,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f5(x,y,z)) | on(z,f6(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f7(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f7(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f7(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f7(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | y = x | -L(z) | -on(x,z) | -on(y,z) | -Pl(u) | -on(x,u) | -on(y,u) | -Pt(w) | -on(w,z) | on(w,u).
-Pt(x) | -Pt(y) | y = x | L(f8(x,y)).
-Pt(x) | -Pt(y) | y = x | on(x,f8(x,y)).
-Pt(x) | -Pt(y) | y = x | on(y,f8(x,y)).
x = y | -L(z) | -L(u) | -on(y,z) | -on(x,z) | -on(y,u) | -on(x,u) | u = z.
-on(x,y) | Pt(x).
-on(x,y) | -Pt(y).
-L(x) | on(f9(x),x).
-L(x) | on(f10(x),x).
-L(x) | f10(x) != f9(x).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function("y", [ 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(f3(_), [ 0, 0 ]),

        function(f4(_), [ 0, 0 ]),

        function(f9(_), [ 0, 0 ]),

        function(f10(_), [ 0, 0 ]),

        function(f8(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f5(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f6(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f1(_,_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f7(_,_,_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        relation(L(_), [ 0, 0 ]),

        relation(Pl(_), [ 0, 0 ]),

        relation(Pt(_), [ 0, 0 ]),

        relation(on(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(B(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=944, kept=402.
Selections=79, assignments=79, propagations=18, current_models=1.
Rewrite_terms=402, rewrite_bools=461, indexes=168.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 26055 exit (max_models) Wed Oct 24 22:18:12 2012
The process finished Wed Oct 24 22:18:12 2012
