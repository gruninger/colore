============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 15859 was started by cchui on stl-ws4.mie.utoronto.ca,
Mon Sep 30 23:50:54 2013
The command was "prover9 -t 120 -f test/p9/dolce_participation.p9 test/p9/dolce_participation2ideal_cem_plane_downward_in_foliation.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0930_participation1_6.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_participation.p9


formulas(sos).
(all x all y all t (PC(x,y,t) -> ED(x) & PD(y) & T(t))).
(all x all t (PD(x) & PRE(x,t) -> (exists y PC(y,x,t)))).
(all x (ED(x) -> (exists y exists t PC(x,y,t)))).
(all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t (PC(x,y,t) <-> (all t1 (P(t1,t) -> PC(x,y,t1))))).
end_of_list.

% Reading from file test/p9/dolce_participation2ideal_cem_plane_downward_in_foliation.p9


formulas(sos).
(all x (point1(x) <-> T(x))).
(all x (line1(x) <-> PD(x))).
(all x (plane1(x) <-> ED(x))).
(all x all y (in1(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))).
(all x all y all z (tin1(x,y,z) <-> PC(x,y,z))).
(all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0930_participation1_6.p9


formulas(goals).
(all x (plane1(x) -> (exists y exists t tin1(x,y,t)))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 120).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (PC(x,y,t) -> ED(x) & PD(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all t (PD(x) & PRE(x,t) -> (exists y PC(y,x,t)))) # label(non_clause).  [assumption].
3 (all x (ED(x) -> (exists y exists t PC(x,y,t)))) # label(non_clause).  [assumption].
4 (all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
5 (all x all y all t (PC(x,y,t) <-> (all t1 (P(t1,t) -> PC(x,y,t1))))) # label(non_clause).  [assumption].
6 (all x (point1(x) <-> T(x))) # label(non_clause).  [assumption].
7 (all x (line1(x) <-> PD(x))) # label(non_clause).  [assumption].
8 (all x (plane1(x) <-> ED(x))) # label(non_clause).  [assumption].
9 (all x all y (in1(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
10 (all x all y all z (tin1(x,y,z) <-> PC(x,y,z))) # label(non_clause).  [assumption].
11 (all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
12 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
13 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
14 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
15 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
16 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
17 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
18 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
19 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
21 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
22 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
23 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
24 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
25 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
26 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
27 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
28 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
29 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
30 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
31 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
32 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
33 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
34 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
35 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
36 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
37 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
38 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
39 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
40 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
41 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
42 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
43 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
44 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
45 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
46 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
47 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
48 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
49 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
50 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
51 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
52 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
53 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
54 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
55 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
56 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
57 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
58 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
59 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
60 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
61 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
62 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
63 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
64 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
65 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
66 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
67 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
68 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
69 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
70 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
71 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
72 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
73 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
74 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
75 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
76 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
77 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
78 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
79 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
80 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
81 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
82 (all x (plane1(x) -> (exists y exists t tin1(x,y,t)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating point1/1
83 point1(x) | -T(x).  [clausify(6)].
84 -point1(x) | T(x).  [clausify(6)].

Eliminating line1/1
85 line1(x) | -PD(x).  [clausify(7)].
86 -line1(x) | PD(x).  [clausify(7)].

Eliminating plane1/1
87 plane1(x) | -ED(x).  [clausify(8)].
88 -plane1(x) | ED(x).  [clausify(8)].
89 plane1(c1).  [deny(82)].
Derived: ED(c1).  [resolve(89,a,88,a)].

Eliminating in1/2
90 in1(x,y) | -PRE(x,y) | -T(y) | -ED(x).  [clausify(9)].
91 -in1(x,y) | PRE(x,y) | PRE(y,x) | y = x.  [clausify(9)].
92 -in1(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(9)].
93 -in1(x,y) | PRE(x,y) | ED(y) | PD(y) | Q(y) | y = x.  [clausify(9)].
94 -in1(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(9)].
95 -in1(x,y) | T(y) | T(x) | y = x.  [clausify(9)].
96 -in1(x,y) | T(y) | ED(y) | PD(y) | Q(y).  [clausify(9)].
97 -in1(x,y) | ED(x) | PD(x) | Q(x) | PRE(y,x) | y = x.  [clausify(9)].
98 -in1(x,y) | ED(x) | PD(x) | Q(x) | T(x) | y = x.  [clausify(9)].
99 -in1(x,y) | ED(x) | PD(x) | Q(x) | ED(y) | PD(y) | Q(y) | y = x.  [clausify(9)].
100 in1(x,y) | -PRE(x,y) | -T(y) | -PD(x).  [clausify(9)].
101 in1(x,y) | -PRE(x,y) | -T(y) | -Q(x).  [clausify(9)].
102 in1(x,y) | -PRE(y,x) | -T(x) | -ED(y).  [clausify(9)].
103 in1(x,y) | -PRE(y,x) | -T(x) | -PD(y).  [clausify(9)].
104 in1(x,y) | -PRE(y,x) | -T(x) | -Q(y).  [clausify(9)].
105 in1(x,y) | y != x | -ED(y).  [clausify(9)].
106 in1(x,y) | y != x | -PD(y).  [clausify(9)].
107 in1(x,y) | y != x | -Q(y).  [clausify(9)].
108 in1(x,y) | y != x | -T(y).  [clausify(9)].

Eliminating ED/1
109 -ED(x) | PC(x,f2(x),f3(x)).  [clausify(3)].
110 -PC(x,y,z) | ED(x).  [clausify(1)].
Derived: PC(x,f2(x),f3(x)) | -PC(x,y,z).  [resolve(109,a,110,b)].
111 -L_1(x) | ED(x).  [clausify(12)].
Derived: -L_1(x) | PC(x,f2(x),f3(x)).  [resolve(111,b,109,a)].
112 L_1(x) | -ED(x).  [clausify(12)].
Derived: L_1(x) | -PC(x,y,z).  [resolve(112,b,110,b)].
113 -ED(x) | PRE(x,f5(x)).  [clausify(15)].
Derived: PRE(x,f5(x)) | -PC(x,y,z).  [resolve(113,a,110,b)].
Derived: PRE(x,f5(x)) | -L_1(x).  [resolve(113,a,111,b)].
114 -ED(x) | PT(x).  [clausify(34)].
Derived: PT(x) | -PC(x,y,z).  [resolve(114,a,110,b)].
Derived: PT(x) | -L_1(x).  [resolve(114,a,111,b)].
115 -PED(x) | ED(x).  [clausify(35)].
Derived: -PED(x) | PC(x,f2(x),f3(x)).  [resolve(115,b,109,a)].
Derived: -PED(x) | L_1(x).  [resolve(115,b,112,b)].
Derived: -PED(x) | PRE(x,f5(x)).  [resolve(115,b,113,a)].
Derived: -PED(x) | PT(x).  [resolve(115,b,114,a)].
116 -NPED(x) | ED(x).  [clausify(35)].
Derived: -NPED(x) | PC(x,f2(x),f3(x)).  [resolve(116,b,109,a)].
Derived: -NPED(x) | L_1(x).  [resolve(116,b,112,b)].
Derived: -NPED(x) | PRE(x,f5(x)).  [resolve(116,b,113,a)].
Derived: -NPED(x) | PT(x).  [resolve(116,b,114,a)].
117 -AS(x) | ED(x).  [clausify(35)].
Derived: -AS(x) | PC(x,f2(x),f3(x)).  [resolve(117,b,109,a)].
Derived: -AS(x) | L_1(x).  [resolve(117,b,112,b)].
Derived: -AS(x) | PRE(x,f5(x)).  [resolve(117,b,113,a)].
Derived: -AS(x) | PT(x).  [resolve(117,b,114,a)].
118 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(52)].
Derived: -PT(x) | PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)).  [resolve(118,b,109,a)].
Derived: -PT(x) | PD(x) | Q(x) | AB(x) | L_1(x).  [resolve(118,b,112,b)].
Derived: -PT(x) | PD(x) | Q(x) | AB(x) | PRE(x,f5(x)).  [resolve(118,b,113,a)].
119 PT(x) | -ED(x).  [clausify(52)].
120 -ED(x) | -PD(x).  [clausify(53)].
Derived: -PD(x) | -PC(x,y,z).  [resolve(120,a,110,b)].
Derived: -PD(x) | -L_1(x).  [resolve(120,a,111,b)].
Derived: -PD(x) | -PED(x).  [resolve(120,a,115,b)].
Derived: -PD(x) | -NPED(x).  [resolve(120,a,116,b)].
Derived: -PD(x) | -AS(x).  [resolve(120,a,117,b)].
121 -ED(x) | -Q(x).  [clausify(53)].
Derived: -Q(x) | -PC(x,y,z).  [resolve(121,a,110,b)].
Derived: -Q(x) | -L_1(x).  [resolve(121,a,111,b)].
Derived: -Q(x) | -PED(x).  [resolve(121,a,115,b)].
Derived: -Q(x) | -NPED(x).  [resolve(121,a,116,b)].
Derived: -Q(x) | -AS(x).  [resolve(121,a,117,b)].
122 -ED(x) | -AB(x).  [clausify(53)].
Derived: -AB(x) | -PC(x,y,z).  [resolve(122,a,110,b)].
Derived: -AB(x) | -L_1(x).  [resolve(122,a,111,b)].
Derived: -AB(x) | -PED(x).  [resolve(122,a,115,b)].
Derived: -AB(x) | -NPED(x).  [resolve(122,a,116,b)].
Derived: -AB(x) | -AS(x).  [resolve(122,a,117,b)].
123 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(56)].
Derived: PED(x) | NPED(x) | AS(x) | -PC(x,y,z).  [resolve(123,a,110,b)].
Derived: PED(x) | NPED(x) | AS(x) | -L_1(x).  [resolve(123,a,111,b)].
Derived: PED(x) | NPED(x) | AS(x) | -PT(x) | PD(x) | Q(x) | AB(x).  [resolve(123,a,118,b)].
124 ED(x) | -PED(x).  [clausify(56)].
125 ED(x) | -NPED(x).  [clausify(56)].
126 ED(x) | -AS(x).  [clausify(56)].
127 ED(c1).  [resolve(89,a,88,a)].
Derived: PC(c1,f2(c1),f3(c1)).  [resolve(127,a,109,a)].
Derived: L_1(c1).  [resolve(127,a,112,b)].
Derived: PRE(c1,f5(c1)).  [resolve(127,a,113,a)].
Derived: PT(c1).  [resolve(127,a,114,a)].
Derived: -PD(c1).  [resolve(127,a,120,a)].
Derived: -Q(c1).  [resolve(127,a,121,a)].
Derived: -AB(c1).  [resolve(127,a,122,a)].
Derived: PED(c1) | NPED(c1) | AS(c1).  [resolve(127,a,123,a)].

Eliminating part1/2
128 part1(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(11)].
129 -part1(x,y) | P(x,y).  [clausify(11)].
130 -part1(x,y) | T(x).  [clausify(11)].
131 -part1(x,y) | T(y).  [clausify(11)].

Eliminating L_2/1
132 L_2(x) | -PD(x).  [clausify(13)].
133 -L_2(x) | PD(x).  [clausify(13)].

Eliminating L_3/1
134 L_3(x) | -Q(x).  [clausify(14)].
135 -L_3(x) | Q(x).  [clausify(14)].

Eliminating SUM/3
136 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f13(x,y,z)).  [clausify(33)].
137 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(18)].
138 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(33)].
139 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(33)].
140 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(33)].
Derived: -T(x) | -T(y) | -T(z) | T(f13(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(136,d,137,c)].
Derived: -T(x) | -T(y) | -T(z) | T(f13(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(136,d,138,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f13(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(136,d,139,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f13(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(136,d,140,d)].
141 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y).  [clausify(33)].
Derived: -T(x) | -T(y) | -T(z) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(141,d,137,c)].
Derived: -T(x) | -T(y) | -T(z) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(141,d,138,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(141,d,139,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(141,d,140,d)].
142 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x).  [clausify(33)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(142,d,137,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(142,d,138,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(142,d,139,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(142,d,140,d)].
143 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y).  [clausify(33)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(143,d,137,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(143,d,138,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(143,d,139,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(143,d,140,d)].

Eliminating DJ/2
144 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(28)].
145 -T(x) | -T(y) | P(x,y) | DJ(f7(x,y),y).  [clausify(25)].
Derived: -T(f7(x,y)) | -T(y) | -O(f7(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(144,c,145,d)].
146 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(28)].

Eliminating U/2
147 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(29)].
148 -T(x) | -T(y) | -U(x,y) | P(x,f9(x,y)).  [clausify(29)].
149 -T(x) | -T(y) | -U(x,y) | P(y,f9(x,y)).  [clausify(29)].
150 -T(x) | -T(y) | -U(x,y) | T(f9(x,y)).  [clausify(29)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f9(x,y)).  [resolve(147,c,148,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f9(x,y)).  [resolve(147,c,149,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f9(x,y)).  [resolve(147,c,150,c)].
151 -T(x) | -T(y) | -U(x,y) | T(f11(x,y)).  [clausify(31)].
Derived: -T(x) | -T(y) | T(f11(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(151,c,147,c)].
152 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f11(x,y)) | O(z,x) | O(z,y).  [clausify(31)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f11(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(152,c,147,c)].
153 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f11(x,y)) | -O(z,x).  [clausify(31)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f11(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(153,c,147,c)].
154 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f11(x,y)) | -O(z,y).  [clausify(31)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f11(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(154,c,147,c)].

Eliminating AtP/1
155 AtP(x) | -T(x) | T(f10(x)).  [clausify(30)].
156 -AtP(x) | T(x).  [clausify(30)].
157 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(30)].
Derived: -T(x) | T(f10(x)) | -T(y) | -P(y,x) | y = x.  [resolve(155,a,157,a)].
158 AtP(x) | -T(x) | P(f10(x),x).  [clausify(30)].
Derived: -T(x) | P(f10(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(158,a,157,a)].
159 AtP(x) | -T(x) | f10(x) != x.  [clausify(30)].
Derived: -T(x) | f10(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(159,a,157,a)].

Eliminating PT/1
160 -PT(x) | PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)).  [resolve(118,b,109,a)].
161 -PD(x) | PT(x).  [clausify(34)].
162 -Q(x) | PT(x).  [clausify(34)].
163 -AB(x) | PT(x).  [clausify(34)].
164 PT(x) | -PD(x).  [clausify(52)].
165 PT(x) | -Q(x).  [clausify(52)].
166 PT(x) | -AB(x).  [clausify(52)].
167 PT(x) | -PC(x,y,z).  [resolve(114,a,110,b)].
168 PT(x) | -L_1(x).  [resolve(114,a,111,b)].
169 -PED(x) | PT(x).  [resolve(115,b,114,a)].
170 -NPED(x) | PT(x).  [resolve(116,b,114,a)].
171 -AS(x) | PT(x).  [resolve(117,b,114,a)].
Derived: PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -PC(x,y,z).  [resolve(160,a,167,a)].
Derived: PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -L_1(x).  [resolve(160,a,168,a)].
Derived: PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -PED(x).  [resolve(160,a,169,b)].
Derived: PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -NPED(x).  [resolve(160,a,170,b)].
Derived: PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -AS(x).  [resolve(160,a,171,b)].
172 -PT(x) | PD(x) | Q(x) | AB(x) | L_1(x).  [resolve(118,b,112,b)].
Derived: PD(x) | Q(x) | AB(x) | L_1(x) | -PC(x,y,z).  [resolve(172,a,167,a)].
Derived: PD(x) | Q(x) | AB(x) | L_1(x) | -PED(x).  [resolve(172,a,169,b)].
Derived: PD(x) | Q(x) | AB(x) | L_1(x) | -NPED(x).  [resolve(172,a,170,b)].
Derived: PD(x) | Q(x) | AB(x) | L_1(x) | -AS(x).  [resolve(172,a,171,b)].
173 -PT(x) | PD(x) | Q(x) | AB(x) | PRE(x,f5(x)).  [resolve(118,b,113,a)].
Derived: PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -PC(x,y,z).  [resolve(173,a,167,a)].
Derived: PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -L_1(x).  [resolve(173,a,168,a)].
Derived: PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -PED(x).  [resolve(173,a,169,b)].
Derived: PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -NPED(x).  [resolve(173,a,170,b)].
Derived: PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -AS(x).  [resolve(173,a,171,b)].
174 PED(x) | NPED(x) | AS(x) | -PT(x) | PD(x) | Q(x) | AB(x).  [resolve(123,a,118,b)].
Derived: PED(x) | NPED(x) | AS(x) | PD(x) | Q(x) | AB(x) | -PC(x,y,z).  [resolve(174,d,167,a)].
Derived: PED(x) | NPED(x) | AS(x) | PD(x) | Q(x) | AB(x) | -L_1(x).  [resolve(174,d,168,a)].
175 PT(c1).  [resolve(127,a,114,a)].
Derived: PD(c1) | Q(c1) | AB(c1) | PC(c1,f2(c1),f3(c1)).  [resolve(175,a,160,a)].
Derived: PD(c1) | Q(c1) | AB(c1) | L_1(c1).  [resolve(175,a,172,a)].
Derived: PD(c1) | Q(c1) | AB(c1) | PRE(c1,f5(c1)).  [resolve(175,a,173,a)].

Eliminating EV/1
176 -ACH(x) | EV(x).  [clausify(41)].
177 -EV(x) | PD(x).  [clausify(36)].
Derived: -ACH(x) | PD(x).  [resolve(176,b,177,a)].
178 -ACC(x) | EV(x).  [clausify(41)].
Derived: -ACC(x) | PD(x).  [resolve(178,b,177,a)].
179 -PD(x) | EV(x) | STV(x).  [clausify(59)].
180 PD(x) | -EV(x).  [clausify(59)].
181 -EV(x) | -STV(x).  [clausify(60)].
Derived: -STV(x) | -ACH(x).  [resolve(181,a,176,b)].
Derived: -STV(x) | -ACC(x).  [resolve(181,a,178,b)].
182 -EV(x) | ACH(x) | ACC(x).  [clausify(67)].
Derived: ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(182,a,179,b)].
183 EV(x) | -ACH(x).  [clausify(67)].
184 EV(x) | -ACC(x).  [clausify(67)].

Eliminating STV/1
185 -ST(x) | STV(x).  [clausify(42)].
186 -STV(x) | PD(x).  [clausify(36)].
Derived: -ST(x) | PD(x).  [resolve(185,b,186,a)].
187 -PRO(x) | STV(x).  [clausify(42)].
Derived: -PRO(x) | PD(x).  [resolve(187,b,186,a)].
188 PD(x) | -STV(x).  [clausify(59)].
189 -STV(x) | ST(x) | PRO(x).  [clausify(69)].
190 STV(x) | -ST(x).  [clausify(69)].
191 STV(x) | -PRO(x).  [clausify(69)].
192 -STV(x) | -ACH(x).  [resolve(181,a,176,b)].
Derived: -ACH(x) | -ST(x).  [resolve(192,a,185,b)].
Derived: -ACH(x) | -PRO(x).  [resolve(192,a,187,b)].
193 -STV(x) | -ACC(x).  [resolve(181,a,178,b)].
Derived: -ACC(x) | -ST(x).  [resolve(193,a,185,b)].
Derived: -ACC(x) | -PRO(x).  [resolve(193,a,187,b)].
194 ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(182,a,179,b)].
Derived: ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(194,d,189,a)].

Eliminating TQ/1
195 -TL(x) | TQ(x).  [clausify(43)].
196 -TQ(x) | Q(x).  [clausify(37)].
Derived: -TL(x) | Q(x).  [resolve(195,b,196,a)].
197 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(61)].
198 Q(x) | -TQ(x).  [clausify(61)].
199 -TQ(x) | -PQ(x).  [clausify(62)].
Derived: -PQ(x) | -TL(x).  [resolve(199,a,195,b)].
200 -TQ(x) | -AQ(x).  [clausify(62)].
Derived: -AQ(x) | -TL(x).  [resolve(200,a,195,b)].

Eliminating PQ/1
201 -SL(x) | PQ(x).  [clausify(44)].
202 -PQ(x) | Q(x).  [clausify(37)].
Derived: -SL(x) | Q(x).  [resolve(201,b,202,a)].
203 Q(x) | -PQ(x).  [clausify(61)].
204 -PQ(x) | -AQ(x).  [clausify(63)].
Derived: -AQ(x) | -SL(x).  [resolve(204,a,201,b)].
205 -PQ(x) | -TL(x).  [resolve(199,a,195,b)].
Derived: -TL(x) | -SL(x).  [resolve(205,a,201,b)].

Eliminating AQ/1

Eliminating R/1
206 -TR(x) | R(x).  [clausify(45)].
207 -R(x) | AB(x).  [clausify(38)].
Derived: -TR(x) | AB(x).  [resolve(206,b,207,a)].
208 -PR(x) | R(x).  [clausify(45)].
Derived: -PR(x) | AB(x).  [resolve(208,b,207,a)].
209 -AR(x) | R(x).  [clausify(45)].
Derived: -AR(x) | AB(x).  [resolve(209,b,207,a)].
210 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(71)].
211 R(x) | -TR(x).  [clausify(71)].
212 R(x) | -PR(x).  [clausify(71)].
213 R(x) | -AR(x).  [clausify(71)].

Eliminating M/1
214 -PED(x) | M(x) | F(x) | POB(x).  [clausify(64)].
215 -M(x) | PED(x).  [clausify(39)].
216 PED(x) | -M(x).  [clausify(64)].
217 -M(x) | -F(x).  [clausify(65)].
218 -M(x) | -POB(x).  [clausify(65)].

Eliminating F/1

Eliminating POB/1
219 -APO(x) | POB(x).  [clausify(46)].
220 -POB(x) | PED(x).  [clausify(39)].
Derived: -APO(x) | PED(x).  [resolve(219,b,220,a)].
221 -NAPO(x) | POB(x).  [clausify(46)].
Derived: -NAPO(x) | PED(x).  [resolve(221,b,220,a)].
222 PED(x) | -POB(x).  [clausify(64)].
223 -POB(x) | APO(x) | NAPO(x).  [clausify(74)].
224 POB(x) | -APO(x).  [clausify(74)].
225 POB(x) | -NAPO(x).  [clausify(74)].

Eliminating NPOB/1
226 -MOB(x) | NPOB(x).  [clausify(47)].
227 -NPOB(x) | NPED(x).  [clausify(40)].
Derived: -MOB(x) | NPED(x).  [resolve(226,b,227,a)].
228 -SOB(x) | NPOB(x).  [clausify(47)].
Derived: -SOB(x) | NPED(x).  [resolve(228,b,227,a)].
229 -NPOB(x) | MOB(x) | SOB(x).  [clausify(76)].
230 NPOB(x) | -MOB(x).  [clausify(76)].
231 NPOB(x) | -SOB(x).  [clausify(76)].

Eliminating TR/1
232 -TR(x) | -PR(x).  [clausify(72)].
233 -T(x) | TR(x).  [clausify(48)].
Derived: -PR(x) | -T(x).  [resolve(232,a,233,b)].
234 -TR(x) | -AR(x).  [clausify(72)].
Derived: -AR(x) | -T(x).  [resolve(234,a,233,b)].
235 -TR(x) | AB(x).  [resolve(206,b,207,a)].
Derived: AB(x) | -T(x).  [resolve(235,a,233,b)].

Eliminating S/1

Eliminating ASO/1
236 -SAG(x) | ASO(x).  [clausify(51)].
237 -ASO(x) | SOB(x).  [clausify(50)].
Derived: -SAG(x) | SOB(x).  [resolve(236,b,237,a)].
238 -SC(x) | ASO(x).  [clausify(51)].
Derived: -SC(x) | SOB(x).  [resolve(238,b,237,a)].
239 -SOB(x) | ASO(x) | NASO(x).  [clausify(78)].
240 SOB(x) | -ASO(x).  [clausify(78)].
241 -ASO(x) | -NASO(x).  [clausify(79)].
Derived: -NASO(x) | -SAG(x).  [resolve(241,a,236,b)].
Derived: -NASO(x) | -SC(x).  [resolve(241,a,238,b)].
242 -ASO(x) | SAG(x) | SC(x).  [clausify(80)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(242,a,239,b)].
243 ASO(x) | -SAG(x).  [clausify(80)].
244 ASO(x) | -SC(x).  [clausify(80)].

Eliminating NASO/1
245 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(242,a,239,b)].
246 -NASO(x) | SOB(x).  [clausify(50)].
247 SOB(x) | -NASO(x).  [clausify(78)].
248 -NASO(x) | -SAG(x).  [resolve(241,a,236,b)].
249 -NASO(x) | -SC(x).  [resolve(241,a,238,b)].

Eliminating PED/1
250 PED(x) | NPED(x) | AS(x) | -PC(x,y,z).  [resolve(123,a,110,b)].
251 -PED(x) | -NPED(x).  [clausify(57)].
252 -PED(x) | -AS(x).  [clausify(57)].
253 -PED(x) | PC(x,f2(x),f3(x)).  [resolve(115,b,109,a)].
254 -PED(x) | L_1(x).  [resolve(115,b,112,b)].
255 -PED(x) | PRE(x,f5(x)).  [resolve(115,b,113,a)].
256 -PD(x) | -PED(x).  [resolve(120,a,115,b)].
257 -Q(x) | -PED(x).  [resolve(121,a,115,b)].
258 -AB(x) | -PED(x).  [resolve(122,a,115,b)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | PC(x,f2(x),f3(x)).  [resolve(250,a,253,a)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | L_1(x).  [resolve(250,a,254,a)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | PRE(x,f5(x)).  [resolve(250,a,255,a)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | -PD(x).  [resolve(250,a,256,b)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | -Q(x).  [resolve(250,a,257,b)].
Derived: NPED(x) | AS(x) | -PC(x,y,z) | -AB(x).  [resolve(250,a,258,b)].
259 PED(x) | NPED(x) | AS(x) | -L_1(x).  [resolve(123,a,111,b)].
Derived: NPED(x) | AS(x) | -L_1(x) | PC(x,f2(x),f3(x)).  [resolve(259,a,253,a)].
Derived: NPED(x) | AS(x) | -L_1(x) | PRE(x,f5(x)).  [resolve(259,a,255,a)].
Derived: NPED(x) | AS(x) | -L_1(x) | -PD(x).  [resolve(259,a,256,b)].
Derived: NPED(x) | AS(x) | -L_1(x) | -Q(x).  [resolve(259,a,257,b)].
Derived: NPED(x) | AS(x) | -L_1(x) | -AB(x).  [resolve(259,a,258,b)].
260 PED(c1) | NPED(c1) | AS(c1).  [resolve(127,a,123,a)].
Derived: NPED(c1) | AS(c1) | PC(c1,f2(c1),f3(c1)).  [resolve(260,a,253,a)].
Derived: NPED(c1) | AS(c1) | L_1(c1).  [resolve(260,a,254,a)].
Derived: NPED(c1) | AS(c1) | PRE(c1,f5(c1)).  [resolve(260,a,255,a)].
Derived: NPED(c1) | AS(c1) | -PD(c1).  [resolve(260,a,256,b)].
Derived: NPED(c1) | AS(c1) | -Q(c1).  [resolve(260,a,257,b)].
Derived: NPED(c1) | AS(c1) | -AB(c1).  [resolve(260,a,258,b)].
261 PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -PED(x).  [resolve(160,a,169,b)].
262 PD(x) | Q(x) | AB(x) | L_1(x) | -PED(x).  [resolve(172,a,169,b)].
263 PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -PED(x).  [resolve(173,a,169,b)].
264 PED(x) | NPED(x) | AS(x) | PD(x) | Q(x) | AB(x) | -PC(x,y,z).  [resolve(174,d,167,a)].
265 PED(x) | NPED(x) | AS(x) | PD(x) | Q(x) | AB(x) | -L_1(x).  [resolve(174,d,168,a)].
266 -APO(x) | PED(x).  [resolve(219,b,220,a)].
Derived: -APO(x) | -NPED(x).  [resolve(266,b,251,a)].
Derived: -APO(x) | -AS(x).  [resolve(266,b,252,a)].
Derived: -APO(x) | PC(x,f2(x),f3(x)).  [resolve(266,b,253,a)].
Derived: -APO(x) | L_1(x).  [resolve(266,b,254,a)].
Derived: -APO(x) | PRE(x,f5(x)).  [resolve(266,b,255,a)].
Derived: -APO(x) | -PD(x).  [resolve(266,b,256,b)].
Derived: -APO(x) | -Q(x).  [resolve(266,b,257,b)].
Derived: -APO(x) | -AB(x).  [resolve(266,b,258,b)].
267 -NAPO(x) | PED(x).  [resolve(221,b,220,a)].
Derived: -NAPO(x) | -NPED(x).  [resolve(267,b,251,a)].
Derived: -NAPO(x) | -AS(x).  [resolve(267,b,252,a)].
Derived: -NAPO(x) | PC(x,f2(x),f3(x)).  [resolve(267,b,253,a)].
Derived: -NAPO(x) | L_1(x).  [resolve(267,b,254,a)].
Derived: -NAPO(x) | PRE(x,f5(x)).  [resolve(267,b,255,a)].
Derived: -NAPO(x) | -PD(x).  [resolve(267,b,256,b)].
Derived: -NAPO(x) | -Q(x).  [resolve(267,b,257,b)].
Derived: -NAPO(x) | -AB(x).  [resolve(267,b,258,b)].

Eliminating NPED/1
268 -MOB(x) | NPED(x).  [resolve(226,b,227,a)].
269 -NPED(x) | -AS(x).  [clausify(58)].
270 -NPED(x) | PC(x,f2(x),f3(x)).  [resolve(116,b,109,a)].
271 -NPED(x) | L_1(x).  [resolve(116,b,112,b)].
272 -NPED(x) | PRE(x,f5(x)).  [resolve(116,b,113,a)].
273 -PD(x) | -NPED(x).  [resolve(120,a,116,b)].
274 -Q(x) | -NPED(x).  [resolve(121,a,116,b)].
275 -AB(x) | -NPED(x).  [resolve(122,a,116,b)].
276 PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -NPED(x).  [resolve(160,a,170,b)].
277 PD(x) | Q(x) | AB(x) | L_1(x) | -NPED(x).  [resolve(172,a,170,b)].
278 PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -NPED(x).  [resolve(173,a,170,b)].
Derived: -MOB(x) | -AS(x).  [resolve(268,b,269,a)].
Derived: -MOB(x) | PC(x,f2(x),f3(x)).  [resolve(268,b,270,a)].
Derived: -MOB(x) | L_1(x).  [resolve(268,b,271,a)].
Derived: -MOB(x) | PRE(x,f5(x)).  [resolve(268,b,272,a)].
Derived: -MOB(x) | -PD(x).  [resolve(268,b,273,b)].
Derived: -MOB(x) | -Q(x).  [resolve(268,b,274,b)].
Derived: -MOB(x) | -AB(x).  [resolve(268,b,275,b)].
279 -SOB(x) | NPED(x).  [resolve(228,b,227,a)].
Derived: -SOB(x) | -AS(x).  [resolve(279,b,269,a)].
Derived: -SOB(x) | PC(x,f2(x),f3(x)).  [resolve(279,b,270,a)].
Derived: -SOB(x) | L_1(x).  [resolve(279,b,271,a)].
Derived: -SOB(x) | PRE(x,f5(x)).  [resolve(279,b,272,a)].
Derived: -SOB(x) | -PD(x).  [resolve(279,b,273,b)].
Derived: -SOB(x) | -Q(x).  [resolve(279,b,274,b)].
Derived: -SOB(x) | -AB(x).  [resolve(279,b,275,b)].
280 NPED(x) | AS(x) | -PC(x,y,z) | PC(x,f2(x),f3(x)).  [resolve(250,a,253,a)].
Derived: AS(x) | -PC(x,y,z) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(280,a,270,a)].
281 NPED(x) | AS(x) | -PC(x,y,z) | L_1(x).  [resolve(250,a,254,a)].
Derived: AS(x) | -PC(x,y,z) | L_1(x) | L_1(x).  [resolve(281,a,271,a)].
282 NPED(x) | AS(x) | -PC(x,y,z) | PRE(x,f5(x)).  [resolve(250,a,255,a)].
Derived: AS(x) | -PC(x,y,z) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(282,a,272,a)].
283 NPED(x) | AS(x) | -PC(x,y,z) | -PD(x).  [resolve(250,a,256,b)].
Derived: AS(x) | -PC(x,y,z) | -PD(x) | -PD(x).  [resolve(283,a,273,b)].
284 NPED(x) | AS(x) | -PC(x,y,z) | -Q(x).  [resolve(250,a,257,b)].
Derived: AS(x) | -PC(x,y,z) | -Q(x) | -Q(x).  [resolve(284,a,274,b)].
285 NPED(x) | AS(x) | -PC(x,y,z) | -AB(x).  [resolve(250,a,258,b)].
Derived: AS(x) | -PC(x,y,z) | -AB(x) | -AB(x).  [resolve(285,a,275,b)].
286 NPED(x) | AS(x) | -L_1(x) | PC(x,f2(x),f3(x)).  [resolve(259,a,253,a)].
Derived: AS(x) | -L_1(x) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(286,a,270,a)].
287 NPED(x) | AS(x) | -L_1(x) | PRE(x,f5(x)).  [resolve(259,a,255,a)].
Derived: AS(x) | -L_1(x) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(287,a,272,a)].
288 NPED(x) | AS(x) | -L_1(x) | -PD(x).  [resolve(259,a,256,b)].
Derived: AS(x) | -L_1(x) | -PD(x) | -PD(x).  [resolve(288,a,273,b)].
289 NPED(x) | AS(x) | -L_1(x) | -Q(x).  [resolve(259,a,257,b)].
Derived: AS(x) | -L_1(x) | -Q(x) | -Q(x).  [resolve(289,a,274,b)].
290 NPED(x) | AS(x) | -L_1(x) | -AB(x).  [resolve(259,a,258,b)].
Derived: AS(x) | -L_1(x) | -AB(x) | -AB(x).  [resolve(290,a,275,b)].
291 NPED(c1) | AS(c1) | PC(c1,f2(c1),f3(c1)).  [resolve(260,a,253,a)].
Derived: AS(c1) | PC(c1,f2(c1),f3(c1)) | PC(c1,f2(c1),f3(c1)).  [resolve(291,a,270,a)].
292 NPED(c1) | AS(c1) | L_1(c1).  [resolve(260,a,254,a)].
Derived: AS(c1) | L_1(c1) | L_1(c1).  [resolve(292,a,271,a)].
293 NPED(c1) | AS(c1) | PRE(c1,f5(c1)).  [resolve(260,a,255,a)].
Derived: AS(c1) | PRE(c1,f5(c1)) | PRE(c1,f5(c1)).  [resolve(293,a,272,a)].
294 NPED(c1) | AS(c1) | -PD(c1).  [resolve(260,a,256,b)].
Derived: AS(c1) | -PD(c1) | -PD(c1).  [resolve(294,a,273,b)].
295 NPED(c1) | AS(c1) | -Q(c1).  [resolve(260,a,257,b)].
Derived: AS(c1) | -Q(c1) | -Q(c1).  [resolve(295,a,274,b)].
296 NPED(c1) | AS(c1) | -AB(c1).  [resolve(260,a,258,b)].
Derived: AS(c1) | -AB(c1) | -AB(c1).  [resolve(296,a,275,b)].
297 -APO(x) | -NPED(x).  [resolve(266,b,251,a)].
Derived: -APO(x) | -MOB(x).  [resolve(297,b,268,b)].
Derived: -APO(x) | -SOB(x).  [resolve(297,b,279,b)].
298 -NAPO(x) | -NPED(x).  [resolve(267,b,251,a)].
Derived: -NAPO(x) | -MOB(x).  [resolve(298,b,268,b)].
Derived: -NAPO(x) | -SOB(x).  [resolve(298,b,279,b)].

Eliminating ACH/1
299 ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(194,d,189,a)].
300 -ACH(x) | -ACC(x).  [clausify(68)].
301 -ACH(x) | PD(x).  [resolve(176,b,177,a)].
302 -ACH(x) | -ST(x).  [resolve(192,a,185,b)].
303 -ACH(x) | -PRO(x).  [resolve(192,a,187,b)].

Eliminating ST/1

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating AS/1
304 AS(x) | -PC(x,y,z) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(280,a,270,a)].
305 -AS(x) | PC(x,f2(x),f3(x)).  [resolve(117,b,109,a)].
306 -AS(x) | L_1(x).  [resolve(117,b,112,b)].
307 -AS(x) | PRE(x,f5(x)).  [resolve(117,b,113,a)].
308 -PD(x) | -AS(x).  [resolve(120,a,117,b)].
309 -Q(x) | -AS(x).  [resolve(121,a,117,b)].
310 -AB(x) | -AS(x).  [resolve(122,a,117,b)].
311 PD(x) | Q(x) | AB(x) | PC(x,f2(x),f3(x)) | -AS(x).  [resolve(160,a,171,b)].
312 PD(x) | Q(x) | AB(x) | L_1(x) | -AS(x).  [resolve(172,a,171,b)].
313 PD(x) | Q(x) | AB(x) | PRE(x,f5(x)) | -AS(x).  [resolve(173,a,171,b)].
314 -NAPO(x) | -AS(x).  [resolve(267,b,252,a)].
315 -SOB(x) | -AS(x).  [resolve(279,b,269,a)].
Derived: -PC(x,y,z) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(304,a,305,a)].
316 AS(x) | -PC(x,y,z) | L_1(x) | L_1(x).  [resolve(281,a,271,a)].
Derived: -PC(x,y,z) | L_1(x) | L_1(x) | L_1(x).  [resolve(316,a,306,a)].
317 AS(x) | -PC(x,y,z) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(282,a,272,a)].
Derived: -PC(x,y,z) | PRE(x,f5(x)) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(317,a,307,a)].
318 AS(x) | -PC(x,y,z) | -PD(x) | -PD(x).  [resolve(283,a,273,b)].
Derived: -PC(x,y,z) | -PD(x) | -PD(x) | -PD(x).  [resolve(318,a,308,b)].
319 AS(x) | -PC(x,y,z) | -Q(x) | -Q(x).  [resolve(284,a,274,b)].
Derived: -PC(x,y,z) | -Q(x) | -Q(x) | -Q(x).  [resolve(319,a,309,b)].
320 AS(x) | -PC(x,y,z) | -AB(x) | -AB(x).  [resolve(285,a,275,b)].
Derived: -PC(x,y,z) | -AB(x) | -AB(x) | -AB(x).  [resolve(320,a,310,b)].
321 AS(x) | -L_1(x) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(286,a,270,a)].
Derived: -L_1(x) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)) | PC(x,f2(x),f3(x)).  [resolve(321,a,305,a)].
322 AS(x) | -L_1(x) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(287,a,272,a)].
Derived: -L_1(x) | PRE(x,f5(x)) | PRE(x,f5(x)) | PRE(x,f5(x)).  [resolve(322,a,307,a)].
323 AS(x) | -L_1(x) | -PD(x) | -PD(x).  [resolve(288,a,273,b)].
Derived: -L_1(x) | -PD(x) | -PD(x) | -PD(x).  [resolve(323,a,308,b)].
324 AS(x) | -L_1(x) | -Q(x) | -Q(x).  [resolve(289,a,274,b)].
Derived: -L_1(x) | -Q(x) | -Q(x) | -Q(x).  [resolve(324,a,309,b)].
325 AS(x) | -L_1(x) | -AB(x) | -AB(x).  [resolve(290,a,275,b)].
Derived: -L_1(x) | -AB(x) | -AB(x) | -AB(x).  [resolve(325,a,310,b)].
326 AS(c1) | PC(c1,f2(c1),f3(c1)) | PC(c1,f2(c1),f3(c1)).  [resolve(291,a,270,a)].
Derived: PC(c1,f2(c1),f3(c1)) | PC(c1,f2(c1),f3(c1)) | PC(c1,f2(c1),f3(c1)).  [resolve(326,a,305,a)].
327 AS(c1) | L_1(c1) | L_1(c1).  [resolve(292,a,271,a)].
Derived: L_1(c1) | L_1(c1) | L_1(c1).  [resolve(327,a,306,a)].
328 AS(c1) | PRE(c1,f5(c1)) | PRE(c1,f5(c1)).  [resolve(293,a,272,a)].
Derived: PRE(c1,f5(c1)) | PRE(c1,f5(c1)) | PRE(c1,f5(c1)).  [resolve(328,a,307,a)].
329 AS(c1) | -PD(c1) | -PD(c1).  [resolve(294,a,273,b)].
Derived: -PD(c1) | -PD(c1) | -PD(c1).  [resolve(329,a,308,b)].
330 AS(c1) | -Q(c1) | -Q(c1).  [resolve(295,a,274,b)].
Derived: -Q(c1) | -Q(c1) | -Q(c1).  [resolve(330,a,309,b)].
331 AS(c1) | -AB(c1) | -AB(c1).  [resolve(296,a,275,b)].
Derived: -AB(c1) | -AB(c1) | -AB(c1).  [resolve(331,a,310,b)].

Eliminating ACC/1

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating AR/1

Eliminating SC/1

Eliminating NAPO/1

Eliminating SOB/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, L_1, PD, AB, Q, O, P, PRE, PP, PC, tin1 ]).
Function symbol precedence:  function_order([ c1, f1, f6, f7, f8, f9, f11, f12, f2, f3, f5, f10, f4, f13 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.12 seconds.

============================== PROOF =================================

% Proof 1 at 0.12 (+ 0.00) seconds.
% Length of proof is 12.
% Level of proof is 4.
% Maximum clause weight is 8.000.
% Given clauses 51.

3 (all x (ED(x) -> (exists y exists t PC(x,y,t)))) # label(non_clause).  [assumption].
8 (all x (plane1(x) <-> ED(x))) # label(non_clause).  [assumption].
10 (all x all y all z (tin1(x,y,z) <-> PC(x,y,z))) # label(non_clause).  [assumption].
82 (all x (plane1(x) -> (exists y exists t tin1(x,y,t)))) # label(non_clause) # label(goal).  [goal].
88 -plane1(x) | ED(x).  [clausify(8)].
89 plane1(c1).  [deny(82)].
109 -ED(x) | PC(x,f2(x),f3(x)).  [clausify(3)].
127 ED(c1).  [resolve(89,a,88,a)].
341 tin1(x,y,z) | -PC(x,y,z).  [clausify(10)].
370 -tin1(c1,x,y).  [deny(82)].
382 PC(c1,f2(c1),f3(c1)).  [resolve(127,a,109,a)].
613 $F.  [resolve(382,a,341,b),unit_del(a,370)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=51. Generated=743. Kept=241. proofs=1.
Usable=51. Sos=187. Demods=0. Limbo=0, Disabled=419. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=501. Back_subsumed=3.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1498. Nonunit_bsub_feature_tests=2445.
Megabytes=0.99.
User_CPU=0.12, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 15859 exit (max_proofs) Mon Sep 30 23:50:54 2013
