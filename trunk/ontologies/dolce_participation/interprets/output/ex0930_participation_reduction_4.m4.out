============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 13394 was started by cchui on stl-ws4.mie.utoronto.ca,
Tue Oct  1 10:10:17 2013
The command was "mace4 -c -t 120 -s 120 -n 2 -N 20 -f test/p9/taxonomy.p9 test/p9/ideal_cem_plane_downward_in_foliation1.p9 test/p9/ideal_cem_line_downward_in_foliation2.p9 test/p9/ideal_cem_wmg3.p9 test/p9/dolce_participation_reduction.p9 test/p9/ex0930_participation_reduction_4.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/taxonomy.p9


formulas(sos).
(all x (L_1(x) -> -L_2(x))).
(all x (L_1(x) -> -L_3(x))).
(all x (L_2(x) -> -L_3(x))).
(all x (L_4(x) -> L_1(x))).
(all x (L_5(x) -> L_1(x))).
(all x (L_4(x) -> -L_5(x))).
end_of_list.

% Reading from file test/p9/ideal_cem_plane_downward_in_foliation1.p9


formulas(sos).
(all x all y all p1 all p2 (tin1(x,y,p1) & part1(p2,p1) -> tin1(x,y,p2))).
(all x all p (line1(x) & in1(p,x) & point1(p) -> (exists y tin1(x,y,p)))).
(all x (plane1(x) -> (exists y exists t tin1(x,y,t)))).
(all x all y all z all l (point1(x) & point1(y) & line1(l) & in1(x,l) & in1(y,l) & sum(x,y,z) -> in1(z,l))).
(all x all y (in1(x,y) -> in1(y,x))).
(all x (point1(x) | line1(x) -> in1(x,x))).
(all x (point1(x) -> -line1(x))).
(all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)).
(all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)).
(all x (line1(x) -> (exists y (point1(y) & in1(x,y))))).
(all x all l (point1(x) & line1(l) & in1(x,l) -> part1(x,x))).
(all x all y all l (line1(l) & in1(x,l) & in1(y,l) & part1(x,y) & part1(y,x) -> x = y)).
(all x all y all z all l (line1(l) & in1(x,l) & in1(y,l) & in1(z,l) & part1(x,y) & part1(y,z) -> part1(x,z))).
(all x all y (part1(x,y) -> point1(x) & point1(y))).
(all x all y all p (tin1(x,y,p) -> plane1(x) & line1(y) & point1(p))).
(all x all y all p (tin1(x,y,p) -> in1(p,x) & in1(p,y))).
(all x all y all l (point1(x) & point1(y) & line1(l) & in1(x,l) & part1(y,x) -> in1(y,l))).
(all x (point1(x) -> part1(x,x))).
(all x all y (point1(x) & point1(y) -> (part1(x,y) & part1(y,x) -> x = y))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))).
(all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))).
(all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))).
(all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))).
(all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))).
(all x all y (point1(x) & point1(y) & underlaps(x,y) -> (exists z (point1(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))).
(all x all y (point1(x) & point1(y) & overlaps(x,y) -> (exists z (point1(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))).
(all x all y (point1(x) & point1(y) & -part1(x,y) -> (exists z (point1(z) & part1(z,x) & disjoint(z,y))))).
(all x (point1(x) -> part1(x,x))).
(all x all y (point1(x) & point1(y) & part1(x,y) & part1(y,x) -> x = y)).
(all x all y all z (point1(x) & point1(y) & point1(z) & part1(x,y) & part1(y,z) -> part1(x,z))).
(all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))).
(all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))).
(all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))).
(all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))).
(all x all y (in1(x,y) -> in1(y,x))).
(all x (point1(x) | line1(x) | plane1(x) -> in1(x,x))).
(all p (point1(p) -> -line1(p))).
(all p (point1(p) -> -plane1(p))).
(all p (plane1(p) -> -line1(p))).
(all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)).
(all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)).
(all x all y (in1(x,y) & plane1(x) & plane1(y) -> x = y)).
end_of_list.

% Reading from file test/p9/ideal_cem_line_downward_in_foliation2.p9


formulas(sos).
(all x all y all p1 all p2 (tin2(x,y,p1) & part2(p2,p1) -> tin2(x,y,p2))).
(all x all p (plane2(x) & in2(p,x) & point2(p) -> (exists y tin2(y,x,p)))).
(all x (line2(x) -> (exists y exists t tin2(y,x,t)))).
(all x all y all z all l (point2(x) & point2(y) & line2(l) & in2(x,l) & in2(y,l) & sum(x,y,z) -> in2(z,l))).
(all x all y (in2(x,y) -> in2(y,x))).
(all x (point2(x) | line2(x) -> in2(x,x))).
(all x (point2(x) -> -line2(x))).
(all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)).
(all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)).
(all x (line2(x) -> (exists y (point2(y) & in2(x,y))))).
(all x all l (point2(x) & line2(l) & in2(x,l) -> part2(x,x))).
(all x all y all l (line2(l) & in2(x,l) & in2(y,l) & part2(x,y) & part2(y,x) -> x = y)).
(all x all y all z all l (line2(l) & in2(x,l) & in2(y,l) & in2(z,l) & part2(x,y) & part2(y,z) -> part2(x,z))).
(all x all y (part2(x,y) -> point2(x) & point2(y))).
(all x all y all p (tin2(x,y,p) -> plane2(x) & line2(y) & point2(p))).
(all x all y all p (tin2(x,y,p) -> in2(p,x) & in2(p,y))).
(all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))).
(all x (point2(x) -> part2(x,x))).
(all x all y (point2(x) & point2(y) -> (part2(x,y) & part2(y,x) -> x = y))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (part2(x,y) & part2(y,z) -> part2(x,z)))).
(all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))).
(all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))).
(all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))).
(all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))).
(all x all y (point2(x) & point2(y) & underlaps(x,y) -> (exists z (point2(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))).
(all x all y (point2(x) & point2(y) & overlaps(x,y) -> (exists z (point2(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))).
(all x all y (point2(x) & point2(y) & -part2(x,y) -> (exists z (point2(z) & part2(z,x) & disjoint(z,y))))).
(all x (point2(x) -> part2(x,x))).
(all x all y (point2(x) & point2(y) & part2(x,y) & part2(y,x) -> x = y)).
(all x all y all z (point2(x) & point2(y) & point2(z) & part2(x,y) & part2(y,z) -> part2(x,z))).
(all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))).
(all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))).
(all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))).
(all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))).
(all x all y (in2(x,y) -> in2(y,x))).
(all x (point2(x) | line2(x) | plane2(x) -> in2(x,x))).
(all p (point2(p) -> -line2(p))).
(all p (point2(p) -> -plane2(p))).
(all p (plane2(p) -> -line2(p))).
(all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)).
(all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)).
(all x all y (in2(x,y) & plane2(x) & plane2(y) -> x = y)).
end_of_list.

% Reading from file test/p9/ideal_cem_wmg3.p9


formulas(sos).
(all x all y all z all l (point3(x) & point3(y) & line3(l) & in3(x,l) & in3(y,l) & sum(x,y,z) -> in3(z,l))).
(all x all y all l (point3(x) & point3(y) & line3(l) & in3(x,l) & part3(y,x) -> in3(y,l))).
(all x (point3(x) -> part3(x,x))).
(all x all y (point3(x) & point3(y) -> (part3(x,y) & part3(y,x) -> x = y))).
(all x all y all z (point3(x) & point3(y) & point3(z) -> (part3(x,y) & part3(y,z) -> part3(x,z)))).
(all x all y (point3(x) & point3(y) -> (ppart(x,y) <-> part3(x,y) & -part3(y,x)))).
(all x all y (point3(x) & point3(y) -> (overlaps(x,y) <-> (exists z (point3(z) & part3(z,x) & part3(z,y)))))).
(all x all y (point3(x) & point3(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point3(x) & point3(y) -> (underlaps(x,y) <-> (exists z (point3(z) & part3(x,z) & part3(y,z)))))).
(all x (point3(x) -> (atomic_part(x) <-> (all y (point3(y) & part3(y,x) -> y = x))))).
(all x all y all z (point3(x) & point3(y) & point3(z) -> (sum(x,y,z) <-> (all w (point3(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point3(x) & point3(y) & point3(z) -> (prod(x,y,z) <-> (all w (point3(w) -> (part3(w,z) <-> part3(w,x) | part3(w,y))))))).
(all x all y (in3(x,y) -> in3(y,x))).
(all x (point3(x) | line3(x) -> in3(x,x))).
(all x (point3(x) -> -line3(x))).
(all x all y (in3(x,y) & point3(x) & point3(y) -> x = y)).
(all x all y (in3(x,y) & line3(x) & line3(y) -> x = y)).
(all x (line3(x) -> (exists y (point3(y) & in3(x,y))))).
(all x all l (point3(x) & line3(l) & in3(x,l) -> part3(x,x))).
(all x all y all l (line3(l) & in3(x,l) & in3(y,l) & part3(x,y) & part3(y,x) -> x = y)).
(all x all y all z all l (line3(l) & in3(x,l) & in3(y,l) & in3(z,l) & part3(x,y) & part3(y,z) -> part3(x,z))).
(all x all y (part3(x,y) -> point3(x) & point3(y))).
(all x all y (point3(x) & point3(y) & underlaps(x,y) -> (exists z (point3(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))).
(all x all y (point3(x) & point3(y) & overlaps(x,y) -> (exists z (point3(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))).
(all x all y (point3(x) & point3(y) & -part3(x,y) -> (exists z (point3(z) & part3(z,x) & disjoint(z,y))))).
(all x (point3(x) -> part3(x,x))).
(all x all y (point3(x) & point3(y) & part3(x,y) & part3(y,x) -> x = y)).
(all x all y all z (point3(x) & point3(y) & point3(z) & part3(x,y) & part3(y,z) -> part3(x,z))).
(all x all y (point3(x) & point3(y) -> (ppart(x,y) <-> part3(x,y) & -part3(y,x)))).
(all x all y (point3(x) & point3(y) -> (overlaps(x,y) <-> (exists z (point3(z) & part3(z,x) & part3(z,y)))))).
(all x all y (point3(x) & point3(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point3(x) & point3(y) -> (underlaps(x,y) <-> (exists z (point3(z) & part3(x,z) & part3(y,z)))))).
(all x (point3(x) -> (atomic_part(x) <-> (all y (point3(y) & part3(y,x) -> y = x))))).
(all x all y all z (point3(x) & point3(y) & point3(z) -> (sum(x,y,z) <-> (all w (point3(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point3(x) & point3(y) & point3(z) -> (prod(x,y,z) <-> (all w (point3(w) -> (part3(w,z) <-> part3(w,x) | part3(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_participation_reduction.p9


formulas(sos).
(all x all y all t (PC(x,y,t) <-> plane1(x) & line1(y) & point1(t) & in1(t,x) & tin1(x,y,t) & in1(t,y) | plane2(x) & line2(y) & point2(t) & in2(t,x) & tin2(x,y,t) & in2(t,y))).
(all x all y (PRE(x,y) <-> in1(y,x) & point1(y) & (line1(x) | plane1(x)) | in2(y,x) & point2(y) & (line2(x) | plane2(x)) | in3(y,x) & point3(y) & line3(x))).
(all x (T(x) <-> point1(x))).
(all x (T(x) <-> point2(x))).
(all x (T(x) <-> point3(x))).
(all x (ED(x) <-> plane1(x))).
(all x (ED(x) <-> line2(x))).
(all x (ED(x) <-> L_1(x))).
(all x (PD(x) <-> line1(x))).
(all x (PD(x) <-> plane2(x))).
(all x (PD(x) <-> L_2(x))).
(all x (Q(x) <-> line3(x))).
(all x (Q(x) <-> L_3(x))).
(all x all y (P(x,y) <-> part1(x,y))).
(all x all y (P(x,y) <-> part2(x,y))).
(all x all y (P(x,y) <-> part3(x,y))).
end_of_list.

% Reading from file test/p9/ex0930_participation_reduction_4.p9


formulas(goals).
(all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))).
end_of_list.

% From the command line: assign(max_seconds, 120).

% From the command line: assign(max_seconds_per, 120).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (L_1(x) -> -L_2(x))) # label(non_clause).  [assumption].
2 (all x (L_1(x) -> -L_3(x))) # label(non_clause).  [assumption].
3 (all x (L_2(x) -> -L_3(x))) # label(non_clause).  [assumption].
4 (all x (L_4(x) -> L_1(x))) # label(non_clause).  [assumption].
5 (all x (L_5(x) -> L_1(x))) # label(non_clause).  [assumption].
6 (all x (L_4(x) -> -L_5(x))) # label(non_clause).  [assumption].
7 (all x all y all p1 all p2 (tin1(x,y,p1) & part1(p2,p1) -> tin1(x,y,p2))) # label(non_clause).  [assumption].
8 (all x all p (line1(x) & in1(p,x) & point1(p) -> (exists y tin1(x,y,p)))) # label(non_clause).  [assumption].
9 (all x (plane1(x) -> (exists y exists t tin1(x,y,t)))) # label(non_clause).  [assumption].
10 (all x all y all z all l (point1(x) & point1(y) & line1(l) & in1(x,l) & in1(y,l) & sum(x,y,z) -> in1(z,l))) # label(non_clause).  [assumption].
11 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause).  [assumption].
12 (all x (point1(x) | line1(x) -> in1(x,x))) # label(non_clause).  [assumption].
13 (all x (point1(x) -> -line1(x))) # label(non_clause).  [assumption].
14 (all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)) # label(non_clause).  [assumption].
16 (all x (line1(x) -> (exists y (point1(y) & in1(x,y))))) # label(non_clause).  [assumption].
17 (all x all l (point1(x) & line1(l) & in1(x,l) -> part1(x,x))) # label(non_clause).  [assumption].
18 (all x all y all l (line1(l) & in1(x,l) & in1(y,l) & part1(x,y) & part1(y,x) -> x = y)) # label(non_clause).  [assumption].
19 (all x all y all z all l (line1(l) & in1(x,l) & in1(y,l) & in1(z,l) & part1(x,y) & part1(y,z) -> part1(x,z))) # label(non_clause).  [assumption].
20 (all x all y (part1(x,y) -> point1(x) & point1(y))) # label(non_clause).  [assumption].
21 (all x all y all p (tin1(x,y,p) -> plane1(x) & line1(y) & point1(p))) # label(non_clause).  [assumption].
22 (all x all y all p (tin1(x,y,p) -> in1(p,x) & in1(p,y))) # label(non_clause).  [assumption].
23 (all x all y all l (point1(x) & point1(y) & line1(l) & in1(x,l) & part1(y,x) -> in1(y,l))) # label(non_clause).  [assumption].
24 (all x (point1(x) -> part1(x,x))) # label(non_clause).  [assumption].
25 (all x all y (point1(x) & point1(y) -> (part1(x,y) & part1(y,x) -> x = y))) # label(non_clause).  [assumption].
26 (all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))) # label(non_clause).  [assumption].
27 (all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))) # label(non_clause).  [assumption].
28 (all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))) # label(non_clause).  [assumption].
29 (all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
30 (all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))) # label(non_clause).  [assumption].
31 (all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))) # label(non_clause).  [assumption].
32 (all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
33 (all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))) # label(non_clause).  [assumption].
34 (all x all y (point1(x) & point1(y) & underlaps(x,y) -> (exists z (point1(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))) # label(non_clause).  [assumption].
35 (all x all y (point1(x) & point1(y) & overlaps(x,y) -> (exists z (point1(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))) # label(non_clause).  [assumption].
36 (all x all y (point1(x) & point1(y) & -part1(x,y) -> (exists z (point1(z) & part1(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
37 (all x (point1(x) -> part1(x,x))) # label(non_clause).  [assumption].
38 (all x all y (point1(x) & point1(y) & part1(x,y) & part1(y,x) -> x = y)) # label(non_clause).  [assumption].
39 (all x all y all z (point1(x) & point1(y) & point1(z) & part1(x,y) & part1(y,z) -> part1(x,z))) # label(non_clause).  [assumption].
40 (all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))) # label(non_clause).  [assumption].
41 (all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))) # label(non_clause).  [assumption].
42 (all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
43 (all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))) # label(non_clause).  [assumption].
44 (all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))) # label(non_clause).  [assumption].
45 (all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
46 (all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))) # label(non_clause).  [assumption].
47 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause).  [assumption].
48 (all x (point1(x) | line1(x) | plane1(x) -> in1(x,x))) # label(non_clause).  [assumption].
49 (all p (point1(p) -> -line1(p))) # label(non_clause).  [assumption].
50 (all p (point1(p) -> -plane1(p))) # label(non_clause).  [assumption].
51 (all p (plane1(p) -> -line1(p))) # label(non_clause).  [assumption].
52 (all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)) # label(non_clause).  [assumption].
53 (all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)) # label(non_clause).  [assumption].
54 (all x all y (in1(x,y) & plane1(x) & plane1(y) -> x = y)) # label(non_clause).  [assumption].
55 (all x all y all p1 all p2 (tin2(x,y,p1) & part2(p2,p1) -> tin2(x,y,p2))) # label(non_clause).  [assumption].
56 (all x all p (plane2(x) & in2(p,x) & point2(p) -> (exists y tin2(y,x,p)))) # label(non_clause).  [assumption].
57 (all x (line2(x) -> (exists y exists t tin2(y,x,t)))) # label(non_clause).  [assumption].
58 (all x all y all z all l (point2(x) & point2(y) & line2(l) & in2(x,l) & in2(y,l) & sum(x,y,z) -> in2(z,l))) # label(non_clause).  [assumption].
59 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause).  [assumption].
60 (all x (point2(x) | line2(x) -> in2(x,x))) # label(non_clause).  [assumption].
61 (all x (point2(x) -> -line2(x))) # label(non_clause).  [assumption].
62 (all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)) # label(non_clause).  [assumption].
63 (all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)) # label(non_clause).  [assumption].
64 (all x (line2(x) -> (exists y (point2(y) & in2(x,y))))) # label(non_clause).  [assumption].
65 (all x all l (point2(x) & line2(l) & in2(x,l) -> part2(x,x))) # label(non_clause).  [assumption].
66 (all x all y all l (line2(l) & in2(x,l) & in2(y,l) & part2(x,y) & part2(y,x) -> x = y)) # label(non_clause).  [assumption].
67 (all x all y all z all l (line2(l) & in2(x,l) & in2(y,l) & in2(z,l) & part2(x,y) & part2(y,z) -> part2(x,z))) # label(non_clause).  [assumption].
68 (all x all y (part2(x,y) -> point2(x) & point2(y))) # label(non_clause).  [assumption].
69 (all x all y all p (tin2(x,y,p) -> plane2(x) & line2(y) & point2(p))) # label(non_clause).  [assumption].
70 (all x all y all p (tin2(x,y,p) -> in2(p,x) & in2(p,y))) # label(non_clause).  [assumption].
71 (all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))) # label(non_clause).  [assumption].
72 (all x (point2(x) -> part2(x,x))) # label(non_clause).  [assumption].
73 (all x all y (point2(x) & point2(y) -> (part2(x,y) & part2(y,x) -> x = y))) # label(non_clause).  [assumption].
74 (all x all y all z (point2(x) & point2(y) & point2(z) -> (part2(x,y) & part2(y,z) -> part2(x,z)))) # label(non_clause).  [assumption].
75 (all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))) # label(non_clause).  [assumption].
76 (all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))) # label(non_clause).  [assumption].
77 (all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
78 (all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))) # label(non_clause).  [assumption].
79 (all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))) # label(non_clause).  [assumption].
80 (all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
81 (all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))) # label(non_clause).  [assumption].
82 (all x all y (point2(x) & point2(y) & underlaps(x,y) -> (exists z (point2(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))) # label(non_clause).  [assumption].
83 (all x all y (point2(x) & point2(y) & overlaps(x,y) -> (exists z (point2(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))) # label(non_clause).  [assumption].
84 (all x all y (point2(x) & point2(y) & -part2(x,y) -> (exists z (point2(z) & part2(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
85 (all x (point2(x) -> part2(x,x))) # label(non_clause).  [assumption].
86 (all x all y (point2(x) & point2(y) & part2(x,y) & part2(y,x) -> x = y)) # label(non_clause).  [assumption].
87 (all x all y all z (point2(x) & point2(y) & point2(z) & part2(x,y) & part2(y,z) -> part2(x,z))) # label(non_clause).  [assumption].
88 (all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))) # label(non_clause).  [assumption].
89 (all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))) # label(non_clause).  [assumption].
90 (all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
91 (all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))) # label(non_clause).  [assumption].
92 (all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))) # label(non_clause).  [assumption].
93 (all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
94 (all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))) # label(non_clause).  [assumption].
95 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause).  [assumption].
96 (all x (point2(x) | line2(x) | plane2(x) -> in2(x,x))) # label(non_clause).  [assumption].
97 (all p (point2(p) -> -line2(p))) # label(non_clause).  [assumption].
98 (all p (point2(p) -> -plane2(p))) # label(non_clause).  [assumption].
99 (all p (plane2(p) -> -line2(p))) # label(non_clause).  [assumption].
100 (all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)) # label(non_clause).  [assumption].
101 (all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)) # label(non_clause).  [assumption].
102 (all x all y (in2(x,y) & plane2(x) & plane2(y) -> x = y)) # label(non_clause).  [assumption].
103 (all x all y all z all l (point3(x) & point3(y) & line3(l) & in3(x,l) & in3(y,l) & sum(x,y,z) -> in3(z,l))) # label(non_clause).  [assumption].
104 (all x all y all l (point3(x) & point3(y) & line3(l) & in3(x,l) & part3(y,x) -> in3(y,l))) # label(non_clause).  [assumption].
105 (all x (point3(x) -> part3(x,x))) # label(non_clause).  [assumption].
106 (all x all y (point3(x) & point3(y) -> (part3(x,y) & part3(y,x) -> x = y))) # label(non_clause).  [assumption].
107 (all x all y all z (point3(x) & point3(y) & point3(z) -> (part3(x,y) & part3(y,z) -> part3(x,z)))) # label(non_clause).  [assumption].
108 (all x all y (point3(x) & point3(y) -> (ppart(x,y) <-> part3(x,y) & -part3(y,x)))) # label(non_clause).  [assumption].
109 (all x all y (point3(x) & point3(y) -> (overlaps(x,y) <-> (exists z (point3(z) & part3(z,x) & part3(z,y)))))) # label(non_clause).  [assumption].
110 (all x all y (point3(x) & point3(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
111 (all x all y (point3(x) & point3(y) -> (underlaps(x,y) <-> (exists z (point3(z) & part3(x,z) & part3(y,z)))))) # label(non_clause).  [assumption].
112 (all x (point3(x) -> (atomic_part(x) <-> (all y (point3(y) & part3(y,x) -> y = x))))) # label(non_clause).  [assumption].
113 (all x all y all z (point3(x) & point3(y) & point3(z) -> (sum(x,y,z) <-> (all w (point3(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
114 (all x all y all z (point3(x) & point3(y) & point3(z) -> (prod(x,y,z) <-> (all w (point3(w) -> (part3(w,z) <-> part3(w,x) | part3(w,y))))))) # label(non_clause).  [assumption].
115 (all x all y (in3(x,y) -> in3(y,x))) # label(non_clause).  [assumption].
116 (all x (point3(x) | line3(x) -> in3(x,x))) # label(non_clause).  [assumption].
117 (all x (point3(x) -> -line3(x))) # label(non_clause).  [assumption].
118 (all x all y (in3(x,y) & point3(x) & point3(y) -> x = y)) # label(non_clause).  [assumption].
119 (all x all y (in3(x,y) & line3(x) & line3(y) -> x = y)) # label(non_clause).  [assumption].
120 (all x (line3(x) -> (exists y (point3(y) & in3(x,y))))) # label(non_clause).  [assumption].
121 (all x all l (point3(x) & line3(l) & in3(x,l) -> part3(x,x))) # label(non_clause).  [assumption].
122 (all x all y all l (line3(l) & in3(x,l) & in3(y,l) & part3(x,y) & part3(y,x) -> x = y)) # label(non_clause).  [assumption].
123 (all x all y all z all l (line3(l) & in3(x,l) & in3(y,l) & in3(z,l) & part3(x,y) & part3(y,z) -> part3(x,z))) # label(non_clause).  [assumption].
124 (all x all y (part3(x,y) -> point3(x) & point3(y))) # label(non_clause).  [assumption].
125 (all x all y (point3(x) & point3(y) & underlaps(x,y) -> (exists z (point3(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))) # label(non_clause).  [assumption].
126 (all x all y (point3(x) & point3(y) & overlaps(x,y) -> (exists z (point3(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))) # label(non_clause).  [assumption].
127 (all x all y (point3(x) & point3(y) & -part3(x,y) -> (exists z (point3(z) & part3(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
128 (all x (point3(x) -> part3(x,x))) # label(non_clause).  [assumption].
129 (all x all y (point3(x) & point3(y) & part3(x,y) & part3(y,x) -> x = y)) # label(non_clause).  [assumption].
130 (all x all y all z (point3(x) & point3(y) & point3(z) & part3(x,y) & part3(y,z) -> part3(x,z))) # label(non_clause).  [assumption].
131 (all x all y (point3(x) & point3(y) -> (ppart(x,y) <-> part3(x,y) & -part3(y,x)))) # label(non_clause).  [assumption].
132 (all x all y (point3(x) & point3(y) -> (overlaps(x,y) <-> (exists z (point3(z) & part3(z,x) & part3(z,y)))))) # label(non_clause).  [assumption].
133 (all x all y (point3(x) & point3(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
134 (all x all y (point3(x) & point3(y) -> (underlaps(x,y) <-> (exists z (point3(z) & part3(x,z) & part3(y,z)))))) # label(non_clause).  [assumption].
135 (all x (point3(x) -> (atomic_part(x) <-> (all y (point3(y) & part3(y,x) -> y = x))))) # label(non_clause).  [assumption].
136 (all x all y all z (point3(x) & point3(y) & point3(z) -> (sum(x,y,z) <-> (all w (point3(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
137 (all x all y all z (point3(x) & point3(y) & point3(z) -> (prod(x,y,z) <-> (all w (point3(w) -> (part3(w,z) <-> part3(w,x) | part3(w,y))))))) # label(non_clause).  [assumption].
138 (all x all y all t (PC(x,y,t) <-> plane1(x) & line1(y) & point1(t) & in1(t,x) & tin1(x,y,t) & in1(t,y) | plane2(x) & line2(y) & point2(t) & in2(t,x) & tin2(x,y,t) & in2(t,y))) # label(non_clause).  [assumption].
139 (all x all y (PRE(x,y) <-> in1(y,x) & point1(y) & (line1(x) | plane1(x)) | in2(y,x) & point2(y) & (line2(x) | plane2(x)) | in3(y,x) & point3(y) & line3(x))) # label(non_clause).  [assumption].
140 (all x (T(x) <-> point1(x))) # label(non_clause).  [assumption].
141 (all x (T(x) <-> point2(x))) # label(non_clause).  [assumption].
142 (all x (T(x) <-> point3(x))) # label(non_clause).  [assumption].
143 (all x (ED(x) <-> plane1(x))) # label(non_clause).  [assumption].
144 (all x (ED(x) <-> line2(x))) # label(non_clause).  [assumption].
145 (all x (ED(x) <-> L_1(x))) # label(non_clause).  [assumption].
146 (all x (PD(x) <-> line1(x))) # label(non_clause).  [assumption].
147 (all x (PD(x) <-> plane2(x))) # label(non_clause).  [assumption].
148 (all x (PD(x) <-> L_2(x))) # label(non_clause).  [assumption].
149 (all x (Q(x) <-> line3(x))) # label(non_clause).  [assumption].
150 (all x (Q(x) <-> L_3(x))) # label(non_clause).  [assumption].
151 (all x all y (P(x,y) <-> part1(x,y))) # label(non_clause).  [assumption].
152 (all x all y (P(x,y) <-> part2(x,y))) # label(non_clause).  [assumption].
153 (all x all y (P(x,y) <-> part3(x,y))) # label(non_clause).  [assumption].
154 (all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-L_1(x) | -L_2(x).
-L_1(x) | -L_3(x).
-L_2(x) | -L_3(x).
-L_4(x) | L_1(x).
-L_5(x) | L_1(x).
-L_4(x) | -L_5(x).
-tin1(x,y,z) | -part1(u,z) | tin1(x,y,u).
-line1(x) | -in1(y,x) | -point1(y) | tin1(x,f1(x,y),y).
-plane1(x) | tin1(x,f2(x),f3(x)).
-point1(x) | -point1(y) | -line1(z) | -in1(x,z) | -in1(y,z) | -sum(x,y,u) | in1(u,z).
-in1(x,y) | in1(y,x).
-point1(x) | in1(x,x).
-line1(x) | in1(x,x).
-point1(x) | -line1(x).
-in1(x,y) | -point1(x) | -point1(y) | y = x.
-in1(x,y) | -line1(x) | -line1(y) | y = x.
-line1(x) | point1(f4(x)).
-line1(x) | in1(x,f4(x)).
-point1(x) | -line1(y) | -in1(x,y) | part1(x,x).
-line1(x) | -in1(y,x) | -in1(z,x) | -part1(y,z) | -part1(z,y) | z = y.
-line1(x) | -in1(y,x) | -in1(z,x) | -in1(u,x) | -part1(y,z) | -part1(z,u) | part1(y,u).
-part1(x,y) | point1(x).
-part1(x,y) | point1(y).
-tin1(x,y,z) | plane1(x).
-tin1(x,y,z) | line1(y).
-tin1(x,y,z) | point1(z).
-tin1(x,y,z) | in1(z,x).
-tin1(x,y,z) | in1(z,y).
-point1(x) | -point1(y) | -line1(z) | -in1(x,z) | -part1(y,x) | in1(y,z).
-point1(x) | part1(x,x).
-point1(x) | -point1(y) | -part1(x,y) | -part1(y,x) | y = x.
-point1(x) | -point1(y) | -point1(z) | -part1(x,y) | -part1(y,z) | part1(x,z).
-point1(x) | -point1(y) | -ppart(x,y) | part1(x,y).
-point1(x) | -point1(y) | -ppart(x,y) | -part1(y,x).
-point1(x) | -point1(y) | ppart(x,y) | -part1(x,y) | part1(y,x).
-point1(x) | -point1(y) | -overlaps(x,y) | point1(f5(x,y)).
-point1(x) | -point1(y) | -overlaps(x,y) | part1(f5(x,y),x).
-point1(x) | -point1(y) | -overlaps(x,y) | part1(f5(x,y),y).
-point1(x) | -point1(y) | overlaps(x,y) | -point1(z) | -part1(z,x) | -part1(z,y).
-point1(x) | -point1(y) | -disjoint(x,y) | -overlaps(x,y).
-point1(x) | -point1(y) | disjoint(x,y) | overlaps(x,y).
-point1(x) | -point1(y) | -underlaps(x,y) | point1(f6(x,y)).
-point1(x) | -point1(y) | -underlaps(x,y) | part1(x,f6(x,y)).
-point1(x) | -point1(y) | -underlaps(x,y) | part1(y,f6(x,y)).
-point1(x) | -point1(y) | underlaps(x,y) | -point1(z) | -part1(x,z) | -part1(y,z).
-point1(x) | -atomic_part(x) | -point1(y) | -part1(y,x) | y = x.
-point1(x) | atomic_part(x) | point1(f7(x)).
-point1(x) | atomic_part(x) | part1(f7(x),x).
-point1(x) | atomic_part(x) | f7(x) != x.
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | point1(f8(x,y,z)).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | overlaps(f8(x,y,z),z) | overlaps(f8(x,y,z),x) | overlaps(f8(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f8(x,y,z),z) | -overlaps(f8(x,y,z),x).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f8(x,y,z),z) | -overlaps(f8(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | -part1(u,z) | part1(u,x) | part1(u,y).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | part1(u,z) | -part1(u,x).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | part1(u,z) | -part1(u,y).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | point1(f9(x,y,z)).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | part1(f9(x,y,z),z) | part1(f9(x,y,z),x) | part1(f9(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | -part1(f9(x,y,z),z) | -part1(f9(x,y,z),x).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | -part1(f9(x,y,z),z) | -part1(f9(x,y,z),y).
-point1(x) | -point1(y) | -underlaps(x,y) | point1(f10(x,y)).
-point1(x) | -point1(y) | -underlaps(x,y) | -overlaps(z,f10(x,y)) | overlaps(z,x) | overlaps(z,y).
-point1(x) | -point1(y) | -underlaps(x,y) | overlaps(z,f10(x,y)) | -overlaps(z,x).
-point1(x) | -point1(y) | -underlaps(x,y) | overlaps(z,f10(x,y)) | -overlaps(z,y).
-point1(x) | -point1(y) | -overlaps(x,y) | point1(f11(x,y)).
-point1(x) | -point1(y) | -overlaps(x,y) | -ppart(z,f11(x,y)) | ppart(z,x).
-point1(x) | -point1(y) | -overlaps(x,y) | -ppart(z,f11(x,y)) | ppart(z,y).
-point1(x) | -point1(y) | -overlaps(x,y) | ppart(z,f11(x,y)) | -ppart(z,x) | -ppart(z,y).
-point1(x) | -point1(y) | part1(x,y) | point1(f12(x,y)).
-point1(x) | -point1(y) | part1(x,y) | part1(f12(x,y),x).
-point1(x) | -point1(y) | part1(x,y) | disjoint(f12(x,y),y).
-point1(x) | part1(x,x).
-point1(x) | -point1(y) | -part1(x,y) | -part1(y,x) | y = x.
-point1(x) | -point1(y) | -point1(z) | -part1(x,y) | -part1(y,z) | part1(x,z).
-point1(x) | -point1(y) | -ppart(x,y) | part1(x,y).
-point1(x) | -point1(y) | -ppart(x,y) | -part1(y,x).
-point1(x) | -point1(y) | ppart(x,y) | -part1(x,y) | part1(y,x).
-point1(x) | -point1(y) | -overlaps(x,y) | point1(f13(x,y)).
-point1(x) | -point1(y) | -overlaps(x,y) | part1(f13(x,y),x).
-point1(x) | -point1(y) | -overlaps(x,y) | part1(f13(x,y),y).
-point1(x) | -point1(y) | overlaps(x,y) | -point1(z) | -part1(z,x) | -part1(z,y).
-point1(x) | -point1(y) | -disjoint(x,y) | -overlaps(x,y).
-point1(x) | -point1(y) | disjoint(x,y) | overlaps(x,y).
-point1(x) | -point1(y) | -underlaps(x,y) | point1(f14(x,y)).
-point1(x) | -point1(y) | -underlaps(x,y) | part1(x,f14(x,y)).
-point1(x) | -point1(y) | -underlaps(x,y) | part1(y,f14(x,y)).
-point1(x) | -point1(y) | underlaps(x,y) | -point1(z) | -part1(x,z) | -part1(y,z).
-point1(x) | -atomic_part(x) | -point1(y) | -part1(y,x) | y = x.
-point1(x) | atomic_part(x) | point1(f15(x)).
-point1(x) | atomic_part(x) | part1(f15(x),x).
-point1(x) | atomic_part(x) | f15(x) != x.
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).
-point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | point1(f16(x,y,z)).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | overlaps(f16(x,y,z),z) | overlaps(f16(x,y,z),x) | overlaps(f16(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f16(x,y,z),z) | -overlaps(f16(x,y,z),x).
-point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f16(x,y,z),z) | -overlaps(f16(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | -part1(u,z) | part1(u,x) | part1(u,y).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | part1(u,z) | -part1(u,x).
-point1(x) | -point1(y) | -point1(z) | -prod(x,y,z) | -point1(u) | part1(u,z) | -part1(u,y).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | point1(f17(x,y,z)).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | part1(f17(x,y,z),z) | part1(f17(x,y,z),x) | part1(f17(x,y,z),y).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | -part1(f17(x,y,z),z) | -part1(f17(x,y,z),x).
-point1(x) | -point1(y) | -point1(z) | prod(x,y,z) | -part1(f17(x,y,z),z) | -part1(f17(x,y,z),y).
-in1(x,y) | in1(y,x).
-point1(x) | in1(x,x).
-line1(x) | in1(x,x).
-plane1(x) | in1(x,x).
-point1(x) | -line1(x).
-point1(x) | -plane1(x).
-plane1(x) | -line1(x).
-in1(x,y) | -point1(x) | -point1(y) | y = x.
-in1(x,y) | -line1(x) | -line1(y) | y = x.
-in1(x,y) | -plane1(x) | -plane1(y) | y = x.
-tin2(x,y,z) | -part2(u,z) | tin2(x,y,u).
-plane2(x) | -in2(y,x) | -point2(y) | tin2(f18(x,y),x,y).
-line2(x) | tin2(f19(x),x,f20(x)).
-point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | -sum(x,y,u) | in2(u,z).
-in2(x,y) | in2(y,x).
-point2(x) | in2(x,x).
-line2(x) | in2(x,x).
-point2(x) | -line2(x).
-in2(x,y) | -point2(x) | -point2(y) | y = x.
-in2(x,y) | -line2(x) | -line2(y) | y = x.
-line2(x) | point2(f21(x)).
-line2(x) | in2(x,f21(x)).
-point2(x) | -line2(y) | -in2(x,y) | part2(x,x).
-line2(x) | -in2(y,x) | -in2(z,x) | -part2(y,z) | -part2(z,y) | z = y.
-line2(x) | -in2(y,x) | -in2(z,x) | -in2(u,x) | -part2(y,z) | -part2(z,u) | part2(y,u).
-part2(x,y) | point2(x).
-part2(x,y) | point2(y).
-tin2(x,y,z) | plane2(x).
-tin2(x,y,z) | line2(y).
-tin2(x,y,z) | point2(z).
-tin2(x,y,z) | in2(z,x).
-tin2(x,y,z) | in2(z,y).
-point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -part2(y,x) | in2(y,z).
-point2(x) | part2(x,x).
-point2(x) | -point2(y) | -part2(x,y) | -part2(y,x) | y = x.
-point2(x) | -point2(y) | -point2(z) | -part2(x,y) | -part2(y,z) | part2(x,z).
-point2(x) | -point2(y) | -ppart(x,y) | part2(x,y).
-point2(x) | -point2(y) | -ppart(x,y) | -part2(y,x).
-point2(x) | -point2(y) | ppart(x,y) | -part2(x,y) | part2(y,x).
-point2(x) | -point2(y) | -overlaps(x,y) | point2(f22(x,y)).
-point2(x) | -point2(y) | -overlaps(x,y) | part2(f22(x,y),x).
-point2(x) | -point2(y) | -overlaps(x,y) | part2(f22(x,y),y).
-point2(x) | -point2(y) | overlaps(x,y) | -point2(z) | -part2(z,x) | -part2(z,y).
-point2(x) | -point2(y) | -disjoint(x,y) | -overlaps(x,y).
-point2(x) | -point2(y) | disjoint(x,y) | overlaps(x,y).
-point2(x) | -point2(y) | -underlaps(x,y) | point2(f23(x,y)).
-point2(x) | -point2(y) | -underlaps(x,y) | part2(x,f23(x,y)).
-point2(x) | -point2(y) | -underlaps(x,y) | part2(y,f23(x,y)).
-point2(x) | -point2(y) | underlaps(x,y) | -point2(z) | -part2(x,z) | -part2(y,z).
-point2(x) | -atomic_part(x) | -point2(y) | -part2(y,x) | y = x.
-point2(x) | atomic_part(x) | point2(f24(x)).
-point2(x) | atomic_part(x) | part2(f24(x),x).
-point2(x) | atomic_part(x) | f24(x) != x.
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | point2(f25(x,y,z)).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | overlaps(f25(x,y,z),z) | overlaps(f25(x,y,z),x) | overlaps(f25(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f25(x,y,z),z) | -overlaps(f25(x,y,z),x).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f25(x,y,z),z) | -overlaps(f25(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | -part2(u,z) | part2(u,x) | part2(u,y).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | part2(u,z) | -part2(u,x).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | part2(u,z) | -part2(u,y).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | point2(f26(x,y,z)).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | part2(f26(x,y,z),z) | part2(f26(x,y,z),x) | part2(f26(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | -part2(f26(x,y,z),z) | -part2(f26(x,y,z),x).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | -part2(f26(x,y,z),z) | -part2(f26(x,y,z),y).
-point2(x) | -point2(y) | -underlaps(x,y) | point2(f27(x,y)).
-point2(x) | -point2(y) | -underlaps(x,y) | -overlaps(z,f27(x,y)) | overlaps(z,x) | overlaps(z,y).
-point2(x) | -point2(y) | -underlaps(x,y) | overlaps(z,f27(x,y)) | -overlaps(z,x).
-point2(x) | -point2(y) | -underlaps(x,y) | overlaps(z,f27(x,y)) | -overlaps(z,y).
-point2(x) | -point2(y) | -overlaps(x,y) | point2(f28(x,y)).
-point2(x) | -point2(y) | -overlaps(x,y) | -ppart(z,f28(x,y)) | ppart(z,x).
-point2(x) | -point2(y) | -overlaps(x,y) | -ppart(z,f28(x,y)) | ppart(z,y).
-point2(x) | -point2(y) | -overlaps(x,y) | ppart(z,f28(x,y)) | -ppart(z,x) | -ppart(z,y).
-point2(x) | -point2(y) | part2(x,y) | point2(f29(x,y)).
-point2(x) | -point2(y) | part2(x,y) | part2(f29(x,y),x).
-point2(x) | -point2(y) | part2(x,y) | disjoint(f29(x,y),y).
-point2(x) | part2(x,x).
-point2(x) | -point2(y) | -part2(x,y) | -part2(y,x) | y = x.
-point2(x) | -point2(y) | -point2(z) | -part2(x,y) | -part2(y,z) | part2(x,z).
-point2(x) | -point2(y) | -ppart(x,y) | part2(x,y).
-point2(x) | -point2(y) | -ppart(x,y) | -part2(y,x).
-point2(x) | -point2(y) | ppart(x,y) | -part2(x,y) | part2(y,x).
-point2(x) | -point2(y) | -overlaps(x,y) | point2(f30(x,y)).
-point2(x) | -point2(y) | -overlaps(x,y) | part2(f30(x,y),x).
-point2(x) | -point2(y) | -overlaps(x,y) | part2(f30(x,y),y).
-point2(x) | -point2(y) | overlaps(x,y) | -point2(z) | -part2(z,x) | -part2(z,y).
-point2(x) | -point2(y) | -disjoint(x,y) | -overlaps(x,y).
-point2(x) | -point2(y) | disjoint(x,y) | overlaps(x,y).
-point2(x) | -point2(y) | -underlaps(x,y) | point2(f31(x,y)).
-point2(x) | -point2(y) | -underlaps(x,y) | part2(x,f31(x,y)).
-point2(x) | -point2(y) | -underlaps(x,y) | part2(y,f31(x,y)).
-point2(x) | -point2(y) | underlaps(x,y) | -point2(z) | -part2(x,z) | -part2(y,z).
-point2(x) | -atomic_part(x) | -point2(y) | -part2(y,x) | y = x.
-point2(x) | atomic_part(x) | point2(f32(x)).
-point2(x) | atomic_part(x) | part2(f32(x),x).
-point2(x) | atomic_part(x) | f32(x) != x.
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).
-point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | point2(f33(x,y,z)).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | overlaps(f33(x,y,z),z) | overlaps(f33(x,y,z),x) | overlaps(f33(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f33(x,y,z),z) | -overlaps(f33(x,y,z),x).
-point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f33(x,y,z),z) | -overlaps(f33(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | -part2(u,z) | part2(u,x) | part2(u,y).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | part2(u,z) | -part2(u,x).
-point2(x) | -point2(y) | -point2(z) | -prod(x,y,z) | -point2(u) | part2(u,z) | -part2(u,y).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | point2(f34(x,y,z)).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | part2(f34(x,y,z),z) | part2(f34(x,y,z),x) | part2(f34(x,y,z),y).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | -part2(f34(x,y,z),z) | -part2(f34(x,y,z),x).
-point2(x) | -point2(y) | -point2(z) | prod(x,y,z) | -part2(f34(x,y,z),z) | -part2(f34(x,y,z),y).
-in2(x,y) | in2(y,x).
-point2(x) | in2(x,x).
-line2(x) | in2(x,x).
-plane2(x) | in2(x,x).
-point2(x) | -line2(x).
-point2(x) | -plane2(x).
-plane2(x) | -line2(x).
-in2(x,y) | -point2(x) | -point2(y) | y = x.
-in2(x,y) | -line2(x) | -line2(y) | y = x.
-in2(x,y) | -plane2(x) | -plane2(y) | y = x.
-point3(x) | -point3(y) | -line3(z) | -in3(x,z) | -in3(y,z) | -sum(x,y,u) | in3(u,z).
-point3(x) | -point3(y) | -line3(z) | -in3(x,z) | -part3(y,x) | in3(y,z).
-point3(x) | part3(x,x).
-point3(x) | -point3(y) | -part3(x,y) | -part3(y,x) | y = x.
-point3(x) | -point3(y) | -point3(z) | -part3(x,y) | -part3(y,z) | part3(x,z).
-point3(x) | -point3(y) | -ppart(x,y) | part3(x,y).
-point3(x) | -point3(y) | -ppart(x,y) | -part3(y,x).
-point3(x) | -point3(y) | ppart(x,y) | -part3(x,y) | part3(y,x).
-point3(x) | -point3(y) | -overlaps(x,y) | point3(f35(x,y)).
-point3(x) | -point3(y) | -overlaps(x,y) | part3(f35(x,y),x).
-point3(x) | -point3(y) | -overlaps(x,y) | part3(f35(x,y),y).
-point3(x) | -point3(y) | overlaps(x,y) | -point3(z) | -part3(z,x) | -part3(z,y).
-point3(x) | -point3(y) | -disjoint(x,y) | -overlaps(x,y).
-point3(x) | -point3(y) | disjoint(x,y) | overlaps(x,y).
-point3(x) | -point3(y) | -underlaps(x,y) | point3(f36(x,y)).
-point3(x) | -point3(y) | -underlaps(x,y) | part3(x,f36(x,y)).
-point3(x) | -point3(y) | -underlaps(x,y) | part3(y,f36(x,y)).
-point3(x) | -point3(y) | underlaps(x,y) | -point3(z) | -part3(x,z) | -part3(y,z).
-point3(x) | -atomic_part(x) | -point3(y) | -part3(y,x) | y = x.
-point3(x) | atomic_part(x) | point3(f37(x)).
-point3(x) | atomic_part(x) | part3(f37(x),x).
-point3(x) | atomic_part(x) | f37(x) != x.
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | overlaps(u,z) | -overlaps(u,x).
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | overlaps(u,z) | -overlaps(u,y).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | point3(f38(x,y,z)).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | overlaps(f38(x,y,z),z) | overlaps(f38(x,y,z),x) | overlaps(f38(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | -overlaps(f38(x,y,z),z) | -overlaps(f38(x,y,z),x).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | -overlaps(f38(x,y,z),z) | -overlaps(f38(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | -part3(u,z) | part3(u,x) | part3(u,y).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | part3(u,z) | -part3(u,x).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | part3(u,z) | -part3(u,y).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | point3(f39(x,y,z)).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | part3(f39(x,y,z),z) | part3(f39(x,y,z),x) | part3(f39(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | -part3(f39(x,y,z),z) | -part3(f39(x,y,z),x).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | -part3(f39(x,y,z),z) | -part3(f39(x,y,z),y).
-in3(x,y) | in3(y,x).
-point3(x) | in3(x,x).
-line3(x) | in3(x,x).
-point3(x) | -line3(x).
-in3(x,y) | -point3(x) | -point3(y) | y = x.
-in3(x,y) | -line3(x) | -line3(y) | y = x.
-line3(x) | point3(f40(x)).
-line3(x) | in3(x,f40(x)).
-point3(x) | -line3(y) | -in3(x,y) | part3(x,x).
-line3(x) | -in3(y,x) | -in3(z,x) | -part3(y,z) | -part3(z,y) | z = y.
-line3(x) | -in3(y,x) | -in3(z,x) | -in3(u,x) | -part3(y,z) | -part3(z,u) | part3(y,u).
-part3(x,y) | point3(x).
-part3(x,y) | point3(y).
-point3(x) | -point3(y) | -underlaps(x,y) | point3(f41(x,y)).
-point3(x) | -point3(y) | -underlaps(x,y) | -overlaps(z,f41(x,y)) | overlaps(z,x) | overlaps(z,y).
-point3(x) | -point3(y) | -underlaps(x,y) | overlaps(z,f41(x,y)) | -overlaps(z,x).
-point3(x) | -point3(y) | -underlaps(x,y) | overlaps(z,f41(x,y)) | -overlaps(z,y).
-point3(x) | -point3(y) | -overlaps(x,y) | point3(f42(x,y)).
-point3(x) | -point3(y) | -overlaps(x,y) | -ppart(z,f42(x,y)) | ppart(z,x).
-point3(x) | -point3(y) | -overlaps(x,y) | -ppart(z,f42(x,y)) | ppart(z,y).
-point3(x) | -point3(y) | -overlaps(x,y) | ppart(z,f42(x,y)) | -ppart(z,x) | -ppart(z,y).
-point3(x) | -point3(y) | part3(x,y) | point3(f43(x,y)).
-point3(x) | -point3(y) | part3(x,y) | part3(f43(x,y),x).
-point3(x) | -point3(y) | part3(x,y) | disjoint(f43(x,y),y).
-point3(x) | part3(x,x).
-point3(x) | -point3(y) | -part3(x,y) | -part3(y,x) | y = x.
-point3(x) | -point3(y) | -point3(z) | -part3(x,y) | -part3(y,z) | part3(x,z).
-point3(x) | -point3(y) | -ppart(x,y) | part3(x,y).
-point3(x) | -point3(y) | -ppart(x,y) | -part3(y,x).
-point3(x) | -point3(y) | ppart(x,y) | -part3(x,y) | part3(y,x).
-point3(x) | -point3(y) | -overlaps(x,y) | point3(f44(x,y)).
-point3(x) | -point3(y) | -overlaps(x,y) | part3(f44(x,y),x).
-point3(x) | -point3(y) | -overlaps(x,y) | part3(f44(x,y),y).
-point3(x) | -point3(y) | overlaps(x,y) | -point3(z) | -part3(z,x) | -part3(z,y).
-point3(x) | -point3(y) | -disjoint(x,y) | -overlaps(x,y).
-point3(x) | -point3(y) | disjoint(x,y) | overlaps(x,y).
-point3(x) | -point3(y) | -underlaps(x,y) | point3(f45(x,y)).
-point3(x) | -point3(y) | -underlaps(x,y) | part3(x,f45(x,y)).
-point3(x) | -point3(y) | -underlaps(x,y) | part3(y,f45(x,y)).
-point3(x) | -point3(y) | underlaps(x,y) | -point3(z) | -part3(x,z) | -part3(y,z).
-point3(x) | -atomic_part(x) | -point3(y) | -part3(y,x) | y = x.
-point3(x) | atomic_part(x) | point3(f46(x)).
-point3(x) | atomic_part(x) | part3(f46(x),x).
-point3(x) | atomic_part(x) | f46(x) != x.
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | overlaps(u,z) | -overlaps(u,x).
-point3(x) | -point3(y) | -point3(z) | -sum(x,y,z) | -point3(u) | overlaps(u,z) | -overlaps(u,y).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | point3(f47(x,y,z)).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | overlaps(f47(x,y,z),z) | overlaps(f47(x,y,z),x) | overlaps(f47(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | -overlaps(f47(x,y,z),z) | -overlaps(f47(x,y,z),x).
-point3(x) | -point3(y) | -point3(z) | sum(x,y,z) | -overlaps(f47(x,y,z),z) | -overlaps(f47(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | -part3(u,z) | part3(u,x) | part3(u,y).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | part3(u,z) | -part3(u,x).
-point3(x) | -point3(y) | -point3(z) | -prod(x,y,z) | -point3(u) | part3(u,z) | -part3(u,y).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | point3(f48(x,y,z)).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | part3(f48(x,y,z),z) | part3(f48(x,y,z),x) | part3(f48(x,y,z),y).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | -part3(f48(x,y,z),z) | -part3(f48(x,y,z),x).
-point3(x) | -point3(y) | -point3(z) | prod(x,y,z) | -part3(f48(x,y,z),z) | -part3(f48(x,y,z),y).
-PC(x,y,z) | plane1(x) | plane2(x).
-PC(x,y,z) | plane1(x) | line2(y).
-PC(x,y,z) | plane1(x) | point2(z).
-PC(x,y,z) | plane1(x) | in2(z,x).
-PC(x,y,z) | plane1(x) | tin2(x,y,z).
-PC(x,y,z) | plane1(x) | in2(z,y).
-PC(x,y,z) | line1(y) | plane2(x).
-PC(x,y,z) | line1(y) | line2(y).
-PC(x,y,z) | line1(y) | point2(z).
-PC(x,y,z) | line1(y) | in2(z,x).
-PC(x,y,z) | line1(y) | tin2(x,y,z).
-PC(x,y,z) | line1(y) | in2(z,y).
-PC(x,y,z) | point1(z) | plane2(x).
-PC(x,y,z) | point1(z) | line2(y).
-PC(x,y,z) | point1(z) | point2(z).
-PC(x,y,z) | point1(z) | in2(z,x).
-PC(x,y,z) | point1(z) | tin2(x,y,z).
-PC(x,y,z) | point1(z) | in2(z,y).
-PC(x,y,z) | in1(z,x) | plane2(x).
-PC(x,y,z) | in1(z,x) | line2(y).
-PC(x,y,z) | in1(z,x) | point2(z).
-PC(x,y,z) | in1(z,x) | in2(z,x).
-PC(x,y,z) | in1(z,x) | tin2(x,y,z).
-PC(x,y,z) | in1(z,x) | in2(z,y).
-PC(x,y,z) | tin1(x,y,z) | plane2(x).
-PC(x,y,z) | tin1(x,y,z) | line2(y).
-PC(x,y,z) | tin1(x,y,z) | point2(z).
-PC(x,y,z) | tin1(x,y,z) | in2(z,x).
-PC(x,y,z) | tin1(x,y,z) | tin2(x,y,z).
-PC(x,y,z) | tin1(x,y,z) | in2(z,y).
-PC(x,y,z) | in1(z,y) | plane2(x).
-PC(x,y,z) | in1(z,y) | line2(y).
-PC(x,y,z) | in1(z,y) | point2(z).
-PC(x,y,z) | in1(z,y) | in2(z,x).
-PC(x,y,z) | in1(z,y) | tin2(x,y,z).
-PC(x,y,z) | in1(z,y) | in2(z,y).
PC(x,y,z) | -plane1(x) | -line1(y) | -point1(z) | -in1(z,x) | -tin1(x,y,z) | -in1(z,y).
PC(x,y,z) | -plane2(x) | -line2(y) | -point2(z) | -in2(z,x) | -tin2(x,y,z) | -in2(z,y).
-PRE(x,y) | in1(y,x) | in2(y,x) | in3(y,x).
-PRE(x,y) | in1(y,x) | in2(y,x) | point3(y).
-PRE(x,y) | in1(y,x) | in2(y,x) | line3(x).
-PRE(x,y) | in1(y,x) | point2(y) | in3(y,x).
-PRE(x,y) | in1(y,x) | point2(y) | point3(y).
-PRE(x,y) | in1(y,x) | point2(y) | line3(x).
-PRE(x,y) | in1(y,x) | line2(x) | plane2(x) | in3(y,x).
-PRE(x,y) | in1(y,x) | line2(x) | plane2(x) | point3(y).
-PRE(x,y) | in1(y,x) | line2(x) | plane2(x) | line3(x).
-PRE(x,y) | point1(y) | in2(y,x) | in3(y,x).
-PRE(x,y) | point1(y) | in2(y,x) | point3(y).
-PRE(x,y) | point1(y) | in2(y,x) | line3(x).
-PRE(x,y) | point1(y) | point2(y) | in3(y,x).
-PRE(x,y) | point1(y) | point2(y) | point3(y).
-PRE(x,y) | point1(y) | point2(y) | line3(x).
-PRE(x,y) | point1(y) | line2(x) | plane2(x) | in3(y,x).
-PRE(x,y) | point1(y) | line2(x) | plane2(x) | point3(y).
-PRE(x,y) | point1(y) | line2(x) | plane2(x) | line3(x).
-PRE(x,y) | line1(x) | plane1(x) | in2(y,x) | in3(y,x).
-PRE(x,y) | line1(x) | plane1(x) | in2(y,x) | point3(y).
-PRE(x,y) | line1(x) | plane1(x) | in2(y,x) | line3(x).
-PRE(x,y) | line1(x) | plane1(x) | point2(y) | in3(y,x).
-PRE(x,y) | line1(x) | plane1(x) | point2(y) | point3(y).
-PRE(x,y) | line1(x) | plane1(x) | point2(y) | line3(x).
-PRE(x,y) | line1(x) | plane1(x) | line2(x) | plane2(x) | in3(y,x).
-PRE(x,y) | line1(x) | plane1(x) | line2(x) | plane2(x) | point3(y).
-PRE(x,y) | line1(x) | plane1(x) | line2(x) | plane2(x) | line3(x).
PRE(x,y) | -in1(y,x) | -point1(y) | -line1(x).
PRE(x,y) | -in1(y,x) | -point1(y) | -plane1(x).
PRE(x,y) | -in2(y,x) | -point2(y) | -line2(x).
PRE(x,y) | -in2(y,x) | -point2(y) | -plane2(x).
PRE(x,y) | -in3(y,x) | -point3(y) | -line3(x).
-T(x) | point1(x).
T(x) | -point1(x).
-T(x) | point2(x).
T(x) | -point2(x).
-T(x) | point3(x).
T(x) | -point3(x).
-ED(x) | plane1(x).
ED(x) | -plane1(x).
-ED(x) | line2(x).
ED(x) | -line2(x).
-ED(x) | L_1(x).
ED(x) | -L_1(x).
-PD(x) | line1(x).
PD(x) | -line1(x).
-PD(x) | plane2(x).
PD(x) | -plane2(x).
-PD(x) | L_2(x).
PD(x) | -L_2(x).
-Q(x) | line3(x).
Q(x) | -line3(x).
-Q(x) | L_3(x).
Q(x) | -L_3(x).
-P(x,y) | part1(x,y).
P(x,y) | -part1(x,y).
-P(x,y) | part2(x,y).
P(x,y) | -part2(x,y).
-P(x,y) | part3(x,y).
P(x,y) | -part3(x,y).
PC(c1,c2,c3).
-PRE(c1,c3) | -PRE(c2,c3).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

mace4_sig_handler: condition 2
============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 29.54 seconds).
Ground clauses: seen=2608, kept=2548.
Selections=2278387, assignments=4556733, propagations=14809250, current_models=0.
Rewrite_terms=9113168, rewrite_bools=142396670, indexes=9113156.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

User_CPU=29.54, System_CPU=0.97, Wall_clock=32.

Exiting with failure.

Process 13394 exit (mace_sigint) Tue Oct  1 10:10:49 2013
The process finished Tue Oct  1 10:10:49 2013
