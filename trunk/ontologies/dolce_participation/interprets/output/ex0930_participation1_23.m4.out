============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 15954 was started by cchui on stl-ws4.mie.utoronto.ca,
Mon Sep 30 23:53:42 2013
The command was "mace4 -c -t 120 -s 120 -n 2 -N 20 -f test/p9/dolce_participation.p9 test/p9/dolce_participation2ideal_cem_plane_downward_in_foliation.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/ex0930_participation1_23.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_participation.p9


formulas(sos).
(all x all y all t (PC(x,y,t) -> ED(x) & PD(y) & T(t))).
(all x all t (PD(x) & PRE(x,t) -> (exists y PC(y,x,t)))).
(all x (ED(x) -> (exists y exists t PC(x,y,t)))).
(all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t (PC(x,y,t) <-> (all t1 (P(t1,t) -> PC(x,y,t1))))).
end_of_list.

% Reading from file test/p9/dolce_participation2ideal_cem_plane_downward_in_foliation.p9


formulas(sos).
(all x (point1(x) <-> T(x))).
(all x (line1(x) <-> PD(x))).
(all x (plane1(x) <-> ED(x))).
(all x all y (in1(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))).
(all x all y all z (tin1(x,y,z) <-> PC(x,y,z))).
(all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/ex0930_participation1_23.p9


formulas(goals).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))).
end_of_list.

% From the command line: assign(max_seconds, 120).

% From the command line: assign(max_seconds_per, 120).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (PC(x,y,t) -> ED(x) & PD(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all t (PD(x) & PRE(x,t) -> (exists y PC(y,x,t)))) # label(non_clause).  [assumption].
3 (all x (ED(x) -> (exists y exists t PC(x,y,t)))) # label(non_clause).  [assumption].
4 (all x all y all t (PC(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
5 (all x all y all t (PC(x,y,t) <-> (all t1 (P(t1,t) -> PC(x,y,t1))))) # label(non_clause).  [assumption].
6 (all x (point1(x) <-> T(x))) # label(non_clause).  [assumption].
7 (all x (line1(x) <-> PD(x))) # label(non_clause).  [assumption].
8 (all x (plane1(x) <-> ED(x))) # label(non_clause).  [assumption].
9 (all x all y (in1(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
10 (all x all y all z (tin1(x,y,z) <-> PC(x,y,z))) # label(non_clause).  [assumption].
11 (all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
12 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
13 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
14 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
15 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
16 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
17 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
18 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
19 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
21 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
22 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
23 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
24 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
25 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
26 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
27 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
28 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
29 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
30 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
31 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
32 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
33 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
34 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
35 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
36 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
37 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
38 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
39 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
40 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
41 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
42 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
43 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
44 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
45 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
46 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
47 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
48 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
49 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
50 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
51 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
52 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
53 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
54 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
55 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
56 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
57 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
58 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
59 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
60 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
61 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
62 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
63 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
64 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
65 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
66 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
67 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
68 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
69 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
70 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
71 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
72 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
73 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
74 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
75 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
76 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
77 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
78 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
79 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
80 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
81 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
82 (all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-PC(x,y,z) | ED(x).
-PC(x,y,z) | PD(y).
-PC(x,y,z) | T(z).
-PD(x) | -PRE(x,y) | PC(f1(x,y),x,y).
-ED(x) | PC(x,f2(x),f3(x)).
-PC(x,y,z) | PRE(x,z).
-PC(x,y,z) | PRE(y,z).
-PC(x,y,z) | -P(u,z) | PC(x,y,u).
PC(x,y,z) | P(f4(x,y,z),z).
PC(x,y,z) | -PC(x,y,f4(x,y,z)).
-point1(x) | T(x).
point1(x) | -T(x).
-line1(x) | PD(x).
line1(x) | -PD(x).
-plane1(x) | ED(x).
plane1(x) | -ED(x).
-in1(x,y) | PRE(x,y) | PRE(y,x) | y = x.
-in1(x,y) | PRE(x,y) | T(x) | y = x.
-in1(x,y) | PRE(x,y) | ED(y) | PD(y) | Q(y) | y = x.
-in1(x,y) | T(y) | PRE(y,x) | y = x.
-in1(x,y) | T(y) | T(x) | y = x.
-in1(x,y) | T(y) | ED(y) | PD(y) | Q(y).
-in1(x,y) | ED(x) | PD(x) | Q(x) | PRE(y,x) | y = x.
-in1(x,y) | ED(x) | PD(x) | Q(x) | T(x) | y = x.
-in1(x,y) | ED(x) | PD(x) | Q(x) | ED(y) | PD(y) | Q(y) | y = x.
in1(x,y) | -PRE(x,y) | -T(y) | -ED(x).
in1(x,y) | -PRE(x,y) | -T(y) | -PD(x).
in1(x,y) | -PRE(x,y) | -T(y) | -Q(x).
in1(x,y) | -PRE(y,x) | -T(x) | -ED(y).
in1(x,y) | -PRE(y,x) | -T(x) | -PD(y).
in1(x,y) | -PRE(y,x) | -T(x) | -Q(y).
in1(x,y) | y != x | -ED(y).
in1(x,y) | y != x | -PD(y).
in1(x,y) | y != x | -Q(y).
in1(x,y) | y != x | -T(y).
-tin1(x,y,z) | PC(x,y,z).
tin1(x,y,z) | -PC(x,y,z).
-part1(x,y) | P(x,y).
-part1(x,y) | T(x).
-part1(x,y) | T(y).
part1(x,y) | -P(x,y) | -T(x) | -T(y).
-L_1(x) | ED(x).
L_1(x) | -ED(x).
-L_2(x) | PD(x).
L_2(x) | -PD(x).
-L_3(x) | Q(x).
L_3(x) | -Q(x).
-ED(x) | PRE(x,f5(x)).
-PD(x) | PRE(x,f5(x)).
-Q(x) | PRE(x,f5(x)).
-PRE(x,y) | -P(z,y) | PRE(x,z).
-PRE(x,y) | T(y).
-PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).
-P(x,y) | T(y).
-P(x,y) | -T(x) | T(y).
-P(x,y) | T(x) | -T(y).
-T(x) | P(x,x).
-T(x) | -T(y) | -P(x,y) | -P(y,x) | y = x.
-T(x) | -T(y) | -P(x,y) | -P(y,z) | P(x,z).
-T(x) | -T(y) | P(x,y) | T(f6(x,y)).
-T(x) | -T(y) | P(x,y) | P(f6(x,y),x).
-T(x) | -T(y) | P(x,y) | -O(f6(x,y),y).
-T(x) | -T(y) | P(x,y) | P(f7(x,y),x).
-T(x) | -T(y) | P(x,y) | DJ(f7(x,y),y).
-T(x) | -T(y) | P(x,y) | T(f7(x,y)).
-T(x) | -T(y) | -PP(x,y) | P(x,y).
-T(x) | -T(y) | -PP(x,y) | -P(y,x).
-T(x) | -T(y) | PP(x,y) | -P(x,y) | P(y,x).
-T(x) | -T(y) | -O(x,y) | P(f8(x,y),x).
-T(x) | -T(y) | -O(x,y) | P(f8(x,y),y).
-T(x) | -T(y) | -O(x,y) | T(f8(x,y)).
-T(x) | -T(y) | O(x,y) | -P(z,x) | -P(z,y) | -T(z).
-T(x) | -T(y) | -DJ(x,y) | -O(x,y).
-T(x) | -T(y) | DJ(x,y) | O(x,y).
-T(x) | -T(y) | -U(x,y) | P(x,f9(x,y)).
-T(x) | -T(y) | -U(x,y) | P(y,f9(x,y)).
-T(x) | -T(y) | -U(x,y) | T(f9(x,y)).
-T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).
-AtP(x) | T(x).
-AtP(x) | -T(y) | -P(y,x) | y = x.
AtP(x) | -T(x) | T(f10(x)).
AtP(x) | -T(x) | P(f10(x),x).
AtP(x) | -T(x) | f10(x) != x.
-T(x) | -T(y) | -U(x,y) | T(f11(x,y)).
-T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f11(x,y)) | O(z,x) | O(z,y).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f11(x,y)) | -O(z,x).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f11(x,y)) | -O(z,y).
-T(x) | -T(y) | -O(x,y) | T(f12(x,y)).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f12(x,y)) | PP(z,x).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f12(x,y)) | PP(z,y).
-T(x) | -T(y) | -O(x,y) | -T(z) | PP(z,f12(x,y)) | -PP(z,x) | -PP(z,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f13(x,y,z)).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f13(x,y,z),z) | O(f13(x,y,z),x) | O(f13(x,y,z),y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f13(x,y,z),z) | -O(f13(x,y,z),x).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f13(x,y,z),z) | -O(f13(x,y,z),y).
-ED(x) | PT(x).
-PD(x) | PT(x).
-Q(x) | PT(x).
-AB(x) | PT(x).
-PED(x) | ED(x).
-NPED(x) | ED(x).
-AS(x) | ED(x).
-EV(x) | PD(x).
-STV(x) | PD(x).
-TQ(x) | Q(x).
-PQ(x) | Q(x).
-AQ(x) | Q(x).
-R(x) | AB(x).
-M(x) | PED(x).
-F(x) | PED(x).
-POB(x) | PED(x).
-NPOB(x) | NPED(x).
-ACH(x) | EV(x).
-ACC(x) | EV(x).
-ST(x) | STV(x).
-PRO(x) | STV(x).
-TL(x) | TQ(x).
-SL(x) | PQ(x).
-TR(x) | R(x).
-PR(x) | R(x).
-AR(x) | R(x).
-APO(x) | POB(x).
-NAPO(x) | POB(x).
-MOB(x) | NPOB(x).
-SOB(x) | NPOB(x).
-T(x) | TR(x).
-S(x) | PR(x).
-ASO(x) | SOB(x).
-NASO(x) | SOB(x).
-SAG(x) | ASO(x).
-SC(x) | ASO(x).
-PT(x) | ED(x) | PD(x) | Q(x) | AB(x).
PT(x) | -ED(x).
PT(x) | -PD(x).
PT(x) | -Q(x).
PT(x) | -AB(x).
-ED(x) | -PD(x).
-ED(x) | -Q(x).
-ED(x) | -AB(x).
-PD(x) | -Q(x).
-PD(x) | -AB(x).
-Q(x) | -AB(x).
-ED(x) | PED(x) | NPED(x) | AS(x).
ED(x) | -PED(x).
ED(x) | -NPED(x).
ED(x) | -AS(x).
-PED(x) | -NPED(x).
-PED(x) | -AS(x).
-NPED(x) | -AS(x).
-PD(x) | EV(x) | STV(x).
PD(x) | -EV(x).
PD(x) | -STV(x).
-EV(x) | -STV(x).
-Q(x) | TQ(x) | PQ(x) | AQ(x).
Q(x) | -TQ(x).
Q(x) | -PQ(x).
Q(x) | -AQ(x).
-TQ(x) | -PQ(x).
-TQ(x) | -AQ(x).
-PQ(x) | -AQ(x).
-PED(x) | M(x) | F(x) | POB(x).
PED(x) | -M(x).
PED(x) | -F(x).
PED(x) | -POB(x).
-M(x) | -F(x).
-M(x) | -POB(x).
-F(x) | -POB(x).
-EV(x) | ACH(x) | ACC(x).
EV(x) | -ACH(x).
EV(x) | -ACC(x).
-ACH(x) | -ACC(x).
-STV(x) | ST(x) | PRO(x).
STV(x) | -ST(x).
STV(x) | -PRO(x).
-ST(x) | -PRO(x).
-R(x) | TR(x) | PR(x) | AR(x).
R(x) | -TR(x).
R(x) | -PR(x).
R(x) | -AR(x).
-TR(x) | -PR(x).
-TR(x) | -AR(x).
-PR(x) | -AR(x).
-POB(x) | APO(x) | NAPO(x).
POB(x) | -APO(x).
POB(x) | -NAPO(x).
-APO(x) | -NAPO(x).
-NPOB(x) | MOB(x) | SOB(x).
NPOB(x) | -MOB(x).
NPOB(x) | -SOB(x).
-MOB(x) | -SOB(x).
-SOB(x) | ASO(x) | NASO(x).
SOB(x) | -ASO(x).
SOB(x) | -NASO(x).
-ASO(x) | -NASO(x).
-ASO(x) | SAG(x) | SC(x).
ASO(x) | -SAG(x).
ASO(x) | -SC(x).
-SAG(x) | -SC(x).
point1(c1).
point1(c2).
point1(c3).
part1(c1,c2).
part1(c2,c3).
-part1(c1,c3).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=714, kept=686.
Selections=1, assignments=1, propagations=74, current_models=0.
Rewrite_terms=8, rewrite_bools=915, indexes=3.
Rules_from_neg_clauses=2, cross_offs=2.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=1845, kept=1791.
Selections=2, assignments=3, propagations=238, current_models=0.
Rewrite_terms=13, rewrite_bools=3445, indexes=8.
Rules_from_neg_clauses=2, cross_offs=17.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=4038, kept=3950.
Selections=3, assignments=6, propagations=293, current_models=0.
Rewrite_terms=13, rewrite_bools=6240, indexes=6.
Rules_from_neg_clauses=0, cross_offs=48.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=7851, kept=7721.
Selections=3, assignments=6, propagations=383, current_models=0.
Rewrite_terms=13, rewrite_bools=10397, indexes=6.
Rules_from_neg_clauses=0, cross_offs=60.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.10 seconds).
Ground clauses: seen=13962, kept=13782.
Selections=3, assignments=6, propagations=497, current_models=0.
Rewrite_terms=13, rewrite_bools=16195, indexes=6.
Rules_from_neg_clauses=0, cross_offs=72.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 0.18 seconds).
Ground clauses: seen=23169, kept=22931.
Selections=3, assignments=6, propagations=635, current_models=0.
Rewrite_terms=13, rewrite_bools=23904, indexes=6.
Rules_from_neg_clauses=0, cross_offs=84.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

============================== STATISTICS ============================

For domain size 8.

Current CPU time: 0.00 seconds (total CPU time: 0.31 seconds).
Ground clauses: seen=36390, kept=36086.
Selections=3, assignments=6, propagations=797, current_models=0.
Rewrite_terms=13, rewrite_bools=33794, indexes=6.
Rules_from_neg_clauses=0, cross_offs=96.

============================== end of statistics =====================

============================== DOMAIN SIZE 9 =========================

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 0.52 seconds).
Ground clauses: seen=54663, kept=54285.
Selections=3, assignments=6, propagations=983, current_models=0.
Rewrite_terms=13, rewrite_bools=46135, indexes=6.
Rules_from_neg_clauses=0, cross_offs=108.

============================== end of statistics =====================

============================== DOMAIN SIZE 10 ========================

============================== STATISTICS ============================

For domain size 10.

Current CPU time: 0.00 seconds (total CPU time: 0.83 seconds).
Ground clauses: seen=79146, kept=78686.
Selections=3, assignments=6, propagations=1193, current_models=0.
Rewrite_terms=13, rewrite_bools=61197, indexes=6.
Rules_from_neg_clauses=0, cross_offs=120.

============================== end of statistics =====================

============================== DOMAIN SIZE 11 ========================

============================== STATISTICS ============================

For domain size 11.

Current CPU time: 0.00 seconds (total CPU time: 1.28 seconds).
Ground clauses: seen=111117, kept=110567.
Selections=3, assignments=6, propagations=1427, current_models=0.
Rewrite_terms=13, rewrite_bools=79250, indexes=6.
Rules_from_neg_clauses=0, cross_offs=132.

============================== end of statistics =====================

============================== DOMAIN SIZE 12 ========================

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 1.89 seconds).
Ground clauses: seen=151974, kept=151326.
Selections=3, assignments=6, propagations=1685, current_models=0.
Rewrite_terms=13, rewrite_bools=100564, indexes=6.
Rules_from_neg_clauses=0, cross_offs=144.

============================== end of statistics =====================

============================== DOMAIN SIZE 13 ========================

============================== STATISTICS ============================

For domain size 13.

Current CPU time: 0.00 seconds (total CPU time: 2.72 seconds).
Ground clauses: seen=203235, kept=202481.
Selections=3, assignments=6, propagations=1967, current_models=0.
Rewrite_terms=13, rewrite_bools=125409, indexes=6.
Rules_from_neg_clauses=0, cross_offs=156.

============================== end of statistics =====================

============================== DOMAIN SIZE 14 ========================

============================== STATISTICS ============================

For domain size 14.

Current CPU time: 0.00 seconds (total CPU time: 3.82 seconds).
Ground clauses: seen=266538, kept=265670.
Selections=3, assignments=6, propagations=2273, current_models=0.
Rewrite_terms=13, rewrite_bools=154055, indexes=6.
Rules_from_neg_clauses=0, cross_offs=168.

============================== end of statistics =====================

============================== DOMAIN SIZE 15 ========================

============================== STATISTICS ============================

For domain size 15.

Current CPU time: 0.00 seconds (total CPU time: 5.24 seconds).
Ground clauses: seen=343641, kept=342651.
Selections=3, assignments=6, propagations=2603, current_models=0.
Rewrite_terms=13, rewrite_bools=186772, indexes=6.
Rules_from_neg_clauses=0, cross_offs=180.

============================== end of statistics =====================

============================== DOMAIN SIZE 16 ========================

============================== STATISTICS ============================

For domain size 16.

Current CPU time: 0.00 seconds (total CPU time: 7.06 seconds).
Ground clauses: seen=436422, kept=435302.
Selections=3, assignments=6, propagations=2957, current_models=0.
Rewrite_terms=13, rewrite_bools=223830, indexes=6.
Rules_from_neg_clauses=0, cross_offs=192.

============================== end of statistics =====================

============================== DOMAIN SIZE 17 ========================

mace4_sig_handler: condition 2
============================== STATISTICS ============================

For domain size 17.

Current CPU time: 0.00 seconds (total CPU time: 7.75 seconds).
Ground clauses: seen=294395, kept=293136.
Selections=0, assignments=0, propagations=0, current_models=0.
Rewrite_terms=0, rewrite_bools=0, indexes=0.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

User_CPU=7.75, System_CPU=0.06, Wall_clock=8.

Exiting with failure.

Process 15954 exit (mace_sigint) Mon Sep 30 23:53:50 2013
The process finished Mon Sep 30 23:53:50 2013
