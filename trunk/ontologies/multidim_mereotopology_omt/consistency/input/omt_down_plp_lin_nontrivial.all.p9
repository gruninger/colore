%axioms from module omt//consistency/p9/omt_down_plp_lin_nontrivial.p9
%----------------------------------

% Automatically generated from CL/KIF
formulas(sos).
% Module http://colore.oor.net/multidim_mereotopology_omt/consistency/omt_down_plp_lin_nontrivial.clif
%imports("http://colore.oor.net/multidim_mereotopology_omt/omt_down_plp_lin.clif").
 exists p1 exists p2 exists p3 exists p4 exists l1 exists l2 exists l3 exists l4 exists a1 exists z (Pt(p1) & Pt(p2) & Pt(p3) & Pt(p4) & -((p1 = p2)) & -((p1 = p3)) & -((p1 = p4)) & -((p2 = p3)) & -((p2 = p4)) & -((p3 = p4)) & L(l1) & L(l2) & L(l3) & L(l4) & -((l1 = l2)) & -((l1 = l3)) & -((l1 = l4)) & -((l2 = l3)) & -((l2 = l4)) & -((l3 = l4)) & Pl(a1) & Cont(p1, a1) & Cont(p2, a1) & Cont(p3, a1) & Cont(p4, a1) & Cont(l1, a1) & Cont(l2, a1) & Cont(l3, a1) & Cont(l4, a1) & ZEX(z)).


%axioms from module omt/p9/omt_down_plp_lin.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_omt/omt_down_plp_lin.clif
%imports("http://colore.oor.net/multidim_mereotopology_omt/omt_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_plp_lin.clif").


%axioms from module omt/p9/omt_down.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_omt/omt_down.clif
%imports("btw/btw").
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/connected.clif").
% 'axioms relating incidence and betweenness'
% 'OMT-A1'
 all r all x all y all z ((Btw(r, x, y, z) -> Con(r) & Cont(x, r) & Cont(y, r) & Cont(z, r) & -(C(x, y)) & -(C(y, z)) & -(C(x, z)))).
% 'OMT-A2'
 all r all v all x all y all z ((Btw(r, x, y, z) & Cont(v, r) & Con(v) & C(v, x) & C(v, z) -> C(v, y))).
% 'OMT-A3'
 all x ((Max(x) -> Con(x))).


%axioms from module codi/p9/codi_plp_lin.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_plp_lin.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_pl_lin.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_plp_slin.clif").


%axioms from module btw/p9/btw.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module btw/btw
%imports("btw/btw_basic").
% 'basic axioms of quaternary betweenness extended by separability'
% 'B-A6: separation property'
 all r all a all b all c all x ((Btw(r, a, x, b) & Btw(r, a, x, c) -> -(Btw(r, b, x, c)))).


%axioms from module codi/p9/codi_down.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_int.clif").
% 'Closure under differences'
% 'Dif-A1: difference is of same dimension'
 all x all y ((-(ZEX(difference(x, y))) -> EqDim(x, difference(x, y)))).
% 'Dif-A2: difference with a entity of lower dimension'
 all x all y ((LESS(y, x) -> (x = difference(x, y)))).
% 'Dif-A3a: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & Cont(z, x) & LESS(intersection(z, y), z) -> Cont(z, difference(x, y)))).
% 'Dif-A3b: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & Cont(z, difference(x, y)) -> Cont(z, x))).
% 'Dif-A3c: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & P(z, difference(x, y)) -> LESS(intersection(z, y), z))).
% 'Dif-A4: zero difference only for contained entities or for zero entity'
 all x all y ((ZEX(difference(x, y)) <-> ZEX(x) | Cont(x, y))).


%axioms from module codi/p9/codi.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_linear.clif").
%imports("http://colore.oor.net/multidim_mereotopology_cont/cont_c.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/po.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/inc.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/sc.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/min_max_in_dim.clif").


%axioms from module codi//defs/p9/connected.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/con.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif").
% 'Defining when an entity is self-connected'
% 'Con-D: definition of connectedness'
 all x ((Con(x) <->  all y ((PP(y, x) -> SC(y, difference(x, y)))))).


%axioms from module codi/p9/codi_pl_lin.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_pl_lin.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_pl_slin.clif").
% 'PL-A3: Line Axiom, Part II'
 all p all q ((Pt(p) & Pt(q) & -((p = q)) ->  exists l (L(l) & Cont(p, l) & Cont(q, l)))).


%axioms from module codi/p9/codi_plp_slin.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_plp_slin.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_plp.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_pl_slin.clif").
% 'PLP-A1: Plane Axiom, Part I'
 all p all q all r ((Pt(p) & Pt(q) & Pt(r) & -((p = q)) & -((p = r)) & -((q = r)) &  all l ((L(l) -> -(Cont(p, l)) | -(Cont(q, l)) | -(Cont(r, l)))) ->  exists x (Pl(x) & Cont(p, x) & Cont(q, x) & Cont(r, x)))).
% 'PLP-A2: Plane Axiom, Part II'
 all p all q all r all x all y ((Pt(p) & Pt(q) & Pt(r) & -((p = q)) & -((p = r)) & -((q = r)) &  all l ((L(l) -> -(Cont(p, l)) | -(Cont(q, l)) | -(Cont(r, l)))) & Pl(x) & Pl(y) & Cont(p, x) & Cont(q, x) & Cont(r, x) & Cont(p, y) & Cont(q, y) & Cont(r, y) -> (x = y))).
% 'PLP-A3: Plane Existence Axiom'
 all x ((Pl(x) ->  exists p exists q exists r (Pt(p) & Pt(q) & Pt(r) & -((p = q)) & -((p = r)) & -((q = r)) &  all l ((L(l) -> -(Cont(p, l)) | -(Cont(q, l)) | -(Cont(r, l)))) & Pl(x) & Cont(p, x) & Cont(q, x) & Cont(r, x)))).
% 'PLP-A4: Line-Plane Intersection Axiom'
 all x all l all p all q ((Pl(x) & L(l) & Pt(p) & Pt(q) & -((p = q)) & Cont(p, l) & Cont(q, l) & Cont(p, x) & Cont(q, x) -> Cont(l, x))).


%axioms from module btw/p9/btw_basic.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module btw/btw_basic
% 'basic axioms of quaternary betweenness'
% 'B-A1: strong = irreflexive'
 all r all a all b all c ((Btw(r, a, b, c) -> -((a = b)) & -((a = c)) & -((b = c)))).
% 'B-A2: outer symmetry'
 all r all a all b all c ((Btw(r, a, b, c) -> Btw(r, c, b, a))).
% 'B-A3: strict, i.e. acyclic'
 all r all a all b all c ((Btw(r, a, b, c) -> -(Btw(r, a, c, b)))).
% 'Huntington postulates 4-8 concern orderability'
% 'B-A4: outer transitivity'
 all r all a all b all x all y ((Btw(r, x, a, b) & Btw(r, a, b, y) -> Btw(r, x, a, y))).
% 'B-A5: inner transitivity'
 all r all a all b all x all y ((Btw(r, x, a, b) & Btw(r, a, y, b) -> Btw(r, x, a, y))).


%axioms from module codi/p9/codi_int.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_int.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_linear.clif").
%imports("http://colore.oor.net/multidim_mereotopology_zex/zex.clif").
% 'Int-A1: disconnected entities have empty intersection'
 all x all y ((-(C(x, y)) <-> ZEX(intersection(x, y)))).
% 'Int-A2: the intersection is contained in the intersecting entities (also ensures the intersection is of no greater dimension than necessary)'
 all x all y ((-(ZEX(intersection(x, y))) -> Cont(intersection(x, y), x))).
% 'Int-A3: the intersection is of greatest possible dimension (determines the dimension of the intersection)'
 all x all y all z ((Cont(z, x) & Cont(z, y) -> LEQ(z, intersection(x, y)))).
% 'Int-A4: the intersection contains everything of the greatest possible dimension (and whatever those things contain)'
 all x all y all z ((Cont(z, x) & Cont(z, y) & EqDim(z, intersection(x, y)) <-> P(z, intersection(x, y)))).


%axioms from module codi/p9/codi_linear.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_linear.clif
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif").
%imports("http://colore.oor.net/multidim_mereotopology_cont/cont_c.clif").
% 'relationship between dimension and containment'
% 'CD-A1: containment requires that the contained entity has a dimension that is lower or equal to the entity containing it'
 all x all y ((Cont(x, y) -> LESS(x, y) | EqDim(x, y))).


%axioms from module cont/p9/cont_c.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_cont/cont_c.clif
%imports("http://colore.oor.net/multidim_mereotopology_cont/cont_basic.clif").
% 'C-D: definition of contact in terms of containment'
 all x all y ((C(x, y) <->  exists z (Cont(z, x) & Cont(z, y)))).


%axioms from module codi//defs/p9/ep.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif
% 'basic axioms of traditional parthood (parthood of equidimensional entities) which is a non-strict partial order'
% 'parthood holds between two entities of the same spatial dimension'
% 'EP-D: definition of parthood'
 all x all y ((P(x, y) <-> Cont(x, y) & EqDim(x, y))).


%axioms from module codi//defs/p9/epp.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'EPP-D: definition of proper parthood'
 all x all y ((PP(x, y) <-> P(x, y) & -((x = y)))).


%axioms from module codi//defs/p9/po.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/po.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'PO-D: partial overlap (strong contact)'
 all x all y ((PO(x, y) <->  exists z (P(z, x) & P(z, y)))).


%axioms from module codi//defs/p9/inc.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/inc.clif
% 'basic axioms of incidence (two entities occupy some same space. It is reserved for entities of differing dimensions. It is a variant of contact.'
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'Inc-D: incidence holds if and only if some entity of the dimension as the lower of the two incident entities is shared'
 all x all y ((Inc(x, y) <->  exists z (LESS(z, x) & Cont(z, x) & P(z, y)) |  exists z (LESS(z, y) & Cont(z, y) & P(z, x)))).


%axioms from module codi//defs/p9/sc.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/sc.clif
% 'SC-D: superficial (weak) contact (contact is of a lesser dimension than either involved entity) - prover9 file needs extra parentheses'
 all x all y ((SC(x, y) <->  exists z (Cont(z, x) & Cont(z, y)) &  all z ((Cont(z, x) & Cont(z, y) -> LESS(z, x) & LESS(z, y))))).


%axioms from module codi//defs/p9/min_max_in_dim.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/min_max_in_dim.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif").
% 'definitional extension'
% 'ME-D1: defining maximal entities of a dimension'
 all x ((Max(x) <-> -(ZEX(x)) &  all y (-(PP(x, y))))).
% 'ME-D2: defining minimal entities of a dimension'
 all x ((Min(x) <-> -(ZEX(x)) &  all y (-(PP(y, x))))).


%axioms from module codi/p9/codi_pl_slin.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_pl_slin.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_pl.clif").
% 'PL-A2: Line Axiom, Part I'
 all l all m all p all q ((L(l) & L(m) & Pt(p) & Pt(q) & -((p = q)) & Cont(p, l) & Cont(q, l) & Cont(p, m) & Cont(q, m) -> (l = m))).


%axioms from module codi/p9/codi_plp.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_plp.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_pl.clif").
% 'PLP-D1: planes are maximal in their dimension'
 all x ((Pl(x) -> Max(x) &  exists y exists z (Covers(x, y) & Covers(y, z) & Pt(z)))).


%axioms from module zex/p9/zex.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/zex.clif
% 'forces a special null region (zex)'
% 'Z-A1: there exists a zex'
 exists x (ZEX(x)).


%axioms from module dim/p9/dim_prime_linear.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif
% 'compact axioms for linear relative dimension with a lowest non-zero dimension'
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_unbounded.clif").
% 'D-A6: a lowest dimension must exist'
 exists x (MinDim(x)).


%axioms from module cont/p9/cont_basic.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_cont/cont_basic.clif
% 'basic axioms of containment (parthood irrespective of dimension) which is a non-strict partial order'
% 'a possibly existing zero extent ZEX is included'
% 'C-A1: reflexive'
 all x ((-(ZEX(x)) <-> Cont(x, x))).
% 'C-A2: antisymmetric'
 all x all y ((Cont(x, y) & Cont(y, x) -> (x = y))).
% 'C-A3: transitive'
 all x all y all z ((Cont(x, y) & Cont(y, z) -> Cont(x, z))).
% 'C-A4: ZEXs are not contained in anything and contain nothing'
 all x all y ((ZEX(x) -> -(Cont(y, x)) & -(Cont(x, y)))).
% 'The following hold no matter whether a ZEX exists or not (already included in the basic axiomatization of dimension)'
% 'D-A4: unique ZEX (previously Z-A2)'
 all x all y ((ZEX(x) & ZEX(y) -> (x = y))).


%axioms from module codi/p9/codi_pl.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_pl.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi.clif").
% 'PL-D1: points'
 all x ((Pt(x) <-> Max(x) & MinDim(x))).
% 'PL-D1: lines'
 all x ((L(x) <-> Max(x) &  all y ((Pt(y) -> Covers(x, y))))).
% 'PL-A1'
 all x ((L(x) ->  exists y exists z (Pt(y) & Pt(z) & Cont(y, x) & Cont(z, x) & -((y = z))))).


%axioms from module dim/p9/dim_prime_linear_unbounded.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_unbounded.clif
% 'compact axioms for linear relative dimension'
% 'D-A1: irreflexive'
 all x (-(LESS(x, x))).
% 'D-A2: asymmetric (antisymmetric & irreflexive)'
 all x all y ((LESS(x, y) -> -(LESS(y, x)))).
% 'D-A3: transitive (corrected from IJCAI version: need <= in the second condition to ensure that EqDim is transitive)'
 all x all y all z ((LESS(x, y) & LEQ(y, z) -> LESS(x, z))).
% 'D-A4: unique ZEX'
 all x all y ((ZEX(x) & ZEX(y) -> (x = y))).
% 'D-A5: ZEX has dimension lower than anything else'
 all x all y ((ZEX(x) & -(ZEX(y)) -> LESS(x, y))).
% 'D-D2: define EqDim in terms of <'
 all x all y ((EqDim(x, y) <-> -(LESS(x, y)) & -(LESS(y, x)))).
% 'D-D3: <='
 all x all y ((LEQ(x, y) <-> LESS(x, y) | EqDim(x, y))).
% 'D-D4: Maximal dimension (Codim=0)'
 all x ((MaxDim(x) <->  all y (LEQ(y, x)))).
% 'D-D5: Minimal dimension (Dim=0)'
 all x ((MinDim(x) <-> -(ZEX(x)) &  all y ((LESS(y, x) -> ZEX(y))))).
% 'D-D6: next highest dimension (covers), x covers y if x>y and no z s.t. x>z>y'
 all x all y ((Covers(x, y) <-> LESS(y, x) &  all z (-(LESS(y, z) & LESS(z, x))))).

end_of_list.

