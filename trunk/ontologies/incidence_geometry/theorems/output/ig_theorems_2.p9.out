============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 25855 was started by torsten on scotus.mie.utoronto.ca,
Wed Oct 24 22:07:47 2012
The command was "prover9 -t 600 -f ig/input/ig.p9 ig/input/ig_2d_lin.p9 ig/input/ig_2d_slin.p9 ig/input/ig_2d.p9 ig/theorems/input/options.txt ig/theorems/input/ig_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ig/input/ig.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))).
(all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))).
(all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)).
(all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))).
end_of_list.

% Reading from file ig/input/ig_2d_lin.p9


formulas(sos).
(all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))).
end_of_list.

% Reading from file ig/input/ig_2d_slin.p9


formulas(sos).
(all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)).
end_of_list.

% Reading from file ig/input/ig_2d.p9


formulas(sos).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))).
end_of_list.

% Reading from file ig/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file ig/theorems/input/ig_theorems_2.p9


formulas(goals).
(all x (Pl(x) -> -Pt(x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
2 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
3 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
4 (all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))) # label(non_clause).  [assumption].
5 (all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))) # label(non_clause).  [assumption].
6 (all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)) # label(non_clause).  [assumption].
7 (all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))) # label(non_clause).  [assumption].
8 (all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))) # label(non_clause).  [assumption].
9 (all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)) # label(non_clause).  [assumption].
10 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
11 (all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))) # label(non_clause).  [assumption].
12 (all x (Pl(x) -> -Pt(x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, Pt, Pl, L, on ]).
Function symbol precedence:  function_order([ c1, f7, f1, f2, f3, f8, f9, f4, f5, f6 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 6.
% Level of proof is 2.
% Maximum clause weight is 4.000.
% Given clauses 44.

1 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
12 (all x (Pl(x) -> -Pt(x))) # label(non_clause) # label(goal).  [goal].
14 -Pt(x) | -Pl(x).  [clausify(1)].
56 Pl(c1).  [deny(12)].
57 Pt(c1).  [deny(12)].
110 $F.  [resolve(56,a,14,b),unit_del(a,57)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=44. Generated=316. Kept=97. proofs=1.
Usable=44. Sos=44. Demods=0. Limbo=9, Disabled=48. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=218. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=507. Nonunit_bsub_feature_tests=659.
Megabytes=0.27.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 25855 exit (max_proofs) Wed Oct 24 22:07:47 2012
