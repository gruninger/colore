============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 25838 was started by torsten on scotus.mie.utoronto.ca,
Wed Oct 24 22:07:36 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f ig/theorems/input/ig_theorems.p9 ig/input/ig.p9 ig/input/ig_2d_lin.p9 ig/input/ig_2d_slin.p9 ig/input/ig_2d.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ig/theorems/input/ig_theorems.p9


formulas(sos).
(all x (Pl(x) -> -L(x))).
(all x (Pl(x) -> -Pt(x))).
end_of_list.

% Reading from file ig/input/ig.p9


formulas(sos).
(all x (Pt(x) -> -L(x) & -Pl(x))).
(all x (L(x) -> -Pt(x) & -Pl(x))).
(all x (Pl(x) -> -Pt(x) & -L(x))).
(all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))).
(all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))).
(all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)).
(all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))).
end_of_list.

% Reading from file ig/input/ig_2d_lin.p9


formulas(sos).
(all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))).
end_of_list.

% Reading from file ig/input/ig_2d_slin.p9


formulas(sos).
(all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)).
end_of_list.

% Reading from file ig/input/ig_2d.p9


formulas(sos).
(all x all y (on(x,y) -> Pt(x) & -Pt(y))).
(all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (Pl(x) -> -L(x))) # label(non_clause).  [assumption].
2 (all x (Pl(x) -> -Pt(x))) # label(non_clause).  [assumption].
3 (all x (Pt(x) -> -L(x) & -Pl(x))) # label(non_clause).  [assumption].
4 (all x (L(x) -> -Pt(x) & -Pl(x))) # label(non_clause).  [assumption].
5 (all x (Pl(x) -> -Pt(x) & -L(x))) # label(non_clause).  [assumption].
6 (all x (Pl(x) -> (exists p exists q exists r (p != q & p != r & q != r & Pt(p) & Pt(q) & Pt(r) & on(p,x) & on(q,x) & on(r,x) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))))))) # label(non_clause).  [assumption].
7 (all p all q all r (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) -> (exists x (Pl(x) & on(p,x) & on(q,x) & on(r,x))))) # label(non_clause).  [assumption].
8 (all p all q all r all x all y (Pt(p) & Pt(q) & Pt(r) & (all l (L(l) -> -on(p,l) | -on(q,l) | -on(r,l))) & Pl(x) & on(p,x) & on(q,x) & on(r,x) & Pl(y) & on(p,y) & on(q,y) & on(r,y) -> x = y)) # label(non_clause).  [assumption].
9 (all p all q all l all x (Pt(p) & Pt(q) & p != q & L(l) & on(p,l) & on(q,l) & Pl(x) & on(p,x) & on(q,x) -> (all r (Pt(r) & on(r,l) -> on(r,x))))) # label(non_clause).  [assumption].
10 (all x all y (Pt(x) & Pt(y) & x != y -> (exists z (L(z) & on(x,z) & on(y,z))))) # label(non_clause).  [assumption].
11 (all l all m all x all y (x != y & L(l) & L(m) & on(x,l) & on(y,l) & on(x,m) & on(y,m) -> l = m)) # label(non_clause).  [assumption].
12 (all x all y (on(x,y) -> Pt(x) & -Pt(y))) # label(non_clause).  [assumption].
13 (all x (L(x) -> (exists y exists z (on(y,x) & on(z,x) & y != z)))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-Pl(x) | -L(x).
-Pl(x) | -Pt(x).
-Pt(x) | -L(x).
-Pt(x) | -Pl(x).
-L(x) | -Pt(x).
-L(x) | -Pl(x).
-Pl(x) | -Pt(x).
-Pl(x) | -L(x).
-Pl(x) | f2(x) != f1(x).
-Pl(x) | f3(x) != f1(x).
-Pl(x) | f3(x) != f2(x).
-Pl(x) | Pt(f1(x)).
-Pl(x) | Pt(f2(x)).
-Pl(x) | Pt(f3(x)).
-Pl(x) | on(f1(x),x).
-Pl(x) | on(f2(x),x).
-Pl(x) | on(f3(x),x).
-Pl(x) | -L(y) | -on(f1(x),y) | -on(f2(x),y) | -on(f3(x),y).
-Pt(x) | -Pt(y) | -Pt(z) | L(f4(x,y,z)) | Pl(f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f4(x,y,z)) | on(x,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f4(x,y,z)) | on(y,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f4(x,y,z)) | on(z,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f4(x,y,z)) | Pl(f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f4(x,y,z)) | on(x,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f4(x,y,z)) | on(y,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f4(x,y,z)) | on(z,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f4(x,y,z)) | Pl(f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f4(x,y,z)) | on(x,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f4(x,y,z)) | on(y,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f4(x,y,z)) | on(z,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f4(x,y,z)) | Pl(f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f4(x,y,z)) | on(x,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f4(x,y,z)) | on(y,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f4(x,y,z)) | on(z,f5(x,y,z)).
-Pt(x) | -Pt(y) | -Pt(z) | L(f6(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(x,f6(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(y,f6(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | -Pt(z) | on(z,f6(x,y,z,u,w)) | -Pl(u) | -on(x,u) | -on(y,u) | -on(z,u) | -Pl(w) | -on(x,w) | -on(y,w) | -on(z,w) | w = u.
-Pt(x) | -Pt(y) | y = x | -L(z) | -on(x,z) | -on(y,z) | -Pl(u) | -on(x,u) | -on(y,u) | -Pt(w) | -on(w,z) | on(w,u).
-Pt(x) | -Pt(y) | y = x | L(f7(x,y)).
-Pt(x) | -Pt(y) | y = x | on(x,f7(x,y)).
-Pt(x) | -Pt(y) | y = x | on(y,f7(x,y)).
x = y | -L(z) | -L(u) | -on(y,z) | -on(x,z) | -on(y,u) | -on(x,u) | u = z.
-on(x,y) | Pt(x).
-on(x,y) | -Pt(y).
-L(x) | on(f8(x),x).
-L(x) | on(f9(x),x).
-L(x) | f9(x) != f8(x).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(f1(_), [ 0, 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(f3(_), [ 0, 0 ]),

        function(f8(_), [ 0, 0 ]),

        function(f9(_), [ 0, 0 ]),

        function(f7(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f4(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f5(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f6(_,_,_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        relation(L(_), [ 0, 0 ]),

        relation(Pl(_), [ 0, 0 ]),

        relation(Pt(_), [ 0, 0 ]),

        relation(on(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=368, kept=270.
Selections=62, assignments=62, propagations=10, current_models=1.
Rewrite_terms=370, rewrite_bools=295, indexes=136.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 25838 exit (max_models) Wed Oct 24 22:07:36 2012
The process finished Wed Oct 24 22:07:36 2012
