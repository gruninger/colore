%axioms from module mt//consistency/p9/rtminus_13distinct.p9
%----------------------------------

% Automatically generated from CL/KIF
formulas(sos).
% 'mt/consistency/rtminus_13distinct'
% 'restricting the RTminus theory to exactly 13 distinct elements'
%imports("mt/rt_minus").
 all x ((x = E1) | (x = E2) | (x = E3) | (x = E4) | (x = E5) | (x = E6) | (x = E7) | (x = E8) | (x = E9) | (x = E10) | (x = E11) | (x = E12) | (x = ONE)).
-((E1 = E2)).
-((E1 = E3)).
-((E1 = E4)).
-((E1 = E5)).
-((E1 = E6)).
-((E1 = E7)).
-((E1 = E8)).
-((E1 = E9)).
-((E1 = E10)).
-((E1 = E11)).
-((E1 = E12)).
-((E1 = ONE)).
-((E2 = E3)).
-((E2 = E4)).
-((E2 = E5)).
-((E2 = E6)).
-((E2 = E7)).
-((E2 = E8)).
-((E2 = E9)).
-((E2 = E10)).
-((E2 = E11)).
-((E2 = E12)).
-((E2 = ONE)).
-((E3 = E4)).
-((E3 = E5)).
-((E3 = E6)).
-((E3 = E7)).
-((E3 = E8)).
-((E3 = E9)).
-((E3 = E10)).
-((E3 = E11)).
-((E3 = E12)).
-((E3 = ONE)).
-((E4 = E5)).
-((E4 = E6)).
-((E4 = E7)).
-((E4 = E8)).
-((E4 = E9)).
-((E4 = E10)).
-((E4 = E11)).
-((E4 = E12)).
-((E4 = ONE)).
-((E5 = E6)).
-((E5 = E7)).
-((E5 = E8)).
-((E5 = E9)).
-((E5 = E10)).
-((E5 = E11)).
-((E5 = E12)).
-((E5 = ONE)).
-((E6 = E7)).
-((E6 = E8)).
-((E6 = E9)).
-((E6 = E10)).
-((E6 = E11)).
-((E6 = E12)).
-((E6 = ONE)).
-((E7 = E8)).
-((E7 = E9)).
-((E7 = E10)).
-((E7 = E11)).
-((E7 = E12)).
-((E7 = ONE)).
-((E8 = E9)).
-((E8 = E10)).
-((E8 = E11)).
-((E8 = E12)).
-((E8 = ONE)).
-((E9 = E10)).
-((E9 = E11)).
-((E9 = E12)).
-((E9 = ONE)).
-((E10 = E11)).
-((E10 = E12)).
-((E10 = ONE)).
-((E11 = E12)).
-((E11 = ONE)).
-((E12 = ONE)).


%axioms from module mt/p9/rtminus.p9
%----------------------------------

% Automatically generated from CL/KIF
% 'mt/rt_minus'
% 'axioms of the generalized mereotopology RT-'
% 'D1: Parthood'
 all x all y ((P(x, y) <->  all z ((C(z, x) -> C(z, y))))).
% 'D3: Overlap'
 all x all y ((O(x, y) <->  exists z (P(z, x) & P(z, y)))).
% 'D4: External connection'
 all x all y ((EC(x, y) <-> C(x, y) & -(O(x, y)))).
% 'D6: Non-tangential parthood'
 all x all y ((NTP(x, y) <-> P(x, y) & -( exists z (EC(z, x) & EC(z, y))))).
% 'D7: Closure function closure(x) as -i(-x)'
 all x ((closure(x) = neg(i(neg(x))))).
% 'D8: Open'
 all x ((OP(x) <-> (x = i(x)))).
% 'A1: C reflexive'
 all x (C(x, x)).
% 'A2: C symmetric'
 all x all y ((C(x, y) -> C(y, x))).
% 'A3: C extensional'
 all x all y (( all z ((C(z, x) <-> C(z, y))) -> (x = y))).
% 'A4: Universally connected region ONE'
 all y (C(ONE, y)).
% 'A5: Unique sums'
 all x all y ( exists z ( all u ((C(u, z) <-> C(u, x) | C(u, y))))).
% 'A6: Unique intersections (MEET)'
 all x all y ((O(x, y) ->  exists z ((z = MEET(x, y)) &  all u ((C(u, z) <->  exists v (P(v, x) & P(v, y) & C(v, u))))))).
% 'A7: Unique complements'
 all x (( exists y (-(C(y, x))) ->  exists z ((neg(x) = z) &  all u ((C(u, z) <->  exists v (-(C(v, x)) & C(v, u))))))).
% 'A8: Unique interiors'
 all x ( exists z ((i(x) = z) &  all u ((C(u, z) <->  exists v (NTP(v, x) & C(v, u)))))).
% 'A9: closure of the universal region'
(closure(ONE) = ONE).
% 'A10: Open intersection of open elements'
 all x all y ((OP(x) & OP(y) & O(x, y) -> OP(MEET(x, y)))).

end_of_list.

