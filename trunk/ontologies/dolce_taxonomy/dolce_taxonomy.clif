/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger, Carmen Chui
 *******************************************************************************/
 
(cl-text http://colore.oor.net/dolce_taxonomy/dolce_taxonomy.clif

(cl-comment "Source: WonderWeb Deliverable D18 Ontology Library final by: Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari (2003).")
(cl-comment "Comment: DOLCE axioms from 4.1 Taxonomic Constraints")

(cl-comment "Subsumption Constraints.")
(cl-comment "Level 1 Hierarchy.")
(forall (x)
	(if (or (ED x)(PD x)(Q x)(AB x))
		(PT x)))

(cl-comment "Level 2 Hierarchy.")
(forall (x)
	(if (or (PED x)(NPED x)(AS x))
		(ED x)))

(forall (x)
	(if (or (EV x) (STV x))
		(PD x)))

(forall (x)
	(if (or (TQ x)(PQ x)(AQ x))
		(Q x)))

(forall (x)
	(if (R x) (AB x)))

(cl-comment "Level 3 Hierarchy.")

(forall (x)
	(if (or (M x)(F x)(POB x))
		(PED x)))

(forall (x)
	(if (NPOB x) (NPED x)))

(forall (x)
	(if (or (ACH x)(ACC x))
		(EV x)))

(forall (x)
	(if (or (ST x)(PRO x))
		(STV x)))

(forall (x)
	(if (TL x) (TQ x)))

(forall (x)
	(if (SL x) (PQ x)))

(forall (x)
	(if (or (TR x)(PR x)(AR x))
		(R x)))
		
(cl-comment "Level 4 Hierarchy.")
(forall (x)
	(if (or (APO x)(NAPO x))
		(POB x)))

(forall (x)
	(if (or (MOB x)(SOB x))
		(NPOB x)))

(forall (x)
	(if (T x)
		(TR x)))
		
(forall (x)
	(if (S x)
		(PR x)))

(cl-comment "Level 5 Hierarchy.")
(forall (x)
	(if (or (ASO x)(NASO x))
		(SOB x)))

(cl-comment "Level 6 of Hierarchy")
(forall (x)
	(if (or (SAG x)(SC x))
		(ASO x)))

(cl-comment "Partitioning classes in a taxonomy.")
(cl-comment "Level 0.")
(forall (x)
	(iff (PT x)
		(or (ED x)(PD x)(Q x)(AB x))))

(forall (x)
	(if (ED x)
		(and (not(PD x))(not(Q x))(not(AB x)))))

(forall (x)
	(if (PD x)
		(and (not(Q x))(not(AB x)))))
		
(forall (x)
	(if (Q x)
		(not(AB x))))
		
(cl-comment "Level 1: Endurant.")
(forall (x)
	(iff (ED x)
		(or (PED x)(NPED x)(AS x))))

(forall (x)
	(if (PED x)
		(and (not(NPED x))(not(AS x)))))

(forall (x)
	(if (NPED x)
		(not(AS x))))

(cl-comment "Level 1: Perdurant.")
(forall (x)
	(iff (PD x)
		(or (EV x) (STV x))))

(forall (x)
	(if (EV x)
		(not(STV x))))

(cl-comment "Level 1: Quality.")
(forall (x)
	(iff (Q x)
		(or (TQ x)(PQ x)(AQ x))))

(forall (x)
	(if (TQ x)
		(and (not(PQ x))(not(AQ x)))))

(forall (x)
	(if (PQ x)
		(not(AQ x))))

(cl-comment "Level 2: Physical Endurant.")
(forall (x)
	(iff (PED x)
		(or (M x)(F x)(POB x))))

(forall (x)
	(if (M x)
		(and (not(F x))(not(POB x)))))

(forall (x)
	(if (F x)
		(not(POB x))))

(cl-comment "Level 2: Event.")
(forall (x)
	(iff (EV x)
		(or (ACH x)(ACC x))))

(forall (x)
	(if (ACH x)
		(not(ACC x))))

(cl-comment "Level 2: Stative.")
(forall (x)
	(iff (STV x)
		(or (ST x)(PRO x))))

(forall (x)
	(if (ST x)
		(not(PRO x))))

(cl-comment "Level 2: Region.")
(forall (x)
	(iff (R x)
		(or (TR x)(PR x)(AR x))))

(forall (x)
	(if (TR x)
		(and (not(PR x))(not(AR x)))))

(forall (x)
	(if (PR x)
		(not(AR x))))

(cl-comment "Level 3: Physical Object.")
(forall (x)
	(iff (POB x)
		(or (APO x)(NAPO x))))

(forall (x)
	(if (APO x)
		(not(NAPO x))))
		
(cl-comment "Level 3: Non-Physical Object.")
(forall (x)
	(iff (NPOB x)
		(or (MOB x)(SOB x))))

(forall (x)
	(if (MOB x)
		(not(SOB x))))

(cl-comment "Level 4: Social Object.")
(forall (x)
	(iff (SOB x)
		(or (ASO x)(NASO x))))

(forall (x)
	(if (ASO x)
		(not(NASO x))))
		
(cl-comment "Level 5: Agentive Social Object.")
(forall (x)
	(iff (ASO x)
		(or (SAG x)(SC x))))

(forall (x)
	(if (SAG x)
		(not(SC x))))

)
