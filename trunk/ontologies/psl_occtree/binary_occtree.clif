/*******************************************************************************
 * Copyright (c) University of Toronto and othersAll rights reserved
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported licenseThe legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * occtree.owl.clif
 * Hets generated (and modified) common logic translation of OWL version (for testing expressivity)
 * unstructured for easier translation to p9 syntax
 * note: letter cases preserved in accordance with OWL version
 *******************************************************************************/

(cl-text http://colore.oor.net/psl_occtree/binary_occtree.clif 

(cl-imports http://colore.oor.net/psl_core/binary_psl_core.clif)

	(cl-comment 'Thing and Nothing axioms removed')

	(cl-comment 'datatype property axioms removed')             
	
	(cl-comment 'top and bottom object property axioms removed')

(forall (a) (iff (Initial a) (and (Arboreal a)
                                                                     (not (exists (b) (and (earlier b
                                                                                                                                     a)
                                                                                           (Arboreal b)))))))
                                                         (cl-comment 'Ax1_1')

(forall (a) (iff (NextLegal a) (exists (b) (and (next_occ a
                                                                                                                              b)
                                                                                   (Legal b)))))
                                                         (cl-comment 'Ax2_2')

(forall (a) (iff (NonInitial a) (and (Arboreal a)
                                                                        (not (Initial a)))))
                                                         (cl-comment 'Ax3_3')

(forall (a) (if (Arboreal a) (Activity_Occurrence a)))
                                                         (cl-comment 'Ax4_4')

(forall (a) (if (Arboreal a) (exists (b) (and (next_occ a
                                                                                                                            b)
                                                                                 (Arboreal b)))))
                                                         (cl-comment 'Ax5_5')

(forall (a) (if (Arboreal a) (exists (b) (and (earlierEq b
                                                                                                                             a)
                                                                                 (Initial b)))))
                                                         (cl-comment 'Ax6_6')

(forall (a) (if (Arboreal a) (forall (b) (if (occurrence_of a
                                                                                                                                 b) (Generator b)))))
                                                         (cl-comment 'Ax7_7')

(forall (a) (if (Generator a) (Activity a)))
                                                         (cl-comment 'Ax8_8')

(forall (a) (if (Generator a) (exists (b) (and (occurrence_of b
                                                                                                                                   a)
                                                                                  (Initial b)))))
                                                         (cl-comment 'Ax9_9')

(forall (a) (if (Generator a) (forall (b) (if (occurrence_of b
                                                                                                                                  a) (Arboreal b)))))
                                                       (cl-comment 'Ax10_10')

(forall (a) (if (Initial a) (Activity_Occurrence a)))
                                                       (cl-comment 'Ax11_11')

(forall (a) (if (Initial a) (and (exists (b) (and (Activity b)
                                                                                     (occurrence_of a
                                                                                                                                      b)))
                                                                    (exists (b
                                                                             c) (if (and (occurrence_of a
                                                                                                                                          b)
                                                                                         (occurrence_of a
                                                                                                                                          c)
                                                                                         (Activity b)) (= b c))))))
                                                       (cl-comment 'Ax12_12')

(forall (a) (if (Legal a) (Arboreal a)))
                                                       (cl-comment 'Ax13_13')

(forall (a) (if (Legal a) (exists (b) (and (earlier a
                                                                                                                        b)
                                                                              (Legal b)))))
                                                       (cl-comment 'Ax14_14')

(forall (a) (if (Legal a) (forall (b) (if (earlier b
                                                                                                                       a) (Legal b)))))
                                                       (cl-comment 'Ax15_15')

(forall (a) (if (NextLegal a) (Legal a)))
                                                       (cl-comment 'Ax16_16')

(forall (a) (if (NonInitial a) (Arboreal a)))
                                                       (cl-comment 'Ax17_17')

(forall (a) (if (NonInitial a) (exists (b) (and (earlier b
                                                                                                                             a)
                                                                                   (Initial b)))))
                                                       (cl-comment 'Ax18_18')

(forall (a) (if (NonInitial a) (exists (b) (and (next_occ b
                                                                                                                              a)
                                                                                   (Arboreal b)))))
                                                       (cl-comment 'Ax19_19')

(forall (c d) (if (earlier c
                                                              d) (earlierEq c
                                                                                                             d)))
                                                       (cl-comment 'Ax20_20')

(forall (c d) (if (next_occ c
                                                               d) (earlier c
                                                                                                            d)))
                                                       (cl-comment 'Ax21_21')

(forall (c d) (if (precedes c
                                                               d) (earlier c
                                                                                                            d)))
                                                       (cl-comment 'Ax22_22')

(forall (a
           b
           c) (if (and (next_occ a c)
                       (next_occ b
                                                                  c)) (= a b)))
                                                       (cl-comment 'Ax23_23')

(forall (a
           b
           c) (if (and (earlier a b)
                       (earlier b
                                                                 c)) (earlier a
                                                                                                               c)))
                                                       (cl-comment 'Ax24_24')

(forall (a
           b
           c) (if (and (earlierEq a b)
                       (earlierEq b
                                                                   c)) (earlierEq a
                                                                                                                   c)))
                                                       (cl-comment 'Ax25_25')

(forall (a
           b
           c) (if (and (precedes a b)
                       (precedes b
                                                                  c)) (precedes a
                                                                                                                 c)))
                                                       (cl-comment 'Ax26_26')

(forall (a) (exists (b) (if (earlier a
                                                                        b) (Arboreal a))))
                                                       (cl-comment 'Ax27_27')

(forall (a) (exists (b) (if (earlierEq a
                                                                          b) (Arboreal a))))
                                                       (cl-comment 'Ax28_28')

(forall (a) (exists (b) (if (next_occ a
                                                                         b) (Arboreal a))))
                                                       (cl-comment 'Ax29_29')

(forall (a) (exists (b) (if (poss a
                                                                     b) (Generator a))))
                                                       (cl-comment 'Ax30_30')

(forall (a) (exists (b) (if (precedes a
                                                                         b) (Legal a))))
                                                       (cl-comment 'Ax31_31')

(forall (b) (exists (a) (if (earlier a
                                                                        b) (Arboreal b))))
                                                       (cl-comment 'Ax32_32')

(forall (b) (exists (a) (if (earlierEq a
                                                                          b) (Arboreal b))))
                                                       (cl-comment 'Ax33_33')

(forall (b) (exists (a) (if (next_occ a
                                                                         b) (Arboreal b))))
                                                       (cl-comment 'Ax34_34')

(forall (b) (exists (a) (if (poss a
                                                                     b) (Arboreal b))))
                                                       (cl-comment 'Ax35_35')

(forall (b) (exists (a) (if (precedes a
                                                                         b) (Legal b))))
                                                       (cl-comment 'Ax36_36')

)
