(cl-text http://colore.oor.net/process_specification_language/psl-subset-519.clif

(cl-comment %psl_core.th:ax11)
(forall  (a occ)
	(if 	(occurence_of occ a)
		(and 	(activity a)
			(activity_occurrence occ)))

(cl-comment %psl_core.th:ax12)
(forall (occ)
	(if	(activity_occurrence occ)
		(exists (a)
			(and	(activity a)
				(occurrence_of occ a)))))

(cl-comment %psl_core.th:ax13)
(forall (o a1 a2)
	(if	(and	(occurrence_of o a1)
			(occurrence_of o a2))
		(= a1 a2)))

(cl-comment %subactivity.th:ax2)
(forall (a)
	(if	(activity a)
		(subactivity a a)))

(cl-comment %occtree.th:ax2)
(forall (s1 s2)
	(if (earlier s1 s2)
	    (not (earlier s2 s1))))

(cl-comment %occtree.th:ax3)
(forall (s1 s2 s3)
	(if (and	(earlier s1 s2)
	    		(earlier s2 s3))
	    (earlier s1 s3)))
	
(cl-comment %occtree.th:ax4)
(forall (s1 s2 s3)
	(if (and	(earlier s1 s2)
	    		(earlier s3 s2))
	    (or		(earlier s3 s1)
	    		(earlier s1 s3)
			(= s1 s3))))

(cl-comment %occtree.th:ax7 + atomic.th:ax9)
(forall (s a)
	(if	(occurrence_of s a)
		(iff	       (arboreal s)
			       (atomic a))))

(cl-comment %occtree.th:ax12)
(forall (s)
	(if	(legal s)
		(arboreal s)))

(cl-comment %occtree.th:ax13)
(forall (s1 s2)
	(if (and	(legal s1)
	    		(earlier s2 s1))
	    (legal s2)))

(cl-comment %occtree.th:def1)
(forall (s1 s2)
	(iff	(precedes s1 s2)
		(and	  (earlier s1 s2)
			  (legal s2))))


(cl-comment %complex.th:ax1)
(forall (a s1 s2)
	(if   (min_precedes s1 s2 a)
	      (exists (a1 a2)
	      	      (and	(subactivity a1 a)
		      		(subactivity a2 a)
				(atocc s1 a1)
				(atocc s2 a2)))))

(cl-comment %complex.th:ax2)
(forall (a s)
	(if	(root s a)
		(exists (a1)
			(and	(subactivity a1 a)
				(atocc s a1)))))

(cl-comment %complex.th:ax3)
(forall (s1 s2 a)
	(if (min_precedes s1 s2 a)
	    (exists (s3)
	    	    (and	(root s3 a)
		    		(min_precedes s3 s2 a)))))

(cl-comment %complex.th:ax4)
(forall (s1 s2 a)
	(if (min_precedes s1 s2 a)
	    (not (root s2 a))))

(cl-comment %complex.th:ax5)
(forall (s1 s2 a)
	(if (min_precedes s1 s2 a)
	    (precedes s1 s2)))

(cl-comment %complex.th:ax6)
(forall (s a)
	(if	(root s a)
		(legal s)))

(cl-comment %complex.th:ax7)
(forall (s a)
	(if	(and	(atocc s a)
			(legal s))
		(root s a)))

(cl-comment %complex.th:ax9)
(forall (s1 s2 a)
	(if (and	(min_precedes s1 s2 a)
	    		(min_precedes s1 s3 a)
			(precedes s2 s3))
	    (min_precedes s2 s3 a)))

(cl-comment %complex.th:ax10 (revised 17-Jun-2009))
(forall (a1 a2 s)
	(if (subtree s a1 a2)
	    (not (subactivity a1 a2))))

(cl-comment %complex.th:ax11)
(forall (s1 s2 a)
	(if (min_precedes s1 s2 a)
	    (not (atomic a))))

(cl-comment %complex.th:ax12)
(forall (s1 s2 a)
	(if (and	(min_precedes s2 s1 a)
	    		(min_precedes s3 s1 a)
			(precedes s2 s3))
	    (min_precedes s2 s3 a)))

(cl-comment %complex.th:def1)
(forall (s a)
	(iff	(leaf s a)
		(and  (or   (root s a)
		      	    (exists (s1)
		      	    	      (min_precedes s1 s a)))
		      (not (exists (s2)
		      	   	   (min_precedes s s2 a))))))

(cl-comment %complex.th:def3)
(forall (s1 s2 a)
	(iff   (next_subocc s1 s2 a)
	       (and	    (min_precedes s1 s2 a)
	       		    (not (exists (s3)
			    	 (and	 (min_precedes s1 s3 a)
				 	 (min_precedes s3 s2 a)))))))

(cl-comment %complex.th:def4 (revised 17-Jun-2009))
(forall (a1 a2 s1)
	(iff   (subtree s1 a1 a2)
	       (and	(root s1 a1)
	       		(exists (s2)
				(and	(root s2 a2)
					(min_precedes s1 s2 a1)
					(forall (s3)
						(if	(min_precedes s2 s3 a2)
							(min_precedes s2 s3 a1))))))))

(cl-comment %complex.th:def6)
(forall (s a)
	(iff	(atocc s a)
		(exists (a1)
			(and	(subactivity a a1)
				(atomic a1)
				(occurrence_of s a1)))))

(cl-comment %act_occ.th:ax1)
(forall (o1 o2)
	(if (subactivity_occurrence o1 o2)
	    (and	(activity_occurrence o1)
	    		(activity_occurrence o2))))

(cl-comment %act_occ.th:ax2)
(forall (a s1 s2)
	(if   (min_precedes s1 s2 a)
	      (exists (o)
	      	      (and	(occurrence_of o a)
		      		(subactivity_occurrence s1 o)
				(subactivity_occurrence s2, o)))))

(cl-comment %act_occ.th:ax3)
(forall (a s)
	(if	(and	(root s a)
			(not (atomic a)))
		(exists (o)
			(and	(occurrence_of o a)
				(subactivity_occurrence s o)))))	

(cl-comment %act_occ.th:ax4)
(forall (a o)
	(if	(and	(occurrence_of o a)
			(not (atomic a)))
		(exists (s)
			(and	(root s a)
				(subactivity_occurrence s o)))))

(cl-comment %act_occ.th:ax5)
(forall (a o1 o2)
	(if   (and	(occurrence_of o1 a)
	      		(occurrence_of o2 a)
			(not (= o1 o2)))
		(exists (s)
			(and	(arboreal s)
				(subactivity_occurrence s o1)
				(not (subactivity_occurrence s o2))))))

(cl-comment %act_occ.th:ax6)
(forall (a a1 a2 occ s1 s2)
	(if   (and   (occurrence_of occ a)
	      	     (not (atomic a))
		     (arboreal s1)
		     (arboreal s2)
		     (subactivity_occurrence s1 occ)
		     (subactivity_occurrence s2 occ))
	      (or    (min_precedes s1 s2 a)
	      	     (min_precedes s2 s1 a)
		     (= s1 s2))))

(cl-comment %act_occ.th:ax7)
(forall (s1 s2 a o)
	(if (and (min_precedes s1 s2 a)
	    	 (occurrence_of o a)
		 (subactivity_occurrence s2 o))
	    (subactivity_occurrence s1 o)))

(cl-comment %act_occ.th:ax8)
(forall (a1 a2 o1 o2)
	(if (and  (occurrence_of o1 a1)
	    	  (occurrence_of o2 a2)
		  (not (atomic a1))
		  (subactivity_occurrence o1 o2))
	    (subactivity a1 a2)))

(cl-comment %act_occ.th:ax9)
(forall (o1 o2 o3)
	(if (and	(subactivity_occurrence o1 o2)
	    		(subactivity_occurrence o2 o3))
	    (subactivity_occurrence o1 o3)))

(cl-comment %act_occ.th:ax10)
(forall (a1 a2 o1 o2)
	(if (and  (occurrence_of o1 a1)
	    	  (occurrence_of o2 a2)
		  (subactivity a1 a2)
		  (not (subactivity_occurrence o1 o2)))
	    (exists (s)
	    	    (and	(subactivity_occurrence s o2)
		    		(not (subactivity_occurrence s o1))))))

(cl-comment %act_occ.th:def3)
(forall (s occ)
	(iff	(root_occ s occ)
		(exists (a)
			(and	(occurrence_of occ a)
				(subactivity_occurrence s occ)
				(root s a)))))
	   
(cl-comment %act_occ.th:def4)
(forall (s occ)
	(iff	(leaf_occ s occ)
		(exists (a)
			(and	(occurrence_of occ a)
				(subactivity_occurrence s occ)
				(leaf s a)))))

(cl-comment %act_occ.th:ax13)
(forall (s1 s2 a)
	(if (mono s1 s2 a)
	    (hom s1 s2 a)))

(cl-comment %act_occ.th:ax14)
(forall (s1 s2 a)
	(if (and	(hom s1 s2 a)
	    		(not (mono s1 s2 a)))
	    (exists (s3)
	    	    (or	(and	(min_precedes s3 s2 a)
							(mono s1 s3 a))
			(and	(min_precedes s3 s1 a)
				(mono s2 s3 a))))))

(cl-comment %act_occ.th:ax15 (modified 21-Jul-2009 - paper version))
(forall (s1 s2 s3 a)
	(if (and  (mono s1 s2 a)
	    	  (mono s3 s2 a))
	    (not (min_precedes s1 s3 a))))

(cl-comment %act_occ.th:ax16)
(forall (s1 s2 a)
	(if (mono s1 s2 a)
	    (mono s2 s1 a)))

(cl-comment %act_occ.th:ax17)
(forall (s1 s2 s3 a)
	(if (and  (mono s1 s2 a)
	    	  (mono s2 s3 a))
	    (mono s1 s3 a)))

(cl-comment %act_occ.th:def1 (modified 11-Jun-2009))
(forall (s1 s2 a)
	(iff   (iso_occ s1 s2 a)
	       (exists (a1 a2 a3)
	       	       (and   (atomic a1)
		       	      (atomic a2)
			      (atomic a3)
			      (subactivity a3 a)
			      (occurrence_of s1 (conc a1 a3))
			      (occurrence_of s2 (conc a2 a3))
			      (forall (a4)
			      	      (if	(and	(subactivity a4 (conc a3 a1))
										(subactivity a4 (conc a3 a2))
										(subactivity a4 a))
								(or	(subactivity a3 a4)
									(= a3 a4))))))))

(cl-comment %act_occ.th:def2)
(forall (s1 s2 a)
	(iff	(hom s1 s2 a)
			(exists (occ1 occ2)
				(and	(iso_occ s1 s2 a)
						(not (min_precedes s1 s2 a))
						(not (min_precedes s2 s1 a))
						(subactivity_occurrence s1 occ1)
						(subactivity_occurrence s2 occ2)
						(occurrence_of occ1 a)
						(occurrence_of occ2 a)))))

(cl-comment %x.th:def-same_grove (added 5-Jun-2009))
(forall (o1 o2)
	(iff	(same_grove o1 o2)
			(exists (a s1 s2)
				(and	(occurrence_of o1 a)
						(occurrence_of o2 a)
						(root_occ s1 o1)
						(root_occ s2 o2)
						(or	(and	(initial s1)
									(initial s2))
							(exists (s4 a1 a2)
								(and	(= s1 (successor a1 s4))
										(= s2 (successor a2 s4)))))))))

(cl-comment %x.th:def-same_tree (added 5-Jun-2009))
(forall (s1 s2 a)
	(iff	(same_tree s1 s2 a)
			(exists (o1 o2)
				(and	(occurrence_of o1 a)
						(occurrence_of o2 a)
						(same_grove o1 o2)
						(subactivity_occurrence s1 o1)
						(subactivity_occurrence s2 o2)))))

(cl-comment %soo.th:ax1)
(forall (a s)
	(if	(soo s a)
		(or	(root s a)
			(exists (s1)
				(min_precedes s1 s a)))))

(cl-comment %soo.th:ax2)
(forall (s1 a)
	(if	(root s1 a)
		(exists (s2)
			(and	(soo s2 a)
					(mono s1 s2 a)
					(same_tree s1 s2 a)))))

(cl-comment %soo.th:ax3)
(forall (s1 s2 a)
	(if	(min_precedes s1 s2 a)
		(exists (s3)
			(and	(soo s3 a)
					(mono s2 s3 a)
					(same_tree s3 s2 a)))))

(cl-comment %soo.th:ax4 (revised 15-Jun-2009))
(forall (s1 s2 s3 a)
	(if	(and	(preserve s1 s2 a)
				(preserve s2 s3 a))
		(or	(preserve s1 s3 a)
			(preserve s2 s1 a)
			(preserve s3 s2 a))))
			
(cl-comment %soo.th:ax5)
(forall (s1 s2 a)
	(if	(and	(mono s1 s2 a)
				(soo s1 a)
				(soo s2 a)
				(same_tree s1 s2 a))
		(= s1 s2)))

(cl-comment %soo.th:ax6)
(forall (a s1 s2)
	(iff	(soo_precedes s1 s2 a)
			(and	(soo s1 a)
					(soo s2 a)
					(preserve s1 s2 a)
					(not (preserve s2 s1 a)))))

(cl-comment %soo.th:ax7)
(forall (s1 s2 a)
	(iff	(preserve s1 s2 a)
			(exists (s3 s4)
				(and	(mono s1 s3 a)
						(mono s2 s4 a)
						(min_precedes s3 s4 a)
						(same_tree s1 s2 a)
						(same_tree s2 s3 a)))))

(cl-comment %soo.th:ax8)
(forall (s1 s2 s3 a)
	(if	(and	(preserve s1 s2 a)
				(preserve s2 s3 a)
				(preserve s1 s3 a)
				(preserve s3 s1 a))
		(or	(preserve s2 s1 a)
			(preserve s2 s3 a))))
			
)
