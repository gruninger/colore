============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 8190 was started by cchui on stl-ws4.mie.utoronto.ca,
Fri Jul 19 01:36:35 2013
The command was "prover9 -t 600 -f test/p9/dolce_present.p9 test/p9/dolce_present2ideal_cem_wmg.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0718_present_16.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_present2ideal_cem_wmg.p9


formulas(sos).
(all x all y (in(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))).
(all x (line(x) <-> ED(x) | PD(x) | Q(x))).
(all x (point(x) <-> T(x))).
(all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))).
(all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))).
(all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))).
(all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))).
(all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))).
(all x all y all z (sum(x,y,z) <-> (all w (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0718_present_16.p9


formulas(goals).
(all x all y (in(x,y) & line(x) & line(y) -> x = y)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
2 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
3 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
4 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
5 (all x all y (in(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
6 (all x (line(x) <-> ED(x) | PD(x) | Q(x))) # label(non_clause).  [assumption].
7 (all x (point(x) <-> T(x))) # label(non_clause).  [assumption].
8 (all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
9 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
10 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
11 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
12 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
13 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
14 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
15 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
16 (all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
17 (all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))) # label(non_clause).  [assumption].
19 (all x all y all z (sum(x,y,z) <-> (all w (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))) # label(non_clause).  [assumption].
20 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
21 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
22 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
23 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
24 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
25 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
26 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
27 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
28 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
29 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
30 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
31 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
32 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
33 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
34 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
35 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
36 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
37 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
38 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
39 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
40 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
41 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
42 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
43 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
44 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
45 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
46 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
47 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
48 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
49 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
50 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
51 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
52 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
53 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
54 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
55 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
56 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
57 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
58 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
59 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
60 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
61 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
62 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
63 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
64 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
65 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
66 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
67 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
68 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
69 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
70 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
71 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
72 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
73 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
74 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
75 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
76 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
77 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
78 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
79 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
80 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
81 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
82 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
83 (all x all y (in(x,y) & line(x) & line(y) -> x = y)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating SUM/3
84 -sum(x,y,z) | SUM(z,x,y).  [clausify(18)].
85 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(4)].
Derived: -sum(x,y,z) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(84,b,85,c)].
86 sum(x,y,z) | -SUM(z,x,y) | -T(z) | -T(x) | -T(y).  [clausify(18)].
87 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -sum(x,y,z).  [resolve(87,d,84,b)].
88 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -sum(x,y,z).  [resolve(88,d,84,b)].
89 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -sum(x,y,z).  [resolve(89,d,84,b)].
90 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f10(x,y,z)).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(90,d,85,c)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(90,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(90,d,87,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(90,d,88,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(90,d,89,d)].
91 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(91,d,85,c)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(91,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(91,d,87,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(91,d,88,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(91,d,89,d)].
92 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(92,d,85,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(92,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(92,d,87,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(92,d,88,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(92,d,89,d)].
93 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y).  [clausify(34)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(93,d,85,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(93,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(93,d,87,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(93,d,88,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(93,d,89,d)].

Eliminating in/2
94 in(x,y) | -PRE(x,y) | -T(y) | -ED(x).  [clausify(5)].
95 -in(x,y) | PRE(x,y) | PRE(y,x) | y = x.  [clausify(5)].
96 -in(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(5)].
97 -in(x,y) | PRE(x,y) | ED(y) | PD(y) | Q(y) | y = x.  [clausify(5)].
98 -in(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(5)].
99 -in(x,y) | T(y) | T(x) | y = x.  [clausify(5)].
100 -in(x,y) | T(y) | ED(y) | PD(y) | Q(y).  [clausify(5)].
101 -in(x,y) | ED(x) | PD(x) | Q(x) | PRE(y,x) | y = x.  [clausify(5)].
102 -in(x,y) | ED(x) | PD(x) | Q(x) | T(x) | y = x.  [clausify(5)].
103 -in(x,y) | ED(x) | PD(x) | Q(x) | ED(y) | PD(y) | Q(y) | y = x.  [clausify(5)].
104 in(x,y) | -PRE(x,y) | -T(y) | -PD(x).  [clausify(5)].
105 in(x,y) | -PRE(x,y) | -T(y) | -Q(x).  [clausify(5)].
106 in(x,y) | -PRE(y,x) | -T(x) | -ED(y).  [clausify(5)].
107 in(x,y) | -PRE(y,x) | -T(x) | -PD(y).  [clausify(5)].
108 in(x,y) | -PRE(y,x) | -T(x) | -Q(y).  [clausify(5)].
109 in(x,y) | y != x | -ED(y).  [clausify(5)].
110 in(x,y) | y != x | -PD(y).  [clausify(5)].
111 in(x,y) | y != x | -Q(y).  [clausify(5)].
112 in(x,y) | y != x | -T(y).  [clausify(5)].
113 in(c1,c2).  [deny(83)].
Derived: PRE(c1,c2) | PRE(c2,c1) | c2 = c1.  [resolve(113,a,95,a)].
Derived: PRE(c1,c2) | T(c1) | c2 = c1.  [resolve(113,a,96,a)].
Derived: PRE(c1,c2) | ED(c2) | PD(c2) | Q(c2) | c2 = c1.  [resolve(113,a,97,a)].
Derived: T(c2) | PRE(c2,c1) | c2 = c1.  [resolve(113,a,98,a)].
Derived: T(c2) | T(c1) | c2 = c1.  [resolve(113,a,99,a)].
Derived: T(c2) | ED(c2) | PD(c2) | Q(c2).  [resolve(113,a,100,a)].
Derived: ED(c1) | PD(c1) | Q(c1) | PRE(c2,c1) | c2 = c1.  [resolve(113,a,101,a)].
Derived: ED(c1) | PD(c1) | Q(c1) | T(c1) | c2 = c1.  [resolve(113,a,102,a)].
Derived: ED(c1) | PD(c1) | Q(c1) | ED(c2) | PD(c2) | Q(c2) | c2 = c1.  [resolve(113,a,103,a)].

Eliminating line/1
114 line(x) | -ED(x).  [clausify(6)].
115 -line(x) | ED(x) | PD(x) | Q(x).  [clausify(6)].
116 line(x) | -PD(x).  [clausify(6)].
117 line(x) | -Q(x).  [clausify(6)].
118 line(c1).  [deny(83)].
Derived: ED(c1) | PD(c1) | Q(c1).  [resolve(118,a,115,a)].
119 line(c2).  [deny(83)].
Derived: ED(c2) | PD(c2) | Q(c2).  [resolve(119,a,115,a)].

Eliminating point/1
120 point(x) | -T(x).  [clausify(7)].
121 -point(x) | T(x).  [clausify(7)].

Eliminating part/2
122 part(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(8)].
123 -part(x,y) | P(x,y).  [clausify(8)].
124 -part(x,y) | T(x).  [clausify(8)].
125 -part(x,y) | T(y).  [clausify(8)].

Eliminating L_1/1
126 L_1(x) | -ED(x).  [clausify(9)].
127 -L_1(x) | ED(x).  [clausify(9)].

Eliminating L_2/1
128 L_2(x) | -PD(x).  [clausify(10)].
129 -L_2(x) | PD(x).  [clausify(10)].

Eliminating L_3/1
130 L_3(x) | -Q(x).  [clausify(11)].
131 -L_3(x) | Q(x).  [clausify(11)].

Eliminating L_4/1
132 L_4(x) | -PED(x).  [clausify(12)].
133 -L_4(x) | PED(x).  [clausify(12)].

Eliminating L_5/1
134 L_5(x) | -NPED(x).  [clausify(13)].
135 -L_5(x) | NPED(x).  [clausify(13)].

Eliminating ppart/2
136 ppart(x,y) | -PP(x,y) | -T(x) | -T(y).  [clausify(14)].
137 -ppart(x,y) | PP(x,y).  [clausify(14)].
138 -ppart(x,y) | T(x).  [clausify(14)].
139 -ppart(x,y) | T(y).  [clausify(14)].

Eliminating underlaps/2
140 underlaps(x,y) | -U(x,y) | -T(x) | -T(y).  [clausify(16)].
141 -underlaps(x,y) | U(x,y).  [clausify(16)].
142 -underlaps(x,y) | T(x).  [clausify(16)].
143 -underlaps(x,y) | T(y).  [clausify(16)].

Eliminating disjoint/2
144 disjoint(x,y) | -DJ(x,y) | -T(x) | -T(y).  [clausify(17)].
145 -disjoint(x,y) | DJ(x,y).  [clausify(17)].
146 -disjoint(x,y) | T(x).  [clausify(17)].
147 -disjoint(x,y) | T(y).  [clausify(17)].

Eliminating sum/3
148 sum(x,y,z) | overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y).  [clausify(19)].
149 -sum(x,y,z) | T(z).  [clausify(18)].
150 -sum(x,y,z) | T(x).  [clausify(18)].
151 -sum(x,y,z) | T(y).  [clausify(18)].
152 -sum(x,y,z) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [clausify(19)].
153 -sum(x,y,z) | overlaps(u,z) | -overlaps(u,x).  [clausify(19)].
154 -sum(x,y,z) | overlaps(u,z) | -overlaps(u,y).  [clausify(19)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | T(z).  [resolve(148,a,149,a)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | T(x).  [resolve(148,a,150,a)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | T(y).  [resolve(148,a,151,a)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(148,a,152,a)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | overlaps(u,z) | -overlaps(u,x).  [resolve(148,a,153,a)].
Derived: overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y) | overlaps(u,z) | -overlaps(u,y).  [resolve(148,a,154,a)].
155 sum(x,y,z) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x).  [clausify(19)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | T(z).  [resolve(155,a,149,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | T(x).  [resolve(155,a,150,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | T(y).  [resolve(155,a,151,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(155,a,152,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | overlaps(u,z) | -overlaps(u,x).  [resolve(155,a,153,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x) | overlaps(u,z) | -overlaps(u,y).  [resolve(155,a,154,a)].
156 sum(x,y,z) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y).  [clausify(19)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | T(z).  [resolve(156,a,149,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | T(x).  [resolve(156,a,150,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | T(y).  [resolve(156,a,151,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(156,a,152,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | overlaps(u,z) | -overlaps(u,x).  [resolve(156,a,153,a)].
Derived: -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y) | overlaps(u,z) | -overlaps(u,y).  [resolve(156,a,154,a)].
157 -sum(x,y,z) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(84,b,85,c)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | overlaps(f2(y,z,u),u) | overlaps(f2(y,z,u),y) | overlaps(f2(y,z,u),z).  [resolve(157,a,148,a)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -overlaps(f2(y,z,u),u) | -overlaps(f2(y,z,u),y).  [resolve(157,a,155,a)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -overlaps(f2(y,z,u),u) | -overlaps(f2(y,z,u),z).  [resolve(157,a,156,a)].
158 -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -sum(x,y,z).  [resolve(87,d,84,b)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y).  [resolve(158,h,148,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x).  [resolve(158,h,155,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y).  [resolve(158,h,156,a)].
159 -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -sum(x,y,z).  [resolve(88,d,84,b)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y).  [resolve(159,g,148,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x).  [resolve(159,g,155,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y).  [resolve(159,g,156,a)].
160 -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -sum(x,y,z).  [resolve(89,d,84,b)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | overlaps(f2(x,y,z),z) | overlaps(f2(x,y,z),x) | overlaps(f2(x,y,z),y).  [resolve(160,g,148,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),x).  [resolve(160,g,155,a)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -overlaps(f2(x,y,z),z) | -overlaps(f2(x,y,z),y).  [resolve(160,g,156,a)].
161 -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(90,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(z) | -T(x) | -T(y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(161,e,152,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,x).  [resolve(161,e,153,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,y).  [resolve(161,e,154,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f10(x,y,z)) | -T(z) | -T(x) | -T(y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(161,e,157,a)].
162 -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(91,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(162,g,152,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,x).  [resolve(162,g,153,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,y).  [resolve(162,g,154,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f10(x,y,z),z) | O(f10(x,y,z),x) | O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(162,g,157,a)].
163 -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(92,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(z) | -T(x) | -T(y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(163,f,152,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,x).  [resolve(163,f,153,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,y).  [resolve(163,f,154,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),x) | -T(z) | -T(x) | -T(y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(163,f,157,a)].
164 -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | sum(x,y,z) | -T(z) | -T(x) | -T(y).  [resolve(93,d,86,b)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(164,f,152,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,x).  [resolve(164,f,153,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | overlaps(u,z) | -overlaps(u,y).  [resolve(164,f,154,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f10(x,y,z),z) | -O(f10(x,y,z),y) | -T(z) | -T(x) | -T(y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(164,f,157,a)].

Eliminating DJ/2
165 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(29)].
166 -T(x) | -T(y) | P(x,y) | DJ(f4(x,y),y).  [clausify(26)].
Derived: -T(f4(x,y)) | -T(y) | -O(f4(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(165,c,166,d)].
167 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(29)].

Eliminating U/2
168 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(30)].
169 -T(x) | -T(y) | -U(x,y) | P(x,f6(x,y)).  [clausify(30)].
170 -T(x) | -T(y) | -U(x,y) | P(y,f6(x,y)).  [clausify(30)].
171 -T(x) | -T(y) | -U(x,y) | T(f6(x,y)).  [clausify(30)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f6(x,y)).  [resolve(168,c,169,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f6(x,y)).  [resolve(168,c,170,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f6(x,y)).  [resolve(168,c,171,c)].
172 -T(x) | -T(y) | -U(x,y) | T(f8(x,y)).  [clausify(32)].
Derived: -T(x) | -T(y) | T(f8(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(172,c,168,c)].
173 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f8(x,y)) | O(z,x) | O(z,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f8(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(173,c,168,c)].
174 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f8(x,y)) | -O(z,x).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f8(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(174,c,168,c)].
175 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f8(x,y)) | -O(z,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f8(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(175,c,168,c)].

Eliminating AtP/1
176 AtP(x) | -T(x) | T(f7(x)).  [clausify(31)].
177 -AtP(x) | T(x).  [clausify(31)].
178 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(31)].
Derived: -T(x) | T(f7(x)) | -T(y) | -P(y,x) | y = x.  [resolve(176,a,178,a)].
179 AtP(x) | -T(x) | P(f7(x),x).  [clausify(31)].
Derived: -T(x) | P(f7(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(179,a,178,a)].
180 AtP(x) | -T(x) | f7(x) != x.  [clausify(31)].
Derived: -T(x) | f7(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(180,a,178,a)].

Eliminating PT/1
181 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(53)].
182 -ED(x) | PT(x).  [clausify(35)].
183 -PD(x) | PT(x).  [clausify(35)].
184 -Q(x) | PT(x).  [clausify(35)].
185 -AB(x) | PT(x).  [clausify(35)].
186 PT(x) | -ED(x).  [clausify(53)].
187 PT(x) | -PD(x).  [clausify(53)].
188 PT(x) | -Q(x).  [clausify(53)].
189 PT(x) | -AB(x).  [clausify(53)].

Eliminating PED/1
190 -M(x) | PED(x).  [clausify(40)].
191 -PED(x) | ED(x).  [clausify(36)].
Derived: -M(x) | ED(x).  [resolve(190,b,191,a)].
192 -F(x) | PED(x).  [clausify(40)].
Derived: -F(x) | ED(x).  [resolve(192,b,191,a)].
193 -POB(x) | PED(x).  [clausify(40)].
Derived: -POB(x) | ED(x).  [resolve(193,b,191,a)].
194 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(57)].
195 ED(x) | -PED(x).  [clausify(57)].
196 -PED(x) | -NPED(x).  [clausify(58)].
Derived: -NPED(x) | -M(x).  [resolve(196,a,190,b)].
Derived: -NPED(x) | -F(x).  [resolve(196,a,192,b)].
Derived: -NPED(x) | -POB(x).  [resolve(196,a,193,b)].
197 -PED(x) | -AS(x).  [clausify(58)].
Derived: -AS(x) | -M(x).  [resolve(197,a,190,b)].
Derived: -AS(x) | -F(x).  [resolve(197,a,192,b)].
Derived: -AS(x) | -POB(x).  [resolve(197,a,193,b)].
198 -PED(x) | M(x) | F(x) | POB(x).  [clausify(65)].
Derived: M(x) | F(x) | POB(x) | -ED(x) | NPED(x) | AS(x).  [resolve(198,a,194,b)].
199 PED(x) | -M(x).  [clausify(65)].
200 PED(x) | -F(x).  [clausify(65)].
201 PED(x) | -POB(x).  [clausify(65)].

Eliminating NPED/1
202 -NPOB(x) | NPED(x).  [clausify(41)].
203 -NPED(x) | ED(x).  [clausify(36)].
Derived: -NPOB(x) | ED(x).  [resolve(202,b,203,a)].
204 ED(x) | -NPED(x).  [clausify(57)].
205 -NPED(x) | -AS(x).  [clausify(59)].
Derived: -AS(x) | -NPOB(x).  [resolve(205,a,202,b)].
206 -NPED(x) | -M(x).  [resolve(196,a,190,b)].
Derived: -M(x) | -NPOB(x).  [resolve(206,a,202,b)].
207 -NPED(x) | -F(x).  [resolve(196,a,192,b)].
Derived: -F(x) | -NPOB(x).  [resolve(207,a,202,b)].
208 -NPED(x) | -POB(x).  [resolve(196,a,193,b)].
Derived: -POB(x) | -NPOB(x).  [resolve(208,a,202,b)].
209 M(x) | F(x) | POB(x) | -ED(x) | NPED(x) | AS(x).  [resolve(198,a,194,b)].

Eliminating AS/1

Eliminating EV/1
210 -ACH(x) | EV(x).  [clausify(42)].
211 -EV(x) | PD(x).  [clausify(37)].
Derived: -ACH(x) | PD(x).  [resolve(210,b,211,a)].
212 -ACC(x) | EV(x).  [clausify(42)].
Derived: -ACC(x) | PD(x).  [resolve(212,b,211,a)].
213 -PD(x) | EV(x) | STV(x).  [clausify(60)].
214 PD(x) | -EV(x).  [clausify(60)].
215 -EV(x) | -STV(x).  [clausify(61)].
Derived: -STV(x) | -ACH(x).  [resolve(215,a,210,b)].
Derived: -STV(x) | -ACC(x).  [resolve(215,a,212,b)].
216 -EV(x) | ACH(x) | ACC(x).  [clausify(68)].
Derived: ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(216,a,213,b)].
217 EV(x) | -ACH(x).  [clausify(68)].
218 EV(x) | -ACC(x).  [clausify(68)].

Eliminating STV/1
219 -ST(x) | STV(x).  [clausify(43)].
220 -STV(x) | PD(x).  [clausify(37)].
Derived: -ST(x) | PD(x).  [resolve(219,b,220,a)].
221 -PRO(x) | STV(x).  [clausify(43)].
Derived: -PRO(x) | PD(x).  [resolve(221,b,220,a)].
222 PD(x) | -STV(x).  [clausify(60)].
223 -STV(x) | ST(x) | PRO(x).  [clausify(70)].
224 STV(x) | -ST(x).  [clausify(70)].
225 STV(x) | -PRO(x).  [clausify(70)].
226 -STV(x) | -ACH(x).  [resolve(215,a,210,b)].
Derived: -ACH(x) | -ST(x).  [resolve(226,a,219,b)].
Derived: -ACH(x) | -PRO(x).  [resolve(226,a,221,b)].
227 -STV(x) | -ACC(x).  [resolve(215,a,212,b)].
Derived: -ACC(x) | -ST(x).  [resolve(227,a,219,b)].
Derived: -ACC(x) | -PRO(x).  [resolve(227,a,221,b)].
228 ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(216,a,213,b)].
Derived: ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(228,d,223,a)].

Eliminating TQ/1
229 -TL(x) | TQ(x).  [clausify(44)].
230 -TQ(x) | Q(x).  [clausify(38)].
Derived: -TL(x) | Q(x).  [resolve(229,b,230,a)].
231 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(62)].
232 Q(x) | -TQ(x).  [clausify(62)].
233 -TQ(x) | -PQ(x).  [clausify(63)].
Derived: -PQ(x) | -TL(x).  [resolve(233,a,229,b)].
234 -TQ(x) | -AQ(x).  [clausify(63)].
Derived: -AQ(x) | -TL(x).  [resolve(234,a,229,b)].

Eliminating PQ/1
235 -SL(x) | PQ(x).  [clausify(45)].
236 -PQ(x) | Q(x).  [clausify(38)].
Derived: -SL(x) | Q(x).  [resolve(235,b,236,a)].
237 Q(x) | -PQ(x).  [clausify(62)].
238 -PQ(x) | -AQ(x).  [clausify(64)].
Derived: -AQ(x) | -SL(x).  [resolve(238,a,235,b)].
239 -PQ(x) | -TL(x).  [resolve(233,a,229,b)].
Derived: -TL(x) | -SL(x).  [resolve(239,a,235,b)].

Eliminating AQ/1

Eliminating R/1
240 -TR(x) | R(x).  [clausify(46)].
241 -R(x) | AB(x).  [clausify(39)].
Derived: -TR(x) | AB(x).  [resolve(240,b,241,a)].
242 -PR(x) | R(x).  [clausify(46)].
Derived: -PR(x) | AB(x).  [resolve(242,b,241,a)].
243 -AR(x) | R(x).  [clausify(46)].
Derived: -AR(x) | AB(x).  [resolve(243,b,241,a)].
244 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(72)].
245 R(x) | -TR(x).  [clausify(72)].
246 R(x) | -PR(x).  [clausify(72)].
247 R(x) | -AR(x).  [clausify(72)].

Eliminating APO/1
248 -POB(x) | APO(x) | NAPO(x).  [clausify(75)].
249 -APO(x) | POB(x).  [clausify(47)].
250 POB(x) | -APO(x).  [clausify(75)].
251 -APO(x) | -NAPO(x).  [clausify(76)].

Eliminating NAPO/1

Eliminating MOB/1
252 -NPOB(x) | MOB(x) | SOB(x).  [clausify(77)].
253 -MOB(x) | NPOB(x).  [clausify(48)].
254 NPOB(x) | -MOB(x).  [clausify(77)].
255 -MOB(x) | -SOB(x).  [clausify(78)].

Eliminating SOB/1
256 -ASO(x) | SOB(x).  [clausify(51)].
257 -SOB(x) | NPOB(x).  [clausify(48)].
Derived: -ASO(x) | NPOB(x).  [resolve(256,b,257,a)].
258 -NASO(x) | SOB(x).  [clausify(51)].
Derived: -NASO(x) | NPOB(x).  [resolve(258,b,257,a)].
259 NPOB(x) | -SOB(x).  [clausify(77)].
260 -SOB(x) | ASO(x) | NASO(x).  [clausify(79)].
261 SOB(x) | -ASO(x).  [clausify(79)].
262 SOB(x) | -NASO(x).  [clausify(79)].

Eliminating TR/1
263 -TR(x) | -PR(x).  [clausify(73)].
264 -T(x) | TR(x).  [clausify(49)].
Derived: -PR(x) | -T(x).  [resolve(263,a,264,b)].
265 -TR(x) | -AR(x).  [clausify(73)].
Derived: -AR(x) | -T(x).  [resolve(265,a,264,b)].
266 -TR(x) | AB(x).  [resolve(240,b,241,a)].
Derived: AB(x) | -T(x).  [resolve(266,a,264,b)].

Eliminating S/1

Eliminating SAG/1
267 -ASO(x) | SAG(x) | SC(x).  [clausify(81)].
268 -SAG(x) | ASO(x).  [clausify(52)].
269 ASO(x) | -SAG(x).  [clausify(81)].
270 -SAG(x) | -SC(x).  [clausify(82)].

Eliminating SC/1

Eliminating AB/1
271 -PR(x) | AB(x).  [resolve(242,b,241,a)].
272 -ED(x) | -AB(x).  [clausify(54)].
273 -PD(x) | -AB(x).  [clausify(55)].
274 -Q(x) | -AB(x).  [clausify(56)].
Derived: -PR(x) | -ED(x).  [resolve(271,b,272,b)].
Derived: -PR(x) | -PD(x).  [resolve(271,b,273,b)].
Derived: -PR(x) | -Q(x).  [resolve(271,b,274,b)].
275 -AR(x) | AB(x).  [resolve(243,b,241,a)].
Derived: -AR(x) | -ED(x).  [resolve(275,b,272,b)].
Derived: -AR(x) | -PD(x).  [resolve(275,b,273,b)].
Derived: -AR(x) | -Q(x).  [resolve(275,b,274,b)].
276 AB(x) | -T(x).  [resolve(266,a,264,b)].
Derived: -T(x) | -ED(x).  [resolve(276,a,272,b)].
Derived: -T(x) | -PD(x).  [resolve(276,a,273,b)].
Derived: -T(x) | -Q(x).  [resolve(276,a,274,b)].

Eliminating M/1

Eliminating F/1

Eliminating ACH/1
277 ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(228,d,223,a)].
278 -ACH(x) | -ACC(x).  [clausify(69)].
279 -ACH(x) | PD(x).  [resolve(210,b,211,a)].
280 -ACH(x) | -ST(x).  [resolve(226,a,219,b)].
281 -ACH(x) | -PRO(x).  [resolve(226,a,221,b)].

Eliminating ST/1

Eliminating PR/1

Eliminating ASO/1

Eliminating POB/1

Eliminating NPOB/1
282 -NASO(x) | NPOB(x).  [resolve(258,b,257,a)].
283 -NPOB(x) | ED(x).  [resolve(202,b,203,a)].
Derived: -NASO(x) | ED(x).  [resolve(282,b,283,a)].

Eliminating ACC/1

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating AR/1

Eliminating NASO/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, PD, Q, O, overlaps, P, PRE, PP ]).
Function symbol precedence:  function_order([ c1, c2, f3, f4, f5, f6, f8, f9, f1, f7, f2, f10 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.26 seconds.

============================== PROOF =================================

% Proof 1 at 0.29 (+ 0.00) seconds.
% Length of proof is 40.
% Level of proof is 13.
% Maximum clause weight is 6.000.
% Given clauses 341.

5 (all x all y (in(x,y) <-> PRE(x,y) & T(y) & (ED(x) | PD(x) | Q(x)) | PRE(y,x) & T(x) & (ED(y) | PD(y) | Q(y)) | x = y & (ED(y) | PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
6 (all x (line(x) <-> ED(x) | PD(x) | Q(x))) # label(non_clause).  [assumption].
39 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
46 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
49 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
54 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
55 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
56 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
83 (all x all y (in(x,y) & line(x) & line(y) -> x = y)) # label(non_clause) # label(goal).  [goal].
99 -in(x,y) | T(y) | T(x) | y = x.  [clausify(5)].
113 in(c1,c2).  [deny(83)].
115 -line(x) | ED(x) | PD(x) | Q(x).  [clausify(6)].
118 line(c1).  [deny(83)].
119 line(c2).  [deny(83)].
240 -TR(x) | R(x).  [clausify(46)].
241 -R(x) | AB(x).  [clausify(39)].
264 -T(x) | TR(x).  [clausify(49)].
266 -TR(x) | AB(x).  [resolve(240,b,241,a)].
272 -ED(x) | -AB(x).  [clausify(54)].
273 -PD(x) | -AB(x).  [clausify(55)].
274 -Q(x) | -AB(x).  [clausify(56)].
276 AB(x) | -T(x).  [resolve(266,a,264,b)].
317 c2 != c1.  [deny(83)].
354 T(c2) | T(c1) | c2 = c1.  [resolve(113,a,99,a)].
355 T(c2) | T(c1).  [copy(354),unit_del(c,317)].
363 ED(c1) | PD(c1) | Q(c1).  [resolve(118,a,115,a)].
364 ED(c2) | PD(c2) | Q(c2).  [resolve(119,a,115,a)].
438 -T(x) | -ED(x).  [resolve(276,a,272,b)].
439 -T(x) | -PD(x).  [resolve(276,a,273,b)].
440 -T(x) | -Q(x).  [resolve(276,a,274,b)].
756 -T(c2) | ED(c2) | PD(c2).  [resolve(440,b,364,c)].
757 -T(c1) | ED(c1) | PD(c1).  [resolve(440,b,363,c)].
807 ED(c2) | PD(c2) | T(c1).  [resolve(756,a,355,a)].
808 ED(c2) | T(c1) | -T(c2).  [resolve(807,b,439,b)].
810 ED(c2) | T(c1).  [resolve(808,c,355,a),merge(c)].
811 T(c1) | -T(c2).  [resolve(810,a,438,b)].
813 T(c1).  [resolve(811,b,355,a),merge(b)].
820 ED(c1) | PD(c1).  [back_unit_del(757),unit_del(a,813)].
958 ED(c1).  [resolve(820,b,439,b),unit_del(b,813)].
959 $F.  [resolve(958,a,438,b),unit_del(a,813)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=341. Generated=2074. Kept=631. proofs=1.
Usable=326. Sos=175. Demods=0. Limbo=0, Disabled=497. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=1442. Back_subsumed=104.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=26.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=5406. Nonunit_bsub_feature_tests=5304.
Megabytes=1.36.
User_CPU=0.29, System_CPU=0.00, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 8190 exit (max_proofs) Fri Jul 19 01:36:37 2013
