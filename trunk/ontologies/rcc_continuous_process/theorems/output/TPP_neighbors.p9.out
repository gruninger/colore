============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 9668 was started by Bahar on Bahar-THINK,
Thu May  2 00:47:10 2013
The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 110.11 (+ 2.43) seconds.
% Length of proof is 73.
% Level of proof is 21.
% Maximum clause weight is 52.
% Given clauses 4204.

8 (all f all o (falsifies(o,f) <-> state(f) & arboreal(o) & prior(f,o) & -holds(f,o))) # label(non_clause).  [assumption].
9 (all f all o (achieves(o,f) <-> state(f) & arboreal(o) & -prior(f,o) & holds(f,o))) # label(non_clause).  [assumption].
10 (all f all o (changes(o,f) <-> achieves(o,f) | falsifies(o,f))) # label(non_clause).  [assumption].
11 (all o all x all y (changes(o,connect(x,y)) & (changes(o,connect(x,compl(y))) | changes(o,connect(compl(x),y)) | changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
12 (all o all x all y (changes(o,connect(x,compl(y))) & (changes(o,connect(compl(x),y)) | changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
13 (all o all x all y (changes(o,connect(compl(x),y)) & (changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
14 (all o all x all y (changes(o,Os(x,y)) & (changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
15 (all o all x all y (changes(o,Ps(x,y)) & changes(o,Ps(y,x)) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
16 (all x all y all o (changes(o,TPPs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,POs(x,y)))) # label(non_clause).  [assumption].
17 (all x all y all o (changes(o,TPPs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & changes(o,Ps(y,x)) & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,EQs(x,y)))) # label(non_clause).  [assumption].
18 (all x all y all o (changes(o,TPPs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,NTPPs(x,y)))) # label(non_clause).  [assumption].
19 (all x all y all o (changes(o,TPPs(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,connect(x,compl(y))) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)))) # label(non_clause).  [assumption].
20 (all x all y all o (changes(o,TPPs(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,POs(x,y)) | changes(o,EQs(x,y)) | changes(o,NTPPs(x,y)))) # label(non_clause) # label(goal).  [goal].
45 -changes(x,y) | achieves(x,y) | falsifies(x,y).  [clausify(10)].
46 -falsifies(x,y) | arboreal(x).  [clausify(8)].
53 -achieves(x,y) | arboreal(x).  [clausify(9)].
58 -changes(x,y) | achieves(x,y) | arboreal(x).  [resolve(45,c,46,a)].
64 -changes(x,connect(y,z)) | -changes(x,connect(y,compl(z))) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
67 -changes(x,connect(y,z)) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
68 -changes(x,connect(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
69 -changes(x,connect(y,compl(z))) | -changes(x,connect(compl(y),z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(12)].
70 -changes(x,connect(y,compl(z))) | -changes(x,Os(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(12)].
71 -changes(x,connect(y,compl(z))) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(12)].
72 -changes(x,connect(y,compl(z))) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(12)].
74 -changes(x,connect(compl(y),z)) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(13)].
75 -changes(x,connect(compl(y),z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(13)].
76 -changes(x,Os(y,z)) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(14)].
77 -changes(x,Os(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(14)].
78 -changes(x,Ps(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(15)].
79 -changes(x,TPPs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | -changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | changes(x,connect(y,compl(z))) | changes(x,connect(compl(y),z)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,POs(y,z)).  [clausify(16)].
80 -changes(x,TPPs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | -changes(x,Ps(z,y)) | changes(x,connect(y,compl(z))) | changes(x,connect(compl(y),z)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,EQs(y,z)).  [clausify(17)].
81 -changes(x,TPPs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | -changes(x,connect(y,compl(z))) | changes(x,connect(compl(y),z)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,NTPPs(y,z)).  [clausify(18)].
82 -changes(x,TPPs(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,connect(y,compl(z))) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)).  [clausify(19)].
83 changes(c3,TPPs(c1,c2)).  [deny(20)].
84 -changes(c3,region(c1)).  [deny(20)].
85 -changes(c3,region(c2)).  [deny(20)].
86 -changes(c3,POs(c1,c2)).  [deny(20)].
87 -changes(c3,EQs(c1,c2)).  [deny(20)].
88 -changes(c3,NTPPs(c1,c2)).  [deny(20)].
97 -changes(x,y) | arboreal(x) | arboreal(x).  [resolve(58,b,53,a)].
98 -changes(x,y) | arboreal(x).  [copy(97),merge(c)].
116 changes(c3,connect(c1,compl(c2))) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(83,a,82,a),unit_del(a,84),unit_del(b,85)].
118 -arboreal(c3) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)) | changes(c3,connect(c1,c2)).  [resolve(83,a,80,a),unit_del(h,84),unit_del(i,85),unit_del(j,87)].
119 -arboreal(c3) | changes(c3,Os(c1,c2)) | -changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)) | changes(c3,connect(c1,c2)).  [resolve(83,a,79,a),unit_del(h,84),unit_del(i,85),unit_del(j,86)].
120 arboreal(c3).  [resolve(98,a,83,a)].
121 changes(c3,Os(c1,c2)) | -changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)) | changes(c3,connect(c1,c2)).  [back_unit_del(119),unit_del(a,120)].
122 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)) | changes(c3,connect(c1,c2)).  [back_unit_del(118),unit_del(a,120)].
128 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,Os(c1,c2)) | changes(c3,connect(compl(c1),c2)) | changes(c3,connect(c1,c2)).  [resolve(116,a,81,f),merge(f),merge(g),unit_del(c,83),unit_del(d,120),unit_del(h,84),unit_del(i,85),unit_del(j,88)].
129 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,Os(c1,c2)).  [resolve(116,a,70,a),unit_del(d,84),unit_del(e,85)].
130 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,connect(compl(c1),c2)).  [resolve(116,a,69,a),unit_del(d,84),unit_del(e,85)].
131 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,connect(c1,c2)).  [resolve(116,a,64,b),unit_del(d,84),unit_del(e,85)].
232 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,Os(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(130,c,128,d),merge(c),merge(d)].
2357 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(232,c,129,c),merge(d),merge(e)].
2358 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)).  [resolve(2357,b,122,c),merge(d),merge(g)].
2360 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | -changes(c3,connect(compl(c1),c2)).  [resolve(2357,b,75,b),unit_del(d,84),unit_del(e,85)].
2362 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | -changes(c3,connect(c1,compl(c2))).  [resolve(2357,b,72,b),unit_del(d,84),unit_del(e,85)].
23697 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,connect(compl(c1),c2)).  [resolve(2358,d,2362,c),merge(e),merge(f)].
23698 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)).  [resolve(23697,d,2360,c),merge(d),merge(e)].
23700 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(23698,c,77,a),unit_del(d,84),unit_del(e,85)].
23702 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(23700,c,2357,b),merge(c),merge(d)].
23703 changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,compl(c2))) | changes(c3,connect(compl(c1),c2)).  [resolve(23702,a,121,b),merge(f)].
23705 changes(c3,connect(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(23702,a,78,b),unit_del(c,85),unit_del(d,84)].
23707 changes(c3,connect(c1,c2)) | -changes(c3,connect(compl(c1),c2)).  [resolve(23702,a,74,b),unit_del(c,84),unit_del(d,85)].
23709 changes(c3,connect(c1,c2)) | -changes(c3,connect(c1,compl(c2))).  [resolve(23702,a,71,b),unit_del(c,84),unit_del(d,85)].
25070 changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(compl(c1),c2)).  [resolve(23703,d,23709,b),merge(e)].
25073 changes(c3,connect(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(25070,d,23707,b),merge(d)].
25075 changes(c3,connect(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,Ps(c1,c2)).  [resolve(25073,b,76,a),unit_del(d,84),unit_del(e,85)].
25076 changes(c3,connect(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(25075,c,23702,a),merge(c)].
25077 changes(c3,connect(c1,c2)).  [resolve(25076,b,23705,b),merge(b)].
25078 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [back_unit_del(131),unit_del(c,25077)].
25082 -changes(c3,Ps(c2,c1)).  [ur(68,a,25077,a,c,84,a,d,85,a)].
25083 -changes(c3,Ps(c1,c2)).  [ur(67,a,25077,a,c,84,a,d,85,a)].
25087 $F.  [back_unit_del(25078),unit_del(a,25083),unit_del(b,25082)].

============================== end of proof ==========================
