% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, -1).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

%psl_core.th:ax12
all occ
        (activity_occurrence(occ)
        ->      
        (exists a
                (activity(a)
                & occurrence_of(occ,a)))).

%occtree.th:ax1
all s 
        (arboreal(s)
        ->
        activity_occurrence(s)).

%occtree.th:ax9
all s all a
        (occurrence_of(s,a)
        ->
        (arboreal(s)
        <->
        generator(a))).

%occtree.th:ax10
all a all o
        (occurrence_of(successor(a,o),a)
        <->
        (generator(a)
        & arboreal(o))).

%disc_state.th:ax2
all f all occ
	(holds(f,occ)
	->
	(state(f)
	& arboreal(occ))).

%disc_state.th:ax3
all f all occ
	(prior(f,occ)
	->
	(state(f)
	& arboreal(occ))).

%disc_state.th:ax5
all a all occ all f	
	(prior(f, successor(a,occ))
	<->
	(holds(f,occ)
	& generator(a))).

all f all o
	(falsifies(o,f)
	<->
	(state(f)
	& arboreal(o)
	& prior(f,o)
	& -holds(f,o))).

all f all o
	(achieves(o,f)
	<->
	(state(f)
	& arboreal(o)
	& -prior(f,o)
	& holds(f,o))).

all f all o
	(changes(o,f)
	<->
	(achieves(o,f)
	| falsifies(o,f))).

%continuous.th:ax1
all o all x all y 
	((changes(o,connect(x,y)) &
                 (  changes(o,connect(x,compl(y))) | changes(o,connect(compl(x),y))  
                  | changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)) )) 
                                        -> (changes(o,region(x)) | changes(o,region(y))) ).

%continuous.th:ax2
all o all x all y 
	((changes(o,connect(x,compl(y))) &
                 (   changes(o,connect(compl(x),y)) | changes(o,Os(x,y)) 
                   | changes(o,Ps(x,y)) | changes(o,Ps(y,x)) )) 
                                              -> (changes(o,region(x)) | changes(o,region(y))) ).

%continuous.th:ax3
all o all x all y 
	(( changes(o,connect(compl(x),y)) & 
                  (  changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)) )) 
                                                       -> (changes(o,region(x)) | changes(o,region(y))) ).

%continuous.th:ax4
all o all x all y 
	(( changes(o,Os(x,y)) & ( changes(o,Ps(x,y)) | changes(o,Ps(y,x)) )) 
                                                       -> (changes(o,region(x)) | changes(o,region(y))) ).

%continuous.th:ax5
all o all x all y 
	((  changes(o,Ps(x,y)) & changes(o,Ps(y,x)) ) -> (changes(o,region(x)) | changes(o,region(y)) ) ).

%EQ_TPP.lemma:1
all x all y all o (changes(o,EQs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) 
                                      & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y))
                                      & -changes(o,connect(x,y)) & -changes(o,region(x))& -changes(o,region(y)) -> changes(o,TPPs(x,y))).

%EQ_TPPi.lemma:1
all x all y all o (changes(o,EQs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & changes(o,Ps(y,x)) 
                                      & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y))
                                      & -changes(o,connect(x,y)) & -changes(o,region(x))& -changes(o,region(y)) -> changes(o,TPPs(y,x))).

%EQ_lemma:1
all x all y all o (changes(o,EQs(x,y)) & -changes(o,region(x))& -changes(o,region(y)) -> 
                                                                                ( changes(o,Ps(x,y)) | changes(o,Ps(y,x)))).

end_of_list.

formulas(goals).

all x all y all o ((changes(o,EQs(x,y)) & -changes(o,region(x)) & -changes(o,region(y))) -> (changes(o,TPPs(x,y)) | changes(o,TPPs(y,x)))).

end_of_list.

