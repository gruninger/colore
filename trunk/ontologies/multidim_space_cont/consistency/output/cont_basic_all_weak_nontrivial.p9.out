============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 11055 was started by torsten on stl-ws2,
Fri Aug  9 14:49:54 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_cont/consistency/p9/cont_basic_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/p9/cont_basic.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/consistency/p9/cont_basic_all_weak_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Cont(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Cont(x0,x1) & x1 != x0)).
(exists x0 ZEX(x0)).
(exists x0 -ZEX(x0)).
(exists x0 S(x0)).
(exists x0 -S(x0)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_space_cont/p9/cont_basic.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists x0 exists x1 (Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
2 (exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
3 (exists x0 exists x1 (Cont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
4 (exists x0 exists x1 (-Cont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
5 (exists x0 ZEX(x0)) # label(non_clause).  [assumption].
6 (exists x0 -ZEX(x0)) # label(non_clause).  [assumption].
7 (exists x0 S(x0)) # label(non_clause).  [assumption].
8 (exists x0 -S(x0)) # label(non_clause).  [assumption].
9 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
10 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
11 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
12 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
13 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
Cont(c1,c2).  [clausify(1)].
c2 != c1.  [clausify(1)].
-Cont(c3,c4).  [clausify(2)].
c4 != c3.  [clausify(2)].
Cont(c5,c6).  [clausify(3)].
c6 != c5.  [clausify(3)].
-Cont(c7,c8).  [clausify(4)].
c8 != c7.  [clausify(4)].
ZEX(c9).  [clausify(5)].
-ZEX(c10).  [clausify(6)].
S(c11).  [clausify(7)].
-S(c12).  [clausify(8)].
-S(x) | ZEX(x) | Cont(x,x).  [clausify(9)].
S(x) | -Cont(x,x).  [clausify(9)].
-ZEX(x) | -Cont(x,x).  [clausify(9)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(10)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(11)].
-ZEX(x) | S(x).  [clausify(12)].
-ZEX(x) | -Cont(y,x).  [clausify(12)].
-ZEX(x) | -Cont(x,y).  [clausify(12)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(13)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, S, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      14 Cont(c1,c2).  [clausify(1)].
kept:      15 c2 != c1.  [clausify(1)].
kept:      16 -Cont(c3,c4).  [clausify(2)].
kept:      17 c4 != c3.  [clausify(2)].
kept:      18 Cont(c5,c6).  [clausify(3)].
kept:      19 c6 != c5.  [clausify(3)].
kept:      20 -Cont(c7,c8).  [clausify(4)].
kept:      21 c8 != c7.  [clausify(4)].
kept:      22 ZEX(c9).  [clausify(5)].
kept:      23 -ZEX(c10).  [clausify(6)].
kept:      24 S(c11).  [clausify(7)].
kept:      25 -S(c12).  [clausify(8)].
kept:      26 -S(x) | ZEX(x) | Cont(x,x).  [clausify(9)].
kept:      27 S(x) | -Cont(x,x).  [clausify(9)].
kept:      28 -ZEX(x) | -Cont(x,x).  [clausify(9)].
kept:      29 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(10)].
kept:      30 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(11)].
kept:      31 -ZEX(x) | S(x).  [clausify(12)].
kept:      32 -ZEX(x) | -Cont(y,x).  [clausify(12)].
kept:      33 -ZEX(x) | -Cont(x,y).  [clausify(12)].
kept:      34 -ZEX(x) | -ZEX(y) | y = x.  [clausify(13)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
14 Cont(c1,c2).  [clausify(1)].
15 c2 != c1.  [clausify(1)].
16 -Cont(c3,c4).  [clausify(2)].
17 c4 != c3.  [clausify(2)].
18 Cont(c5,c6).  [clausify(3)].
19 c6 != c5.  [clausify(3)].
20 -Cont(c7,c8).  [clausify(4)].
21 c8 != c7.  [clausify(4)].
22 ZEX(c9).  [clausify(5)].
23 -ZEX(c10).  [clausify(6)].
24 S(c11).  [clausify(7)].
25 -S(c12).  [clausify(8)].
26 -S(x) | ZEX(x) | Cont(x,x).  [clausify(9)].
27 S(x) | -Cont(x,x).  [clausify(9)].
29 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(10)].
30 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(11)].
31 -ZEX(x) | S(x).  [clausify(12)].
32 -ZEX(x) | -Cont(y,x).  [clausify(12)].
33 -ZEX(x) | -Cont(x,y).  [clausify(12)].
34 -ZEX(x) | -ZEX(y) | y = x.  [clausify(13)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=3): 14 Cont(c1,c2).  [clausify(1)].

given #2 (I,wt=3): 15 c2 != c1.  [clausify(1)].

given #3 (I,wt=3): 16 -Cont(c3,c4).  [clausify(2)].

given #4 (I,wt=3): 17 c4 != c3.  [clausify(2)].

given #5 (I,wt=3): 18 Cont(c5,c6).  [clausify(3)].

given #6 (I,wt=3): 19 c6 != c5.  [clausify(3)].

given #7 (I,wt=3): 20 -Cont(c7,c8).  [clausify(4)].

given #8 (I,wt=3): 21 c8 != c7.  [clausify(4)].

given #9 (I,wt=2): 22 ZEX(c9).  [clausify(5)].

given #10 (I,wt=2): 23 -ZEX(c10).  [clausify(6)].

given #11 (I,wt=2): 24 S(c11).  [clausify(7)].

given #12 (I,wt=2): 25 -S(c12).  [clausify(8)].

given #13 (I,wt=7): 26 -S(x) | ZEX(x) | Cont(x,x).  [clausify(9)].

given #14 (I,wt=5): 27 S(x) | -Cont(x,x).  [clausify(9)].

given #15 (I,wt=9): 29 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(10)].

given #16 (I,wt=9): 30 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(11)].

given #17 (I,wt=4): 31 -ZEX(x) | S(x).  [clausify(12)].

given #18 (I,wt=5): 32 -ZEX(x) | -Cont(y,x).  [clausify(12)].

given #19 (I,wt=5): 33 -ZEX(x) | -Cont(x,y).  [clausify(12)].

given #20 (I,wt=7): 34 -ZEX(x) | -ZEX(y) | y = x.  [clausify(13)].

given #21 (A,wt=5): 35 ZEX(c11) | Cont(c11,c11).  [resolve(26,a,24,a)].

given #22 (F,wt=2): 44 -ZEX(c12).  [ur(31,b,25,a)].

given #23 (F,wt=2): 45 -ZEX(c6).  [resolve(32,b,18,a)].

given #24 (F,wt=2): 46 -ZEX(c2).  [resolve(32,b,14,a)].

given #25 (F,wt=2): 48 -ZEX(c5).  [resolve(33,b,18,a)].

given #26 (T,wt=2): 43 S(c9).  [resolve(31,a,22,a)].

given #27 (T,wt=5): 51 -ZEX(x) | c9 = x.  [resolve(34,a,22,a),flip(b)].

given #28 (T,wt=6): 39 -Cont(c6,x) | Cont(c5,x).  [resolve(30,a,18,a)].

given #29 (T,wt=6): 40 -Cont(c2,x) | Cont(c1,x).  [resolve(30,a,14,a)].

given #30 (A,wt=3): 36 -Cont(c12,c12).  [ur(27,a,25,a)].

given #31 (F,wt=2): 49 -ZEX(c1).  [resolve(33,b,14,a)].

given #32 (F,wt=3): 37 -Cont(c6,c5).  [resolve(29,a,18,a),unit_del(b,19)].

given #33 (F,wt=3): 38 -Cont(c2,c1).  [resolve(29,a,14,a),unit_del(b,15)].

given #34 (F,wt=3): 47 -Cont(x,c9).  [ur(32,a,22,a)].

given #35 (T,wt=6): 41 -Cont(x,c5) | Cont(x,c6).  [resolve(30,b,18,a)].

given #36 (T,wt=6): 42 -Cont(x,c1) | Cont(x,c2).  [resolve(30,b,14,a)].

given #37 (A,wt=3): 50 -Cont(c9,x).  [ur(33,a,22,a)].

============================== STATISTICS ============================

Given=37. Generated=70. Kept=38. proofs=0.
Usable=37. Sos=0. Demods=0. Limbo=0, Disabled=22. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=32. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=4. Nonunit_bsub_feature_tests=20.
Megabytes=0.10.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 11055 exit (sos_empty) ------

Process 11055 exit (sos_empty) Fri Aug  9 14:49:54 2013
============================= prover9 ================================
execution finished: Fri Aug 09 14:49:55 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_space_cont/consistency/p9/cont_basic_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_space_cont/p9/cont_basic.p9"
Input read from 
============================ end of footer ===========================
