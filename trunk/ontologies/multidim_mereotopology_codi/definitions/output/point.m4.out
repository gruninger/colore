============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 8571 was started by torsten on stl-ws2,
Tue Oct  8 16:55:11 2013
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9


formulas(sos).
(all x (Point(x) <-> Min(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
2 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
3 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
4 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
5 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
6 (exists x MinDim(x)) # label(non_clause).  [assumption].
7 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
8 (all x x <= x) # label(non_clause).  [assumption].
9 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
10 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
11 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
12 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
14 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
15 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
16 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
17 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
18 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
19 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
20 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
21 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
22 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
23 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
26 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
27 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
28 (all x -(x < x)) # label(non_clause).  [assumption].
29 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
30 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
31 (all x EqDim(x,x)) # label(non_clause).  [assumption].
32 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
33 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
34 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
35 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
36 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
37 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
38 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
39 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
40 (all x (Point(x) <-> Min(x) & MinDim(x))) # label(non_clause).  [assumption].
41 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f1(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f2(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f2(x)).
MinDim(c1).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
-Cont(x,y) | x < y | EqDim(x,y).
Cont(f3(x,y),x) | Cont(f3(x,y),y) | y = x.
-Cont(f3(x,y),x) | -Cont(f3(x,y),y) | y = x.
-Inc(x,y) | f4(x,y) < x | f5(x,y) < y.
-Inc(x,y) | f4(x,y) < x | Cont(f5(x,y),y).
-Inc(x,y) | f4(x,y) < x | P(f5(x,y),x).
-Inc(x,y) | Cont(f4(x,y),x) | f5(x,y) < y.
-Inc(x,y) | Cont(f4(x,y),x) | Cont(f5(x,y),y).
-Inc(x,y) | Cont(f4(x,y),x) | P(f5(x,y),x).
-Inc(x,y) | P(f4(x,y),y) | f5(x,y) < y.
-Inc(x,y) | P(f4(x,y),y) | Cont(f5(x,y),y).
-Inc(x,y) | P(f4(x,y),y) | P(f5(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f6(x,y).
Covers(x,y) | -(y < x) | f6(x,y) < x.
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f7(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f8(x),x).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
-SC(x,y) | Cont(f9(x,y),x).
-SC(x,y) | Cont(f9(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f10(x,y) < x) | -(f10(x,y) < y).
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-C(x,y) | Cont(f11(x,y),x).
-C(x,y) | Cont(f11(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-PO(x,y) | P(f12(x,y),x).
-PO(x,y) | P(f12(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c2).
-(x < c2) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
-Point(x) | Min(x).
-Point(x) | MinDim(x).
Point(x) | -Min(x) | -MinDim(x).
-Cont(x,y) | x < y | EqDim(x,y).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(c1, [ 0 ]),

        function(c2, [ 0 ]),

        function(f1(_), [ 0, 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(f7(_), [ 0, 0 ]),

        function(f8(_), [ 0, 0 ]),

        function(f3(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f4(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f5(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f6(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f9(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f10(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f11(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f12(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(Max(_), [ 1, 0 ]),

        relation(MaxDim(_), [ 1, 0 ]),

        relation(Min(_), [ 1, 0 ]),

        relation(MinDim(_), [ 1, 0 ]),

        relation(Point(_), [ 1, 0 ]),

        relation(ZEX(_), [ 0, 1 ]),

        relation(<(_,_), [
			   0, 0,
			   1, 0 ]),

        relation(<=(_,_), [
			   1, 0,
			   1, 1 ]),

        relation(>(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(>=(_,_), [
			   1, 1,
			   0, 1 ]),

        relation(C(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(Cont(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(Covers(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(EqDim(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(Inc(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(P(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(PO(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(PP(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(SC(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=376, kept=320.
Selections=41, assignments=41, propagations=65, current_models=1.
Rewrite_terms=154, rewrite_bools=498, indexes=27.
Rules_from_neg_clauses=1, cross_offs=1.

============================== end of statistics =====================

------ process 8571 exit (max_models) ------

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 8571 exit (max_models) Tue Oct  8 16:55:11 2013
The process finished Tue Oct  8 16:55:11 2013
============================= mace4 ================================
execution finished: Tue Oct 08 16:55:12 2013
total CPU time used: 0
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9"
Input read from 
============================ end of footer ===========================
