============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 8891 was started by torsten on stl-ws2,
Tue Oct  8 16:56:17 2013
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/consistency/conversions/point_region_all_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/consistency/conversions/point_region_all_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-P(x0,x1) & x0 != x1)).
(exists x0 MaxDim(x0)).
(exists x0 -MaxDim(x0)).
(exists x0 Max(x0)).
(exists x0 -Max(x0)).
(exists x0 ZEX(x0)).
(exists x0 -ZEX(x0)).
(exists x0 Min(x0)).
(exists x0 -Min(x0)).
(exists x0 exists x1 (PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (x0 <= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 <= x1) & x0 != x1)).
(exists x0 exists x1 (PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)).
(exists x0 PointRegion(x0)).
(exists x0 -PointRegion(x0)).
(exists x0 exists x1 (x0 < x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 < x1) & x0 != x1)).
(exists x0 exists x1 (SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (x0 > x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 > x1) & x0 != x1)).
(exists x0 exists x1 (C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-C(x0,x1) & x0 != x1)).
(exists x0 MinDim(x0)).
(exists x0 -MinDim(x0)).
(exists x0 exists x1 (Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (x0 >= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 >= x1) & x0 != x1)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9


formulas(sos).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
2 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
3 (exists x MinDim(x)) # label(non_clause).  [assumption].
4 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
5 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
6 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
7 (exists x0 exists x1 (Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
8 (exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
9 (exists x0 exists x1 (P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
10 (exists x0 exists x1 (-P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
11 (exists x0 MaxDim(x0)) # label(non_clause).  [assumption].
12 (exists x0 -MaxDim(x0)) # label(non_clause).  [assumption].
13 (exists x0 Max(x0)) # label(non_clause).  [assumption].
14 (exists x0 -Max(x0)) # label(non_clause).  [assumption].
15 (exists x0 ZEX(x0)) # label(non_clause).  [assumption].
16 (exists x0 -ZEX(x0)) # label(non_clause).  [assumption].
17 (exists x0 Min(x0)) # label(non_clause).  [assumption].
18 (exists x0 -Min(x0)) # label(non_clause).  [assumption].
19 (exists x0 exists x1 (PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
20 (exists x0 exists x1 (-PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
21 (exists x0 exists x1 (x0 <= x1 & x0 != x1)) # label(non_clause).  [assumption].
22 (exists x0 exists x1 (-(x0 <= x1) & x0 != x1)) # label(non_clause).  [assumption].
23 (exists x0 exists x1 (PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
24 (exists x0 exists x1 (-PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
25 (exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
26 (exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
27 (exists x0 PointRegion(x0)) # label(non_clause).  [assumption].
28 (exists x0 -PointRegion(x0)) # label(non_clause).  [assumption].
29 (exists x0 exists x1 (x0 < x1 & x0 != x1)) # label(non_clause).  [assumption].
30 (exists x0 exists x1 (-(x0 < x1) & x0 != x1)) # label(non_clause).  [assumption].
31 (exists x0 exists x1 (SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
32 (exists x0 exists x1 (-SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
33 (exists x0 exists x1 (x0 > x1 & x0 != x1)) # label(non_clause).  [assumption].
34 (exists x0 exists x1 (-(x0 > x1) & x0 != x1)) # label(non_clause).  [assumption].
35 (exists x0 exists x1 (C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
36 (exists x0 exists x1 (-C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
37 (exists x0 MinDim(x0)) # label(non_clause).  [assumption].
38 (exists x0 -MinDim(x0)) # label(non_clause).  [assumption].
39 (exists x0 exists x1 (Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
40 (exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
41 (exists x0 exists x1 (Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
42 (exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
43 (exists x0 exists x1 (x0 >= x1 & x0 != x1)) # label(non_clause).  [assumption].
44 (exists x0 exists x1 (-(x0 >= x1) & x0 != x1)) # label(non_clause).  [assumption].
45 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
46 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
47 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
48 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].
49 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
50 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
51 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
52 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
53 (all x x <= x) # label(non_clause).  [assumption].
54 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
55 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
56 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
57 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
58 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
59 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
60 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
61 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
62 (all x -(x < x)) # label(non_clause).  [assumption].
63 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
64 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
65 (all x EqDim(x,x)) # label(non_clause).  [assumption].
66 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
67 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
68 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
69 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
70 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
71 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
72 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
73 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
74 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
75 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
76 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
77 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
78 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
79 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-PO(x,y) | P(f1(x,y),x).
-PO(x,y) | P(f1(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-Cont(x,y) | x < y | EqDim(x,y).
MinDim(c1).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
-SC(x,y) | Cont(f2(x,y),x).
-SC(x,y) | Cont(f2(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f3(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f3(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f3(x,y) < x) | -(f3(x,y) < y).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
Inc(c2,c3).
c3 != c2.
-Inc(c4,c5).
c5 != c4.
P(c6,c7).
c7 != c6.
-P(c8,c9).
c9 != c8.
MaxDim(c10).
-MaxDim(c11).
Max(c12).
-Max(c13).
ZEX(c14).
-ZEX(c15).
Min(c16).
-Min(c17).
PO(c18,c19).
c19 != c18.
-PO(c20,c21).
c21 != c20.
c22 <= c23.
c23 != c22.
-(c24 <= c25).
c25 != c24.
PP(c26,c27).
c27 != c26.
-PP(c28,c29).
c29 != c28.
EqDim(c30,c31).
c31 != c30.
-EqDim(c32,c33).
c33 != c32.
PointRegion(c34).
-PointRegion(c35).
c36 < c37.
c37 != c36.
-(c38 < c39).
c39 != c38.
SC(c40,c41).
c41 != c40.
-SC(c42,c43).
c43 != c42.
c44 > c45.
c45 != c44.
-(c46 > c47).
c47 != c46.
C(c48,c49).
c49 != c48.
-C(c50,c51).
c51 != c50.
MinDim(c52).
-MinDim(c53).
Cont(c54,c55).
c55 != c54.
-Cont(c56,c57).
c57 != c56.
Covers(c58,c59).
c59 != c58.
-Covers(c60,c61).
c61 != c60.
c62 >= c63.
c63 != c62.
-(c64 >= c65).
c65 != c64.
-Cont(x,y) | x < y | EqDim(x,y).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f4(x,y).
Covers(x,y) | -(y < x) | f4(x,y) < x.
Cont(f5(x,y),x) | Cont(f5(x,y),y) | y = x.
-Cont(f5(x,y),x) | -Cont(f5(x,y),y) | y = x.
-PointRegion(x) | MinDim(x).
PointRegion(x) | -MinDim(x).
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
-C(x,y) | Cont(f6(x,y),x).
-C(x,y) | Cont(f6(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f7(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f8(x),x).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f9(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f10(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f10(x)).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c66).
-(x < c66) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
-Inc(x,y) | f11(x,y) < x | f12(x,y) < y.
-Inc(x,y) | f11(x,y) < x | Cont(f12(x,y),y).
-Inc(x,y) | f11(x,y) < x | P(f12(x,y),x).
-Inc(x,y) | Cont(f11(x,y),x) | f12(x,y) < y.
-Inc(x,y) | Cont(f11(x,y),x) | Cont(f12(x,y),y).
-Inc(x,y) | Cont(f11(x,y),x) | P(f12(x,y),x).
-Inc(x,y) | P(f11(x,y),y) | f12(x,y) < y.
-Inc(x,y) | P(f11(x,y),y) | Cont(f12(x,y),y).
-Inc(x,y) | P(f11(x,y),y) | P(f12(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=438, kept=372.
Selections=6, assignments=11, propagations=81, current_models=0.
Rewrite_terms=55, rewrite_bools=417, indexes=10.
Rules_from_neg_clauses=27, cross_offs=27.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===
============================= mace4 ================================
execution finished: Tue Oct 08 16:56:26 2013
total CPU time used: 8
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/consistency/conversions/point_region_all_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9"
Input read from 
============================ end of footer ===========================
