%axioms from module codi//consistency/p9/codi_down_sum_nontrivial.p9
%----------------------------------

% Automatically generated from CL/KIF
formulas(sos).
% Module http://colore.oor.net/multidim_mereotopology_codi/consistency/codi_down_sum_nontrivial.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down_sum.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/po.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/sc.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/inc.clif").
 exists x exists y exists z exists v (-((x = y)) & -((x = z)) & -((y = z)) & (sum(x, y) = z) & SC(x, y) & LESS(v, x) & Inc(v, x) & -(Cont(v, x))).


%axioms from module codi/p9/codi_down_sum.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_down_sum.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsPO-E1.clif").
% 'CODI with downwards closure and sums'
% 'Sum-A1: sum is commutative'
 all x all y ((sum(x, y) = sum(y, x))).
% 'Sum-A2: sum of entities of different dimensions'
 all x all y ((LESS(x, y) -> (y = sum(x, y)))).
% 'Sum-A3: every part of y is a part of x+y if x<=y'
 all x all y all z ((LEQ(x, y) & Cont(z, y) -> Cont(z, sum(x, y)))).
% 'Sum-A4: everything contained in the sum has a part contained in x or contained in y'
 all x all y all z ((Cont(z, sum(x, y)) & -(Cont(z, x)) -> Cont(difference(z, x), y))).


%axioms from module codi//defs/p9/po.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/po.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'PO-D: partial overlap (strong contact)'
 all x all y ((PO(x, y) <->  exists z (P(z, x) & P(z, y)))).


%axioms from module codi//defs/p9/sc.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/sc.clif
% 'SC-D: superficial (weak) contact (contact is of a lesser dimension than either involved entity) - prover9 file needs extra parentheses'
 all x all y ((SC(x, y) <->  exists z (Cont(z, x) & Cont(z, y)) &  all z ((Cont(z, x) & Cont(z, y) -> LESS(z, x) & LESS(z, y))))).


%axioms from module codi//defs/p9/inc.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/inc.clif
% 'basic axioms of incidence (two entities occupy some same space. It is reserved for entities of differing dimensions. It is a variant of contact.'
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'Inc-D: incidence holds if and only if some entity of the dimension as the lower of the two incident entities is shared'
 all x all y ((Inc(x, y) <->  exists z (LESS(z, x) & Cont(z, x) & P(z, y)) |  exists z (LESS(z, y) & Cont(z, y) & P(z, x)))).


%axioms from module codi/p9/codi_down.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_int.clif").
% 'Closure under differences'
% 'Dif-A1: difference is of same dimension'
 all x all y ((-(ZEX(difference(x, y))) -> EqDim(x, difference(x, y)))).
% 'Dif-A2: difference with a entity of lower dimension'
 all x all y ((LESS(y, x) -> (x = difference(x, y)))).
% 'Dif-A3a: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & Cont(z, x) & LESS(intersection(z, y), z) -> Cont(z, difference(x, y)))).
% 'Dif-A3b: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & Cont(z, difference(x, y)) -> Cont(z, x))).
% 'Dif-A3c: constitution of the difference with an entity of greater or equal dimension'
 all x all y all z ((LEQ(x, y) & P(z, difference(x, y)) -> LESS(intersection(z, y), z))).
% 'Dif-A4: zero difference only for contained entities or for zero entity'
 all x all y ((ZEX(difference(x, y)) <-> ZEX(x) | Cont(x, y))).


%axioms from module codi//theorems/p9/codi_down_theoremsPO-E1.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsPO-E1.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E3.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT11.clif").
% 'parthood defined by PO'
 all x all y ((-(ZEX(x)) &  all z ((PO(x, z) -> PO(y, z))) -> P(x, y))).
% 'PO-E1: extensionality of PO'
 all x all y (( all z ((PO(x, z) <-> PO(y, z))) -> (x = y))).


%axioms from module codi//defs/p9/ep.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif
% 'basic axioms of traditional parthood (parthood of equidimensional entities) which is a non-strict partial order'
% 'parthood holds between two entities of the same spatial dimension'
% 'EP-D: definition of parthood'
 all x all y ((P(x, y) <-> Cont(x, y) & EqDim(x, y))).


%axioms from module codi/p9/codi_int.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_int.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_linear.clif").
%imports("http://colore.oor.net/multidim_mereotopology_zex/zex.clif").
% 'Int-A1: disconnected entities have empty intersection'
 all x all y ((-(C(x, y)) <-> ZEX(intersection(x, y)))).
% 'Int-A2: the intersection is contained in the intersecting entities (also ensures the intersection is of no greater dimension than necessary)'
 all x all y ((-(ZEX(intersection(x, y))) -> Cont(intersection(x, y), x))).
% 'Int-A3: the intersection is of greatest possible dimension (determines the dimension of the intersection)'
 all x all y all z ((Cont(z, x) & Cont(z, y) -> LEQ(z, intersection(x, y)))).
% 'Int-A4: the intersection contains everything of the greatest possible dimension (and whatever those things contain)'
 all x all y all z ((Cont(z, x) & Cont(z, y) & EqDim(z, intersection(x, y)) <-> P(z, intersection(x, y)))).


%axioms from module codi//theorems/p9/codi_down_theoremsEP-E3.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E3.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E2.clif").
% 'EP-E3: strong supplementation for containment'
 all x all y ((-(ZEX(x)) & -(ZEX(y)) & -(Cont(y, x)) ->  exists z (P(z, y) & LESS(intersection(z, x), z)))).


%axioms from module codi//theorems/p9/codi_down_theoremsT11.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT11.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/min_max_in_dim.clif").
% 'Dif-T11: Any minimal entity contained in x is contained in either y or x-y. If it were contained in neither but in contact to both, by Int-A1 to Int-A3, intersections would exist.'
 all x all y all z ((P(y, x) & Min(z) & Cont(z, x) -> Cont(z, y) | Cont(z, difference(x, y)))).


%axioms from module codi/p9/codi_linear.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/codi_linear.clif
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif").
%imports("http://colore.oor.net/multidim_mereotopology_cont/cont_c.clif").
% 'relationship between dimension and containment'
% 'CD-A1: containment requires that the contained entity has a dimension that is lower or equal to the entity containing it'
 all x all y ((Cont(x, y) -> LESS(x, y) | EqDim(x, y))).


%axioms from module zex/p9/zex.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/zex.clif
% 'forces a special null region (zex)'
% 'Z-A1: there exists a zex'
 exists x (ZEX(x)).


%axioms from module codi//theorems/p9/codi_down_theoremsEP-E2.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E2.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E1.clif").
% 'EP-E2.II: strong supplementation'
 all x all y ((-(ZEX(x)) & -(ZEX(y)) & -(P(y, x)) & EqDim(x, y) & PO(x, y) & -(PP(y, x)) ->  exists z (P(z, y) & -(PO(z, x))))).
% 'EP-E2.III: strong supplementation'
 all x all y ((-(ZEX(x)) & -(ZEX(y)) & -(P(y, x)) & EqDim(x, y) & -(PO(x, y)) ->  exists z (P(z, y) & -(PO(z, x))))).
% 'EP-E2.IV: strong supplementation'
 all x all y ((-(ZEX(x)) & -(ZEX(y)) & -(P(y, x)) & -(EqDim(x, y)) ->  exists z (P(z, y) & -(PO(z, x))))).


%axioms from module codi//defs/p9/min_max_in_dim.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/min_max_in_dim.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif").
% 'definitional extension'
% 'ME-D1: defining maximal entities of a dimension'
 all x ((Max(x) <-> -(ZEX(x)) &  all y (-(PP(x, y))))).
% 'ME-D2: defining minimal entities of a dimension'
 all x ((Min(x) <-> -(ZEX(x)) &  all y (-(PP(y, x))))).


%axioms from module dim/p9/dim_prime_linear.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif
% 'compact axioms for linear relative dimension with a lowest non-zero dimension'
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_unbounded.clif").
% 'D-A6: a lowest dimension must exist'
 exists x (MinDim(x)).


%axioms from module cont/p9/cont_c.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_cont/cont_c.clif
%imports("http://colore.oor.net/multidim_mereotopology_cont/cont_basic.clif").
% 'C-D: definition of contact in terms of containment'
 all x all y ((C(x, y) <->  exists z (Cont(z, x) & Cont(z, y)))).


%axioms from module codi//theorems/p9/codi_down_theoremsEP-E1.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsEP-E1.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT1-T2.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT3-T5.clif").
% 'EP-E1: weak supplementation - original'
 all x all y ((PP(x, y) ->  exists z (P(z, y) & -(PO(z, x))))).


%axioms from module codi//defs/p9/epp.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/defs/epp.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/defs/ep.clif").
% 'EPP-D: definition of proper parthood'
 all x all y ((PP(x, y) <-> P(x, y) & -((x = y)))).


%axioms from module dim/p9/dim_prime_linear_unbounded.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_unbounded.clif
% 'compact axioms for linear relative dimension'
% 'D-A1: irreflexive'
 all x (-(LESS(x, x))).
% 'D-A2: asymmetric (antisymmetric & irreflexive)'
 all x all y ((LESS(x, y) -> -(LESS(y, x)))).
% 'D-A3: transitive (corrected from IJCAI version: need <= in the second condition to ensure that EqDim is transitive)'
 all x all y all z ((LESS(x, y) & LEQ(y, z) -> LESS(x, z))).
% 'D-A4: unique ZEX'
 all x all y ((ZEX(x) & ZEX(y) -> (x = y))).
% 'D-A5: ZEX has dimension lower than anything else'
 all x all y ((ZEX(x) & -(ZEX(y)) -> LESS(x, y))).
% 'D-D2: define EqDim in terms of <'
 all x all y ((EqDim(x, y) <-> -(LESS(x, y)) & -(LESS(y, x)))).
% 'D-D3: <='
 all x all y ((LEQ(x, y) <-> LESS(x, y) | EqDim(x, y))).
% 'D-D4: Maximal dimension (Codim=0)'
 all x ((MaxDim(x) <->  all y (LEQ(y, x)))).
% 'D-D5: Minimal dimension (Dim=0)'
 all x ((MinDim(x) <-> -(ZEX(x)) &  all y ((LESS(y, x) -> ZEX(y))))).
% 'D-D6: next highest dimension (covers), x covers y if x>y and no z s.t. x>z>y'
 all x all y ((Covers(x, y) <-> LESS(y, x) &  all z (-(LESS(y, z) & LESS(z, x))))).


%axioms from module cont/p9/cont_basic.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_cont/cont_basic.clif
% 'basic axioms of containment (parthood irrespective of dimension) which is a non-strict partial order'
% 'a possibly existing zero extent ZEX is included'
% 'C-A1: reflexive'
 all x ((-(ZEX(x)) <-> Cont(x, x))).
% 'C-A2: antisymmetric'
 all x all y ((Cont(x, y) & Cont(y, x) -> (x = y))).
% 'C-A3: transitive'
 all x all y all z ((Cont(x, y) & Cont(y, z) -> Cont(x, z))).
% 'C-A4: ZEXs are not contained in anything and contain nothing'
 all x all y ((ZEX(x) -> -(Cont(y, x)) & -(Cont(x, y)))).
% 'The following hold no matter whether a ZEX exists or not (already included in the basic axiomatization of dimension)'
% 'D-A4: unique ZEX (previously Z-A2)'
 all x all y ((ZEX(x) & ZEX(y) -> (x = y))).


%axioms from module codi//theorems/p9/codi_down_theoremsT1-T2.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT1-T2.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
% 'Dif-T1'
 all x all y ((-(ZEX(difference(x, y))) -> P(difference(x, y), x))).
% 'Dif-T2 - easier'
 all x all y ((PP(y, x) & -(ZEX(difference(x, y))) & P(difference(x, y), x) -> PP(difference(x, y), x))).
% 'Dif-T2 - full'
 all x all y ((PP(y, x) -> PP(difference(x, y), x))).


%axioms from module codi//theorems/p9/codi_down_theoremsT3-T5.p9
%----------------------------------

% Automatically generated from CL/KIF
% Module http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT3-T5.clif
%imports("http://colore.oor.net/multidim_mereotopology_codi/codi_down.clif").
%imports("http://colore.oor.net/multidim_mereotopology_codi/theorems/codi_down_theoremsT1-T2.clif").
% 'Dif-T3'
 all x all y ((-(ZEX(y)) & -(ZEX(difference(x, y))) -> -(PO(y, difference(x, y))))).
% 'Dif-T4'
 all x all y (-(PO(intersection(x, y), difference(x, y)))).
% 'Dif-T5a'
 all x all y all z ((P(z, difference(x, y)) -> P(z, x))).
% 'Dif-T5b'
 all x all y all z ((P(z, difference(x, y)) -> -(PO(z, intersection(x, y))))).
% 'Dif-T5c'
 all x all y all z ((P(z, x) & -(PO(z, intersection(x, y))) -> P(z, difference(x, y)))).

end_of_list.

