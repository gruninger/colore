============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 13245 was started by torsten on stl-ws2,
Thu Feb 23 17:48:45 2012
The command was "prover9 -t 600 -f codi/conversions/codi_down.p9 codi/definitions/input/min_max_in_dim.p9 codi/conversions/codi_int.p9 codi/definitions/input/epp.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsT11_relevance1.order codi/theorems/input/codi_down_theoremsT11_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsT11_relevance1.order

predicate_order([EqDim,=,Min,PP,C,P,<=,difference,ZEX,<,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsT11_1.p9


formulas(goals).
(all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: difference.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
3 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
7 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
8 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
9 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
10 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
11 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
13 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
14 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
15 (exists x ZEX(x)) # label(non_clause).  [assumption].
16 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x -(x < x)) # label(non_clause).  [assumption].
18 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
19 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
20 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
22 (exists x MinDim(x)) # label(non_clause).  [assumption].
23 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
24 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
25 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
26 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
27 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
28 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
29 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
30 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
31 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
33 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
34 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
35 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
36 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
37 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
38 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Max/1
39 Max(x) | ZEX(x) | PP(x,f1(x)).  [clausify(7)].
40 -Max(x) | -ZEX(x).  [clausify(7)].
41 -Max(x) | -PP(x,y).  [clausify(7)].
Derived: ZEX(x) | PP(x,f1(x)) | -PP(x,y).  [resolve(39,a,41,a)].

Eliminating Min/1
42 Min(x) | ZEX(x) | PP(f2(x),x).  [clausify(8)].
43 -Min(x) | -ZEX(x).  [clausify(8)].
44 -Min(x) | -PP(y,x).  [clausify(8)].
Derived: ZEX(x) | PP(f2(x),x) | -PP(y,x).  [resolve(42,a,44,a)].
45 Min(c5).  [deny(38)].
Derived: -ZEX(c5).  [resolve(45,a,43,a)].
Derived: -PP(x,c5).  [resolve(45,a,44,a)].

Eliminating MinDim/1
46 -MinDim(x) | -ZEX(x).  [clausify(26)].
47 MinDim(c2).  [clausify(22)].
Derived: -ZEX(c2).  [resolve(46,a,47,a)].
48 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(26)].
Derived: -(x < c2) | ZEX(x).  [resolve(48,a,47,a)].
49 MinDim(x) | ZEX(x) | f4(x) < x.  [clausify(26)].
Derived: ZEX(x) | f4(x) < x | -(y < x) | ZEX(y).  [resolve(49,a,48,a)].
50 MinDim(x) | ZEX(x) | -ZEX(f4(x)).  [clausify(26)].
Derived: ZEX(x) | -ZEX(f4(x)) | -(y < x) | ZEX(y).  [resolve(50,a,48,a)].

Eliminating MaxDim/1
51 MaxDim(x) | -(f3(x) <= x).  [clausify(25)].
52 -MaxDim(x) | y <= x.  [clausify(25)].
Derived: -(f3(x) <= x) | y <= x.  [resolve(51,a,52,a)].

Eliminating Covers/2
53 Covers(x,y) | -(y < x) | y < f5(x,y).  [clausify(27)].
54 -Covers(x,y) | y < x.  [clausify(27)].
55 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(27)].
Derived: -(x < y) | x < f5(y,x) | -(x < z) | -(z < y).  [resolve(53,a,55,a)].
56 Covers(x,y) | -(y < x) | f5(x,y) < x.  [clausify(27)].
Derived: -(x < y) | f5(y,x) < y | -(x < z) | -(z < y).  [resolve(56,a,55,a)].

Eliminating PO/2
57 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(28)].
58 -PO(x,y) | P(f6(x,y),x).  [clausify(28)].
59 -PO(x,y) | P(f6(x,y),y).  [clausify(28)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),y).  [resolve(57,a,58,a)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),z).  [resolve(57,a,59,a)].

Eliminating Inc/2
60 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(29)].
61 -Inc(x,y) | f7(x,y) < x | f8(x,y) < y.  [clausify(29)].
62 -Inc(x,y) | f7(x,y) < x | Cont(f8(x,y),y).  [clausify(29)].
63 -Inc(x,y) | f7(x,y) < x | P(f8(x,y),x).  [clausify(29)].
64 -Inc(x,y) | Cont(f7(x,y),x) | f8(x,y) < y.  [clausify(29)].
65 -Inc(x,y) | Cont(f7(x,y),x) | Cont(f8(x,y),y).  [clausify(29)].
66 -Inc(x,y) | Cont(f7(x,y),x) | P(f8(x,y),x).  [clausify(29)].
67 -Inc(x,y) | P(f7(x,y),y) | f8(x,y) < y.  [clausify(29)].
68 -Inc(x,y) | P(f7(x,y),y) | Cont(f8(x,y),y).  [clausify(29)].
69 -Inc(x,y) | P(f7(x,y),y) | P(f8(x,y),x).  [clausify(29)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | f8(y,z) < z.  [resolve(60,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | Cont(f8(y,z),z).  [resolve(60,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | P(f8(y,z),y).  [resolve(60,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | f8(y,z) < z.  [resolve(60,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | Cont(f8(y,z),z).  [resolve(60,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | P(f8(y,z),y).  [resolve(60,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | f8(y,z) < z.  [resolve(60,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | Cont(f8(y,z),z).  [resolve(60,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | P(f8(y,z),y).  [resolve(60,a,69,a)].
70 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(29)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | f8(z,y) < y.  [resolve(70,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | Cont(f8(z,y),y).  [resolve(70,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | P(f8(z,y),z).  [resolve(70,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | f8(z,y) < y.  [resolve(70,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | Cont(f8(z,y),y).  [resolve(70,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | P(f8(z,y),z).  [resolve(70,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | f8(z,y) < y.  [resolve(70,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | Cont(f8(z,y),y).  [resolve(70,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | P(f8(z,y),z).  [resolve(70,a,69,a)].

Eliminating SC/2
71 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),x).  [clausify(30)].
72 -SC(x,y) | Cont(f9(x,y),x).  [clausify(30)].
73 -SC(x,y) | Cont(f9(x,y),y).  [clausify(30)].
74 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(30)].
75 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(30)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),y).  [resolve(71,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),z).  [resolve(71,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(71,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(71,a,75,a)].
76 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),y).  [clausify(30)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),y).  [resolve(76,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),z).  [resolve(76,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(76,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(76,a,75,a)].
77 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f10(x,y) < x) | -(f10(x,y) < y).  [clausify(30)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),y).  [resolve(77,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),z).  [resolve(77,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(77,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(77,a,75,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. c5=1. intersection=1. difference=1. f5=1. f6=1. f7=1. f8=1. f9=1. f10=1. f11=1. f12=1. f13=1. f1=1. f2=1. f3=1. f4=1.
Predicate symbol precedence:  predicate_order([ EqDim, =, PP, C, P, <=, ZEX, <, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, intersection, difference, f5, f6, f7, f8, f9, f10, f11, f12, f13, f1, f2, f3, f4 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.03 seconds.

============================== PROOF =================================

% Proof 1 at 0.22 (+ 0.02) seconds.
% Length of proof is 63.
% Level of proof is 12.
% Maximum clause weight is 16.000.
% Given clauses 523.

3 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
8 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
10 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
13 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
14 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
16 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x -(x < x)) # label(non_clause).  [assumption].
19 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
23 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
24 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
34 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
38 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].
43 -Min(x) | -ZEX(x).  [clausify(8)].
44 -Min(x) | -PP(y,x).  [clausify(8)].
45 Min(c5).  [deny(38)].
80 -(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(3)].
87 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(10)].
91 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(12)].
95 PP(x,y) | -P(x,y) | y = x.  [clausify(13)].
96 -Cont(x,y) | x <= y.  [clausify(14)].
98 -P(x,y) | Cont(x,y).  [clausify(16)].
99 -P(x,y) | EqDim(x,y).  [clausify(16)].
100 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(16)].
101 -(x < x).  [clausify(17)].
103 -(x < y) | -(y <= z) | x < z.  [clausify(19)].
105 -ZEX(x) | ZEX(y) | x < y.  [clausify(21)].
106 -EqDim(x,y) | -(x < y).  [clausify(23)].
107 -EqDim(x,y) | -(y < x).  [clausify(23)].
108 EqDim(x,y) | x < y | y < x.  [clausify(23)].
109 -(x <= y) | x < y | EqDim(x,y).  [clausify(24)].
111 x <= y | -EqDim(x,y).  [clausify(24)].
119 ZEX(x) | Cont(x,x).  [clausify(34)].
125 P(c4,c3).  [deny(38)].
126 Cont(c5,c3).  [deny(38)].
127 -Cont(c5,c4).  [deny(38)].
128 -Cont(c5,difference(c3,c4)).  [deny(38)].
131 -ZEX(c5).  [resolve(45,a,43,a)].
132 -PP(x,c5).  [resolve(45,a,44,a)].
174 EqDim(x,x).  [factor(108,b,c),unit_del(b,101)].
201 intersection(x,y) <= x | ZEX(intersection(x,y)).  [resolve(96,a,87,b)].
203 P(intersection(x,y),x) | -EqDim(intersection(x,y),x) | ZEX(intersection(x,y)).  [resolve(100,b,87,b)].
248 ZEX(x) | P(x,x).  [resolve(119,b,100,b),unit_del(c,174)].
275 EqDim(c4,c3).  [resolve(125,a,99,a)].
294 -P(c5,intersection(x,c4)).  [ur(91,a,127,a)].
635 -(c3 < c4).  [ur(107,a,275,a)].
636 -(c4 < c3).  [ur(106,a,275,a)].
740 EqDim(c3,c4).  [resolve(635,a,108,b),unit_del(b,636)].
743 c3 <= c4.  [resolve(740,a,111,b)].
745 -(intersection(c5,c4) < c5).  [ur(80,a,743,a,b,126,a,d,128,a)].
750 P(c5,c5).  [resolve(248,a,131,a)].
783 Cont(c5,c5).  [resolve(750,a,98,a)].
995 EqDim(c5,intersection(c5,c4)) | c5 < intersection(c5,c4).  [resolve(745,a,108,c)].
997 -ZEX(intersection(c5,c4)).  [ur(105,b,131,a,c,745,a)].
1068 intersection(c5,c4) <= c5.  [resolve(201,b,997,a)].
1873 EqDim(intersection(c5,c4),c5).  [resolve(1068,a,109,a),unit_del(a,745)].
1879 -(c5 < intersection(c5,c4)).  [ur(103,b,1068,a,c,101,a)].
1880 EqDim(c5,intersection(c5,c4)).  [back_unit_del(995),unit_del(b,1879)].
2565 P(intersection(c5,c4),c5).  [resolve(1873,a,203,b),unit_del(b,997)].
2567 -Cont(c5,intersection(c5,c4)).  [ur(100,a,294,a,c,1880,a)].
3468 intersection(c5,c4) = c5.  [resolve(2565,a,95,b),flip(b),unit_del(a,132)].
3470 $F.  [back_rewrite(2567),rewrite([3468(4)]),unit_del(a,783)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=523. Generated=6587. Kept=3392. proofs=1.
Usable=498. Sos=2493. Demods=31. Limbo=2, Disabled=532. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=3194. Back_subsumed=161.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=32 (0 lex), Back_demodulated=201. Back_unit_deleted=37.
Demod_attempts=50294. Demod_rewrites=850.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=12298. Nonunit_bsub_feature_tests=10744.
Megabytes=5.59.
User_CPU=0.22, System_CPU=0.02, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 13245 exit (max_proofs) Thu Feb 23 17:48:45 2012
