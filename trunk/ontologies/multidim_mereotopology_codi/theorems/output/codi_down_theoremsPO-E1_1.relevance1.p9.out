============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 24739 was started by torsten on stl-ws2,
Fri Feb 24 16:06:35 2012
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsEP-E3.p9 codi/theorems/input/codi_down_theoremsT11.p9 codi/theorems/input/codi_down_theoremsEP-E2.p9 codi/conversions/codi_down.p9 codi/definitions/input/min_max_in_dim.p9 codi/theorems/input/codi_down_theoremsEP-E1.p9 codi/conversions/codi_int.p9 codi/definitions/input/epp.p9 codi/theorems/input/codi_down_theoremsT1-T2.p9 codi/theorems/input/codi_down_theoremsT3-T5.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsPO-E1_relevance1.order codi/theorems/input/codi_down_theoremsPO-E1_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsEP-E3.p9


formulas(sos).
(all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT11.p9


formulas(sos).
(all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsEP-E2.p9


formulas(sos).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsEP-E1.p9


formulas(sos).
(all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT1-T2.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))).
(all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))).
(all x all y (PP(y,x) -> PP(difference(x,y),x))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT3-T5.p9


formulas(sos).
(all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))).
(all x all y -PO(intersection(x,y),difference(x,y))).
(all x all y all z (P(z,difference(x,y)) -> P(z,x))).
(all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))).
(all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsPO-E1_relevance1.order

predicate_order([=,C,EqDim,<=,PP,PO,<,P,ZEX,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsPO-E1_1.p9


formulas(goals).
(all x all y (-ZEX(x) & (all z (PO(x,z) -> PO(y,z))) -> P(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))) # label(non_clause).  [assumption].
2 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
5 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
6 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
7 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
8 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
9 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
10 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
11 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
12 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
13 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
14 (all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
15 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
16 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
17 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
19 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
20 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
21 (all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
22 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
23 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
24 (all x all y -PO(intersection(x,y),difference(x,y))) # label(non_clause).  [assumption].
25 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
26 (all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))) # label(non_clause).  [assumption].
27 (all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))) # label(non_clause).  [assumption].
28 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
29 (exists x ZEX(x)) # label(non_clause).  [assumption].
30 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
31 (all x -(x < x)) # label(non_clause).  [assumption].
32 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
33 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
34 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
35 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
36 (exists x MinDim(x)) # label(non_clause).  [assumption].
37 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
38 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
39 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
40 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
41 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
42 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
43 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
44 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
45 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
47 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
48 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
49 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
50 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
51 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
52 (all x all y (-ZEX(x) & (all z (PO(x,z) -> PO(y,z))) -> P(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Min/1
53 Min(x) | ZEX(x) | PP(f6(x),x).  [clausify(13)].
54 -P(x,y) | -Min(z) | -Cont(z,y) | Cont(z,x) | Cont(z,difference(y,x)).  [clausify(2)].
55 -Min(x) | -ZEX(x).  [clausify(13)].
56 -Min(x) | -PP(y,x).  [clausify(13)].
Derived: ZEX(x) | PP(f6(x),x) | -P(y,z) | -Cont(x,z) | Cont(x,y) | Cont(x,difference(z,y)).  [resolve(53,a,54,b)].
Derived: ZEX(x) | PP(f6(x),x) | -PP(y,x).  [resolve(53,a,56,a)].

Eliminating Max/1
57 Max(x) | ZEX(x) | PP(x,f5(x)).  [clausify(12)].
58 -Max(x) | -ZEX(x).  [clausify(12)].
59 -Max(x) | -PP(x,y).  [clausify(12)].
Derived: ZEX(x) | PP(x,f5(x)) | -PP(x,y).  [resolve(57,a,59,a)].

Eliminating MinDim/1
60 -MinDim(x) | -ZEX(x).  [clausify(40)].
61 MinDim(c2).  [clausify(36)].
Derived: -ZEX(c2).  [resolve(60,a,61,a)].
62 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(40)].
Derived: -(x < c2) | ZEX(x).  [resolve(62,a,61,a)].
63 MinDim(x) | ZEX(x) | f9(x) < x.  [clausify(40)].
Derived: ZEX(x) | f9(x) < x | -(y < x) | ZEX(y).  [resolve(63,a,62,a)].
64 MinDim(x) | ZEX(x) | -ZEX(f9(x)).  [clausify(40)].
Derived: ZEX(x) | -ZEX(f9(x)) | -(y < x) | ZEX(y).  [resolve(64,a,62,a)].

Eliminating MaxDim/1
65 MaxDim(x) | -(f8(x) <= x).  [clausify(39)].
66 -MaxDim(x) | y <= x.  [clausify(39)].
Derived: -(f8(x) <= x) | y <= x.  [resolve(65,a,66,a)].

Eliminating Covers/2
67 Covers(x,y) | -(y < x) | y < f10(x,y).  [clausify(41)].
68 -Covers(x,y) | y < x.  [clausify(41)].
69 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(41)].
Derived: -(x < y) | x < f10(y,x) | -(x < z) | -(z < y).  [resolve(67,a,69,a)].
70 Covers(x,y) | -(y < x) | f10(x,y) < x.  [clausify(41)].
Derived: -(x < y) | f10(y,x) < y | -(x < z) | -(z < y).  [resolve(70,a,69,a)].

Eliminating Inc/2
71 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(43)].
72 -Inc(x,y) | f12(x,y) < x | f13(x,y) < y.  [clausify(43)].
73 -Inc(x,y) | f12(x,y) < x | Cont(f13(x,y),y).  [clausify(43)].
74 -Inc(x,y) | f12(x,y) < x | P(f13(x,y),x).  [clausify(43)].
75 -Inc(x,y) | Cont(f12(x,y),x) | f13(x,y) < y.  [clausify(43)].
76 -Inc(x,y) | Cont(f12(x,y),x) | Cont(f13(x,y),y).  [clausify(43)].
77 -Inc(x,y) | Cont(f12(x,y),x) | P(f13(x,y),x).  [clausify(43)].
78 -Inc(x,y) | P(f12(x,y),y) | f13(x,y) < y.  [clausify(43)].
79 -Inc(x,y) | P(f12(x,y),y) | Cont(f13(x,y),y).  [clausify(43)].
80 -Inc(x,y) | P(f12(x,y),y) | P(f13(x,y),x).  [clausify(43)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | f13(y,z) < z.  [resolve(71,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | Cont(f13(y,z),z).  [resolve(71,a,73,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | P(f13(y,z),y).  [resolve(71,a,74,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | f13(y,z) < z.  [resolve(71,a,75,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | Cont(f13(y,z),z).  [resolve(71,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | P(f13(y,z),y).  [resolve(71,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | f13(y,z) < z.  [resolve(71,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | Cont(f13(y,z),z).  [resolve(71,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | P(f13(y,z),y).  [resolve(71,a,80,a)].
81 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(43)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | f13(z,y) < y.  [resolve(81,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | Cont(f13(z,y),y).  [resolve(81,a,73,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | P(f13(z,y),z).  [resolve(81,a,74,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | f13(z,y) < y.  [resolve(81,a,75,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | Cont(f13(z,y),y).  [resolve(81,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | P(f13(z,y),z).  [resolve(81,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | f13(z,y) < y.  [resolve(81,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | Cont(f13(z,y),y).  [resolve(81,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | P(f13(z,y),z).  [resolve(81,a,80,a)].

Eliminating SC/2
82 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f15(x,y),x).  [clausify(44)].
83 -SC(x,y) | Cont(f14(x,y),x).  [clausify(44)].
84 -SC(x,y) | Cont(f14(x,y),y).  [clausify(44)].
85 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(44)].
86 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | Cont(f14(y,z),y).  [resolve(82,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | Cont(f14(y,z),z).  [resolve(82,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(82,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(82,a,86,a)].
87 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f15(x,y),y).  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | Cont(f14(y,z),y).  [resolve(87,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | Cont(f14(y,z),z).  [resolve(87,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(87,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(87,a,86,a)].
88 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f15(x,y) < x) | -(f15(x,y) < y).  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | Cont(f14(y,z),y).  [resolve(88,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | Cont(f14(y,z),z).  [resolve(88,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(88,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(88,a,86,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. difference=1. intersection=1. f1=1. f2=1. f3=1. f4=1. f7=1. f10=1. f11=1. f12=1. f13=1. f14=1. f15=1. f16=1. f17=1. f18=1. f5=1. f6=1. f8=1. f9=1.
Predicate symbol precedence:  predicate_order([ =, C, EqDim, <=, PP, PO, <, P, ZEX, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, difference, intersection, f1, f2, f3, f4, f7, f10, f11, f12, f13, f14, f15, f16, f17, f18, f5, f6, f8, f9 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 29 (0.00 of 0.32 sec).

Low Water (keep): wt=39.000, iters=7194

Low Water (keep): wt=34.000, iters=6872

Low Water (keep): wt=32.000, iters=6934

Low Water (keep): wt=31.000, iters=6837

Low Water (keep): wt=30.000, iters=6679

Low Water (keep): wt=28.000, iters=6691

Low Water (keep): wt=26.000, iters=6962

Low Water (keep): wt=25.000, iters=6748

Low Water (keep): wt=22.000, iters=7121

Low Water (keep): wt=21.000, iters=6771

Low Water (keep): wt=20.000, iters=6714

Low Water (keep): wt=19.000, iters=7002

Low Water (keep): wt=18.000, iters=6789

Low Water (keep): wt=17.000, iters=6840

Low Water (keep): wt=16.000, iters=7148

Low Water (keep): wt=15.000, iters=6667

Low Water (keep): wt=14.000, iters=6673

Low Water (keep): wt=13.000, iters=6761

Low Water (displace): id=12139, wt=71.000

Low Water (displace): id=8483, wt=60.000

Low Water (displace): id=12140, wt=59.000

Low Water (displace): id=3453, wt=58.000

Low Water (displace): id=25789, wt=12.000

Low Water (displace): id=25826, wt=11.000

Low Water (displace): id=25833, wt=10.000

Low Water (displace): id=26847, wt=8.000

Low Water (keep): wt=12.000, iters=6667

Low Water (keep): wt=11.000, iters=6671

Low Water (keep): wt=10.000, iters=6726

============================== PROOF =================================

% Proof 1 at 91.09 (+ 0.82) seconds.
% Length of proof is 100.
% Level of proof is 33.
% Maximum clause weight is 13.000.
% Given clauses 22256.

11 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
20 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
23 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
28 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
30 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
31 (all x -(x < x)) # label(non_clause).  [assumption].
33 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
35 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
36 (exists x MinDim(x)) # label(non_clause).  [assumption].
37 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
38 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
40 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
42 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
48 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
51 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
52 (all x all y (-ZEX(x) & (all z (PO(x,z) -> PO(y,z))) -> P(x,y))) # label(non_clause) # label(goal).  [goal].
60 -MinDim(x) | -ZEX(x).  [clausify(40)].
61 MinDim(c2).  [clausify(36)].
62 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(40)].
102 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(11)].
117 ZEX(difference(x,y)) | P(difference(x,y),x).  [clausify(20)].
120 ZEX(x) | ZEX(difference(y,x)) | -PO(x,difference(y,x)).  [clausify(23)].
125 -Cont(x,y) | x <= y.  [clausify(28)].
127 -P(x,y) | Cont(x,y).  [clausify(30)].
128 -P(x,y) | EqDim(x,y).  [clausify(30)].
129 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(30)].
130 -(x < x).  [clausify(31)].
132 -(x < y) | -(y <= z) | x < z.  [clausify(33)].
134 -ZEX(x) | ZEX(y) | x < y.  [clausify(35)].
135 -EqDim(x,y) | -(x < y).  [clausify(37)].
136 -EqDim(x,y) | -(y < x).  [clausify(37)].
137 EqDim(x,y) | x < y | y < x.  [clausify(37)].
138 -(x <= y) | x < y | EqDim(x,y).  [clausify(38)].
139 x <= y | -(x < y).  [clausify(38)].
140 x <= y | -EqDim(x,y).  [clausify(38)].
141 -PO(x,y) | P(f11(x,y),x).  [clausify(42)].
142 -PO(x,y) | P(f11(x,y),y).  [clausify(42)].
143 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(42)].
151 ZEX(x) | Cont(x,x).  [clausify(48)].
155 -ZEX(x) | -Cont(y,x).  [clausify(51)].
156 -ZEX(x) | -Cont(x,y).  [clausify(51)].
157 -ZEX(c3).  [deny(52)].
158 -PO(c3,x) | PO(c4,x).  [deny(52)].
159 -P(c3,c4).  [deny(52)].
163 -ZEX(c2).  [resolve(60,a,61,a)].
164 -(x < c2) | ZEX(x).  [resolve(62,a,61,a)].
208 EqDim(x,x).  [factor(137,b,c),unit_del(b,130)].
209 PO(x,x) | -P(y,x).  [factor(143,b,c)].
273 P(difference(x,y),x) | ZEX(x) | Cont(x,y).  [resolve(117,a,102,a)].
294 ZEX(x) | difference(y,z) < x | P(difference(y,z),y).  [resolve(134,a,117,a)].
304 EqDim(x,y) | x < y | -EqDim(y,x).  [resolve(137,c,135,b)].
351 ZEX(x) | P(x,x).  [resolve(151,b,129,b),unit_del(c,208)].
740 P(c3,c3).  [resolve(351,a,157,a)].
741 P(x,x) | ZEX(y) | x < y.  [resolve(351,a,134,a)].
751 PO(c3,c3).  [resolve(740,a,209,b)].
782 PO(c4,c3).  [resolve(751,a,158,a)].
887 P(f11(c4,c3),c3).  [resolve(782,a,142,a)].
888 P(f11(c4,c3),c4).  [resolve(782,a,141,a)].
1280 PO(c3,x) | -P(f11(c4,c3),x).  [resolve(887,a,143,b)].
1306 Cont(f11(c4,c3),c4).  [resolve(888,a,127,a)].
1742 -ZEX(c4).  [resolve(1306,a,155,b)].
2717 P(difference(x,y),x) | ZEX(x) | P(x,y) | -EqDim(x,y).  [resolve(273,c,129,b)].
2718 P(difference(x,y),x) | ZEX(x) | x <= y.  [resolve(273,c,125,a)].
3391 difference(x,y) < c2 | P(difference(x,y),x).  [resolve(294,a,163,a)].
10504 P(x,x) | x < c4.  [resolve(741,b,1742,a)].
10525 P(x,x) | x < c2.  [resolve(741,b,163,a)].
10532 x < c4 | PO(x,x).  [resolve(10504,a,209,b)].
10542 x < c2 | PO(y,x) | -P(x,y).  [resolve(10525,a,143,c)].
10623 PO(x,x) | x <= c4.  [resolve(10532,a,139,b)].
11004 x <= c4 | P(f11(x,x),x).  [resolve(10623,a,142,a)].
13916 PO(c3,c4).  [resolve(1280,b,888,a)].
13917 P(f11(c3,c4),c4).  [resolve(13916,a,142,a)].
13918 P(f11(c3,c4),c3).  [resolve(13916,a,141,a)].
14086 EqDim(f11(c3,c4),c4).  [resolve(13917,a,128,a)].
14094 EqDim(f11(c3,c4),c3).  [resolve(13918,a,128,a)].
14104 EqDim(c4,f11(c3,c4)) | c4 < f11(c3,c4).  [resolve(14086,a,304,c)].
20886 x <= c4 | Cont(f11(x,x),x).  [resolve(11004,b,127,a)].
26882 x <= c4 | -ZEX(x).  [resolve(20886,b,155,b)].
49806 P(difference(x,y),x) | x <= y | x <= c4.  [resolve(2718,b,26882,b)].
49815 P(difference(x,c4),x) | x <= c4.  [factor(49806,b,c)].
50385 x <= c4 | Cont(difference(x,c4),x).  [resolve(49815,a,127,a)].
50995 x <= c4 | -ZEX(difference(x,c4)).  [resolve(50385,b,156,b)].
54246 difference(x,y) < c2 | PO(x,difference(x,y)).  [resolve(3391,b,10542,c),merge(b)].
57270 EqDim(c4,f11(c3,c4)).  [resolve(14104,b,136,b),unit_del(b,14086)].
57271 c4 <= f11(c3,c4).  [resolve(57270,a,140,b)].
66531 PO(x,difference(x,y)) | ZEX(difference(x,y)).  [resolve(54246,a,164,a)].
66548 PO(x,difference(x,c4)) | x <= c4.  [resolve(66531,b,50995,b)].
66585 c3 <= c4 | PO(c4,difference(c3,c4)).  [resolve(66548,a,158,a)].
66644 c3 <= c4 | ZEX(difference(c3,c4)).  [resolve(66585,b,120,c),unit_del(b,1742)].
66675 c3 <= c4.  [resolve(66644,b,50995,b),merge(b)].
66687 c3 < c4 | EqDim(c3,c4).  [resolve(66675,a,138,a)].
66738 EqDim(c3,c4) | -(c4 <= x) | c3 < x.  [resolve(66687,a,132,a)].
67239 EqDim(c3,c4) | c3 < f11(c3,c4).  [resolve(66738,b,57271,a)].
67259 EqDim(c3,c4).  [resolve(67239,b,136,b),unit_del(b,14094)].
67270 P(difference(c3,c4),c3).  [resolve(67259,a,2717,d),unit_del(b,157),unit_del(c,159)].
67291 Cont(difference(c3,c4),c3).  [resolve(67270,a,127,a)].
67328 -ZEX(difference(c3,c4)).  [resolve(67291,a,156,b)].
67346 PO(c3,difference(c3,c4)).  [resolve(67328,a,66531,b)].
67439 PO(c4,difference(c3,c4)).  [resolve(67346,a,158,a)].
67460 $F.  [resolve(67439,a,120,c),unit_del(a,1742),unit_del(b,67328)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=22256. Generated=3310104. Kept=67371. proofs=1.
Usable=21046. Sos=19995. Demods=808. Limbo=2, Disabled=26475. Hints=0.
Kept_by_rule=0, Deleted_by_rule=130.
Forward_subsumed=405388. Back_subsumed=128.
Sos_limit_deleted=2837214. Sos_displaced=19960. Sos_removed=0.
New_demodulators=1160 (0 lex), Back_demodulated=5614. Back_unit_deleted=626.
Demod_attempts=71722418. Demod_rewrites=488690.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=765967. Nonunit_bsub_feature_tests=26088.
Megabytes=84.73.
User_CPU=91.09, System_CPU=0.82, Wall_clock=92.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 24739 exit (max_proofs) Fri Feb 24 16:08:07 2012
