============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 27916 was started by torsten on stl-ws2,
Mon May 28 20:06:31 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f codi/conversions/codi.p9 codi/definitions/input/ep.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/conversions/codi_basic.p9 cont/conversions/cont_c.p9 codi/definitions/input/epp.p9 codi/definitions/input/min_max_in_dim.p9 dim/conversions/dim_basic.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/codi_theorems_4.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/theorems/input/codi_theorems_4.p9


formulas(goals).
(all x all y (C(x,y) -> PO(x,y) | SC(x,y) | Inc(x,y))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
3 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
5 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
6 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
8 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
9 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
10 (all x -(x < x)) # label(non_clause).  [assumption].
11 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
12 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
13 (all x EqDim(x,x)) # label(non_clause).  [assumption].
14 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
15 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
16 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
18 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
19 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
20 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
22 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
23 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
24 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
28 (all x all y (C(x,y) -> PO(x,y) | SC(x,y) | Inc(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-PO(x,y) | P(f1(x,y),x).
-PO(x,y) | P(f1(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-Inc(x,y) | f2(x,y) < x | f3(x,y) < y.
-Inc(x,y) | f2(x,y) < x | Cont(f3(x,y),y).
-Inc(x,y) | f2(x,y) < x | P(f3(x,y),x).
-Inc(x,y) | Cont(f2(x,y),x) | f3(x,y) < y.
-Inc(x,y) | Cont(f2(x,y),x) | Cont(f3(x,y),y).
-Inc(x,y) | Cont(f2(x,y),x) | P(f3(x,y),x).
-Inc(x,y) | P(f2(x,y),y) | f3(x,y) < y.
-Inc(x,y) | P(f2(x,y),y) | Cont(f3(x,y),y).
-Inc(x,y) | P(f2(x,y),y) | P(f3(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
-SC(x,y) | Cont(f4(x,y),x).
-SC(x,y) | Cont(f4(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).
-Cont(x,y) | x < y | EqDim(x,y).
-C(x,y) | Cont(f6(x,y),x).
-C(x,y) | Cont(f6(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f7(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f8(x),x).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c1).
-(x < c1) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
Cont(f9(x,y),x) | Cont(f9(x,y),y) | y = x.
-Cont(f9(x,y),x) | -Cont(f9(x,y),y) | y = x.
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
C(c2,c3).
-PO(c2,c3).
-SC(c2,c3).
-Inc(c2,c3).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

====== Domain size 2 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 60.01 seconds).
Ground clauses: seen=275, kept=233.
Selections=12306858, assignments=24613702, propagations=96903640, current_models=0.
Rewrite_terms=94318816, rewrite_bools=484876385, indexes=69542801.
Rules_from_neg_clauses=1334, cross_offs=1334.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

====== Domain size 3 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 120.01 seconds).
Ground clauses: seen=725, kept=644.
Selections=5264831, assignments=15794458, propagations=79559754, current_models=0.
Rewrite_terms=71808010, rewrite_bools=584272477, indexes=60071853.
Rules_from_neg_clauses=5, cross_offs=11.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

====== Domain size 4 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 180.01 seconds).
Ground clauses: seen=1497, kept=1365.
Selections=2852006, assignments=11403096, propagations=64667079, current_models=0.
Rewrite_terms=53558051, rewrite_bools=663817463, indexes=47266908.
Rules_from_neg_clauses=2, cross_offs=7.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

====== Domain size 5 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 240.01 seconds).
Ground clauses: seen=2675, kept=2480.
Selections=1840763, assignments=9113112, propagations=54691118, current_models=0.
Rewrite_terms=43738884, rewrite_bools=726211115, indexes=39682666.
Rules_from_neg_clauses=2, cross_offs=9.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

mace4_sig_handler: condition 2
============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 262.22 seconds).
Ground clauses: seen=4343, kept=4073.
Selections=499597, assignments=2798484, propagations=17202173, current_models=0.
Rewrite_terms=14063562, rewrite_bools=280518911, indexes=12905265.
Rules_from_neg_clauses=2, cross_offs=11.

============================== end of statistics =====================

User_CPU=262.22, System_CPU=3.97, Wall_clock=266.

Exiting with failure.

Process 27916 exit (mace_sigint) Mon May 28 20:10:57 2012
The process finished Mon May 28 20:10:57 2012
