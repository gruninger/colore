============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 25553 was started by torsten on stl-ws2,
Thu Jul  5 19:27:44 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f codi/conversions/codi_int.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c.p9 cont/conversions/cont_basic.p9 codi/theorems/input/codi_int_theorems_4.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/theorems/input/codi_int_theorems_4.p9


formulas(goals).
(all x all y all z (-C(x,y) -> ZEX(intersection(x,y)))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
3 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
5 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
6 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
7 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
8 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
9 (exists x ZEX(x)) # label(non_clause).  [assumption].
10 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x -(x < x)) # label(non_clause).  [assumption].
12 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
13 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
16 (exists x MinDim(x)) # label(non_clause).  [assumption].
17 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
18 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
19 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
20 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
21 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
22 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
23 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
24 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
28 (all x all y all z (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
C(x,y) | ZEX(intersection(x,y)).
-C(x,y) | -ZEX(intersection(x,y)).
ZEX(intersection(x,y)) | Cont(intersection(x,y),x).
-Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(z,y)).
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).
-PO(x,y) | P(f1(x,y),x).
-PO(x,y) | P(f1(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-Inc(x,y) | f2(x,y) < x | f3(x,y) < y.
-Inc(x,y) | f2(x,y) < x | Cont(f3(x,y),y).
-Inc(x,y) | f2(x,y) < x | P(f3(x,y),x).
-Inc(x,y) | Cont(f2(x,y),x) | f3(x,y) < y.
-Inc(x,y) | Cont(f2(x,y),x) | Cont(f3(x,y),y).
-Inc(x,y) | Cont(f2(x,y),x) | P(f3(x,y),x).
-Inc(x,y) | P(f2(x,y),y) | f3(x,y) < y.
-Inc(x,y) | P(f2(x,y),y) | Cont(f3(x,y),y).
-Inc(x,y) | P(f2(x,y),y) | P(f3(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
-SC(x,y) | Cont(f4(x,y),x).
-SC(x,y) | Cont(f4(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).
-Cont(x,y) | x < y | EqDim(x,y).
ZEX(c1).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y <= z) | x < z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
MinDim(c2).
-EqDim(x,y) | -(x < y).
-EqDim(x,y) | -(y < x).
EqDim(x,y) | x < y | y < x.
-(x <= y) | x < y | EqDim(x,y).
x <= y | -(x < y).
x <= y | -EqDim(x,y).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f6(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f7(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f7(x)).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f8(x,y).
Covers(x,y) | -(y < x) | f8(x,y) < x.
-C(x,y) | Cont(f9(x,y),x).
-C(x,y) | Cont(f9(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-C(c3,c4).
-ZEX(intersection(c3,c4)).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=314, kept=278.
Selections=3, assignments=5, propagations=44, current_models=0.
Rewrite_terms=95, rewrite_bools=315, indexes=2.
Rules_from_neg_clauses=10, cross_offs=10.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=844, kept=778.
Selections=77, assignments=228, propagations=403, current_models=0.
Rewrite_terms=1932, rewrite_bools=3185, indexes=83.
Rules_from_neg_clauses=149, cross_offs=298.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.61 seconds).
Ground clauses: seen=1760, kept=1656.
Selections=149258, assignments=597019, propagations=184184, current_models=0.
Rewrite_terms=1746088, rewrite_bools=904235, indexes=7154.
Rules_from_neg_clauses=170972, cross_offs=514516.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

mace4_sig_handler: condition 2
============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 1.88 seconds).
Ground clauses: seen=3164, kept=3014.
Selections=233015, assignments=1165004, propagations=320112, current_models=0.
Rewrite_terms=2893150, rewrite_bools=1330936, indexes=790.
Rules_from_neg_clauses=317732, cross_offs=1270915.

============================== end of statistics =====================

User_CPU=1.88, System_CPU=0.08, Wall_clock=2.

Exiting with failure.

Process 25553 exit (mace_sigint) Thu Jul  5 19:27:46 2012
The process finished Thu Jul  5 19:27:46 2012
