============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 13797 was started by torsten on stl-ws2,
Thu Feb 23 18:28:02 2012
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsT11.p9 codi/conversions/codi_down.p9 codi/definitions/input/min_max_in_dim.p9 codi/conversions/codi_int.p9 codi/definitions/input/epp.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsT11prime_relevance1.order codi/theorems/input/codi_down_theoremsT11prime_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsT11.p9


formulas(sos).
(all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsT11prime_relevance1.order

predicate_order([EqDim,=,PP,Min,C,<=,P,intersection,ZEX,difference,<,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsT11prime_1.p9


formulas(goals).
(all x all y all z (P(y,x) & Min(z) & P(z,x) -> P(z,intersection(x,y)) | P(z,difference(x,y)))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: intersection, difference.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
6 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
8 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
9 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
10 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
14 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
15 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
16 (exists x ZEX(x)) # label(non_clause).  [assumption].
17 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
18 (all x -(x < x)) # label(non_clause).  [assumption].
19 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
20 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
23 (exists x MinDim(x)) # label(non_clause).  [assumption].
24 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
25 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
26 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
27 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
28 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
29 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
30 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
31 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
32 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
34 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
35 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
36 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
37 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
38 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
39 (all x all y all z (P(y,x) & Min(z) & P(z,x) -> P(z,intersection(x,y)) | P(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Min/1
40 Min(x) | ZEX(x) | PP(f2(x),x).  [clausify(9)].
41 -P(x,y) | -Min(z) | -Cont(z,y) | Cont(z,x) | Cont(z,difference(y,x)).  [clausify(1)].
42 -Min(x) | -ZEX(x).  [clausify(9)].
43 -Min(x) | -PP(y,x).  [clausify(9)].
Derived: ZEX(x) | PP(f2(x),x) | -P(y,z) | -Cont(x,z) | Cont(x,y) | Cont(x,difference(z,y)).  [resolve(40,a,41,b)].
Derived: ZEX(x) | PP(f2(x),x) | -PP(y,x).  [resolve(40,a,43,a)].
44 Min(c5).  [deny(39)].
Derived: -P(x,y) | -Cont(c5,y) | Cont(c5,x) | Cont(c5,difference(y,x)).  [resolve(44,a,41,b)].
Derived: -ZEX(c5).  [resolve(44,a,42,a)].
Derived: -PP(x,c5).  [resolve(44,a,43,a)].

Eliminating Max/1
45 Max(x) | ZEX(x) | PP(x,f1(x)).  [clausify(8)].
46 -Max(x) | -ZEX(x).  [clausify(8)].
47 -Max(x) | -PP(x,y).  [clausify(8)].
Derived: ZEX(x) | PP(x,f1(x)) | -PP(x,y).  [resolve(45,a,47,a)].

Eliminating MinDim/1
48 -MinDim(x) | -ZEX(x).  [clausify(27)].
49 MinDim(c2).  [clausify(23)].
Derived: -ZEX(c2).  [resolve(48,a,49,a)].
50 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(27)].
Derived: -(x < c2) | ZEX(x).  [resolve(50,a,49,a)].
51 MinDim(x) | ZEX(x) | f4(x) < x.  [clausify(27)].
Derived: ZEX(x) | f4(x) < x | -(y < x) | ZEX(y).  [resolve(51,a,50,a)].
52 MinDim(x) | ZEX(x) | -ZEX(f4(x)).  [clausify(27)].
Derived: ZEX(x) | -ZEX(f4(x)) | -(y < x) | ZEX(y).  [resolve(52,a,50,a)].

Eliminating MaxDim/1
53 MaxDim(x) | -(f3(x) <= x).  [clausify(26)].
54 -MaxDim(x) | y <= x.  [clausify(26)].
Derived: -(f3(x) <= x) | y <= x.  [resolve(53,a,54,a)].

Eliminating Covers/2
55 Covers(x,y) | -(y < x) | y < f5(x,y).  [clausify(28)].
56 -Covers(x,y) | y < x.  [clausify(28)].
57 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(28)].
Derived: -(x < y) | x < f5(y,x) | -(x < z) | -(z < y).  [resolve(55,a,57,a)].
58 Covers(x,y) | -(y < x) | f5(x,y) < x.  [clausify(28)].
Derived: -(x < y) | f5(y,x) < y | -(x < z) | -(z < y).  [resolve(58,a,57,a)].

Eliminating PO/2
59 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(29)].
60 -PO(x,y) | P(f6(x,y),x).  [clausify(29)].
61 -PO(x,y) | P(f6(x,y),y).  [clausify(29)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),y).  [resolve(59,a,60,a)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),z).  [resolve(59,a,61,a)].

Eliminating Inc/2
62 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(30)].
63 -Inc(x,y) | f7(x,y) < x | f8(x,y) < y.  [clausify(30)].
64 -Inc(x,y) | f7(x,y) < x | Cont(f8(x,y),y).  [clausify(30)].
65 -Inc(x,y) | f7(x,y) < x | P(f8(x,y),x).  [clausify(30)].
66 -Inc(x,y) | Cont(f7(x,y),x) | f8(x,y) < y.  [clausify(30)].
67 -Inc(x,y) | Cont(f7(x,y),x) | Cont(f8(x,y),y).  [clausify(30)].
68 -Inc(x,y) | Cont(f7(x,y),x) | P(f8(x,y),x).  [clausify(30)].
69 -Inc(x,y) | P(f7(x,y),y) | f8(x,y) < y.  [clausify(30)].
70 -Inc(x,y) | P(f7(x,y),y) | Cont(f8(x,y),y).  [clausify(30)].
71 -Inc(x,y) | P(f7(x,y),y) | P(f8(x,y),x).  [clausify(30)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | f8(y,z) < z.  [resolve(62,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | Cont(f8(y,z),z).  [resolve(62,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | P(f8(y,z),y).  [resolve(62,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | f8(y,z) < z.  [resolve(62,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | Cont(f8(y,z),z).  [resolve(62,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | P(f8(y,z),y).  [resolve(62,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | f8(y,z) < z.  [resolve(62,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | Cont(f8(y,z),z).  [resolve(62,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | P(f8(y,z),y).  [resolve(62,a,71,a)].
72 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(30)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | f8(z,y) < y.  [resolve(72,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | Cont(f8(z,y),y).  [resolve(72,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | P(f8(z,y),z).  [resolve(72,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | f8(z,y) < y.  [resolve(72,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | Cont(f8(z,y),y).  [resolve(72,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | P(f8(z,y),z).  [resolve(72,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | f8(z,y) < y.  [resolve(72,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | Cont(f8(z,y),y).  [resolve(72,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | P(f8(z,y),z).  [resolve(72,a,71,a)].

Eliminating SC/2
73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),x).  [clausify(31)].
74 -SC(x,y) | Cont(f9(x,y),x).  [clausify(31)].
75 -SC(x,y) | Cont(f9(x,y),y).  [clausify(31)].
76 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(31)].
77 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),y).  [resolve(73,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),z).  [resolve(73,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(73,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(73,a,77,a)].
78 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),y).  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),y).  [resolve(78,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),z).  [resolve(78,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(78,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(78,a,77,a)].
79 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f10(x,y) < x) | -(f10(x,y) < y).  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),y).  [resolve(79,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),z).  [resolve(79,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(79,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(79,a,77,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. c5=1. intersection=1. difference=1. f5=1. f6=1. f7=1. f8=1. f9=1. f10=1. f11=1. f12=1. f13=1. f1=1. f2=1. f3=1. f4=1.
Predicate symbol precedence:  predicate_order([ EqDim, =, PP, C, <=, P, ZEX, <, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, intersection, difference, f5, f6, f7, f8, f9, f10, f11, f12, f13, f1, f2, f3, f4 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.68 (+ 0.01) seconds.
% Length of proof is 114.
% Level of proof is 18.
% Maximum clause weight is 16.000.
% Given clauses 1214.

1 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
15 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
17 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
18 (all x -(x < x)) # label(non_clause).  [assumption].
20 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
24 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
25 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
35 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
36 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
37 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
38 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
39 (all x all y all z (P(y,x) & Min(z) & P(z,x) -> P(z,intersection(x,y)) | P(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].
41 -P(x,y) | -Min(z) | -Cont(z,y) | Cont(z,x) | Cont(z,difference(y,x)).  [clausify(1)].
44 Min(c5).  [deny(39)].
80 ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(2)].
83 -(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(5)].
85 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(7)].
89 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(11)].
90 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(12)].
91 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(13)].
98 -Cont(x,y) | x <= y.  [clausify(15)].
100 -P(x,y) | Cont(x,y).  [clausify(17)].
101 -P(x,y) | EqDim(x,y).  [clausify(17)].
102 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(17)].
103 -(x < x).  [clausify(18)].
105 -(x < y) | -(y <= z) | x < z.  [clausify(20)].
107 -ZEX(x) | ZEX(y) | x < y.  [clausify(22)].
108 -EqDim(x,y) | -(x < y).  [clausify(24)].
109 -EqDim(x,y) | -(y < x).  [clausify(24)].
110 EqDim(x,y) | x < y | y < x.  [clausify(24)].
111 -(x <= y) | x < y | EqDim(x,y).  [clausify(25)].
113 x <= y | -EqDim(x,y).  [clausify(25)].
121 ZEX(x) | Cont(x,x).  [clausify(35)].
123 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(36)].
124 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(37)].
125 -ZEX(x) | -Cont(y,x).  [clausify(38)].
126 -ZEX(x) | -Cont(x,y).  [clausify(38)].
127 P(c4,c3).  [deny(39)].
128 P(c5,c3).  [deny(39)].
129 -P(c5,intersection(c3,c4)).  [deny(39)].
130 -P(c5,difference(c3,c4)).  [deny(39)].
133 -P(x,y) | -Cont(c5,y) | Cont(c5,x) | Cont(c5,difference(y,x)).  [resolve(44,a,41,b)].
176 -Cont(x,y) | x <= intersection(y,y).  [factor(90,a,b)].
177 -Cont(x,y) | -EqDim(x,intersection(y,y)) | P(x,intersection(y,y)).  [factor(91,a,b)].
178 EqDim(x,x).  [factor(110,b,c),unit_del(b,103)].
194 ZEX(x) | Cont(x,y) | EqDim(x,difference(x,y)).  [resolve(85,a,80,a)].
205 intersection(x,y) <= x | ZEX(intersection(x,y)).  [resolve(98,a,89,b)].
207 P(intersection(x,y),x) | -EqDim(intersection(x,y),x) | ZEX(intersection(x,y)).  [resolve(102,b,89,b)].
252 ZEX(x) | P(x,x).  [resolve(121,b,102,b),unit_del(c,178)].
256 ZEX(x) | -Cont(x,y) | x <= intersection(y,x).  [resolve(121,b,90,b)].
259 ZEX(difference(x,y)) | -(x <= y) | Cont(difference(x,y),x).  [resolve(121,b,83,b)].
279 EqDim(c4,c3).  [resolve(127,a,101,a)].
280 Cont(c4,c3).  [resolve(127,a,100,a)].
282 EqDim(c5,c3).  [resolve(128,a,101,a)].
283 Cont(c5,c3).  [resolve(128,a,100,a)].
583 c4 <= c3.  [resolve(279,a,113,b)].
584 -(c3 < c4).  [ur(109,a,279,a)].
585 -(c4 < c3).  [ur(108,a,279,a)].
599 c4 <= intersection(c3,c3).  [resolve(280,a,176,a)].
601 -ZEX(c4).  [resolve(280,a,126,b)].
602 -ZEX(c3).  [resolve(280,a,125,b)].
615 c5 <= c3.  [resolve(282,a,113,b)].
617 -(c5 < c3).  [ur(108,a,282,a)].
657 EqDim(c3,c4).  [resolve(584,a,110,b),unit_del(b,585)].
658 -(c4 < c5).  [ur(105,b,615,a,c,585,a)].
659 c3 <= c4.  [resolve(657,a,113,b)].
675 -(c5 < c4).  [ur(105,b,583,a,c,617,a)].
696 EqDim(c5,c4).  [resolve(658,a,110,c),unit_del(b,675)].
698 c5 <= c4.  [resolve(696,a,113,b)].
739 P(c3,c3).  [resolve(252,a,602,a)].
755 Cont(c3,c3).  [resolve(739,a,100,a)].
792 -EqDim(c3,intersection(c3,c3)) | P(c3,intersection(c3,c3)).  [resolve(755,a,177,a)].
793 c3 <= intersection(c3,c3).  [resolve(755,a,176,a)].
981 -(intersection(c3,c3) < c4).  [ur(105,b,599,a,c,103,a)].
1082 -ZEX(intersection(c3,c3)).  [ur(107,b,601,a,c,981,a)].
1083 -(intersection(c3,c3) < c3).  [ur(105,b,659,a,c,981,a)].
1086 intersection(c3,c3) <= c3.  [resolve(1082,a,205,b)].
1259 c3 < intersection(c3,c3) | EqDim(c3,intersection(c3,c3)).  [resolve(793,a,111,a)].
1751 EqDim(intersection(c3,c3),c3).  [resolve(1086,a,111,a),unit_del(a,1083)].
1757 -(c3 < intersection(c3,c3)).  [ur(105,b,1086,a,c,103,a)].
1763 EqDim(c3,intersection(c3,c3)).  [back_unit_del(1259),unit_del(a,1757)].
1766 P(c3,intersection(c3,c3)).  [back_unit_del(792),unit_del(a,1763)].
2262 P(intersection(c3,c3),c3).  [resolve(1751,a,207,b),unit_del(b,1082)].
2300 Cont(c3,intersection(c3,c3)).  [resolve(1766,a,100,a)].
2798 Cont(intersection(c3,c3),c3).  [resolve(2262,a,100,a)].
2896 intersection(c3,c3) = c3.  [resolve(2300,a,123,b),flip(b),unit_del(a,2798)].
3427 c4 <= intersection(c3,c4).  [resolve(256,b,280,a),unit_del(a,601)].
3581 ZEX(difference(c3,c4)) | Cont(difference(c3,c4),c3).  [resolve(259,b,659,a)].
4505 -(intersection(c3,c4) < c4).  [ur(105,b,3427,a,c,103,a)].
4542 -ZEX(intersection(c3,c4)).  [ur(107,b,601,a,c,4505,a)].
4549 -(intersection(c3,c4) < c5).  [ur(105,b,698,a,c,4505,a)].
4554 intersection(c3,c4) <= c3.  [resolve(4542,a,205,b)].
4669 EqDim(c5,intersection(c3,c4)) | c5 < intersection(c3,c4).  [resolve(4549,a,110,c)].
5101 -(c5 < intersection(c3,c4)).  [ur(105,b,4554,a,c,617,a)].
5108 EqDim(c5,intersection(c3,c4)).  [back_unit_del(4669),unit_del(b,5101)].
5328 -Cont(c5,c4).  [ur(91,a,283,a,c,5108,a,d,129,a)].
5338 -Cont(c3,c4).  [ur(124,a,283,a,c,5328,a)].
5352 EqDim(c3,difference(c3,c4)).  [resolve(5338,a,194,b),unit_del(a,602)].
5362 -ZEX(difference(c3,c4)).  [ur(85,b,602,a,c,5338,a)].
5370 Cont(difference(c3,c4),c3).  [back_unit_del(3581),unit_del(a,5362)].
5857 -(difference(c3,c4) < c3).  [ur(109,a,5352,a)].
6356 difference(c3,c4) <= c3.  [resolve(5370,a,176,a),rewrite([2896(6)])].
7271 -(difference(c3,c4) < c5).  [ur(105,b,615,a,c,5857,a)].
7304 -(c5 < difference(c3,c4)).  [ur(105,b,6356,a,c,617,a)].
7995 EqDim(c5,difference(c3,c4)).  [resolve(7271,a,110,c),unit_del(b,7304)].
8233 -Cont(c5,difference(c3,c4)).  [ur(102,a,130,a,c,7995,a)].
8751 $F.  [ur(133,b,283,a,c,5328,a,d,8233,a),unit_del(a,127)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=1214. Generated=18966. Kept=8671. proofs=1.
Usable=990. Sos=5901. Demods=48. Limbo=1, Disabled=1915. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=10294. Back_subsumed=429.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=56 (0 lex), Back_demodulated=1180. Back_unit_deleted=170.
Demod_attempts=192860. Demod_rewrites=4520.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=63490. Nonunit_bsub_feature_tests=43329.
Megabytes=12.94.
User_CPU=0.68, System_CPU=0.01, Wall_clock=1.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 13797 exit (max_proofs) Thu Feb 23 18:28:03 2012
