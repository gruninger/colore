============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 26275 was started by torsten on stl-ws2,
Thu Jul  5 19:38:44 2012
The command was "prover9 -t 600 -f codi/conversions/codi_int.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/generated/codi_int_relevance1.order codi/theorems/input/codi_int_theorems_13.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/generated/codi_int_relevance1.order

predicate_order([Covers,MaxDim,MinDim,SC,Inc,PO,C,=,<=,EqDim,<,P,Cont,ZEX]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_int_theorems_13.p9


formulas(goals).
(all x all y (-ZEX(intersection(x,y)) -> P(intersection(x,y),intersection(x,intersection(x,y))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
3 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
5 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
6 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
7 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
8 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
9 (exists x ZEX(x)) # label(non_clause).  [assumption].
10 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x -(x < x)) # label(non_clause).  [assumption].
12 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
13 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
16 (exists x MinDim(x)) # label(non_clause).  [assumption].
17 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
18 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
19 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
20 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
21 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
22 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
23 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
24 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
28 (all x all y (-ZEX(intersection(x,y)) -> P(intersection(x,y),intersection(x,intersection(x,y))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating C/2
29 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(1)].
30 C(x,y) | ZEX(intersection(x,y)).  [clausify(1)].
31 -C(x,y) | Cont(f9(x,y),x).  [clausify(22)].
Derived: Cont(f9(x,y),x) | ZEX(intersection(x,y)).  [resolve(31,a,30,a)].
32 -C(x,y) | Cont(f9(x,y),y).  [clausify(22)].
Derived: Cont(f9(x,y),y) | ZEX(intersection(x,y)).  [resolve(32,a,30,a)].
33 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(22)].
Derived: -Cont(x,y) | -Cont(x,z) | -ZEX(intersection(y,z)).  [resolve(33,a,29,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y).  [resolve(33,a,31,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z).  [resolve(33,a,32,a)].

Eliminating PO/2
34 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(5)].
35 -PO(x,y) | P(f1(x,y),x).  [clausify(5)].
36 -PO(x,y) | P(f1(x,y),y).  [clausify(5)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),y).  [resolve(34,a,35,a)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),z).  [resolve(34,a,36,a)].

Eliminating Inc/2
37 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(6)].
38 -Inc(x,y) | f2(x,y) < x | f3(x,y) < y.  [clausify(6)].
39 -Inc(x,y) | f2(x,y) < x | Cont(f3(x,y),y).  [clausify(6)].
40 -Inc(x,y) | f2(x,y) < x | P(f3(x,y),x).  [clausify(6)].
41 -Inc(x,y) | Cont(f2(x,y),x) | f3(x,y) < y.  [clausify(6)].
42 -Inc(x,y) | Cont(f2(x,y),x) | Cont(f3(x,y),y).  [clausify(6)].
43 -Inc(x,y) | Cont(f2(x,y),x) | P(f3(x,y),x).  [clausify(6)].
44 -Inc(x,y) | P(f2(x,y),y) | f3(x,y) < y.  [clausify(6)].
45 -Inc(x,y) | P(f2(x,y),y) | Cont(f3(x,y),y).  [clausify(6)].
46 -Inc(x,y) | P(f2(x,y),y) | P(f3(x,y),x).  [clausify(6)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | f3(y,z) < z.  [resolve(37,a,38,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | Cont(f3(y,z),z).  [resolve(37,a,39,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | P(f3(y,z),y).  [resolve(37,a,40,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | f3(y,z) < z.  [resolve(37,a,41,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | Cont(f3(y,z),z).  [resolve(37,a,42,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | P(f3(y,z),y).  [resolve(37,a,43,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | f3(y,z) < z.  [resolve(37,a,44,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | Cont(f3(y,z),z).  [resolve(37,a,45,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | P(f3(y,z),y).  [resolve(37,a,46,a)].
47 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(6)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | f3(z,y) < y.  [resolve(47,a,38,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | Cont(f3(z,y),y).  [resolve(47,a,39,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | P(f3(z,y),z).  [resolve(47,a,40,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | f3(z,y) < y.  [resolve(47,a,41,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | Cont(f3(z,y),y).  [resolve(47,a,42,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | P(f3(z,y),z).  [resolve(47,a,43,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | f3(z,y) < y.  [resolve(47,a,44,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | Cont(f3(z,y),y).  [resolve(47,a,45,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | P(f3(z,y),z).  [resolve(47,a,46,a)].

Eliminating SC/2
48 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(7)].
49 -SC(x,y) | Cont(f4(x,y),x).  [clausify(7)].
50 -SC(x,y) | Cont(f4(x,y),y).  [clausify(7)].
51 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(7)].
52 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(7)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | Cont(f4(y,z),y).  [resolve(48,a,49,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | Cont(f4(y,z),z).  [resolve(48,a,50,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(48,a,51,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(48,a,52,a)].
53 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(7)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | Cont(f4(y,z),y).  [resolve(53,a,49,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | Cont(f4(y,z),z).  [resolve(53,a,50,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(53,a,51,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(53,a,52,a)].
54 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(7)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | Cont(f4(y,z),y).  [resolve(54,a,49,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | Cont(f4(y,z),z).  [resolve(54,a,50,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(54,a,51,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(54,a,52,a)].

Eliminating MinDim/1
55 -MinDim(x) | -ZEX(x).  [clausify(20)].
56 MinDim(c2).  [clausify(16)].
Derived: -ZEX(c2).  [resolve(55,a,56,a)].
57 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(20)].
Derived: -(x < c2) | ZEX(x).  [resolve(57,a,56,a)].
58 MinDim(x) | ZEX(x) | f7(x) < x.  [clausify(20)].
Derived: ZEX(x) | f7(x) < x | -(y < x) | ZEX(y).  [resolve(58,a,57,a)].
59 MinDim(x) | ZEX(x) | -ZEX(f7(x)).  [clausify(20)].
Derived: ZEX(x) | -ZEX(f7(x)) | -(y < x) | ZEX(y).  [resolve(59,a,57,a)].

Eliminating MaxDim/1
60 MaxDim(x) | -(f6(x) <= x).  [clausify(19)].
61 -MaxDim(x) | y <= x.  [clausify(19)].
Derived: -(f6(x) <= x) | y <= x.  [resolve(60,a,61,a)].

Eliminating Covers/2
62 Covers(x,y) | -(y < x) | y < f8(x,y).  [clausify(21)].
63 -Covers(x,y) | y < x.  [clausify(21)].
64 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(21)].
Derived: -(x < y) | x < f8(y,x) | -(x < z) | -(z < y).  [resolve(62,a,64,a)].
65 Covers(x,y) | -(y < x) | f8(x,y) < x.  [clausify(21)].
Derived: -(x < y) | f8(y,x) < y | -(x < z) | -(z < y).  [resolve(65,a,64,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. intersection=1. f1=1. f2=1. f3=1. f4=1. f5=1. f8=1. f9=1. f6=1. f7=1.
Predicate symbol precedence:  predicate_order([ =, <=, EqDim, <, P, Cont, ZEX ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, intersection, f1, f2, f3, f4, f5, f8, f9, f6, f7 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

Low Water (keep): wt=25.000, iters=6672

Low Water (keep): wt=24.000, iters=6733

Low Water (keep): wt=23.000, iters=6727

Low Water (keep): wt=22.000, iters=6667

Low Water (keep): wt=21.000, iters=6971

Low Water (keep): wt=20.000, iters=6962

Low Water (keep): wt=19.000, iters=6666

Low Water (keep): wt=18.000, iters=6692

Low Water (keep): wt=17.000, iters=6699

Low Water (keep): wt=16.000, iters=6667

Low Water (keep): wt=15.000, iters=6843

Low Water (keep): wt=14.000, iters=6682

Low Water (keep): wt=13.000, iters=6673

Low Water (keep): wt=12.000, iters=6685

Low Water (displace): id=8175, wt=32.000

Low Water (displace): id=8186, wt=31.000

Low Water (displace): id=8220, wt=30.000

Low Water (displace): id=7883, wt=28.000

Low Water (displace): id=8253, wt=27.000

Low Water (displace): id=8232, wt=26.000

Low Water (displace): id=8339, wt=25.000

Low Water (displace): id=8506, wt=24.000

Low Water (displace): id=8943, wt=23.000

Low Water (displace): id=22963, wt=21.000

Low Water (displace): id=29354, wt=11.000

Low Water (displace): id=29360, wt=10.000

Low Water (displace): id=29376, wt=9.000

Low Water (keep): wt=11.000, iters=6676

============================== PROOF =================================

% Proof 1 at 51.57 (+ 0.18) seconds.
% Length of proof is 118.
% Level of proof is 14.
% Maximum clause weight is 16.000.
% Given clauses 11223.

1 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
3 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
5 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
9 (exists x ZEX(x)) # label(non_clause).  [assumption].
10 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x -(x < x)) # label(non_clause).  [assumption].
13 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
16 (exists x MinDim(x)) # label(non_clause).  [assumption].
17 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
18 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
20 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
22 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
23 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
28 (all x all y (-ZEX(intersection(x,y)) -> P(intersection(x,y),intersection(x,intersection(x,y))))) # label(non_clause) # label(goal).  [goal].
29 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(1)].
31 -C(x,y) | Cont(f9(x,y),x).  [clausify(22)].
33 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(22)].
34 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(5)].
35 -PO(x,y) | P(f1(x,y),x).  [clausify(5)].
36 -PO(x,y) | P(f1(x,y),y).  [clausify(5)].
55 -MinDim(x) | -ZEX(x).  [clausify(20)].
56 MinDim(c2).  [clausify(16)].
57 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(20)].
66 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(2)].
67 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(3)].
68 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(4)].
70 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(4)].
72 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(8)].
73 ZEX(c1).  [clausify(9)].
74 -P(x,y) | Cont(x,y).  [clausify(10)].
75 -P(x,y) | EqDim(x,y).  [clausify(10)].
76 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(10)].
77 -(x < x).  [clausify(11)].
79 -(x < y) | -(y <= z) | x < z.  [clausify(13)].
80 -ZEX(x) | -ZEX(y) | y = x.  [clausify(14)].
81 -ZEX(x) | ZEX(y) | x < y.  [clausify(15)].
82 -EqDim(x,y) | -(x < y).  [clausify(17)].
84 EqDim(x,y) | x < y | y < x.  [clausify(17)].
87 x <= y | -EqDim(x,y).  [clausify(18)].
88 ZEX(x) | Cont(x,x).  [clausify(23)].
91 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(25)].
92 -ZEX(x) | -Cont(y,x).  [clausify(26)].
93 -ZEX(x) | -Cont(x,y).  [clausify(26)].
94 -ZEX(intersection(c3,c4)).  [deny(28)].
95 -P(intersection(c3,c4),intersection(c3,intersection(c3,c4))).  [deny(28)].
98 -Cont(x,y) | -Cont(x,z) | -ZEX(intersection(y,z)).  [resolve(33,a,29,a)].
99 -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y).  [resolve(33,a,31,a)].
101 -P(x,y) | -P(x,z) | P(f1(y,z),y).  [resolve(34,a,35,a)].
102 -P(x,y) | -P(x,z) | P(f1(y,z),z).  [resolve(34,a,36,a)].
133 -ZEX(c2).  [resolve(55,a,56,a)].
134 -(x < c2) | ZEX(x).  [resolve(57,a,56,a)].
142 EqDim(x,x).  [factor(84,b,c),unit_del(b,77)].
144 -Cont(x,y) | Cont(f9(y,y),y).  [factor(99,a,b)].
145 -P(x,y) | P(f1(y,y),y).  [factor(101,a,b)].
158 -ZEX(x) | c1 = x.  [resolve(80,a,73,a),flip(b)].
160 ZEX(x) | c1 < x.  [resolve(81,a,73,a)].
163 EqDim(x,y) | y < x | -(y <= z) | x < z.  [resolve(84,b,79,a)].
168 Cont(x,x) | ZEX(y) | x < y.  [resolve(88,a,81,a)].
177 Cont(intersection(c3,c4),intersection(c3,c4)).  [resolve(94,a,88,a)].
178 Cont(intersection(c3,c4),c3).  [resolve(94,a,66,a)].
193 Cont(c2,c2).  [resolve(133,a,88,a)].
196 -(intersection(c3,c4) < c2).  [ur(134,b,94,a)].
215 c1 = x | Cont(x,x).  [resolve(158,a,88,a)].
232 Cont(f9(c2,c2),c2).  [resolve(193,a,144,a)].
239 P(c2,c2).  [resolve(193,a,76,b),unit_del(b,142)].
245 P(f1(c2,c2),c2).  [resolve(239,a,145,a)].
257 c1 < x | -Cont(y,x).  [resolve(160,a,92,a)].
348 -Cont(intersection(c3,c4),x) | intersection(c3,c4) <= intersection(c3,x).  [resolve(178,a,67,a)].
613 P(f9(c2,c2),c2) | -EqDim(f9(c2,c2),c2).  [resolve(232,a,76,b)].
614 f9(c2,c2) < c2 | EqDim(f9(c2,c2),c2).  [resolve(232,a,72,a)].
619 -ZEX(f9(c2,c2)).  [ur(93,b,232,a)].
674 EqDim(f1(c2,c2),c2).  [resolve(245,a,75,a)].
675 Cont(f1(c2,c2),c2).  [resolve(245,a,74,a)].
863 -(f9(c2,c2) < c2).  [ur(134,b,619,a)].
864 EqDim(f9(c2,c2),c2).  [back_unit_del(614),unit_del(a,863)].
871 P(f9(c2,c2),c2).  [back_unit_del(613),unit_del(b,864)].
1029 Cont(x,x) | x < c2.  [resolve(168,b,133,a)].
1045 f1(c2,c2) <= c2.  [resolve(674,a,87,b)].
1071 -ZEX(f1(c2,c2)).  [ur(93,b,675,a)].
1083 Cont(x,x) | x < f1(c2,c2).  [resolve(1071,a,168,b)].
1462 f9(c2,c2) <= c2.  [resolve(864,a,87,b)].
1464 -P(f9(c2,c2),x) | P(f1(x,c2),c2).  [resolve(871,a,102,b)].
1466 -P(f9(c2,c2),x) | P(f1(x,c2),x).  [resolve(871,a,101,b)].
1534 P(intersection(c3,c4),intersection(c3,c4)).  [resolve(177,a,76,b),unit_del(b,142)].
1540 -ZEX(intersection(c3,intersection(c3,c4))).  [ur(98,a,178,a,b,177,a)].
1542 -EqDim(intersection(c3,c4),intersection(c3,intersection(c3,c4))).  [ur(68,a,178,a,b,177,a,d,95,a)].
1625 -(f9(c2,c2) < f1(c2,c2)).  [ur(79,b,1045,a,c,863,a)].
2258 c1 = x | P(x,x).  [resolve(215,b,76,b),unit_del(c,142)].
2606 x < c2 | c1 < x.  [resolve(1029,a,257,b)].
2694 Cont(intersection(c3,intersection(c3,c4)),c3).  [resolve(1540,a,66,a)].
2695 -(intersection(c3,intersection(c3,c4)) < c2).  [ur(134,b,1540,a)].
2721 intersection(x,y) = c1 | Cont(intersection(x,y),y).  [resolve(2258,b,70,b),flip(a)].
3076 c1 < x | -EqDim(x,c2).  [resolve(2606,a,82,b)].
3982 -(intersection(c3,intersection(c3,c4)) < f9(c2,c2)).  [ur(79,b,1462,a,c,2695,a)].
4515 Cont(intersection(c3,c4),c4).  [resolve(1534,a,70,b)].
4620 -Cont(x,intersection(c3,c4)) | Cont(x,c4).  [resolve(4515,a,91,b)].
11832 intersection(c3,c4) <= intersection(c3,intersection(c3,c4)).  [resolve(348,a,1029,a),unit_del(b,196)].
12518 x < f1(c2,c2) | P(x,x).  [resolve(1083,a,76,b),unit_del(c,142)].
21254 -(intersection(c3,intersection(c3,c4)) < intersection(c3,c4)).  [ur(79,b,11832,a,c,77,a)].
22545 -(intersection(c3,intersection(c3,c4)) <= intersection(c3,c4)).  [ur(163,a,1542,a,b,21254,a,d,77,a)].
29042 -Cont(intersection(c3,intersection(c3,c4)),c4).  [ur(67,a,2694,a,c,22545,a)].
29058 -Cont(intersection(c3,intersection(c3,c4)),intersection(c3,c4)).  [ur(4620,b,29042,a)].
31010 P(f1(f9(c2,c2),c2),c2).  [resolve(1464,a,12518,b),unit_del(b,1625)].
31013 EqDim(f1(f9(c2,c2),c2),c2).  [resolve(31010,a,75,a)].
31024 c1 < f1(f9(c2,c2),c2).  [resolve(31013,a,3076,b)].
31248 P(f1(f9(c2,c2),c2),f9(c2,c2)).  [resolve(1466,a,12518,b),unit_del(b,1625)].
33494 EqDim(f1(f9(c2,c2),c2),f9(c2,c2)).  [resolve(31248,a,75,a)].
35109 f1(f9(c2,c2),c2) <= f9(c2,c2).  [resolve(33494,a,87,b)].
35777 -(intersection(c3,intersection(c3,c4)) < f1(f9(c2,c2),c2)).  [ur(79,b,35109,a,c,3982,a)].
37200 intersection(c3,intersection(c3,c4)) = c1.  [resolve(2721,b,29058,a)].
37202 $F.  [back_rewrite(35777),rewrite([37200(5)]),unit_del(a,31024)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=11223. Generated=584047. Kept=37136. proofs=1.
Usable=10886. Sos=19265. Demods=10. Limbo=2, Disabled=7095. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=198058. Back_subsumed=1441.
Sos_limit_deleted=348852. Sos_displaced=4250. Sos_removed=0.
New_demodulators=10 (0 lex), Back_demodulated=1190. Back_unit_deleted=102.
Demod_attempts=7995214. Demod_rewrites=25797.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=449535. Nonunit_bsub_feature_tests=262900.
Megabytes=45.53.
User_CPU=51.57, System_CPU=0.18, Wall_clock=52.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 26275 exit (max_proofs) Thu Jul  5 19:39:36 2012
