============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 16280 was started by torsten on stl-ws2,
Tue Oct 23 21:30:32 2012
The command was "prover9 -t 600 -f codi/conversions/codi_pl.p9 codi/conversions/codi.p9 codi/conversions/codi_linear.p9 cont/conversions/cont_c.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_basic.p9 dim/conversions/dim_prime_linear_unbounded.p9 codi/theorems/input/options.txt codi/theorems/input/codi_pl_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_pl.p9


formulas(sos).
(all x (Pt(x) <-> Max(x) & MinDim(x))).
(all x (L(x) <-> Max(x) & (all y (Pt(y) -> Covers(x,y))))).
(all x (L(x) -> (exists y exists z (Pt(y) & Pt(z) & Cont(y,x) & Cont(z,x) & y != z)))).
(all x all y (Max(x) & Max(y) & Inc(x,y) & x < y -> Cont(x,y))).
(all x (MinDim(x) -> (all y (Cont(y,x) -> x = y)))).
end_of_list.

% Reading from file codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/input/codi_pl_theorems_2.p9


formulas(goals).
(all x all y (L(x) & L(y) -> EqDim(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (Pt(x) <-> Max(x) & MinDim(x))) # label(non_clause).  [assumption].
2 (all x (L(x) <-> Max(x) & (all y (Pt(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
3 (all x (L(x) -> (exists y exists z (Pt(y) & Pt(z) & Cont(y,x) & Cont(z,x) & y != z)))) # label(non_clause).  [assumption].
4 (all x all y (Max(x) & Max(y) & Inc(x,y) & x < y -> Cont(x,y))) # label(non_clause).  [assumption].
5 (all x (MinDim(x) -> (all y (Cont(y,x) -> x = y)))) # label(non_clause).  [assumption].
6 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
7 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
9 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
10 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
11 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
12 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
13 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
14 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
15 (exists x MinDim(x)) # label(non_clause).  [assumption].
16 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
17 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
19 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
20 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
21 (all x -(x < x)) # label(non_clause).  [assumption].
22 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
23 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
26 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
27 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
28 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
29 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
30 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
31 (all x all y (L(x) & L(y) -> EqDim(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Pt/1
32 Pt(x) | -Max(x) | -MinDim(x).  [clausify(1)].
33 -Pt(x) | Max(x).  [clausify(1)].
34 -Pt(x) | MinDim(x).  [clausify(1)].
35 -L(x) | -Pt(y) | Covers(x,y).  [clausify(2)].
Derived: -L(x) | Covers(x,y) | -Max(y) | -MinDim(y).  [resolve(35,b,32,a)].
36 L(x) | -Max(x) | Pt(f1(x)).  [clausify(2)].
Derived: L(x) | -Max(x) | Max(f1(x)).  [resolve(36,c,33,a)].
Derived: L(x) | -Max(x) | MinDim(f1(x)).  [resolve(36,c,34,a)].
Derived: L(x) | -Max(x) | -L(y) | Covers(y,f1(x)).  [resolve(36,c,35,b)].
37 -L(x) | Pt(f2(x)).  [clausify(3)].
Derived: -L(x) | Max(f2(x)).  [resolve(37,b,33,a)].
Derived: -L(x) | MinDim(f2(x)).  [resolve(37,b,34,a)].
Derived: -L(x) | -L(y) | Covers(y,f2(x)).  [resolve(37,b,35,b)].
38 -L(x) | Pt(f3(x)).  [clausify(3)].
Derived: -L(x) | Max(f3(x)).  [resolve(38,b,33,a)].
Derived: -L(x) | MinDim(f3(x)).  [resolve(38,b,34,a)].
Derived: -L(x) | -L(y) | Covers(y,f3(x)).  [resolve(38,b,35,b)].

Eliminating Inc/2
39 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(11)].
40 -Max(x) | -Max(y) | -Inc(x,y) | -(x < y) | Cont(x,y).  [clausify(4)].
41 -Inc(x,y) | f6(x,y) < x | f7(x,y) < y.  [clausify(11)].
42 -Inc(x,y) | f6(x,y) < x | Cont(f7(x,y),y).  [clausify(11)].
43 -Inc(x,y) | f6(x,y) < x | P(f7(x,y),x).  [clausify(11)].
44 -Inc(x,y) | Cont(f6(x,y),x) | f7(x,y) < y.  [clausify(11)].
45 -Inc(x,y) | Cont(f6(x,y),x) | Cont(f7(x,y),y).  [clausify(11)].
46 -Inc(x,y) | Cont(f6(x,y),x) | P(f7(x,y),x).  [clausify(11)].
47 -Inc(x,y) | P(f6(x,y),y) | f7(x,y) < y.  [clausify(11)].
48 -Inc(x,y) | P(f6(x,y),y) | Cont(f7(x,y),y).  [clausify(11)].
49 -Inc(x,y) | P(f6(x,y),y) | P(f7(x,y),x).  [clausify(11)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | -Max(y) | -Max(z) | -(y < z) | Cont(y,z).  [resolve(39,a,40,c)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | f7(y,z) < z.  [resolve(39,a,41,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | Cont(f7(y,z),z).  [resolve(39,a,42,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | P(f7(y,z),y).  [resolve(39,a,43,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | f7(y,z) < z.  [resolve(39,a,44,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | Cont(f7(y,z),z).  [resolve(39,a,45,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | P(f7(y,z),y).  [resolve(39,a,46,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | f7(y,z) < z.  [resolve(39,a,47,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | Cont(f7(y,z),z).  [resolve(39,a,48,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | P(f7(y,z),y).  [resolve(39,a,49,a)].
50 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(11)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | -Max(z) | -Max(y) | -(z < y) | Cont(z,y).  [resolve(50,a,40,c)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | f7(z,y) < y.  [resolve(50,a,41,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | Cont(f7(z,y),y).  [resolve(50,a,42,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | P(f7(z,y),z).  [resolve(50,a,43,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | f7(z,y) < y.  [resolve(50,a,44,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | Cont(f7(z,y),y).  [resolve(50,a,45,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | P(f7(z,y),z).  [resolve(50,a,46,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | f7(z,y) < y.  [resolve(50,a,47,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | Cont(f7(z,y),y).  [resolve(50,a,48,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | P(f7(z,y),z).  [resolve(50,a,49,a)].

Eliminating MinDim/1
51 MinDim(c1).  [clausify(15)].
52 -MinDim(x) | -Cont(y,x) | y = x.  [clausify(5)].
Derived: -Cont(x,c1) | x = c1.  [resolve(51,a,52,a)].
53 -MinDim(x) | -ZEX(x).  [clausify(29)].
Derived: -ZEX(c1).  [resolve(53,a,51,a)].
54 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(29)].
Derived: -(x < c1) | ZEX(x).  [resolve(54,a,51,a)].
55 MinDim(x) | ZEX(x) | f13(x) < x.  [clausify(29)].
Derived: ZEX(x) | f13(x) < x | -Cont(y,x) | y = x.  [resolve(55,a,52,a)].
Derived: ZEX(x) | f13(x) < x | -(y < x) | ZEX(y).  [resolve(55,a,54,a)].
56 MinDim(x) | ZEX(x) | -ZEX(f13(x)).  [clausify(29)].
Derived: ZEX(x) | -ZEX(f13(x)) | -Cont(y,x) | y = x.  [resolve(56,a,52,a)].
Derived: ZEX(x) | -ZEX(f13(x)) | -(y < x) | ZEX(y).  [resolve(56,a,54,a)].
57 -L(x) | Covers(x,y) | -Max(y) | -MinDim(y).  [resolve(35,b,32,a)].
Derived: -L(x) | Covers(x,c1) | -Max(c1).  [resolve(57,d,51,a)].
Derived: -L(x) | Covers(x,y) | -Max(y) | ZEX(y) | f13(y) < y.  [resolve(57,d,55,a)].
Derived: -L(x) | Covers(x,y) | -Max(y) | ZEX(y) | -ZEX(f13(y)).  [resolve(57,d,56,a)].
58 L(x) | -Max(x) | MinDim(f1(x)).  [resolve(36,c,34,a)].
Derived: L(x) | -Max(x) | -Cont(y,f1(x)) | y = f1(x).  [resolve(58,c,52,a)].
Derived: L(x) | -Max(x) | -ZEX(f1(x)).  [resolve(58,c,53,a)].
Derived: L(x) | -Max(x) | -(y < f1(x)) | ZEX(y).  [resolve(58,c,54,a)].
59 -L(x) | MinDim(f2(x)).  [resolve(37,b,34,a)].
Derived: -L(x) | -Cont(y,f2(x)) | y = f2(x).  [resolve(59,b,52,a)].
Derived: -L(x) | -ZEX(f2(x)).  [resolve(59,b,53,a)].
Derived: -L(x) | -(y < f2(x)) | ZEX(y).  [resolve(59,b,54,a)].
60 -L(x) | MinDim(f3(x)).  [resolve(38,b,34,a)].
Derived: -L(x) | -Cont(y,f3(x)) | y = f3(x).  [resolve(60,b,52,a)].
Derived: -L(x) | -ZEX(f3(x)).  [resolve(60,b,53,a)].
Derived: -L(x) | -(y < f3(x)) | ZEX(y).  [resolve(60,b,54,a)].

Eliminating C/2
61 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(7)].
62 -C(x,y) | Cont(f4(x,y),x).  [clausify(7)].
63 -C(x,y) | Cont(f4(x,y),y).  [clausify(7)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),y).  [resolve(61,a,62,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f4(y,z),z).  [resolve(61,a,63,a)].

Eliminating PP/2
64 PP(x,y) | -P(x,y) | y = x.  [clausify(9)].
65 -PP(x,y) | P(x,y).  [clausify(9)].
66 -PP(x,y) | y != x.  [clausify(9)].
67 -Max(x) | -PP(x,y).  [clausify(13)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(67,b,64,a)].
68 Max(x) | ZEX(x) | PP(x,f10(x)).  [clausify(13)].
Derived: Max(x) | ZEX(x) | P(x,f10(x)).  [resolve(68,c,65,a)].
Derived: Max(x) | ZEX(x) | f10(x) != x.  [resolve(68,c,66,a)].
69 -Min(x) | -PP(y,x).  [clausify(14)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(69,b,64,a)].
Derived: -Min(f10(x)) | Max(x) | ZEX(x).  [resolve(69,b,68,c)].
70 Min(x) | ZEX(x) | PP(f11(x),x).  [clausify(14)].
Derived: Min(x) | ZEX(x) | P(f11(x),x).  [resolve(70,c,65,a)].
Derived: Min(x) | ZEX(x) | x != f11(x).  [resolve(70,c,66,a)].
Derived: Min(x) | ZEX(x) | -Max(f11(x)).  [resolve(70,c,67,b)].

Eliminating PO/2
71 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(10)].
72 -PO(x,y) | P(f5(x,y),x).  [clausify(10)].
73 -PO(x,y) | P(f5(x,y),y).  [clausify(10)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),y).  [resolve(71,a,72,a)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),z).  [resolve(71,a,73,a)].

Eliminating SC/2
74 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),x).  [clausify(12)].
75 -SC(x,y) | Cont(f8(x,y),x).  [clausify(12)].
76 -SC(x,y) | Cont(f8(x,y),y).  [clausify(12)].
77 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(12)].
78 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(12)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),y).  [resolve(74,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),z).  [resolve(74,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(74,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(74,a,78,a)].
79 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),y).  [clausify(12)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),y).  [resolve(79,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),z).  [resolve(79,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(79,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(79,a,78,a)].
80 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f9(x,y) < x) | -(f9(x,y) < y).  [clausify(12)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),y).  [resolve(80,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),z).  [resolve(80,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(80,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(80,a,78,a)].

Eliminating MaxDim/1
81 MaxDim(x) | -(f12(x) <= x).  [clausify(28)].
82 -MaxDim(x) | y <= x.  [clausify(28)].
Derived: -(f12(x) <= x) | y <= x.  [resolve(81,a,82,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, L, Max, Min, Cont, <, P, Covers, <=, EqDim ]).
Function symbol precedence:  function_order([ c1, c2, c3, f4, f5, f6, f7, f8, f9, f14, f1, f2, f3, f10, f11, f12, f13 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.03 seconds.

============================== PROOF =================================

% Proof 1 at 0.04 (+ 0.00) seconds.
% Length of proof is 29.
% Level of proof is 8.
% Maximum clause weight is 9.000.
% Given clauses 175.

2 (all x (L(x) <-> Max(x) & (all y (Pt(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
3 (all x (L(x) -> (exists y exists z (Pt(y) & Pt(z) & Cont(y,x) & Cont(z,x) & y != z)))) # label(non_clause).  [assumption].
26 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
30 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
31 (all x all y (L(x) & L(y) -> EqDim(x,y))) # label(non_clause) # label(goal).  [goal].
35 -L(x) | -Pt(y) | Covers(x,y).  [clausify(2)].
37 -L(x) | Pt(f2(x)).  [clausify(3)].
107 EqDim(x,y) | x < y | y < x.  [clausify(26)].
111 -Covers(x,y) | y < x.  [clausify(30)].
112 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(30)].
115 L(c2).  [deny(31)].
116 L(c3).  [deny(31)].
117 -EqDim(c2,c3).  [deny(31)].
121 -L(x) | -L(y) | Covers(y,f2(x)).  [resolve(37,b,35,b)].
194 -L(x) | Covers(x,f2(x)).  [factor(121,a,b)].
222 c2 < c3 | c3 < c2.  [resolve(117,a,107,a)].
225 -L(x) | Covers(x,f2(c3)).  [resolve(121,a,116,a)].
226 -L(x) | Covers(x,f2(c2)).  [resolve(121,a,115,a)].
303 Covers(c3,f2(c3)).  [resolve(194,a,116,a)].
304 Covers(c2,f2(c2)).  [resolve(194,a,115,a)].
459 -(f2(c3) < x) | -(x < c3).  [resolve(303,a,112,a)].
466 -(f2(c2) < x) | -(x < c2).  [resolve(304,a,112,a)].
476 Covers(c2,f2(c3)).  [resolve(225,a,115,a)].
477 -(f2(c2) < c3) | c2 < c3.  [resolve(466,b,222,b)].
495 Covers(c3,f2(c2)).  [resolve(226,a,116,a)].
498 f2(c3) < c2.  [resolve(476,a,111,a)].
509 f2(c2) < c3.  [resolve(495,a,111,a)].
510 c2 < c3.  [back_unit_del(477),unit_del(a,509)].
512 $F.  [resolve(510,a,459,b),unit_del(a,498)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=175. Generated=594. Kept=424. proofs=1.
Usable=174. Sos=178. Demods=0. Limbo=1, Disabled=228. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=169. Back_subsumed=66.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=5.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=697. Nonunit_bsub_feature_tests=1348.
Megabytes=0.91.
User_CPU=0.04, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 16280 exit (max_proofs) Tue Oct 23 21:30:32 2012
