============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 27906 was started by torsten on stl-ws2,
Mon May 28 20:06:19 2012
The command was "prover9 -t 600 -f codi/conversions/codi.p9 codi/definitions/input/ep.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/conversions/codi_basic.p9 cont/conversions/cont_c.p9 codi/definitions/input/epp.p9 codi/definitions/input/min_max_in_dim.p9 dim/conversions/dim_basic.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/input/codi_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/input/codi_theorems_2.p9


formulas(goals).
(all x all y (SC(x,y) -> C(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
3 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
5 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
6 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
8 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
9 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
10 (all x -(x < x)) # label(non_clause).  [assumption].
11 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
12 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
13 (all x EqDim(x,x)) # label(non_clause).  [assumption].
14 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
15 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
16 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
18 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
19 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
20 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
22 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
23 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
24 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
28 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating PO/2
29 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(2)].
30 -PO(x,y) | P(f1(x,y),x).  [clausify(2)].
31 -PO(x,y) | P(f1(x,y),y).  [clausify(2)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),y).  [resolve(29,a,30,a)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),z).  [resolve(29,a,31,a)].

Eliminating Inc/2
32 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(3)].
33 -Inc(x,y) | f2(x,y) < x | f3(x,y) < y.  [clausify(3)].
34 -Inc(x,y) | f2(x,y) < x | Cont(f3(x,y),y).  [clausify(3)].
35 -Inc(x,y) | f2(x,y) < x | P(f3(x,y),x).  [clausify(3)].
36 -Inc(x,y) | Cont(f2(x,y),x) | f3(x,y) < y.  [clausify(3)].
37 -Inc(x,y) | Cont(f2(x,y),x) | Cont(f3(x,y),y).  [clausify(3)].
38 -Inc(x,y) | Cont(f2(x,y),x) | P(f3(x,y),x).  [clausify(3)].
39 -Inc(x,y) | P(f2(x,y),y) | f3(x,y) < y.  [clausify(3)].
40 -Inc(x,y) | P(f2(x,y),y) | Cont(f3(x,y),y).  [clausify(3)].
41 -Inc(x,y) | P(f2(x,y),y) | P(f3(x,y),x).  [clausify(3)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | f3(y,z) < z.  [resolve(32,a,33,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | Cont(f3(y,z),z).  [resolve(32,a,34,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(y,z) < y | P(f3(y,z),y).  [resolve(32,a,35,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | f3(y,z) < z.  [resolve(32,a,36,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | Cont(f3(y,z),z).  [resolve(32,a,37,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(y,z),y) | P(f3(y,z),y).  [resolve(32,a,38,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | f3(y,z) < z.  [resolve(32,a,39,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | Cont(f3(y,z),z).  [resolve(32,a,40,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(y,z),z) | P(f3(y,z),y).  [resolve(32,a,41,a)].
42 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(3)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | f3(z,y) < y.  [resolve(42,a,33,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | Cont(f3(z,y),y).  [resolve(42,a,34,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f2(z,y) < z | P(f3(z,y),z).  [resolve(42,a,35,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | f3(z,y) < y.  [resolve(42,a,36,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | Cont(f3(z,y),y).  [resolve(42,a,37,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f2(z,y),z) | P(f3(z,y),z).  [resolve(42,a,38,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | f3(z,y) < y.  [resolve(42,a,39,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | Cont(f3(z,y),y).  [resolve(42,a,40,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f2(z,y),y) | P(f3(z,y),z).  [resolve(42,a,41,a)].

Eliminating SC/2
43 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(4)].
44 -SC(x,y) | Cont(f4(x,y),x).  [clausify(4)].
45 -SC(x,y) | Cont(f4(x,y),y).  [clausify(4)].
46 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(4)].
47 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(4)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | Cont(f4(y,z),y).  [resolve(43,a,44,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | Cont(f4(y,z),z).  [resolve(43,a,45,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(43,a,46,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(43,a,47,a)].
48 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(4)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | Cont(f4(y,z),y).  [resolve(48,a,44,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | Cont(f4(y,z),z).  [resolve(48,a,45,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(48,a,46,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f5(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(48,a,47,a)].
49 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(4)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | Cont(f4(y,z),y).  [resolve(49,a,44,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | Cont(f4(y,z),z).  [resolve(49,a,45,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(49,a,46,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f5(y,z) < y) | -(f5(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(49,a,47,a)].
50 SC(c2,c3).  [deny(28)].
Derived: Cont(f4(c2,c3),c2).  [resolve(50,a,44,a)].
Derived: Cont(f4(c2,c3),c3).  [resolve(50,a,45,a)].
Derived: -Cont(x,c2) | -Cont(x,c3) | x < c2.  [resolve(50,a,46,a)].
Derived: -Cont(x,c2) | -Cont(x,c3) | x < c3.  [resolve(50,a,47,a)].

Eliminating PP/2
51 PP(x,y) | -P(x,y) | y = x.  [clausify(7)].
52 -PP(x,y) | P(x,y).  [clausify(7)].
53 -PP(x,y) | y != x.  [clausify(7)].
54 -Max(x) | -PP(x,y).  [clausify(8)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(54,b,51,a)].
55 Max(x) | ZEX(x) | PP(x,f7(x)).  [clausify(8)].
Derived: Max(x) | ZEX(x) | P(x,f7(x)).  [resolve(55,c,52,a)].
Derived: Max(x) | ZEX(x) | f7(x) != x.  [resolve(55,c,53,a)].
56 -Min(x) | -PP(y,x).  [clausify(9)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(56,b,51,a)].
Derived: -Min(f7(x)) | Max(x) | ZEX(x).  [resolve(56,b,55,c)].
57 Min(x) | ZEX(x) | PP(f8(x),x).  [clausify(9)].
Derived: Min(x) | ZEX(x) | P(f8(x),x).  [resolve(57,c,52,a)].
Derived: Min(x) | ZEX(x) | x != f8(x).  [resolve(57,c,53,a)].
Derived: Min(x) | ZEX(x) | -Max(f8(x)).  [resolve(57,c,54,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Max, Min, Cont, <, P, EqDim, C ]).
Function symbol precedence:  function_order([ c1, c2, c3, f1, f2, f3, f4, f5, f6, f9, f7, f8 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.01) seconds.
% Length of proof is 11.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 57.

4 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
6 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
28 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause) # label(goal).  [goal].
44 -SC(x,y) | Cont(f4(x,y),x).  [clausify(4)].
45 -SC(x,y) | Cont(f4(x,y),y).  [clausify(4)].
50 SC(c2,c3).  [deny(28)].
64 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(6)].
88 -C(c2,c3).  [deny(28)].
121 Cont(f4(c2,c3),c2).  [resolve(50,a,44,a)].
122 Cont(f4(c2,c3),c3).  [resolve(50,a,45,a)].
209 $F.  [ur(64,a,88,a,b,121,a),unit_del(a,122)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=57. Generated=234. Kept=150. proofs=1.
Usable=57. Sos=68. Demods=0. Limbo=16, Disabled=114. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=83. Back_subsumed=9.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=469. Nonunit_bsub_feature_tests=567.
Megabytes=0.38.
User_CPU=0.02, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 27906 exit (max_proofs) Mon May 28 20:06:19 2012
