============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 10108 was started by torsten on stl-ws2,
Thu Oct 20 21:03:56 2011
The command was "prover9 -t 600 -f codi/conversions/codi_basic.p9 codi/definitions/input/ep.p9 codi/definitions/input/po.p9 dim/conversions/dim_basic.p9 cont/conversions/cont_c_ext.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/po_theorems_relevance1.order codi/theorems/input/po_theorems_3.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/po_theorems_relevance1.order

predicate_order([=,C,P,ZEX,PO,Cont,EqDim,<]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/po_theorems_3.p9


formulas(goals).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
4 (all x -(x < x)) # label(non_clause).  [assumption].
5 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
6 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
7 (all x EqDim(x,x)) # label(non_clause).  [assumption].
8 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
9 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
10 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
12 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
13 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
16 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
18 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
19 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
23 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating PO/2
24 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(3)].
25 -PO(x,y) | P(f1(x,y),x).  [clausify(3)].
26 -PO(x,y) | P(f1(x,y),y).  [clausify(3)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),y).  [resolve(24,a,25,a)].
Derived: -P(x,y) | -P(x,z) | P(f1(y,z),z).  [resolve(24,a,26,a)].
27 PO(c2,c3).  [deny(23)].
Derived: P(f1(c2,c3),c2).  [resolve(27,a,25,a)].
Derived: P(f1(c2,c3),c3).  [resolve(27,a,26,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. f1=1. f2=1. f3=1. f4=1.
Predicate symbol precedence:  predicate_order([ =, C, P, ZEX, Cont, EqDim, < ]).
Function symbol precedence:  function_order([ c1, c2, c3, f1, f2, f3, f4 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 19.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 45.

2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
9 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
23 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause) # label(goal).  [goal].
25 -PO(x,y) | P(f1(x,y),x).  [clausify(3)].
26 -PO(x,y) | P(f1(x,y),y).  [clausify(3)].
27 PO(c2,c3).  [deny(23)].
30 -P(x,y) | EqDim(x,y).  [clausify(2)].
36 -EqDim(x,y) | EqDim(y,x).  [clausify(8)].
37 -EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(9)].
58 -EqDim(c2,c3).  [deny(23)].
61 P(f1(c2,c3),c2).  [resolve(27,a,25,a)].
62 P(f1(c2,c3),c3).  [resolve(27,a,26,a)].
87 -EqDim(c3,c2).  [ur(36,b,58,a)].
93 EqDim(f1(c2,c3),c2).  [resolve(61,a,30,a)].
99 EqDim(f1(c2,c3),c3).  [resolve(62,a,30,a)].
113 -EqDim(c3,f1(c2,c3)).  [ur(37,b,93,a,c,87,a)].
127 $F.  [resolve(99,a,36,a),unit_del(a,113)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=45. Generated=145. Kept=99. proofs=1.
Usable=45. Sos=51. Demods=0. Limbo=2, Disabled=40. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=45. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=72. Nonunit_bsub_feature_tests=196.
Megabytes=0.23.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 10108 exit (max_proofs) Thu Oct 20 21:03:56 2011
