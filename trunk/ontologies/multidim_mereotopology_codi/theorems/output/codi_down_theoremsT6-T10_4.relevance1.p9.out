============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23412 was started by torsten on stl-ws2,
Thu Nov 24 20:19:06 2011
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsT11.p9 codi/conversions/codi_down.p9 codi/definitions/input/min_max_in_dim.p9 codi/conversions/codi_int.p9 codi/definitions/input/epp.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsT11-T10_relevance1.order codi/theorems/input/codi_down_theoremsT11-T10_4.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsT11.p9


formulas(sos).
(all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsT11-T10_relevance1.order

predicate_order([SC,EqDim,=,PP,C,<=,ZEX,ZEX,P,intersection,<,Cont,difference]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsT11-T10_4.p9


formulas(goals).
(all x all y all z (P(z,intersection(x,difference(x,y))) -> P(z,difference(x,y)))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: intersection, difference.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
6 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
8 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
9 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
10 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
14 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
15 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
16 (exists x ZEX(x)) # label(non_clause).  [assumption].
17 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
18 (all x -(x < x)) # label(non_clause).  [assumption].
19 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
20 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
23 (exists x MinDim(x)) # label(non_clause).  [assumption].
24 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
25 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
26 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
27 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
28 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
29 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
30 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
31 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
32 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
34 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
35 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
36 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
37 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
38 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
39 (all x all y all z (P(z,intersection(x,difference(x,y))) -> P(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Min/1
40 Min(x) | ZEX(x) | PP(f2(x),x).  [clausify(9)].
41 -P(x,y) | -Min(z) | -Cont(z,y) | Cont(z,x) | Cont(z,difference(y,x)).  [clausify(1)].
42 -Min(x) | -ZEX(x).  [clausify(9)].
43 -Min(x) | -PP(y,x).  [clausify(9)].
Derived: ZEX(x) | PP(f2(x),x) | -P(y,z) | -Cont(x,z) | Cont(x,y) | Cont(x,difference(z,y)).  [resolve(40,a,41,b)].
Derived: ZEX(x) | PP(f2(x),x) | -PP(y,x).  [resolve(40,a,43,a)].

Eliminating Max/1
44 Max(x) | ZEX(x) | PP(x,f1(x)).  [clausify(8)].
45 -Max(x) | -ZEX(x).  [clausify(8)].
46 -Max(x) | -PP(x,y).  [clausify(8)].
Derived: ZEX(x) | PP(x,f1(x)) | -PP(x,y).  [resolve(44,a,46,a)].

Eliminating MinDim/1
47 -MinDim(x) | -ZEX(x).  [clausify(27)].
48 MinDim(c2).  [clausify(23)].
Derived: -ZEX(c2).  [resolve(47,a,48,a)].
49 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(27)].
Derived: -(x < c2) | ZEX(x).  [resolve(49,a,48,a)].
50 MinDim(x) | ZEX(x) | f4(x) < x.  [clausify(27)].
Derived: ZEX(x) | f4(x) < x | -(y < x) | ZEX(y).  [resolve(50,a,49,a)].
51 MinDim(x) | ZEX(x) | -ZEX(f4(x)).  [clausify(27)].
Derived: ZEX(x) | -ZEX(f4(x)) | -(y < x) | ZEX(y).  [resolve(51,a,49,a)].

Eliminating MaxDim/1
52 MaxDim(x) | -(f3(x) <= x).  [clausify(26)].
53 -MaxDim(x) | y <= x.  [clausify(26)].
Derived: -(f3(x) <= x) | y <= x.  [resolve(52,a,53,a)].

Eliminating Covers/2
54 Covers(x,y) | -(y < x) | y < f5(x,y).  [clausify(28)].
55 -Covers(x,y) | y < x.  [clausify(28)].
56 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(28)].
Derived: -(x < y) | x < f5(y,x) | -(x < z) | -(z < y).  [resolve(54,a,56,a)].
57 Covers(x,y) | -(y < x) | f5(x,y) < x.  [clausify(28)].
Derived: -(x < y) | f5(y,x) < y | -(x < z) | -(z < y).  [resolve(57,a,56,a)].

Eliminating PO/2
58 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(29)].
59 -PO(x,y) | P(f6(x,y),x).  [clausify(29)].
60 -PO(x,y) | P(f6(x,y),y).  [clausify(29)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),y).  [resolve(58,a,59,a)].
Derived: -P(x,y) | -P(x,z) | P(f6(y,z),z).  [resolve(58,a,60,a)].

Eliminating Inc/2
61 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(30)].
62 -Inc(x,y) | f7(x,y) < x | f8(x,y) < y.  [clausify(30)].
63 -Inc(x,y) | f7(x,y) < x | Cont(f8(x,y),y).  [clausify(30)].
64 -Inc(x,y) | f7(x,y) < x | P(f8(x,y),x).  [clausify(30)].
65 -Inc(x,y) | Cont(f7(x,y),x) | f8(x,y) < y.  [clausify(30)].
66 -Inc(x,y) | Cont(f7(x,y),x) | Cont(f8(x,y),y).  [clausify(30)].
67 -Inc(x,y) | Cont(f7(x,y),x) | P(f8(x,y),x).  [clausify(30)].
68 -Inc(x,y) | P(f7(x,y),y) | f8(x,y) < y.  [clausify(30)].
69 -Inc(x,y) | P(f7(x,y),y) | Cont(f8(x,y),y).  [clausify(30)].
70 -Inc(x,y) | P(f7(x,y),y) | P(f8(x,y),x).  [clausify(30)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | f8(y,z) < z.  [resolve(61,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | Cont(f8(y,z),z).  [resolve(61,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(y,z) < y | P(f8(y,z),y).  [resolve(61,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | f8(y,z) < z.  [resolve(61,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | Cont(f8(y,z),z).  [resolve(61,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(y,z),y) | P(f8(y,z),y).  [resolve(61,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | f8(y,z) < z.  [resolve(61,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | Cont(f8(y,z),z).  [resolve(61,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(y,z),z) | P(f8(y,z),y).  [resolve(61,a,70,a)].
71 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(30)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | f8(z,y) < y.  [resolve(71,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | Cont(f8(z,y),y).  [resolve(71,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f7(z,y) < z | P(f8(z,y),z).  [resolve(71,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | f8(z,y) < y.  [resolve(71,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | Cont(f8(z,y),y).  [resolve(71,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f7(z,y),z) | P(f8(z,y),z).  [resolve(71,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | f8(z,y) < y.  [resolve(71,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | Cont(f8(z,y),y).  [resolve(71,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f7(z,y),y) | P(f8(z,y),z).  [resolve(71,a,70,a)].

Eliminating SC/2
72 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),x).  [clausify(31)].
73 -SC(x,y) | Cont(f9(x,y),x).  [clausify(31)].
74 -SC(x,y) | Cont(f9(x,y),y).  [clausify(31)].
75 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(31)].
76 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),y).  [resolve(72,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | Cont(f9(y,z),z).  [resolve(72,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(72,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(72,a,76,a)].
77 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f10(x,y),y).  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),y).  [resolve(77,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | Cont(f9(y,z),z).  [resolve(77,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(77,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(77,a,76,a)].
78 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f10(x,y) < x) | -(f10(x,y) < y).  [clausify(31)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),y).  [resolve(78,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | Cont(f9(y,z),z).  [resolve(78,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(78,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f10(y,z) < y) | -(f10(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(78,a,76,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. c5=1. intersection=1. difference=1. f5=1. f6=1. f7=1. f8=1. f9=1. f10=1. f11=1. f12=1. f13=1. f1=1. f2=1. f3=1. f4=1.
Predicate symbol precedence:  predicate_order([ EqDim, =, PP, C, <=, ZEX, P, <, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, intersection, difference, f5, f6, f7, f8, f9, f10, f11, f12, f13, f1, f2, f3, f4 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 26 (0.00 of 0.25 sec).

Low Water (keep): wt=31.000, iters=6941

Low Water (keep): wt=29.000, iters=7025

Low Water (keep): wt=25.000, iters=6707

Low Water (keep): wt=24.000, iters=6701

Low Water (keep): wt=22.000, iters=6998

Low Water (keep): wt=21.000, iters=6683

Low Water (keep): wt=20.000, iters=6667

Low Water (keep): wt=19.000, iters=6675

Low Water (keep): wt=18.000, iters=6671

Low Water (keep): wt=17.000, iters=6673

Low Water (keep): wt=16.000, iters=6678

Low Water (keep): wt=15.000, iters=6691

Low Water (keep): wt=14.000, iters=6666

Low Water (keep): wt=13.000, iters=6669

Low Water (displace): id=5124, wt=91.000

Low Water (displace): id=5104, wt=64.000

Low Water (displace): id=5749, wt=60.000

Low Water (displace): id=5517, wt=57.000

Low Water (displace): id=5123, wt=55.000

Low Water (displace): id=23364, wt=28.000

Low Water (displace): id=27201, wt=12.000

Low Water (displace): id=28152, wt=9.000

Low Water (displace): id=29678, wt=8.000

Low Water (displace): id=29790, wt=7.000

Low Water (keep): wt=12.000, iters=6666

Low Water (keep): wt=11.000, iters=6669

============================== PROOF =================================

% Proof 1 at 178.38 (+ 0.21) seconds.
% Length of proof is 102.
% Level of proof is 13.
% Maximum clause weight is 16.000.
% Given clauses 16330.

3 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
15 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
16 (exists x ZEX(x)) # label(non_clause).  [assumption].
17 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
18 (all x -(x < x)) # label(non_clause).  [assumption].
20 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
24 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
25 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
35 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
36 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
38 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
39 (all x all y all z (P(z,intersection(x,difference(x,y))) -> P(z,difference(x,y)))) # label(non_clause) # label(goal).  [goal].
80 -(x < y) | difference(y,x) = y.  [clausify(3)].
82 -(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(5)].
84 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(7)].
86 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(7)].
88 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(11)].
89 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(12)].
90 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(13)].
91 Cont(x,y) | -P(x,intersection(y,z)).  [clausify(13)].
92 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(13)].
97 -Cont(x,y) | x <= y.  [clausify(15)].
98 ZEX(c1).  [clausify(16)].
99 -P(x,y) | Cont(x,y).  [clausify(17)].
100 -P(x,y) | EqDim(x,y).  [clausify(17)].
101 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(17)].
102 -(x < x).  [clausify(18)].
104 -(x < y) | -(y <= z) | x < z.  [clausify(20)].
105 -ZEX(x) | -ZEX(y) | y = x.  [clausify(21)].
106 -ZEX(x) | ZEX(y) | x < y.  [clausify(22)].
107 -EqDim(x,y) | -(x < y).  [clausify(24)].
108 -EqDim(x,y) | -(y < x).  [clausify(24)].
109 EqDim(x,y) | x < y | y < x.  [clausify(24)].
110 -(x <= y) | x < y | EqDim(x,y).  [clausify(25)].
111 x <= y | -(x < y).  [clausify(25)].
112 x <= y | -EqDim(x,y).  [clausify(25)].
120 ZEX(x) | Cont(x,x).  [clausify(35)].
122 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(36)].
124 -ZEX(x) | -Cont(y,x).  [clausify(38)].
125 -ZEX(x) | -Cont(x,y).  [clausify(38)].
126 P(c5,intersection(c3,difference(c3,c4))).  [deny(39)].
127 -P(c5,difference(c3,c4)).  [deny(39)].
170 -Cont(x,y) | x <= intersection(y,y).  [factor(89,a,b)].
199 intersection(x,y) <= x | ZEX(intersection(x,y)).  [resolve(97,a,88,b)].
201 P(intersection(x,y),x) | -EqDim(intersection(x,y),x) | ZEX(intersection(x,y)).  [resolve(101,b,88,b)].
202 -ZEX(x) | c1 = x.  [resolve(105,a,98,a),flip(b)].
212 EqDim(x,y) | x < y | -(x <= z) | y < z.  [resolve(109,c,104,a)].
213 EqDim(x,y) | x < y | difference(x,y) = x.  [resolve(109,c,80,a)].
249 ZEX(x) | -Cont(x,y) | -EqDim(x,intersection(x,y)) | P(x,intersection(x,y)).  [resolve(120,b,90,a)].
250 ZEX(x) | -Cont(x,y) | x <= intersection(y,x).  [resolve(120,b,89,b)].
252 ZEX(x) | ZEX(difference(x,x)).  [resolve(120,b,86,b)].
273 EqDim(c5,intersection(c3,difference(c3,c4))).  [resolve(126,a,100,a)].
276 Cont(c5,difference(c3,c4)).  [resolve(126,a,92,b)].
277 Cont(c5,c3).  [resolve(126,a,91,b)].
411 x <= intersection(x,x) | ZEX(x).  [resolve(170,a,120,b)].
583 c5 <= intersection(c3,c3).  [resolve(277,a,170,a)].
615 -ZEX(c5).  [resolve(277,a,125,b)].
616 -ZEX(c3).  [resolve(277,a,124,b)].
745 -ZEX(difference(c3,c4)).  [resolve(276,a,124,b)].
751 -EqDim(c5,difference(c3,c4)).  [resolve(276,a,101,b),unit_del(a,127)].
752 c5 <= difference(c3,c4).  [resolve(276,a,97,a)].
787 -(intersection(c3,c3) < c5).  [ur(104,b,583,a,c,102,a)].
947 c5 < difference(c3,c4).  [resolve(752,a,110,a),unit_del(b,751)].
948 -(difference(c3,c4) < c5).  [ur(104,b,752,a,c,102,a)].
1140 -ZEX(intersection(c3,c3)).  [ur(106,b,615,a,c,787,a)].
1144 intersection(c3,c3) <= c3.  [resolve(1140,a,199,b)].
1167 -EqDim(difference(c3,c4),c5).  [resolve(947,a,108,b)].
1271 intersection(c3,c3) < c3 | EqDim(intersection(c3,c3),c3).  [resolve(1144,a,110,a)].
1272 -(c3 < intersection(c3,c3)).  [ur(104,b,1144,a,c,102,a)].
1612 EqDim(x,y) | difference(x,y) = x | x <= y.  [resolve(213,b,111,b)].
1622 ZEX(x) | difference(x,x) = c1.  [resolve(252,b,202,a),flip(b)].
2794 -(c5 < intersection(c3,difference(c3,c4))).  [ur(107,a,273,a)].
2856 c3 <= intersection(c3,c3).  [resolve(411,b,616,a)].
2872 EqDim(c3,intersection(c3,c3)).  [resolve(2856,a,110,a),unit_del(a,1272)].
2873 -(intersection(c3,c3) < c3).  [ur(104,b,2856,a,c,102,a)].
2875 EqDim(intersection(c3,c3),c3).  [back_unit_del(1271),unit_del(a,2873)].
2916 P(intersection(c3,c3),c3).  [resolve(2875,a,201,b),unit_del(b,1140)].
2950 Cont(intersection(c3,c3),c3).  [resolve(2916,a,99,a)].
3058 -Cont(c3,intersection(c3,c3)) | intersection(c3,c3) = c3.  [resolve(2950,a,122,b)].
5818 difference(difference(c3,c4),difference(c3,c4)) = c1.  [resolve(1622,a,745,a)].
5819 difference(c3,c3) = c1.  [resolve(1622,a,616,a)].
5835 Cont(c3,c3).  [para(5819(a,1),84(a,1)),unit_del(a,98),unit_del(b,616)].
5849 P(c3,intersection(c3,c3)).  [resolve(5835,a,249,b),unit_del(a,616),unit_del(b,2872)].
6050 Cont(c3,intersection(c3,c3)).  [resolve(5849,a,99,a)].
6052 intersection(c3,c3) = c3.  [back_unit_del(3058),unit_del(a,6050)].
11249 -(difference(c3,c4) <= intersection(c3,difference(c3,c4))).  [ur(212,a,1167,a,b,948,a,d,2794,a)].
41351 Cont(difference(c3,c4),difference(c3,c4)).  [para(5818(a,1),84(a,1)),unit_del(a,98),unit_del(b,745)].
41358 -(c3 <= c4) | Cont(difference(c3,c4),c3).  [resolve(41351,a,82,b)].
119167 -Cont(difference(c3,c4),c3).  [ur(250,a,745,a,c,11249,a)].
119170 -Cont(difference(c3,c4),intersection(c3,difference(c3,c4))).  [ur(97,b,11249,a)].
119173 -(c3 <= c4).  [back_unit_del(41358),unit_del(b,119167)].
119174 EqDim(c3,c4) | difference(c3,c4) = c3.  [resolve(119173,a,1612,c)].
119177 -EqDim(c3,c4).  [ur(112,a,119173,a)].
119179 difference(c3,c4) = c3.  [back_unit_del(119174),unit_del(a,119177)].
119184 $F.  [back_rewrite(119170),rewrite([119179(3),119179(5),6052(4)]),unit_del(a,5835)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=16330. Generated=954762. Kept=119105. proofs=1.
Usable=15560. Sos=19996. Demods=411. Limbo=5, Disabled=83674. Hints=0.
Kept_by_rule=0, Deleted_by_rule=4.
Forward_subsumed=239617. Back_subsumed=110.
Sos_limit_deleted=596035. Sos_displaced=76492. Sos_removed=0.
New_demodulators=696 (0 lex), Back_demodulated=5085. Back_unit_deleted=1857.
Demod_attempts=17626712. Demod_rewrites=183101.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=192075. Nonunit_bsub_feature_tests=9694.
Megabytes=120.88.
User_CPU=178.38, System_CPU=0.21, Wall_clock=179.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23412 exit (max_proofs) Thu Nov 24 20:22:05 2011
