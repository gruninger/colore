============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 2181 was started by torsten on scotus.mie.utoronto.ca,
Thu Mar 15 10:25:30 2012
The command was "prover9 -t 6000 -f codi/definitions/input/icon.p9 codi/conversions/codi_down.p9 codi/definitions/input/con.p9 codi/conversions/codi_int.p9 codi/conversions/codi_down.p9 codi/definitions/input/epp.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/conversions/codi_int.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_basic.p9 codi/definitions/input/ep.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 codi/definitions/input/epp.p9 cont/conversions/cont_basic.p9 codi/definitions/input/ep.p9 codi/theorems/input/options.txt codi/theorems/input/icon_theorems_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/definitions/input/icon.p9


formulas(sos).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/con.p9


formulas(sos).
(all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/input/icon_theorems_1.p9


formulas(goals).
(all x (Min(x) -> ICon(x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 6000).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
2 (all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
3 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
4 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
6 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
7 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
8 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
9 (all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
10 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
14 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
15 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
16 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
17 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
18 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
19 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
20 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
21 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
22 (exists x ZEX(x)) # label(non_clause).  [assumption].
23 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
24 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
25 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
26 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
27 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
28 (all x -(x < x)) # label(non_clause).  [assumption].
29 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
30 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
31 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
32 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
33 (exists x MinDim(x)) # label(non_clause).  [assumption].
34 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
35 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
36 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
37 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
38 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
39 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
40 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
41 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
42 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
43 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
44 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
45 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
46 (exists x ZEX(x)) # label(non_clause).  [assumption].
47 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
49 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
50 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
51 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
52 (all x -(x < x)) # label(non_clause).  [assumption].
53 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
54 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
55 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
56 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
57 (exists x MinDim(x)) # label(non_clause).  [assumption].
58 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
59 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
60 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
61 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
62 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
63 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
64 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
65 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
66 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
67 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
68 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
69 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
70 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
71 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
72 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
73 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
75 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
76 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
77 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
78 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
79 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
80 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
81 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
82 (all x (Min(x) -> ICon(x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Con/1
83 ICon(x) | -Con(x) | PP(f1(x),x).  [clausify(1)].
84 -ICon(x) | Con(x).  [clausify(1)].
85 ICon(x) | -Con(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [clausify(1)].
86 -UCon(x) | Con(x).  [clausify(2)].
Derived: -UCon(x) | ICon(x) | PP(f1(x),x).  [resolve(86,b,83,b)].
Derived: -UCon(x) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(86,b,85,b)].
87 UCon(x) | -Con(x) | PP(f2(x),x).  [clausify(2)].
Derived: UCon(x) | PP(f2(x),x) | -ICon(x).  [resolve(87,b,84,b)].
88 UCon(x) | -Con(x) | Cont(f3(x),f2(x)).  [clausify(2)].
Derived: UCon(x) | Cont(f3(x),f2(x)) | -ICon(x).  [resolve(88,b,84,b)].
89 UCon(x) | -Con(x) | Cont(f3(x),difference(x,f2(x))).  [clausify(2)].
Derived: UCon(x) | Cont(f3(x),difference(x,f2(x))) | -ICon(x).  [resolve(89,b,84,b)].
90 UCon(x) | -Con(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))).  [clausify(2)].
Derived: UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | -ICon(x).  [resolve(90,b,84,b)].
91 -Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(9)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | -ICon(y).  [resolve(91,a,84,b)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | -UCon(y).  [resolve(91,a,86,b)].
92 Con(x) | PP(f4(x),x).  [clausify(9)].
Derived: PP(f4(x),x) | ICon(x) | PP(f1(x),x).  [resolve(92,a,83,b)].
Derived: PP(f4(x),x) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(92,a,85,b)].
Derived: PP(f4(x),x) | UCon(x) | PP(f2(x),x).  [resolve(92,a,87,b)].
Derived: PP(f4(x),x) | UCon(x) | Cont(f3(x),f2(x)).  [resolve(92,a,88,b)].
Derived: PP(f4(x),x) | UCon(x) | Cont(f3(x),difference(x,f2(x))).  [resolve(92,a,89,b)].
Derived: PP(f4(x),x) | UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))).  [resolve(92,a,90,b)].
Derived: PP(f4(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(92,a,91,a)].
93 Con(x) | -SC(f4(x),difference(x,f4(x))).  [clausify(9)].
Derived: -SC(f4(x),difference(x,f4(x))) | ICon(x) | PP(f1(x),x).  [resolve(93,a,83,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(93,a,85,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | UCon(x) | PP(f2(x),x).  [resolve(93,a,87,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | UCon(x) | Cont(f3(x),f2(x)).  [resolve(93,a,88,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | UCon(x) | Cont(f3(x),difference(x,f2(x))).  [resolve(93,a,89,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))).  [resolve(93,a,90,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(93,a,91,a)].

Eliminating UCon/1
94 UCon(x) | PP(f2(x),x) | -ICon(x).  [resolve(87,b,84,b)].
95 -UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(2)].
96 -UCon(x) | ICon(x) | PP(f1(x),x).  [resolve(86,b,83,b)].
97 -UCon(x) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(86,b,85,b)].
Derived: PP(f2(x),x) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(94,a,95,a)].
98 UCon(x) | Cont(f3(x),f2(x)) | -ICon(x).  [resolve(88,b,84,b)].
Derived: Cont(f3(x),f2(x)) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(98,a,95,a)].
99 UCon(x) | Cont(f3(x),difference(x,f2(x))) | -ICon(x).  [resolve(89,b,84,b)].
Derived: Cont(f3(x),difference(x,f2(x))) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(99,a,95,a)].
100 UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | -ICon(x).  [resolve(90,b,84,b)].
Derived: -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(100,a,95,a)].
101 -PP(x,y) | SC(x,difference(y,x)) | -UCon(y).  [resolve(91,a,86,b)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | PP(f2(y),y) | -ICon(y).  [resolve(101,c,94,a)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | Cont(f3(y),f2(y)) | -ICon(y).  [resolve(101,c,98,a)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | Cont(f3(y),difference(y,f2(y))) | -ICon(y).  [resolve(101,c,99,a)].
Derived: -PP(x,y) | SC(x,difference(y,x)) | -Cont(f3(y),intersection(f2(y),difference(y,f2(y)))) | -ICon(y).  [resolve(101,c,100,a)].
102 PP(f4(x),x) | UCon(x) | PP(f2(x),x).  [resolve(92,a,87,b)].
Derived: PP(f4(x),x) | PP(f2(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(102,b,95,a)].
Derived: PP(f4(x),x) | PP(f2(x),x) | ICon(x) | PP(f1(x),x).  [resolve(102,b,96,a)].
Derived: PP(f4(x),x) | PP(f2(x),x) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(102,b,97,a)].
103 PP(f4(x),x) | UCon(x) | Cont(f3(x),f2(x)).  [resolve(92,a,88,b)].
Derived: PP(f4(x),x) | Cont(f3(x),f2(x)) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(103,b,95,a)].
Derived: PP(f4(x),x) | Cont(f3(x),f2(x)) | ICon(x) | PP(f1(x),x).  [resolve(103,b,96,a)].
Derived: PP(f4(x),x) | Cont(f3(x),f2(x)) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(103,b,97,a)].
104 PP(f4(x),x) | UCon(x) | Cont(f3(x),difference(x,f2(x))).  [resolve(92,a,89,b)].
Derived: PP(f4(x),x) | Cont(f3(x),difference(x,f2(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(104,b,95,a)].
Derived: PP(f4(x),x) | Cont(f3(x),difference(x,f2(x))) | ICon(x) | PP(f1(x),x).  [resolve(104,b,96,a)].
Derived: PP(f4(x),x) | Cont(f3(x),difference(x,f2(x))) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(104,b,97,a)].
105 PP(f4(x),x) | UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))).  [resolve(92,a,90,b)].
Derived: PP(f4(x),x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(105,b,95,a)].
Derived: PP(f4(x),x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | ICon(x) | PP(f1(x),x).  [resolve(105,b,96,a)].
Derived: PP(f4(x),x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(105,b,97,a)].
106 -SC(f4(x),difference(x,f4(x))) | UCon(x) | PP(f2(x),x).  [resolve(93,a,87,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | PP(f2(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(106,b,95,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | PP(f2(x),x) | ICon(x) | PP(f1(x),x).  [resolve(106,b,96,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | PP(f2(x),x) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(106,b,97,a)].
107 -SC(f4(x),difference(x,f4(x))) | UCon(x) | Cont(f3(x),f2(x)).  [resolve(93,a,88,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),f2(x)) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(107,b,95,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),f2(x)) | ICon(x) | PP(f1(x),x).  [resolve(107,b,96,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),f2(x)) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(107,b,97,a)].
108 -SC(f4(x),difference(x,f4(x))) | UCon(x) | Cont(f3(x),difference(x,f2(x))).  [resolve(93,a,89,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),difference(x,f2(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(108,b,95,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),difference(x,f2(x))) | ICon(x) | PP(f1(x),x).  [resolve(108,b,96,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | Cont(f3(x),difference(x,f2(x))) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(108,b,97,a)].
109 -SC(f4(x),difference(x,f4(x))) | UCon(x) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))).  [resolve(93,a,90,b)].
Derived: -SC(f4(x),difference(x,f4(x))) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(109,b,95,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | ICon(x) | PP(f1(x),x).  [resolve(109,b,96,a)].
Derived: -SC(f4(x),difference(x,f4(x))) | -Cont(f3(x),intersection(f2(x),difference(x,f2(x)))) | ICon(x) | -Covers(x,intersection(f1(x),difference(x,f1(x)))).  [resolve(109,b,97,a)].

Eliminating MinDim/1
110 -MinDim(x) | -ZEX(x).  [clausify(37)].
111 MinDim(c2).  [clausify(33)].
Derived: -ZEX(c2).  [resolve(110,a,111,a)].
112 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(37)].
Derived: -(x < c2) | ZEX(x).  [resolve(112,a,111,a)].
113 MinDim(x) | ZEX(x) | f6(x) < x.  [clausify(37)].
Derived: ZEX(x) | f6(x) < x | -(y < x) | ZEX(y).  [resolve(113,a,112,a)].
114 MinDim(x) | ZEX(x) | -ZEX(f6(x)).  [clausify(37)].
Derived: ZEX(x) | -ZEX(f6(x)) | -(y < x) | ZEX(y).  [resolve(114,a,112,a)].
115 MinDim(c4).  [clausify(57)].
Derived: -ZEX(c4).  [resolve(115,a,110,a)].
Derived: -(x < c4) | ZEX(x).  [resolve(115,a,112,a)].
116 -MinDim(x) | -ZEX(x).  [clausify(61)].
117 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(61)].
118 MinDim(x) | ZEX(x) | f19(x) < x.  [clausify(61)].
Derived: ZEX(x) | f19(x) < x | -(y < x) | ZEX(y).  [resolve(118,a,112,a)].
119 MinDim(x) | ZEX(x) | -ZEX(f19(x)).  [clausify(61)].
Derived: ZEX(x) | -ZEX(f19(x)) | -(y < x) | ZEX(y).  [resolve(119,a,112,a)].

Eliminating MaxDim/1
120 MaxDim(x) | -(f5(x) <= x).  [clausify(36)].
121 -MaxDim(x) | y <= x.  [clausify(36)].
Derived: -(f5(x) <= x) | y <= x.  [resolve(120,a,121,a)].
122 -MaxDim(x) | y <= x.  [clausify(60)].
123 MaxDim(x) | -(f18(x) <= x).  [clausify(60)].
Derived: -(f18(x) <= x) | y <= x.  [resolve(123,a,121,a)].

Eliminating PO/2
124 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(40)].
125 -PO(x,y) | P(f8(x,y),x).  [clausify(40)].
126 -PO(x,y) | P(f8(x,y),y).  [clausify(40)].
Derived: -P(x,y) | -P(x,z) | P(f8(y,z),y).  [resolve(124,a,125,a)].
Derived: -P(x,y) | -P(x,z) | P(f8(y,z),z).  [resolve(124,a,126,a)].
127 -PO(x,y) | P(f21(x,y),x).  [clausify(63)].
Derived: P(f21(x,y),x) | -P(z,x) | -P(z,y).  [resolve(127,a,124,a)].
128 -PO(x,y) | P(f21(x,y),y).  [clausify(63)].
Derived: P(f21(x,y),y) | -P(z,x) | -P(z,y).  [resolve(128,a,124,a)].
129 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(63)].

Eliminating Inc/2
130 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(41)].
131 -Inc(x,y) | f9(x,y) < x | f10(x,y) < y.  [clausify(41)].
132 -Inc(x,y) | f9(x,y) < x | Cont(f10(x,y),y).  [clausify(41)].
133 -Inc(x,y) | f9(x,y) < x | P(f10(x,y),x).  [clausify(41)].
134 -Inc(x,y) | Cont(f9(x,y),x) | f10(x,y) < y.  [clausify(41)].
135 -Inc(x,y) | Cont(f9(x,y),x) | Cont(f10(x,y),y).  [clausify(41)].
136 -Inc(x,y) | Cont(f9(x,y),x) | P(f10(x,y),x).  [clausify(41)].
137 -Inc(x,y) | P(f9(x,y),y) | f10(x,y) < y.  [clausify(41)].
138 -Inc(x,y) | P(f9(x,y),y) | Cont(f10(x,y),y).  [clausify(41)].
139 -Inc(x,y) | P(f9(x,y),y) | P(f10(x,y),x).  [clausify(41)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | f10(y,z) < z.  [resolve(130,a,131,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | Cont(f10(y,z),z).  [resolve(130,a,132,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | P(f10(y,z),y).  [resolve(130,a,133,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | f10(y,z) < z.  [resolve(130,a,134,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | Cont(f10(y,z),z).  [resolve(130,a,135,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | P(f10(y,z),y).  [resolve(130,a,136,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | f10(y,z) < z.  [resolve(130,a,137,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | Cont(f10(y,z),z).  [resolve(130,a,138,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | P(f10(y,z),y).  [resolve(130,a,139,a)].
140 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(41)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | f10(z,y) < y.  [resolve(140,a,131,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | Cont(f10(z,y),y).  [resolve(140,a,132,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | P(f10(z,y),z).  [resolve(140,a,133,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | f10(z,y) < y.  [resolve(140,a,134,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | Cont(f10(z,y),y).  [resolve(140,a,135,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | P(f10(z,y),z).  [resolve(140,a,136,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | f10(z,y) < y.  [resolve(140,a,137,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | Cont(f10(z,y),y).  [resolve(140,a,138,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | P(f10(z,y),z).  [resolve(140,a,139,a)].
141 -Inc(x,y) | f22(x,y) < x | f23(x,y) < y.  [clausify(64)].
Derived: f22(x,y) < x | f23(x,y) < y | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(141,a,130,a)].
Derived: f22(x,y) < x | f23(x,y) < y | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(141,a,140,a)].
142 -Inc(x,y) | f22(x,y) < x | Cont(f23(x,y),y).  [clausify(64)].
Derived: f22(x,y) < x | Cont(f23(x,y),y) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(142,a,130,a)].
Derived: f22(x,y) < x | Cont(f23(x,y),y) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(142,a,140,a)].
143 -Inc(x,y) | f22(x,y) < x | P(f23(x,y),x).  [clausify(64)].
Derived: f22(x,y) < x | P(f23(x,y),x) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(143,a,130,a)].
Derived: f22(x,y) < x | P(f23(x,y),x) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(143,a,140,a)].
144 -Inc(x,y) | Cont(f22(x,y),x) | f23(x,y) < y.  [clausify(64)].
Derived: Cont(f22(x,y),x) | f23(x,y) < y | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(144,a,130,a)].
Derived: Cont(f22(x,y),x) | f23(x,y) < y | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(144,a,140,a)].
145 -Inc(x,y) | Cont(f22(x,y),x) | Cont(f23(x,y),y).  [clausify(64)].
Derived: Cont(f22(x,y),x) | Cont(f23(x,y),y) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(145,a,130,a)].
Derived: Cont(f22(x,y),x) | Cont(f23(x,y),y) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(145,a,140,a)].
146 -Inc(x,y) | Cont(f22(x,y),x) | P(f23(x,y),x).  [clausify(64)].
Derived: Cont(f22(x,y),x) | P(f23(x,y),x) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(146,a,130,a)].
Derived: Cont(f22(x,y),x) | P(f23(x,y),x) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(146,a,140,a)].
147 -Inc(x,y) | P(f22(x,y),y) | f23(x,y) < y.  [clausify(64)].
Derived: P(f22(x,y),y) | f23(x,y) < y | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(147,a,130,a)].
Derived: P(f22(x,y),y) | f23(x,y) < y | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(147,a,140,a)].
148 -Inc(x,y) | P(f22(x,y),y) | Cont(f23(x,y),y).  [clausify(64)].
Derived: P(f22(x,y),y) | Cont(f23(x,y),y) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(148,a,130,a)].
Derived: P(f22(x,y),y) | Cont(f23(x,y),y) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(148,a,140,a)].
149 -Inc(x,y) | P(f22(x,y),y) | P(f23(x,y),x).  [clausify(64)].
Derived: P(f22(x,y),y) | P(f23(x,y),x) | -(z < x) | -Cont(z,x) | -P(z,y).  [resolve(149,a,130,a)].
Derived: P(f22(x,y),y) | P(f23(x,y),x) | -(z < y) | -Cont(z,y) | -P(z,x).  [resolve(149,a,140,a)].
150 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(64)].
151 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(64)].

Eliminating Max/1
152 Max(x) | ZEX(x) | PP(x,f13(x)).  [clausify(43)].
153 -Max(x) | -ZEX(x).  [clausify(43)].
154 -Max(x) | -PP(x,y).  [clausify(43)].
Derived: ZEX(x) | PP(x,f13(x)) | -PP(x,y).  [resolve(152,a,154,a)].
155 -Max(x) | -ZEX(x).  [clausify(66)].
156 -Max(x) | -PP(x,y).  [clausify(66)].
157 Max(x) | ZEX(x) | PP(x,f26(x)).  [clausify(66)].
Derived: ZEX(x) | PP(x,f26(x)) | -PP(x,y).  [resolve(157,a,154,a)].

Eliminating Min/1
158 Min(x) | ZEX(x) | PP(f14(x),x).  [clausify(44)].
159 -Min(x) | -ZEX(x).  [clausify(44)].
160 -Min(x) | -PP(y,x).  [clausify(44)].
Derived: ZEX(x) | PP(f14(x),x) | -PP(y,x).  [resolve(158,a,160,a)].
161 -Min(x) | -ZEX(x).  [clausify(67)].
162 -Min(x) | -PP(y,x).  [clausify(67)].
163 Min(x) | ZEX(x) | PP(f27(x),x).  [clausify(67)].
Derived: ZEX(x) | PP(f27(x),x) | -PP(y,x).  [resolve(163,a,160,a)].
164 Min(c5).  [deny(82)].
Derived: -ZEX(c5).  [resolve(164,a,159,a)].
Derived: -PP(x,c5).  [resolve(164,a,160,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, ICon, Cont, <, P, PP, SC, <=, C, EqDim, Covers ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, difference, intersection, f7, f8, f9, f10, f11, f12, f15, f16, f17, f20, f21, f22, f23, f24, f25, f28, f29, f30, f1, f2, f3, f4, f5, f6, f13, f14, f18, f19, f26, f27 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.06 seconds.

============================== PROOF =================================

% Proof 1 at 0.07 (+ 0.01) seconds.
% Length of proof is 12.
% Level of proof is 3.
% Maximum clause weight is 10.000.
% Given clauses 147.

1 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
9 (all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
44 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
82 (all x (Min(x) -> ICon(x))) # label(non_clause) # label(goal).  [goal].
83 ICon(x) | -Con(x) | PP(f1(x),x).  [clausify(1)].
92 Con(x) | PP(f4(x),x).  [clausify(9)].
160 -Min(x) | -PP(y,x).  [clausify(44)].
164 Min(c5).  [deny(82)].
238 -ICon(c5).  [deny(82)].
240 PP(f4(x),x) | ICon(x) | PP(f1(x),x).  [resolve(92,a,83,b)].
313 -PP(x,c5).  [resolve(164,a,160,a)].
481 $F.  [resolve(313,a,240,a),unit_del(a,238),unit_del(b,313)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=147. Generated=456. Kept=316. proofs=1.
Usable=147. Sos=167. Demods=0. Limbo=0, Disabled=309. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=139. Back_subsumed=2.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=594. Nonunit_bsub_feature_tests=1189.
Megabytes=1.38.
User_CPU=0.07, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 2181 exit (max_proofs) Thu Mar 15 10:25:30 2012
