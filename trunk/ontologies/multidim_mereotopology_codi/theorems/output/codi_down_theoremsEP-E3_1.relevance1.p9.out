============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22846 was started by torsten on stl-ws2,
Thu Nov 24 19:43:24 2011
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsEP-E2.p9 codi/theorems/input/codi_down_theoremsEP-E1.p9 codi/conversions/codi_down.p9 codi/theorems/input/codi_down_theoremsT1-T2.p9 codi/theorems/input/codi_down_theoremsT3-T5.p9 codi/conversions/codi_int.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsEP-E3_relevance1.order codi/theorems/input/codi_down_theoremsEP-E3_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsEP-E2.p9


formulas(sos).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsEP-E1.p9


formulas(sos).
(all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT1-T2.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))).
(all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))).
(all x all y (PP(y,x) -> PP(difference(x,y),x))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT3-T5.p9


formulas(sos).
(all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))).
(all x all y -PO(intersection(x,y),difference(x,y))).
(all x all y all z (P(z,difference(x,y)) -> P(z,x))).
(all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))).
(all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsEP-E3_relevance1.order

predicate_order([=,C,<=,EqDim,PP,PO,intersection,<,P,Cont,ZEX]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsEP-E3_1.p9


formulas(goals).
(all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: intersection.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
3 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
5 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
6 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
7 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
8 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
9 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
10 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
12 (all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
13 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
14 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
15 (all x all y -PO(intersection(x,y),difference(x,y))) # label(non_clause).  [assumption].
16 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
17 (all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))) # label(non_clause).  [assumption].
18 (all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))) # label(non_clause).  [assumption].
19 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
20 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
21 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
22 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
23 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
24 (exists x ZEX(x)) # label(non_clause).  [assumption].
25 (all x -(x < x)) # label(non_clause).  [assumption].
26 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
27 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
28 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
29 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
30 (exists x MinDim(x)) # label(non_clause).  [assumption].
31 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
32 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
33 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
34 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
35 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
36 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
37 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
38 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
39 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
40 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
41 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
42 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
43 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
45 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
46 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
47 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
48 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
49 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
50 (all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating MinDim/1
51 -MinDim(x) | -ZEX(x).  [clausify(34)].
52 MinDim(c2).  [clausify(30)].
Derived: -ZEX(c2).  [resolve(51,a,52,a)].
53 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(34)].
Derived: -(x < c2) | ZEX(x).  [resolve(53,a,52,a)].
54 MinDim(x) | ZEX(x) | f6(x) < x.  [clausify(34)].
Derived: ZEX(x) | f6(x) < x | -(y < x) | ZEX(y).  [resolve(54,a,53,a)].
55 MinDim(x) | ZEX(x) | -ZEX(f6(x)).  [clausify(34)].
Derived: ZEX(x) | -ZEX(f6(x)) | -(y < x) | ZEX(y).  [resolve(55,a,53,a)].

Eliminating MaxDim/1
56 MaxDim(x) | -(f5(x) <= x).  [clausify(33)].
57 -MaxDim(x) | y <= x.  [clausify(33)].
Derived: -(f5(x) <= x) | y <= x.  [resolve(56,a,57,a)].

Eliminating Covers/2
58 Covers(x,y) | -(y < x) | y < f7(x,y).  [clausify(35)].
59 -Covers(x,y) | y < x.  [clausify(35)].
60 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(35)].
Derived: -(x < y) | x < f7(y,x) | -(x < z) | -(z < y).  [resolve(58,a,60,a)].
61 Covers(x,y) | -(y < x) | f7(x,y) < x.  [clausify(35)].
Derived: -(x < y) | f7(y,x) < y | -(x < z) | -(z < y).  [resolve(61,a,60,a)].

Eliminating Inc/2
62 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(39)].
63 -Inc(x,y) | f9(x,y) < x | f10(x,y) < y.  [clausify(39)].
64 -Inc(x,y) | f9(x,y) < x | Cont(f10(x,y),y).  [clausify(39)].
65 -Inc(x,y) | f9(x,y) < x | P(f10(x,y),x).  [clausify(39)].
66 -Inc(x,y) | Cont(f9(x,y),x) | f10(x,y) < y.  [clausify(39)].
67 -Inc(x,y) | Cont(f9(x,y),x) | Cont(f10(x,y),y).  [clausify(39)].
68 -Inc(x,y) | Cont(f9(x,y),x) | P(f10(x,y),x).  [clausify(39)].
69 -Inc(x,y) | P(f9(x,y),y) | f10(x,y) < y.  [clausify(39)].
70 -Inc(x,y) | P(f9(x,y),y) | Cont(f10(x,y),y).  [clausify(39)].
71 -Inc(x,y) | P(f9(x,y),y) | P(f10(x,y),x).  [clausify(39)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | f10(y,z) < z.  [resolve(62,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | Cont(f10(y,z),z).  [resolve(62,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(y,z) < y | P(f10(y,z),y).  [resolve(62,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | f10(y,z) < z.  [resolve(62,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | Cont(f10(y,z),z).  [resolve(62,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(y,z),y) | P(f10(y,z),y).  [resolve(62,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | f10(y,z) < z.  [resolve(62,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | Cont(f10(y,z),z).  [resolve(62,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(y,z),z) | P(f10(y,z),y).  [resolve(62,a,71,a)].
72 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(39)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | f10(z,y) < y.  [resolve(72,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | Cont(f10(z,y),y).  [resolve(72,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f9(z,y) < z | P(f10(z,y),z).  [resolve(72,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | f10(z,y) < y.  [resolve(72,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | Cont(f10(z,y),y).  [resolve(72,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f9(z,y),z) | P(f10(z,y),z).  [resolve(72,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | f10(z,y) < y.  [resolve(72,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | Cont(f10(z,y),y).  [resolve(72,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f9(z,y),y) | P(f10(z,y),z).  [resolve(72,a,71,a)].

Eliminating SC/2
73 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f12(x,y),x).  [clausify(40)].
74 -SC(x,y) | Cont(f11(x,y),x).  [clausify(40)].
75 -SC(x,y) | Cont(f11(x,y),y).  [clausify(40)].
76 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(40)].
77 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(40)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y) | Cont(f11(y,z),y).  [resolve(73,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y) | Cont(f11(y,z),z).  [resolve(73,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(73,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(73,a,77,a)].
78 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f12(x,y),y).  [clausify(40)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z) | Cont(f11(y,z),y).  [resolve(78,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z) | Cont(f11(y,z),z).  [resolve(78,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(78,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(78,a,77,a)].
79 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f12(x,y) < x) | -(f12(x,y) < y).  [clausify(40)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f12(y,z) < y) | -(f12(y,z) < z) | Cont(f11(y,z),y).  [resolve(79,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f12(y,z) < y) | -(f12(y,z) < z) | Cont(f11(y,z),z).  [resolve(79,a,75,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f12(y,z) < y) | -(f12(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(79,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f12(y,z) < y) | -(f12(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(79,a,77,a)].

Eliminating Max/1
80 Max(x) | ZEX(x) | PP(x,f13(x)).  [clausify(41)].
81 -Max(x) | -ZEX(x).  [clausify(41)].
82 -Max(x) | -PP(x,y).  [clausify(41)].
Derived: ZEX(x) | PP(x,f13(x)) | -PP(x,y).  [resolve(80,a,82,a)].

Eliminating Min/1
83 Min(x) | ZEX(x) | PP(f14(x),x).  [clausify(42)].
84 -Min(x) | -ZEX(x).  [clausify(42)].
85 -Min(x) | -PP(y,x).  [clausify(42)].
Derived: ZEX(x) | PP(f14(x),x) | -PP(y,x).  [resolve(83,a,85,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. difference=1. intersection=1. f1=1. f2=1. f3=1. f4=1. f7=1. f8=1. f9=1. f10=1. f11=1. f12=1. f15=1. f16=1. f17=1. f5=1. f6=1. f13=1. f14=1.
Predicate symbol precedence:  predicate_order([ =, C, <=, EqDim, PP, PO, <, P, Cont, ZEX ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, difference, intersection, f1, f2, f3, f4, f7, f8, f9, f10, f11, f12, f15, f16, f17, f5, f6, f13, f14 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 32 (0.00 of 0.19 sec).

Low Water (keep): wt=32.000, iters=7317

Low Water (keep): wt=29.000, iters=7039

Low Water (keep): wt=26.000, iters=7423

Low Water (keep): wt=25.000, iters=7182

Low Water (keep): wt=24.000, iters=6924

Low Water (keep): wt=23.000, iters=7355

Low Water (keep): wt=22.000, iters=7086

Low Water (keep): wt=21.000, iters=7089

Low Water (keep): wt=20.000, iters=6759

Low Water (keep): wt=19.000, iters=8020

Low Water (keep): wt=18.000, iters=6943

Low Water (keep): wt=17.000, iters=6858

Low Water (keep): wt=16.000, iters=7178

Low Water (keep): wt=15.000, iters=7877

Low Water (keep): wt=14.000, iters=7069

Low Water (displace): id=24790, wt=16.000

Low Water (displace): id=24800, wt=13.000

Low Water (displace): id=24849, wt=11.000

Low Water (displace): id=25073, wt=10.000

Low Water (keep): wt=13.000, iters=6685

Low Water (keep): wt=12.000, iters=6798

Low Water (keep): wt=11.000, iters=6784

============================== PROOF =================================

% Proof 1 at 19.39 (+ 0.25) seconds.
% Length of proof is 97.
% Level of proof is 17.
% Maximum clause weight is 13.000.
% Given clauses 10291.

6 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
9 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
10 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
22 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
24 (exists x ZEX(x)) # label(non_clause).  [assumption].
25 (all x -(x < x)) # label(non_clause).  [assumption].
27 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
28 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
29 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
31 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
32 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
36 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
43 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
46 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
48 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
49 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
50 (all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))) # label(non_clause) # label(goal).  [goal].
95 -(x < y) | difference(y,x) = y.  [clausify(6)].
98 -(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(9)].
99 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(10)].
100 ZEX(difference(x,y)) | -ZEX(x).  [clausify(10)].
101 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(10)].
102 ZEX(difference(x,y)) | P(difference(x,y),x).  [clausify(11)].
115 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(22)].
118 ZEX(c1).  [clausify(24)].
119 -(x < x).  [clausify(25)].
121 -(x < y) | -(y <= z) | x < z.  [clausify(27)].
122 -ZEX(x) | -ZEX(y) | y = x.  [clausify(28)].
123 -ZEX(x) | ZEX(y) | x < y.  [clausify(29)].
126 EqDim(x,y) | x < y | y < x.  [clausify(31)].
128 x <= y | -(x < y).  [clausify(32)].
129 x <= y | -EqDim(x,y).  [clausify(32)].
130 -P(x,y) | Cont(x,y).  [clausify(36)].
132 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(36)].
140 -C(x,y) | Cont(f15(x,y),y).  [clausify(43)].
141 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(43)].
146 ZEX(x) | Cont(x,x).  [clausify(46)].
149 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(48)].
150 -ZEX(x) | -Cont(y,x).  [clausify(49)].
151 -ZEX(x) | -Cont(x,y).  [clausify(49)].
153 -ZEX(c4).  [deny(50)].
154 -Cont(c4,c3).  [deny(50)].
155 -P(x,c4) | -(intersection(x,c3) < x).  [deny(50)].
203 EqDim(x,x).  [factor(126,b,c),unit_del(b,119)].
205 C(x,x) | -Cont(y,x).  [factor(141,b,c)].
232 P(difference(x,y),x) | ZEX(x) | Cont(x,y).  [resolve(102,a,99,a)].
236 -ZEX(x) | c1 = x.  [resolve(122,a,118,a),flip(b)].
245 ZEX(x) | c1 < x.  [resolve(123,a,118,a)].
255 EqDim(x,y) | y < x | -(y <= z) | x < z.  [resolve(126,b,121,a)].
260 x <= y | EqDim(y,x) | y < x.  [resolve(128,b,126,c)].
261 x <= y | EqDim(x,y) | y < x.  [resolve(128,b,126,b)].
288 Cont(x,x) | ZEX(y) | x < y.  [resolve(146,a,123,a)].
305 -Cont(x,difference(y,z)) | P(difference(y,z),y).  [resolve(150,a,102,a)].
309 -Cont(x,y) | Cont(x,x).  [resolve(151,a,146,a)].
320 Cont(c4,c4).  [resolve(153,a,146,a)].
511 P(c4,c4).  [resolve(320,a,132,b),unit_del(b,203)].
590 -(intersection(c4,c3) < c4).  [resolve(511,a,155,a)].
698 c1 < c4.  [resolve(245,a,153,a)].
703 c1 < x | -ZEX(y) | x = y.  [resolve(245,a,122,b)].
705 c1 < x | ZEX(difference(x,y)).  [resolve(245,a,100,b)].
1060 P(difference(c4,x),c4) | Cont(c4,x).  [resolve(232,b,153,a)].
2188 x <= y | EqDim(y,x) | y <= x.  [resolve(260,c,128,b)].
2213 c4 <= intersection(c4,c3) | EqDim(c4,intersection(c4,c3)).  [resolve(261,c,590,a)].
2852 Cont(x,x) | x < c4.  [resolve(288,b,153,a)].
2914 x < c4 | C(x,x).  [resolve(2852,a,205,b)].
3159 C(intersection(c4,c3),intersection(c4,c3)).  [resolve(2914,a,590,a)].
3770 Cont(f15(intersection(c4,c3),intersection(c4,c3)),intersection(c4,c3)).  [resolve(3159,a,140,a)].
4757 c1 < x | difference(y,z) = x | c1 < y.  [resolve(703,b,705,b),flip(b)].
4801 c1 < x | difference(x,y) = x.  [factor(4757,a,c)].
8397 P(difference(c4,c3),c4).  [resolve(1060,b,154,a)].
8412 -(intersection(difference(c4,c3),c3) < difference(c4,c3)).  [resolve(8397,a,155,a)].
8417 Cont(difference(c4,c3),c4).  [resolve(8397,a,130,a)].
8429 Cont(difference(c4,c3),difference(c4,c3)).  [resolve(8417,a,309,a)].
8543 P(difference(c4,c3),difference(c4,c3)).  [resolve(8429,a,132,b),unit_del(b,203)].
8636 -(c4 <= c3).  [resolve(8543,a,98,b),unit_del(b,8412)].
14274 difference(x,y) = x | difference(x,c1) = x.  [resolve(4801,a,95,a)].
14275 difference(x,c1) = x.  [factor(14274,a,b)].
14281 -Cont(x,y) | P(y,y).  [para(14275(a,1),305(a,2)),rewrite([14275(3)])].
24415 x <= y | y <= x.  [resolve(2188,b,129,b),merge(c)].
24422 c3 <= c4.  [resolve(24415,a,8636,a)].
24446 EqDim(x,c3) | c3 < x | x < c4.  [resolve(24422,a,255,c)].
33963 EqDim(c4,c3) | c3 < c4.  [resolve(24446,c,119,a)].
33974 EqDim(c4,c3) | -(c4 <= x) | c3 < x.  [resolve(33963,b,121,a)].
40379 c4 <= intersection(c4,c3).  [resolve(2213,b,129,b),merge(b)].
40380 EqDim(c4,c3) | c3 < intersection(c4,c3).  [resolve(40379,a,33974,b)].
40395 EqDim(c4,c3) | difference(intersection(c4,c3),c3) = intersection(c4,c3).  [resolve(40380,b,95,a)].
47830 P(intersection(c4,c3),intersection(c4,c3)).  [resolve(3770,a,14281,a)].
47883 Cont(intersection(c4,c3),c3).  [resolve(47830,a,115,b)].
47895 -Cont(x,intersection(c4,c3)) | Cont(x,c3).  [resolve(47883,a,149,b)].
47901 ZEX(difference(intersection(c4,c3),c3)).  [resolve(47883,a,101,b)].
47912 difference(intersection(c4,c3),c3) = c1.  [resolve(47901,a,236,a),flip(a)].
47914 EqDim(c4,c3) | intersection(c4,c3) = c1.  [back_rewrite(40395),rewrite([47912(8)]),flip(b)].
48173 P(difference(c4,intersection(c4,c3)),c4).  [resolve(47895,a,1060,b),unit_del(a,154)].
48185 -(intersection(difference(c4,intersection(c4,c3)),c3) < difference(c4,intersection(c4,c3))).  [resolve(48173,a,155,a)].
48231 intersection(c4,c3) = c1.  [resolve(47914,a,129,b),unit_del(b,8636)].
48239 $F.  [back_rewrite(48185),rewrite([48231(4),14275(3),48231(3),48231(5),14275(4)]),unit_del(a,698)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=10291. Generated=1293799. Kept=48153. proofs=1.
Usable=9923. Sos=19978. Demods=115. Limbo=8, Disabled=18388. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=324434. Back_subsumed=85.
Sos_limit_deleted=921211. Sos_displaced=15165. Sos_removed=0.
New_demodulators=231 (0 lex), Back_demodulated=2929. Back_unit_deleted=65.
Demod_attempts=19478722. Demod_rewrites=124210.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=838277. Nonunit_bsub_feature_tests=12746.
Megabytes=64.14.
User_CPU=19.39, System_CPU=0.25, Wall_clock=20.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22846 exit (max_proofs) Thu Nov 24 19:43:44 2011
