============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 9849 was started by torsten on stl-ws2,
Thu Oct 20 20:52:45 2011
The command was "prover9 -t 600 -f codi/conversions/codi_basic.p9 codi/definitions/input/ep.p9 codi/definitions/input/inc.p9 dim/conversions/dim_basic.p9 cont/conversions/cont_c_ext.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/inc_theorems_relevance1.order codi/theorems/input/inc_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/inc_theorems_relevance1.order

predicate_order([=,C,ZEX,P,Inc,EqDim,Cont,<]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/inc_theorems_2.p9


formulas(goals).
(all x all y (Inc(x,y) -> Inc(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
4 (all x -(x < x)) # label(non_clause).  [assumption].
5 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
6 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
7 (all x EqDim(x,x)) # label(non_clause).  [assumption].
8 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
9 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
10 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
12 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
13 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
14 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
16 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
18 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
19 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
23 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. f1=1. f2=1. f3=1. f4=1. f5=1.
Predicate symbol precedence:  predicate_order([ =, C, ZEX, P, Inc, EqDim, Cont, < ]).
Function symbol precedence:  function_order([ c1, c2, c3, f1, f2, f3, f4, f5 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 29 (0.00 of 0.08 sec).

Low Water (keep): wt=85.000, iters=6691

Low Water (keep): wt=68.000, iters=6852

Low Water (keep): wt=55.000, iters=6689

Low Water (keep): wt=42.000, iters=6756

Low Water (keep): wt=39.000, iters=6782

Low Water (keep): wt=38.000, iters=6729

Low Water (keep): wt=37.000, iters=7098

Low Water (keep): wt=35.000, iters=6783

Low Water (keep): wt=34.000, iters=7017

Low Water (keep): wt=33.000, iters=6860

Low Water (keep): wt=31.000, iters=6675

Low Water (keep): wt=30.000, iters=6696

Low Water (keep): wt=29.000, iters=6680

Low Water (keep): wt=28.000, iters=6745

Low Water (keep): wt=27.000, iters=7023

Low Water (keep): wt=26.000, iters=6712

Low Water (keep): wt=25.000, iters=6682

Low Water (keep): wt=24.000, iters=6710

Low Water (keep): wt=23.000, iters=6666

Low Water (keep): wt=22.000, iters=6733

Low Water (keep): wt=21.000, iters=6693

Low Water (displace): id=3337, wt=83.000

Low Water (displace): id=21830, wt=21.000

Low Water (displace): id=25518, wt=20.000

Low Water (displace): id=26262, wt=19.000

Low Water (keep): wt=20.000, iters=6671

Low Water (keep): wt=19.000, iters=6670

Low Water (displace): id=27721, wt=18.000

============================== PROOF =================================

% Proof 1 at 5.12 (+ 0.03) seconds.
% Length of proof is 53.
% Level of proof is 11.
% Maximum clause weight is 18.000.
% Given clauses 6120.

1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
8 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
9 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
10 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
23 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause) # label(goal).  [goal].
24 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
26 -P(x,y) | EqDim(x,y).  [clausify(2)].
28 -Inc(x,y) | f1(x,y) < x | f2(x,y) < y.  [clausify(3)].
30 -Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).  [clausify(3)].
31 -Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.  [clausify(3)].
32 -Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).  [clausify(3)].
33 -Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).  [clausify(3)].
34 -Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.  [clausify(3)].
35 -Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).  [clausify(3)].
36 -Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).  [clausify(3)].
37 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(3)].
38 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(3)].
43 -EqDim(x,y) | EqDim(y,x).  [clausify(8)].
44 -EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(9)].
45 -(x < y) | -EqDim(x,y).  [clausify(10)].
65 Inc(c2,c3).  [deny(23)].
66 -Inc(c3,c2).  [deny(23)].
92 P(f1(c2,c3),c3) | P(f2(c2,c3),c2).  [resolve(65,a,36,a)].
93 P(f1(c2,c3),c3) | Cont(f2(c2,c3),c3).  [resolve(65,a,35,a)].
94 P(f1(c2,c3),c3) | f2(c2,c3) < c3.  [resolve(65,a,34,a)].
95 Cont(f1(c2,c3),c2) | P(f2(c2,c3),c2).  [resolve(65,a,33,a)].
96 Cont(f1(c2,c3),c2) | Cont(f2(c2,c3),c3).  [resolve(65,a,32,a)].
97 Cont(f1(c2,c3),c2) | f2(c2,c3) < c3.  [resolve(65,a,31,a)].
98 f1(c2,c3) < c2 | P(f2(c2,c3),c2).  [resolve(65,a,30,a)].
100 f1(c2,c3) < c2 | f2(c2,c3) < c3.  [resolve(65,a,28,a)].
532 P(f1(c2,c3),c3) | Inc(c3,x) | -Cont(f2(c2,c3),c3) | -P(f2(c2,c3),x).  [resolve(94,b,37,b)].
668 Cont(f1(c2,c3),c2) | Inc(c3,x) | -Cont(f2(c2,c3),c3) | -P(f2(c2,c3),x).  [resolve(97,b,37,b)].
689 P(f2(c2,c3),c2) | Inc(x,c2) | -Cont(f1(c2,c3),c2) | -P(f1(c2,c3),x).  [resolve(98,a,38,b)].
757 f1(c2,c3) < c2 | -EqDim(f2(c2,c3),c3).  [resolve(100,b,45,a)].
12467 P(f1(c2,c3),c3) | Inc(c3,x) | -P(f2(c2,c3),x).  [resolve(532,c,93,b),merge(d)].
16296 Cont(f1(c2,c3),c2) | Inc(c3,x) | -P(f2(c2,c3),x).  [resolve(668,c,96,b),merge(d)].
16801 P(f2(c2,c3),c2) | Inc(x,c2) | -P(f1(c2,c3),x).  [resolve(689,c,95,a),merge(d)].
25803 P(f1(c2,c3),c3).  [resolve(12467,c,92,b),merge(c),unit_del(b,66)].
25804 EqDim(f1(c2,c3),c3).  [resolve(25803,a,26,a)].
25817 EqDim(c3,f1(c2,c3)).  [resolve(25804,a,43,a)].
25886 -EqDim(f1(c2,c3),x) | EqDim(c3,x).  [resolve(25817,a,44,a)].
29428 P(f2(c2,c3),c2).  [resolve(16801,c,25803,a),unit_del(b,66)].
29429 Cont(f1(c2,c3),c2).  [resolve(29428,a,16296,c),unit_del(b,66)].
29430 EqDim(f2(c2,c3),c2).  [resolve(29428,a,26,a)].
29446 f1(c2,c3) < c2 | EqDim(f1(c2,c3),c2).  [resolve(29429,a,24,a)].
29447 -(f1(c2,c3) < c2).  [ur(38,a,66,a,c,29429,a,d,25803,a)].
29448 EqDim(f1(c2,c3),c2).  [back_unit_del(29446),unit_del(a,29447)].
29476 -EqDim(f2(c2,c3),c3).  [back_unit_del(757),unit_del(a,29447)].
29528 -EqDim(c2,c3).  [ur(44,a,29430,a,c,29476,a)].
29545 EqDim(c3,c2).  [resolve(29448,a,25886,a)].
29557 $F.  [resolve(29545,a,43,a),unit_del(a,29528)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=6120. Generated=170526. Kept=29533. proofs=1.
Usable=6062. Sos=19914. Demods=0. Limbo=7, Disabled=3593. Hints=0.
Kept_by_rule=0, Deleted_by_rule=86.
Forward_subsumed=49187. Back_subsumed=56.
Sos_limit_deleted=91719. Sos_displaced=2802. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=692.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=806724. Nonunit_bsub_feature_tests=6283.
Megabytes=46.04.
User_CPU=5.12, System_CPU=0.03, Wall_clock=5.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 9849 exit (max_proofs) Thu Oct 20 20:52:50 2011
