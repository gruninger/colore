============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 24754 was started by torsten on stl-ws2,
Fri Feb 24 16:08:12 2012
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsEP-E3.p9 codi/theorems/input/codi_down_theoremsT11.p9 codi/theorems/input/codi_down_theoremsEP-E2.p9 codi/conversions/codi_down.p9 codi/definitions/input/min_max_in_dim.p9 codi/theorems/input/codi_down_theoremsEP-E1.p9 codi/conversions/codi_int.p9 codi/definitions/input/epp.p9 codi/theorems/input/codi_down_theoremsT1-T2.p9 codi/theorems/input/codi_down_theoremsT3-T5.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 codi/definitions/input/ep.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsPO-E1_relevance1.order codi/theorems/input/codi_down_theoremsPO-E1_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsEP-E3.p9


formulas(sos).
(all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT11.p9


formulas(sos).
(all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsEP-E2.p9


formulas(sos).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsEP-E1.p9


formulas(sos).
(all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT1-T2.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))).
(all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))).
(all x all y (PP(y,x) -> PP(difference(x,y),x))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT3-T5.p9


formulas(sos).
(all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))).
(all x all y -PO(intersection(x,y),difference(x,y))).
(all x all y all z (P(z,difference(x,y)) -> P(z,x))).
(all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))).
(all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsPO-E1_relevance1.order

predicate_order([=,C,EqDim,<=,PP,PO,<,P,ZEX,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsPO-E1_2.p9


formulas(goals).
(all x all y ((all z (PO(x,z) <-> PO(y,z))) -> x = y)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(x) & -ZEX(y) & -Cont(y,x) -> (exists z (P(z,y) & intersection(z,x) < z)))) # label(non_clause).  [assumption].
2 (all x all y all z (P(y,x) & Min(z) & Cont(z,x) -> Cont(z,y) | Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & -PO(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
5 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & -EqDim(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
6 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
7 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
8 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
9 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
10 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
11 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
12 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
13 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
14 (all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
15 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
16 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
17 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
19 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
20 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
21 (all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
22 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
23 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
24 (all x all y -PO(intersection(x,y),difference(x,y))) # label(non_clause).  [assumption].
25 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
26 (all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))) # label(non_clause).  [assumption].
27 (all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))) # label(non_clause).  [assumption].
28 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
29 (exists x ZEX(x)) # label(non_clause).  [assumption].
30 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
31 (all x -(x < x)) # label(non_clause).  [assumption].
32 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
33 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
34 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
35 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
36 (exists x MinDim(x)) # label(non_clause).  [assumption].
37 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
38 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
39 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
40 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
41 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
42 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
43 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
44 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
45 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
47 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
48 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
49 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
50 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
51 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
52 (all x all y ((all z (PO(x,z) <-> PO(y,z))) -> x = y)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Min/1
53 Min(x) | ZEX(x) | PP(f6(x),x).  [clausify(13)].
54 -P(x,y) | -Min(z) | -Cont(z,y) | Cont(z,x) | Cont(z,difference(y,x)).  [clausify(2)].
55 -Min(x) | -ZEX(x).  [clausify(13)].
56 -Min(x) | -PP(y,x).  [clausify(13)].
Derived: ZEX(x) | PP(f6(x),x) | -P(y,z) | -Cont(x,z) | Cont(x,y) | Cont(x,difference(z,y)).  [resolve(53,a,54,b)].
Derived: ZEX(x) | PP(f6(x),x) | -PP(y,x).  [resolve(53,a,56,a)].

Eliminating Max/1
57 Max(x) | ZEX(x) | PP(x,f5(x)).  [clausify(12)].
58 -Max(x) | -ZEX(x).  [clausify(12)].
59 -Max(x) | -PP(x,y).  [clausify(12)].
Derived: ZEX(x) | PP(x,f5(x)) | -PP(x,y).  [resolve(57,a,59,a)].

Eliminating MinDim/1
60 -MinDim(x) | -ZEX(x).  [clausify(40)].
61 MinDim(c2).  [clausify(36)].
Derived: -ZEX(c2).  [resolve(60,a,61,a)].
62 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(40)].
Derived: -(x < c2) | ZEX(x).  [resolve(62,a,61,a)].
63 MinDim(x) | ZEX(x) | f9(x) < x.  [clausify(40)].
Derived: ZEX(x) | f9(x) < x | -(y < x) | ZEX(y).  [resolve(63,a,62,a)].
64 MinDim(x) | ZEX(x) | -ZEX(f9(x)).  [clausify(40)].
Derived: ZEX(x) | -ZEX(f9(x)) | -(y < x) | ZEX(y).  [resolve(64,a,62,a)].

Eliminating MaxDim/1
65 MaxDim(x) | -(f8(x) <= x).  [clausify(39)].
66 -MaxDim(x) | y <= x.  [clausify(39)].
Derived: -(f8(x) <= x) | y <= x.  [resolve(65,a,66,a)].

Eliminating Covers/2
67 Covers(x,y) | -(y < x) | y < f10(x,y).  [clausify(41)].
68 -Covers(x,y) | y < x.  [clausify(41)].
69 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(41)].
Derived: -(x < y) | x < f10(y,x) | -(x < z) | -(z < y).  [resolve(67,a,69,a)].
70 Covers(x,y) | -(y < x) | f10(x,y) < x.  [clausify(41)].
Derived: -(x < y) | f10(y,x) < y | -(x < z) | -(z < y).  [resolve(70,a,69,a)].

Eliminating Inc/2
71 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(43)].
72 -Inc(x,y) | f12(x,y) < x | f13(x,y) < y.  [clausify(43)].
73 -Inc(x,y) | f12(x,y) < x | Cont(f13(x,y),y).  [clausify(43)].
74 -Inc(x,y) | f12(x,y) < x | P(f13(x,y),x).  [clausify(43)].
75 -Inc(x,y) | Cont(f12(x,y),x) | f13(x,y) < y.  [clausify(43)].
76 -Inc(x,y) | Cont(f12(x,y),x) | Cont(f13(x,y),y).  [clausify(43)].
77 -Inc(x,y) | Cont(f12(x,y),x) | P(f13(x,y),x).  [clausify(43)].
78 -Inc(x,y) | P(f12(x,y),y) | f13(x,y) < y.  [clausify(43)].
79 -Inc(x,y) | P(f12(x,y),y) | Cont(f13(x,y),y).  [clausify(43)].
80 -Inc(x,y) | P(f12(x,y),y) | P(f13(x,y),x).  [clausify(43)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | f13(y,z) < z.  [resolve(71,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | Cont(f13(y,z),z).  [resolve(71,a,73,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(y,z) < y | P(f13(y,z),y).  [resolve(71,a,74,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | f13(y,z) < z.  [resolve(71,a,75,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | Cont(f13(y,z),z).  [resolve(71,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(y,z),y) | P(f13(y,z),y).  [resolve(71,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | f13(y,z) < z.  [resolve(71,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | Cont(f13(y,z),z).  [resolve(71,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(y,z),z) | P(f13(y,z),y).  [resolve(71,a,80,a)].
81 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(43)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | f13(z,y) < y.  [resolve(81,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | Cont(f13(z,y),y).  [resolve(81,a,73,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f12(z,y) < z | P(f13(z,y),z).  [resolve(81,a,74,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | f13(z,y) < y.  [resolve(81,a,75,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | Cont(f13(z,y),y).  [resolve(81,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f12(z,y),z) | P(f13(z,y),z).  [resolve(81,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | f13(z,y) < y.  [resolve(81,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | Cont(f13(z,y),y).  [resolve(81,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f12(z,y),y) | P(f13(z,y),z).  [resolve(81,a,80,a)].

Eliminating SC/2
82 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f15(x,y),x).  [clausify(44)].
83 -SC(x,y) | Cont(f14(x,y),x).  [clausify(44)].
84 -SC(x,y) | Cont(f14(x,y),y).  [clausify(44)].
85 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(44)].
86 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | Cont(f14(y,z),y).  [resolve(82,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | Cont(f14(y,z),z).  [resolve(82,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(82,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(82,a,86,a)].
87 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f15(x,y),y).  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | Cont(f14(y,z),y).  [resolve(87,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | Cont(f14(y,z),z).  [resolve(87,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(87,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f15(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(87,a,86,a)].
88 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f15(x,y) < x) | -(f15(x,y) < y).  [clausify(44)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | Cont(f14(y,z),y).  [resolve(88,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | Cont(f14(y,z),z).  [resolve(88,a,84,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(88,a,85,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f15(y,z) < y) | -(f15(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(88,a,86,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. difference=1. intersection=1. f1=1. f2=1. f3=1. f4=1. f7=1. f10=1. f11=1. f12=1. f13=1. f14=1. f15=1. f16=1. f17=1. f18=1. f5=1. f6=1. f8=1. f9=1.
Predicate symbol precedence:  predicate_order([ =, C, EqDim, <=, PP, PO, <, P, ZEX, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, difference, intersection, f1, f2, f3, f4, f7, f10, f11, f12, f13, f14, f15, f16, f17, f18, f5, f6, f8, f9 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 40 (0.00 of 0.53 sec).

Low Water (keep): wt=31.000, iters=8175

Low Water (keep): wt=29.000, iters=7909

Low Water (keep): wt=28.000, iters=6830

Low Water (keep): wt=27.000, iters=6753

Low Water (keep): wt=26.000, iters=6741

Low Water (keep): wt=25.000, iters=6686

Low Water (keep): wt=24.000, iters=6695

Low Water (keep): wt=23.000, iters=6666

Low Water (keep): wt=22.000, iters=6666

Low Water (keep): wt=21.000, iters=6709

Low Water (keep): wt=20.000, iters=11437

Low Water (keep): wt=17.000, iters=7745

Low Water (keep): wt=16.000, iters=6725

Low Water (keep): wt=15.000, iters=6867

Low Water (displace): id=10675, wt=71.000

Low Water (displace): id=7301, wt=60.000

Low Water (displace): id=10674, wt=59.000

Low Water (displace): id=10707, wt=58.000

Low Water (displace): id=22991, wt=14.000

Low Water (displace): id=22992, wt=13.000

Low Water (displace): id=23000, wt=12.000

Low Water (displace): id=23338, wt=11.000

Low Water (displace): id=23554, wt=10.000

Low Water (keep): wt=14.000, iters=7481

Low Water (keep): wt=13.000, iters=6680

Low Water (displace): id=26191, wt=9.000

Low Water (displace): id=28897, wt=8.000

Low Water (keep): wt=12.000, iters=6667

Low Water (keep): wt=11.000, iters=6672

Low Water (keep): wt=10.000, iters=6759

Low Water (displace): id=65104, wt=7.000

============================== PROOF =================================

% Proof 1 at 78.39 (+ 0.85) seconds.
% Length of proof is 153.
% Level of proof is 59.
% Maximum clause weight is 13.000.
% Given clauses 20232.

11 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
19 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
20 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
23 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
25 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
28 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
30 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
31 (all x -(x < x)) # label(non_clause).  [assumption].
32 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
34 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
35 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
36 (exists x MinDim(x)) # label(non_clause).  [assumption].
37 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
38 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
40 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
42 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
45 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
48 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
49 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
51 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
52 (all x all y ((all z (PO(x,z) <-> PO(y,z))) -> x = y)) # label(non_clause) # label(goal).  [goal].
60 -MinDim(x) | -ZEX(x).  [clausify(40)].
61 MinDim(c2).  [clausify(36)].
62 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(40)].
102 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(11)].
114 -PP(x,y) | P(x,y).  [clausify(19)].
116 PP(x,y) | -P(x,y) | y = x.  [clausify(19)].
117 ZEX(difference(x,y)) | P(difference(x,y),x).  [clausify(20)].
120 ZEX(x) | ZEX(difference(y,x)) | -PO(x,difference(y,x)).  [clausify(23)].
122 -P(x,difference(y,z)) | P(x,y).  [clausify(25)].
125 -Cont(x,y) | x <= y.  [clausify(28)].
127 -P(x,y) | Cont(x,y).  [clausify(30)].
129 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(30)].
130 -(x < x).  [clausify(31)].
131 -(x < y) | -(y < x).  [clausify(32)].
133 -ZEX(x) | -ZEX(y) | y = x.  [clausify(34)].
134 -ZEX(x) | ZEX(y) | x < y.  [clausify(35)].
135 -EqDim(x,y) | -(x < y).  [clausify(37)].
136 -EqDim(x,y) | -(y < x).  [clausify(37)].
137 EqDim(x,y) | x < y | y < x.  [clausify(37)].
138 -(x <= y) | x < y | EqDim(x,y).  [clausify(38)].
139 x <= y | -(x < y).  [clausify(38)].
141 -PO(x,y) | P(f11(x,y),x).  [clausify(42)].
142 -PO(x,y) | P(f11(x,y),y).  [clausify(42)].
143 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(42)].
145 -C(x,y) | Cont(f16(x,y),y).  [clausify(45)].
146 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(45)].
151 ZEX(x) | Cont(x,x).  [clausify(48)].
153 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(49)].
155 -ZEX(x) | -Cont(y,x).  [clausify(51)].
156 -ZEX(x) | -Cont(x,y).  [clausify(51)].
157 -PO(c3,x) | PO(c4,x).  [deny(52)].
158 PO(c3,x) | -PO(c4,x).  [deny(52)].
159 c4 != c3.  [deny(52)].
163 -ZEX(c2).  [resolve(60,a,61,a)].
164 -(x < c2) | ZEX(x).  [resolve(62,a,61,a)].
208 EqDim(x,x).  [factor(137,b,c),unit_del(b,130)].
209 PO(x,x) | -P(y,x).  [factor(143,b,c)].
210 C(x,x) | -Cont(y,x).  [factor(146,b,c)].
273 P(difference(x,y),x) | ZEX(x) | Cont(x,y).  [resolve(117,a,102,a)].
351 ZEX(x) | P(x,x).  [resolve(151,b,129,b),unit_del(c,208)].
593 C(x,x) | ZEX(x).  [resolve(210,b,151,b)].
723 P(x,x) | ZEX(y) | x < y.  [resolve(351,a,134,a)].
775 C(x,x) | -ZEX(y) | y = x.  [resolve(593,b,133,a)].
2745 P(difference(x,y),x) | ZEX(x) | P(x,y) | -EqDim(x,y).  [resolve(273,c,129,b)].
2746 P(difference(x,y),x) | ZEX(x) | x <= y.  [resolve(273,c,125,a)].
3499 P(x,x) | x < c2.  [resolve(723,b,163,a)].
3565 x < c2 | PO(x,x).  [resolve(3499,a,209,b)].
3566 x < c2 | PO(y,x) | -P(x,y).  [resolve(3499,a,143,c)].
3571 difference(x,y) < c2 | P(difference(x,y),x).  [resolve(3499,a,122,a)].
3584 PO(x,x) | ZEX(x).  [resolve(3565,a,164,a)].
3585 PO(x,x) | x <= c2.  [resolve(3565,a,139,b)].
3587 PO(x,x) | -EqDim(x,c2).  [resolve(3565,a,135,b)].
3607 PO(x,x) | ZEX(y) | x < y.  [resolve(3584,b,134,a)].
3699 c4 <= c2 | PO(c3,c4).  [resolve(3585,a,158,b)].
3743 c4 <= c2 | P(f11(c3,c4),c3).  [resolve(3699,b,141,a)].
7536 c4 <= c2 | Cont(f11(c3,c4),c3).  [resolve(3743,b,127,a)].
12529 c4 <= c2 | C(c3,c3).  [resolve(7536,b,210,b)].
12773 C(c3,c3) | c4 < c2 | EqDim(c4,c2).  [resolve(12529,a,138,a)].
23111 C(c3,c3) | EqDim(c4,c2) | ZEX(c4).  [resolve(12773,b,164,a)].
23131 C(c3,c3) | EqDim(c4,c2) | C(x,x) | c4 = x.  [resolve(23111,c,775,b)].
23143 C(c3,c3) | EqDim(c4,c2).  [factor(23131,a,c),unit_del(c,159)].
23152 C(c3,c3) | PO(c4,c4).  [resolve(23143,b,3587,b)].
23163 C(c3,c3) | PO(c3,c4).  [resolve(23152,b,158,b)].
23208 C(c3,c3) | P(f11(c3,c4),c3).  [resolve(23163,b,141,a)].
23428 C(c3,c3) | Cont(f11(c3,c4),c3).  [resolve(23208,b,127,a)].
24050 C(c3,c3).  [resolve(23428,b,210,b),merge(b)].
24053 Cont(f16(c3,c3),c3).  [resolve(24050,a,145,a)].
24095 -ZEX(c3).  [resolve(24053,a,155,b)].
24139 PO(x,x) | x < c3.  [resolve(24095,a,3607,b)].
24141 PO(c3,c3).  [resolve(24095,a,3584,b)].
24202 PO(c4,c3).  [resolve(24141,a,157,a)].
24222 P(f11(c4,c3),c4).  [resolve(24202,a,141,a)].
24357 Cont(f11(c4,c3),c4).  [resolve(24222,a,127,a)].
24595 -ZEX(c4).  [resolve(24357,a,155,b)].
24626 PO(x,x) | x < c4.  [resolve(24595,a,3607,b)].
25283 PO(x,x) | x <= c3.  [resolve(24139,b,139,b)].
25409 PO(x,x) | x <= c4.  [resolve(24626,b,139,b)].
25549 x <= c3 | P(f11(x,x),x).  [resolve(25283,a,142,a)].
25733 x <= c4 | P(f11(x,x),x).  [resolve(25409,a,142,a)].
30483 x <= c3 | Cont(f11(x,x),x).  [resolve(25549,b,127,a)].
30639 x <= c4 | Cont(f11(x,x),x).  [resolve(25733,b,127,a)].
34462 x <= c3 | -ZEX(x).  [resolve(30483,b,155,b)].
34838 x <= c4 | -ZEX(x).  [resolve(30639,b,155,b)].
46436 P(difference(x,y),x) | x <= y | x <= c4.  [resolve(2746,b,34838,b)].
46437 P(difference(x,y),x) | x <= y | x <= c3.  [resolve(2746,b,34462,b)].
46445 P(difference(x,c4),x) | x <= c4.  [factor(46436,b,c)].
46446 P(difference(x,c3),x) | x <= c3.  [factor(46437,b,c)].
46900 x <= c4 | Cont(difference(x,c4),x).  [resolve(46445,a,127,a)].
46908 x <= c3 | Cont(difference(x,c3),x).  [resolve(46446,a,127,a)].
47482 x <= c4 | -ZEX(difference(x,c4)).  [resolve(46900,b,156,b)].
47518 x <= c3 | -ZEX(difference(x,c3)).  [resolve(46908,b,156,b)].
51111 difference(x,y) < c2 | PO(x,difference(x,y)).  [resolve(3571,b,3566,c),merge(b)].
63780 PO(x,difference(x,y)) | ZEX(difference(x,y)).  [resolve(51111,a,164,a)].
63801 PO(x,difference(x,c3)) | x <= c3.  [resolve(63780,b,47518,b)].
63802 PO(x,difference(x,c4)) | x <= c4.  [resolve(63780,b,47482,b)].
63837 c4 <= c3 | PO(c3,difference(c4,c3)).  [resolve(63801,a,158,b)].
63839 c3 <= c4 | PO(c4,difference(c3,c4)).  [resolve(63802,a,157,a)].
63894 c4 <= c3 | ZEX(difference(c4,c3)).  [resolve(63837,b,120,c),unit_del(b,24095)].
63920 c4 <= c3.  [resolve(63894,b,47518,b),merge(b)].
63930 c4 < c3 | EqDim(c4,c3).  [resolve(63920,a,138,a)].
63986 EqDim(c4,c3) | -EqDim(c3,c4).  [resolve(63930,a,136,b)].
63988 EqDim(c4,c3) | -(c3 < c4).  [resolve(63930,a,131,b)].
64042 c3 <= c4 | ZEX(difference(c3,c4)).  [resolve(63839,b,120,c),unit_del(b,24595)].
64068 c3 <= c4.  [resolve(64042,b,47482,b),merge(b)].
64078 c3 < c4 | EqDim(c3,c4).  [resolve(64068,a,138,a)].
64121 EqDim(c3,c4) | EqDim(c4,c3).  [resolve(64078,a,63988,b)].
64135 EqDim(c3,c4) | -EqDim(c4,c3).  [resolve(64078,a,136,b)].
64150 EqDim(c3,c4).  [resolve(64135,b,64121,b),merge(b)].
64151 EqDim(c4,c3).  [back_unit_del(63986),unit_del(b,64150)].
64152 P(difference(c3,c4),c3) | P(c3,c4).  [resolve(64150,a,2745,d),unit_del(b,24095)].
64155 P(difference(c4,c3),c4) | P(c4,c3).  [resolve(64151,a,2745,d),unit_del(b,24595)].
64324 P(c3,c4) | Cont(difference(c3,c4),c3).  [resolve(64152,a,127,a)].
64331 P(c4,c3) | Cont(difference(c4,c3),c4).  [resolve(64155,a,127,a)].
64389 P(c3,c4) | -ZEX(difference(c3,c4)).  [resolve(64324,b,156,b)].
64392 P(c3,c4) | PO(c3,difference(c3,c4)).  [resolve(64389,b,63780,b)].
64417 P(c4,c3) | -ZEX(difference(c4,c3)).  [resolve(64331,b,156,b)].
64420 P(c4,c3) | PO(c4,difference(c4,c3)).  [resolve(64417,b,63780,b)].
64464 PO(c3,difference(c3,c4)) | PP(c3,c4).  [resolve(64392,a,116,b),unit_del(c,159)].
64522 PO(c4,difference(c4,c3)) | Cont(c4,c3).  [resolve(64420,a,127,a)].
64604 PP(c3,c4) | PO(c4,difference(c3,c4)).  [resolve(64464,a,157,a)].
64773 PO(c4,difference(c4,c3)) | -Cont(c3,c4).  [resolve(64522,b,153,b),unit_del(c,159)].
64929 PP(c3,c4) | ZEX(difference(c3,c4)).  [resolve(64604,b,120,c),unit_del(b,24595)].
64930 PP(c3,c4) | P(c3,c4).  [resolve(64929,b,64389,b)].
65006 PP(c3,c4).  [resolve(64930,b,116,b),merge(b),unit_del(b,159)].
65010 P(c3,c4).  [resolve(65006,a,114,a)].
65014 Cont(c3,c4).  [resolve(65010,a,127,a)].
65022 PO(c4,difference(c4,c3)).  [back_unit_del(64773),unit_del(b,65014)].
65085 -Cont(c4,c3).  [resolve(65014,a,153,b),flip(b),unit_del(b,159)].
65497 PO(c3,difference(c4,c3)).  [resolve(65022,a,158,b)].
65940 ZEX(difference(c4,c3)).  [resolve(65497,a,120,c),unit_del(a,24095)].
65941 P(c4,c3).  [back_unit_del(64417),unit_del(b,65940)].
65985 $F.  [resolve(65941,a,127,a),unit_del(a,65085)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=20232. Generated=3316415. Kept=65896. proofs=1.
Usable=19490. Sos=19999. Demods=568. Limbo=2, Disabled=26552. Hints=0.
Kept_by_rule=0, Deleted_by_rule=70.
Forward_subsumed=419250. Back_subsumed=119.
Sos_limit_deleted=2831198. Sos_displaced=20254. Sos_removed=0.
New_demodulators=965 (0 lex), Back_demodulated=5079. Back_unit_deleted=953.
Demod_attempts=61825031. Demod_rewrites=516187.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=906173. Nonunit_bsub_feature_tests=37972.
Megabytes=83.72.
User_CPU=78.39, System_CPU=0.85, Wall_clock=79.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 24754 exit (max_proofs) Fri Feb 24 16:09:31 2012
