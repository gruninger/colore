============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22488 was started by torsten on stl-ws2,
Thu Nov 24 19:38:58 2011
The command was "prover9 -t 600 -f codi/conversions/codi_down.p9 codi/conversions/codi_int.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsT1-T2_relevance1.order codi/theorems/input/codi_down_theoremsT1-T2_3.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsT1-T2_relevance1.order

predicate_order([Max,Min,=,EqDim,PP,P,C,<=,ZEX,difference,<,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsT1-T2_3.p9


formulas(goals).
(all x all y (PP(y,x) -> PP(difference(x,y),x))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: difference.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
3 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
7 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
8 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
9 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
10 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
12 (exists x ZEX(x)) # label(non_clause).  [assumption].
13 (all x -(x < x)) # label(non_clause).  [assumption].
14 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
15 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
16 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
17 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
18 (exists x MinDim(x)) # label(non_clause).  [assumption].
19 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
20 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
21 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
22 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
23 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
24 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
25 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
26 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
27 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
28 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
29 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
30 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
31 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
33 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
34 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
35 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
36 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
37 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
38 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating MinDim/1
39 -MinDim(x) | -ZEX(x).  [clausify(22)].
40 MinDim(c2).  [clausify(18)].
Derived: -ZEX(c2).  [resolve(39,a,40,a)].
41 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(22)].
Derived: -(x < c2) | ZEX(x).  [resolve(41,a,40,a)].
42 MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(22)].
Derived: ZEX(x) | f2(x) < x | -(y < x) | ZEX(y).  [resolve(42,a,41,a)].
43 MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(22)].
Derived: ZEX(x) | -ZEX(f2(x)) | -(y < x) | ZEX(y).  [resolve(43,a,41,a)].

Eliminating MaxDim/1
44 MaxDim(x) | -(f1(x) <= x).  [clausify(21)].
45 -MaxDim(x) | y <= x.  [clausify(21)].
Derived: -(f1(x) <= x) | y <= x.  [resolve(44,a,45,a)].

Eliminating Covers/2
46 Covers(x,y) | -(y < x) | y < f3(x,y).  [clausify(23)].
47 -Covers(x,y) | y < x.  [clausify(23)].
48 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(23)].
Derived: -(x < y) | x < f3(y,x) | -(x < z) | -(z < y).  [resolve(46,a,48,a)].
49 Covers(x,y) | -(y < x) | f3(x,y) < x.  [clausify(23)].
Derived: -(x < y) | f3(y,x) < y | -(x < z) | -(z < y).  [resolve(49,a,48,a)].

Eliminating PO/2
50 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(26)].
51 -PO(x,y) | P(f4(x,y),x).  [clausify(26)].
52 -PO(x,y) | P(f4(x,y),y).  [clausify(26)].
Derived: -P(x,y) | -P(x,z) | P(f4(y,z),y).  [resolve(50,a,51,a)].
Derived: -P(x,y) | -P(x,z) | P(f4(y,z),z).  [resolve(50,a,52,a)].

Eliminating Inc/2
53 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(27)].
54 -Inc(x,y) | f5(x,y) < x | f6(x,y) < y.  [clausify(27)].
55 -Inc(x,y) | f5(x,y) < x | Cont(f6(x,y),y).  [clausify(27)].
56 -Inc(x,y) | f5(x,y) < x | P(f6(x,y),x).  [clausify(27)].
57 -Inc(x,y) | Cont(f5(x,y),x) | f6(x,y) < y.  [clausify(27)].
58 -Inc(x,y) | Cont(f5(x,y),x) | Cont(f6(x,y),y).  [clausify(27)].
59 -Inc(x,y) | Cont(f5(x,y),x) | P(f6(x,y),x).  [clausify(27)].
60 -Inc(x,y) | P(f5(x,y),y) | f6(x,y) < y.  [clausify(27)].
61 -Inc(x,y) | P(f5(x,y),y) | Cont(f6(x,y),y).  [clausify(27)].
62 -Inc(x,y) | P(f5(x,y),y) | P(f6(x,y),x).  [clausify(27)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(y,z) < y | f6(y,z) < z.  [resolve(53,a,54,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(y,z) < y | Cont(f6(y,z),z).  [resolve(53,a,55,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(y,z) < y | P(f6(y,z),y).  [resolve(53,a,56,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(y,z),y) | f6(y,z) < z.  [resolve(53,a,57,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(y,z),y) | Cont(f6(y,z),z).  [resolve(53,a,58,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(y,z),y) | P(f6(y,z),y).  [resolve(53,a,59,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(y,z),z) | f6(y,z) < z.  [resolve(53,a,60,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(y,z),z) | Cont(f6(y,z),z).  [resolve(53,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(y,z),z) | P(f6(y,z),y).  [resolve(53,a,62,a)].
63 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(27)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(z,y) < z | f6(z,y) < y.  [resolve(63,a,54,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(z,y) < z | Cont(f6(z,y),y).  [resolve(63,a,55,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f5(z,y) < z | P(f6(z,y),z).  [resolve(63,a,56,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(z,y),z) | f6(z,y) < y.  [resolve(63,a,57,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(z,y),z) | Cont(f6(z,y),y).  [resolve(63,a,58,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f5(z,y),z) | P(f6(z,y),z).  [resolve(63,a,59,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(z,y),y) | f6(z,y) < y.  [resolve(63,a,60,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(z,y),y) | Cont(f6(z,y),y).  [resolve(63,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f5(z,y),y) | P(f6(z,y),z).  [resolve(63,a,62,a)].

Eliminating SC/2
64 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f8(x,y),x).  [clausify(28)].
65 -SC(x,y) | Cont(f7(x,y),x).  [clausify(28)].
66 -SC(x,y) | Cont(f7(x,y),y).  [clausify(28)].
67 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(28)].
68 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(28)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),y) | Cont(f7(y,z),y).  [resolve(64,a,65,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),y) | Cont(f7(y,z),z).  [resolve(64,a,66,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(64,a,67,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(64,a,68,a)].
69 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f8(x,y),y).  [clausify(28)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),z) | Cont(f7(y,z),y).  [resolve(69,a,65,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),z) | Cont(f7(y,z),z).  [resolve(69,a,66,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(69,a,67,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f8(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(69,a,68,a)].
70 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f8(x,y) < x) | -(f8(x,y) < y).  [clausify(28)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f8(y,z) < y) | -(f8(y,z) < z) | Cont(f7(y,z),y).  [resolve(70,a,65,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f8(y,z) < y) | -(f8(y,z) < z) | Cont(f7(y,z),z).  [resolve(70,a,66,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f8(y,z) < y) | -(f8(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(70,a,67,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f8(y,z) < y) | -(f8(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(70,a,68,a)].

Eliminating Max/1
71 Max(x) | ZEX(x) | PP(x,f9(x)).  [clausify(29)].
72 -Max(x) | -ZEX(x).  [clausify(29)].
73 -Max(x) | -PP(x,y).  [clausify(29)].
Derived: ZEX(x) | PP(x,f9(x)) | -PP(x,y).  [resolve(71,a,73,a)].

Eliminating Min/1
74 Min(x) | ZEX(x) | PP(f10(x),x).  [clausify(30)].
75 -Min(x) | -ZEX(x).  [clausify(30)].
76 -Min(x) | -PP(y,x).  [clausify(30)].
Derived: ZEX(x) | PP(f10(x),x) | -PP(y,x).  [resolve(74,a,76,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. intersection=1. difference=1. f3=1. f4=1. f5=1. f6=1. f7=1. f8=1. f11=1. f12=1. f13=1. f1=1. f2=1. f9=1. f10=1.
Predicate symbol precedence:  predicate_order([ =, EqDim, PP, P, C, <=, ZEX, <, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, intersection, difference, f3, f4, f5, f6, f7, f8, f11, f12, f13, f1, f2, f9, f10 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.29 (+ 0.00) seconds.
% Length of proof is 120.
% Level of proof is 15.
% Maximum clause weight is 16.000.
% Given clauses 726.

1 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
8 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
9 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
10 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
12 (exists x ZEX(x)) # label(non_clause).  [assumption].
13 (all x -(x < x)) # label(non_clause).  [assumption].
15 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
16 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
17 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
19 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
20 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
24 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
25 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
34 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
35 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
36 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
37 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
38 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause) # label(goal).  [goal].
77 ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(1)].
80 -(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(4)].
81 -(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(5)].
82 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(6)].
84 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(6)].
86 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(8)].
87 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(9)].
88 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(10)].
92 -Cont(x,y) | x <= y.  [clausify(11)].
93 ZEX(c1).  [clausify(12)].
94 -(x < x).  [clausify(13)].
96 -(x < y) | -(y <= z) | x < z.  [clausify(15)].
97 -ZEX(x) | -ZEX(y) | y = x.  [clausify(16)].
98 -ZEX(x) | ZEX(y) | x < y.  [clausify(17)].
99 -EqDim(x,y) | -(x < y).  [clausify(19)].
100 -EqDim(x,y) | -(y < x).  [clausify(19)].
101 EqDim(x,y) | x < y | y < x.  [clausify(19)].
102 -(x <= y) | x < y | EqDim(x,y).  [clausify(20)].
104 x <= y | -EqDim(x,y).  [clausify(20)].
105 -P(x,y) | Cont(x,y).  [clausify(24)].
106 -P(x,y) | EqDim(x,y).  [clausify(24)].
107 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(24)].
108 -PP(x,y) | P(x,y).  [clausify(25)].
109 -PP(x,y) | y != x.  [clausify(25)].
110 PP(x,y) | -P(x,y) | y = x.  [clausify(25)].
118 ZEX(x) | Cont(x,x).  [clausify(34)].
120 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(35)].
121 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(36)].
122 -ZEX(x) | -Cont(y,x).  [clausify(37)].
123 -ZEX(x) | -Cont(x,y).  [clausify(37)].
124 PP(c4,c3).  [deny(38)].
125 -PP(difference(c3,c4),c3).  [deny(38)].
167 -Cont(x,y) | x <= intersection(y,y).  [factor(87,a,b)].
168 -Cont(x,y) | -EqDim(x,intersection(y,y)) | P(x,intersection(y,y)).  [factor(88,a,b)].
169 EqDim(x,x).  [factor(101,b,c),unit_del(b,94)].
185 ZEX(x) | Cont(x,y) | EqDim(x,difference(x,y)).  [resolve(82,a,77,a)].
195 intersection(x,y) <= x | ZEX(intersection(x,y)).  [resolve(92,a,86,b)].
197 -ZEX(x) | c1 = x.  [resolve(97,a,93,a),flip(b)].
203 EqDim(x,y) | y < x | -EqDim(y,x).  [resolve(101,b,100,b)].
211 P(intersection(x,y),x) | -EqDim(intersection(x,y),x) | ZEX(intersection(x,y)).  [resolve(107,b,86,b)].
243 ZEX(x) | P(x,x).  [resolve(118,b,107,b),unit_del(c,169)].
250 ZEX(difference(x,y)) | -(x <= y) | Cont(difference(x,y),x).  [resolve(118,b,80,b)].
269 -Cont(c1,x).  [ur(123,a,93,a)].
270 c4 != c3.  [resolve(124,a,109,a),flip(a)].
271 P(c4,c3).  [resolve(124,a,108,a)].
551 EqDim(c4,c3).  [resolve(271,a,106,a)].
552 Cont(c4,c3).  [resolve(271,a,105,a)].
555 c4 <= c3.  [resolve(551,a,104,b)].
556 -(c3 < c4).  [ur(100,a,551,a)].
557 -(c4 < c3).  [ur(99,a,551,a)].
571 c4 <= intersection(c3,c3).  [resolve(552,a,167,a)].
572 -ZEX(c4).  [resolve(552,a,123,b)].
573 -ZEX(c3).  [resolve(552,a,122,b)].
576 -Cont(c3,c4).  [resolve(552,a,120,b),unit_del(b,270)].
613 EqDim(c3,c4).  [resolve(556,a,101,b),unit_del(b,557)].
614 c3 <= c4.  [resolve(613,a,104,b)].
628 EqDim(c3,difference(c3,c4)).  [resolve(576,a,185,b),unit_del(a,573)].
632 -ZEX(difference(c3,c4)).  [ur(82,b,573,a,c,576,a)].
760 P(c3,c3).  [resolve(243,a,573,a)].
761 P(c4,c4).  [resolve(243,a,572,a)].
781 Cont(c3,c3).  [resolve(760,a,105,a)].
787 Cont(c4,c4).  [resolve(761,a,105,a)].
803 -EqDim(c3,intersection(c3,c3)) | P(c3,intersection(c3,c3)).  [resolve(781,a,168,a)].
804 c3 <= intersection(c3,c3).  [resolve(781,a,167,a)].
811 ZEX(difference(c3,c3)).  [resolve(781,a,84,b)].
837 c4 <= intersection(c4,c4).  [resolve(787,a,167,a)].
890 difference(c3,c3) = c1.  [resolve(811,a,197,a),flip(a)].
1018 -(intersection(c3,c3) < c4).  [ur(96,b,571,a,c,94,a)].
1104 c3 <= difference(c3,c4).  [resolve(628,a,104,b)].
1105 -(difference(c3,c4) < c3).  [ur(100,a,628,a)].
1106 -(c3 < difference(c3,c4)).  [ur(99,a,628,a)].
1155 EqDim(difference(c3,c4),c3).  [resolve(203,c,628,a),unit_del(b,1106)].
1410 c3 < intersection(c3,c3) | EqDim(c3,intersection(c3,c3)).  [resolve(804,a,102,a)].
1412 -(intersection(c3,c3) < c3).  [ur(96,b,804,a,c,94,a)].
1444 -(intersection(c4,c4) < c4).  [ur(96,b,837,a,c,94,a)].
1681 -ZEX(intersection(c3,c3)).  [ur(98,b,572,a,c,1018,a)].
1688 intersection(c3,c3) <= c3.  [resolve(1681,a,195,b)].
1757 -(difference(c3,c4) < c4).  [ur(96,b,555,a,c,1105,a)].
1773 difference(c3,c4) <= c3.  [resolve(1155,a,104,b)].
2098 -P(c4,difference(c3,c4)).  [ur(81,a,614,a,c,1444,a)].
2125 EqDim(intersection(c3,c3),c3).  [resolve(1688,a,102,a),unit_del(a,1412)].
2133 -(c3 < intersection(c3,c3)).  [ur(96,b,1688,a,c,94,a)].
2137 EqDim(c3,intersection(c3,c3)).  [back_unit_del(1410),unit_del(a,2133)].
2139 P(c3,intersection(c3,c3)).  [back_unit_del(803),unit_del(a,2137)].
2203 -(c4 < difference(c3,c4)).  [ur(96,b,1773,a,c,557,a)].
2450 EqDim(c4,difference(c3,c4)).  [resolve(1757,a,101,c),unit_del(b,2203)].
2628 P(intersection(c3,c3),c3).  [resolve(2125,a,211,b),unit_del(b,1681)].
2646 Cont(c3,intersection(c3,c3)).  [resolve(2139,a,105,a)].
2780 -Cont(c4,difference(c3,c4)).  [ur(107,a,2098,a,c,2450,a)].
3018 Cont(intersection(c3,c3),c3).  [resolve(2628,a,105,a)].
3066 intersection(c3,c3) = c3.  [resolve(2646,a,120,b),flip(b),unit_del(a,3018)].
3208 -Cont(c3,difference(c3,c4)).  [ur(121,a,552,a,c,2780,a)].
3254 -ZEX(difference(c3,difference(c3,c4))).  [ur(82,b,573,a,c,3208,a)].
3700 Cont(difference(c3,difference(c3,c4)),c3).  [resolve(250,b,1104,a),unit_del(a,3254)].
3707 Cont(difference(c3,c4),c3).  [resolve(250,b,614,a),unit_del(a,632)].
4143 P(difference(c3,c4),c3).  [resolve(3707,a,168,a),rewrite([3066(6),3066(11)]),unit_del(a,1155)].
4518 difference(c3,c4) = c3.  [resolve(4143,a,110,b),flip(b),unit_del(a,125)].
4519 $F.  [back_rewrite(3700),rewrite([4518(4),890(3)]),unit_del(a,269)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=726. Generated=9594. Kept=4442. proofs=1.
Usable=641. Sos=2970. Demods=33. Limbo=1, Disabled=958. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=5151. Back_subsumed=226.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=36 (0 lex), Back_demodulated=529. Back_unit_deleted=75.
Demod_attempts=81427. Demod_rewrites=1993.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=18561. Nonunit_bsub_feature_tests=15988.
Megabytes=6.89.
User_CPU=0.29, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22488 exit (max_proofs) Thu Nov 24 19:38:58 2011
