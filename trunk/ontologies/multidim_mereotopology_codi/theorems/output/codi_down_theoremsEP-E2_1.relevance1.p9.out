============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22648 was started by torsten on stl-ws2,
Thu Nov 24 19:40:35 2011
The command was "prover9 -t 600 -f codi/theorems/input/codi_down_theoremsEP-E1.p9 codi/conversions/codi_down.p9 codi/theorems/input/codi_down_theoremsT1-T2.p9 codi/theorems/input/codi_down_theoremsT3-T5.p9 codi/conversions/codi_int.p9 codi/conversions/codi_linear.p9 zex/input/zex.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 codi/theorems/input/options.txt codi/theorems/generated/codi_down_theoremsEP-E2_relevance1.order codi/theorems/input/codi_down_theoremsEP-E2_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/theorems/input/codi_down_theoremsEP-E1.p9


formulas(sos).
(all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT1-T2.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))).
(all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))).
(all x all y (PP(y,x) -> PP(difference(x,y),x))).
end_of_list.

% Reading from file codi/theorems/input/codi_down_theoremsT3-T5.p9


formulas(sos).
(all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))).
(all x all y -PO(intersection(x,y),difference(x,y))).
(all x all y all z (P(z,difference(x,y)) -> P(z,x))).
(all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))).
(all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x all y (-ZEX(x) & (all z (C(z,x) -> C(z,y))) & (exists z (C(z,y) & -C(z,x))) -> Cont(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.

% Reading from file codi/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file codi/theorems/generated/codi_down_theoremsEP-E2_relevance1.order

predicate_order([=,EqDim,C,<=,PP,ZEX,PO,ZEX,P,<,Cont]).
set(inverse_order).
assign(order,kbo).

% Reading from file codi/theorems/input/codi_down_theoremsEP-E2_1.p9


formulas(goals).
(all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (PP(x,y) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause).  [assumption].
2 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
6 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
8 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
9 (all x all y (PP(y,x) & -ZEX(difference(x,y)) & P(difference(x,y),x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
10 (all x all y (PP(y,x) -> PP(difference(x,y),x))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
12 (all x all y -PO(intersection(x,y),difference(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
14 (all x all y all z (P(z,difference(x,y)) -> -PO(z,intersection(x,y)))) # label(non_clause).  [assumption].
15 (all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))) # label(non_clause).  [assumption].
16 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
17 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
19 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
21 (exists x ZEX(x)) # label(non_clause).  [assumption].
22 (all x -(x < x)) # label(non_clause).  [assumption].
23 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
24 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
27 (exists x MinDim(x)) # label(non_clause).  [assumption].
28 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
29 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
30 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
31 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
32 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
33 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
34 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
35 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
36 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
37 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
38 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
39 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
40 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
42 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
43 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
44 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
46 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
47 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating MinDim/1
48 -MinDim(x) | -ZEX(x).  [clausify(31)].
49 MinDim(c2).  [clausify(27)].
Derived: -ZEX(c2).  [resolve(48,a,49,a)].
50 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(31)].
Derived: -(x < c2) | ZEX(x).  [resolve(50,a,49,a)].
51 MinDim(x) | ZEX(x) | f3(x) < x.  [clausify(31)].
Derived: ZEX(x) | f3(x) < x | -(y < x) | ZEX(y).  [resolve(51,a,50,a)].
52 MinDim(x) | ZEX(x) | -ZEX(f3(x)).  [clausify(31)].
Derived: ZEX(x) | -ZEX(f3(x)) | -(y < x) | ZEX(y).  [resolve(52,a,50,a)].

Eliminating MaxDim/1
53 MaxDim(x) | -(f2(x) <= x).  [clausify(30)].
54 -MaxDim(x) | y <= x.  [clausify(30)].
Derived: -(f2(x) <= x) | y <= x.  [resolve(53,a,54,a)].

Eliminating Covers/2
55 Covers(x,y) | -(y < x) | y < f4(x,y).  [clausify(32)].
56 -Covers(x,y) | y < x.  [clausify(32)].
57 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(32)].
Derived: -(x < y) | x < f4(y,x) | -(x < z) | -(z < y).  [resolve(55,a,57,a)].
58 Covers(x,y) | -(y < x) | f4(x,y) < x.  [clausify(32)].
Derived: -(x < y) | f4(y,x) < y | -(x < z) | -(z < y).  [resolve(58,a,57,a)].

Eliminating Inc/2
59 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(36)].
60 -Inc(x,y) | f6(x,y) < x | f7(x,y) < y.  [clausify(36)].
61 -Inc(x,y) | f6(x,y) < x | Cont(f7(x,y),y).  [clausify(36)].
62 -Inc(x,y) | f6(x,y) < x | P(f7(x,y),x).  [clausify(36)].
63 -Inc(x,y) | Cont(f6(x,y),x) | f7(x,y) < y.  [clausify(36)].
64 -Inc(x,y) | Cont(f6(x,y),x) | Cont(f7(x,y),y).  [clausify(36)].
65 -Inc(x,y) | Cont(f6(x,y),x) | P(f7(x,y),x).  [clausify(36)].
66 -Inc(x,y) | P(f6(x,y),y) | f7(x,y) < y.  [clausify(36)].
67 -Inc(x,y) | P(f6(x,y),y) | Cont(f7(x,y),y).  [clausify(36)].
68 -Inc(x,y) | P(f6(x,y),y) | P(f7(x,y),x).  [clausify(36)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | f7(y,z) < z.  [resolve(59,a,60,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | Cont(f7(y,z),z).  [resolve(59,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | P(f7(y,z),y).  [resolve(59,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | f7(y,z) < z.  [resolve(59,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | Cont(f7(y,z),z).  [resolve(59,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | P(f7(y,z),y).  [resolve(59,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | f7(y,z) < z.  [resolve(59,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | Cont(f7(y,z),z).  [resolve(59,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | P(f7(y,z),y).  [resolve(59,a,68,a)].
69 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(36)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | f7(z,y) < y.  [resolve(69,a,60,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | Cont(f7(z,y),y).  [resolve(69,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | P(f7(z,y),z).  [resolve(69,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | f7(z,y) < y.  [resolve(69,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | Cont(f7(z,y),y).  [resolve(69,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | P(f7(z,y),z).  [resolve(69,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | f7(z,y) < y.  [resolve(69,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | Cont(f7(z,y),y).  [resolve(69,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | P(f7(z,y),z).  [resolve(69,a,68,a)].

Eliminating SC/2
70 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),x).  [clausify(37)].
71 -SC(x,y) | Cont(f8(x,y),x).  [clausify(37)].
72 -SC(x,y) | Cont(f8(x,y),y).  [clausify(37)].
73 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(37)].
74 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(37)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),y).  [resolve(70,a,71,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),z).  [resolve(70,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(70,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(70,a,74,a)].
75 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),y).  [clausify(37)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),y).  [resolve(75,a,71,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),z).  [resolve(75,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(75,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(75,a,74,a)].
76 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f9(x,y) < x) | -(f9(x,y) < y).  [clausify(37)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),y).  [resolve(76,a,71,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),z).  [resolve(76,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(76,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(76,a,74,a)].

Eliminating Max/1
77 Max(x) | ZEX(x) | PP(x,f10(x)).  [clausify(38)].
78 -Max(x) | -ZEX(x).  [clausify(38)].
79 -Max(x) | -PP(x,y).  [clausify(38)].
Derived: ZEX(x) | PP(x,f10(x)) | -PP(x,y).  [resolve(77,a,79,a)].

Eliminating Min/1
80 Min(x) | ZEX(x) | PP(f11(x),x).  [clausify(39)].
81 -Min(x) | -ZEX(x).  [clausify(39)].
82 -Min(x) | -PP(y,x).  [clausify(39)].
Derived: ZEX(x) | PP(f11(x),x) | -PP(y,x).  [resolve(80,a,82,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. difference=1. intersection=1. f1=1. f4=1. f5=1. f6=1. f7=1. f8=1. f9=1. f12=1. f13=1. f14=1. f2=1. f3=1. f10=1. f11=1.
Predicate symbol precedence:  predicate_order([ =, EqDim, C, <=, PP, ZEX, PO, P, <, Cont ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, difference, intersection, f1, f4, f5, f6, f7, f8, f9, f12, f13, f14, f2, f3, f10, f11 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 21 (0.00 of 0.16 sec).

Low Water (keep): wt=26.000, iters=6829

Low Water (keep): wt=25.000, iters=6810

Low Water (keep): wt=24.000, iters=6694

Low Water (keep): wt=22.000, iters=6792

Low Water (keep): wt=20.000, iters=6688

Low Water (keep): wt=19.000, iters=6700

Low Water (keep): wt=18.000, iters=6979

Low Water (keep): wt=17.000, iters=6692

Low Water (keep): wt=16.000, iters=6682

Low Water (keep): wt=15.000, iters=6723

Low Water (keep): wt=14.000, iters=6988

Low Water (keep): wt=13.000, iters=6669

Low Water (keep): wt=12.000, iters=6708

Low Water (displace): id=6811, wt=60.000

Low Water (displace): id=3306, wt=51.000

Low Water (displace): id=6813, wt=49.000

Low Water (displace): id=3309, wt=43.000

Low Water (displace): id=27223, wt=14.000

Low Water (displace): id=27226, wt=12.000

Low Water (displace): id=27937, wt=11.000

Low Water (displace): id=28024, wt=9.000

============================== PROOF =================================

% Proof 1 at 113.01 (+ 0.50) seconds.
% Length of proof is 153.
% Level of proof is 23.
% Maximum clause weight is 23.000.
% Given clauses 27995.

2 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
3 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
6 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
8 (all x all y (-ZEX(difference(x,y)) -> P(difference(x,y),x))) # label(non_clause).  [assumption].
11 (all x all y (-ZEX(y) & -ZEX(difference(x,y)) -> -PO(y,difference(x,y)))) # label(non_clause).  [assumption].
13 (all x all y all z (P(z,difference(x,y)) -> P(z,x))) # label(non_clause).  [assumption].
15 (all x all y all z (P(z,x) & -PO(z,intersection(x,y)) -> P(z,difference(x,y)))) # label(non_clause).  [assumption].
17 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
19 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
21 (exists x ZEX(x)) # label(non_clause).  [assumption].
22 (all x -(x < x)) # label(non_clause).  [assumption].
23 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
24 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
28 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
29 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
33 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
35 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
40 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
43 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
44 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
46 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
47 (all x all y (-ZEX(x) & -ZEX(y) & -P(y,x) & EqDim(x,y) & PO(x,y) & -PP(y,x) -> (exists z (P(z,y) & -PO(z,x))))) # label(non_clause) # label(goal).  [goal].
85 ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(2)].
86 -(x < y) | difference(y,x) = y.  [clausify(3)].
87 -(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(4)].
89 -(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(6)].
90 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(7)].
92 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(7)].
93 ZEX(difference(x,y)) | P(difference(x,y),x).  [clausify(8)].
96 ZEX(x) | ZEX(difference(y,x)) | -PO(x,difference(y,x)).  [clausify(11)].
98 -P(x,difference(y,z)) | P(x,y).  [clausify(13)].
100 -P(x,y) | PO(x,intersection(y,z)) | P(x,difference(y,z)).  [clausify(15)].
102 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(17)].
103 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(18)].
104 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(19)].
108 -Cont(x,y) | x <= y.  [clausify(20)].
109 ZEX(c1).  [clausify(21)].
110 -(x < x).  [clausify(22)].
111 -(x < y) | -(y < x).  [clausify(23)].
112 -(x < y) | -(y <= z) | x < z.  [clausify(24)].
113 -ZEX(x) | -ZEX(y) | y = x.  [clausify(25)].
114 -ZEX(x) | ZEX(y) | x < y.  [clausify(26)].
115 -EqDim(x,y) | -(x < y).  [clausify(28)].
116 -EqDim(x,y) | -(y < x).  [clausify(28)].
117 EqDim(x,y) | x < y | y < x.  [clausify(28)].
118 -(x <= y) | x < y | EqDim(x,y).  [clausify(29)].
119 x <= y | -(x < y).  [clausify(29)].
120 x <= y | -EqDim(x,y).  [clausify(29)].
121 -P(x,y) | Cont(x,y).  [clausify(33)].
123 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(33)].
127 -PO(x,y) | P(f5(x,y),x).  [clausify(35)].
128 -PO(x,y) | P(f5(x,y),y).  [clausify(35)].
129 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(35)].
131 -C(x,y) | Cont(f12(x,y),y).  [clausify(40)].
132 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(40)].
137 ZEX(x) | Cont(x,x).  [clausify(43)].
139 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(44)].
140 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(45)].
141 -ZEX(x) | -Cont(y,x).  [clausify(46)].
143 -ZEX(c3).  [deny(47)].
144 -ZEX(c4).  [deny(47)].
145 -P(c4,c3).  [deny(47)].
146 EqDim(c3,c4).  [deny(47)].
149 -P(x,c4) | PO(x,c3).  [deny(47)].
189 -Cont(x,y) | x <= intersection(y,y).  [factor(103,a,b)].
190 -Cont(x,y) | -EqDim(x,intersection(y,y)) | P(x,intersection(y,y)).  [factor(104,a,b)].
191 EqDim(x,x).  [factor(117,b,c),unit_del(b,110)].
193 C(x,x) | -Cont(y,x).  [factor(132,b,c)].
207 ZEX(x) | Cont(x,y) | EqDim(x,difference(x,y)).  [resolve(90,a,85,a)].
214 ZEX(intersection(x,y)) | ZEX(difference(intersection(x,y),x)).  [resolve(102,b,92,b)].
223 intersection(x,y) <= x | ZEX(intersection(x,y)).  [resolve(108,a,102,b)].
225 -ZEX(x) | c1 = x.  [resolve(113,a,109,a),flip(b)].
228 ZEX(x) | c1 < x.  [resolve(114,a,109,a)].
231 EqDim(x,y) | y < x | -EqDim(y,x).  [resolve(117,b,116,b)].
232 EqDim(x,y) | y < x | -(y <= z) | x < z.  [resolve(117,b,112,a)].
234 EqDim(x,y) | x < y | -EqDim(y,x).  [resolve(117,c,115,b)].
239 Cont(difference(x,y),x) | ZEX(difference(x,y)).  [resolve(121,a,93,b)].
275 ZEX(x) | P(x,x).  [resolve(137,b,123,b),unit_del(c,191)].
423 x <= intersection(x,x) | ZEX(x).  [resolve(189,a,137,b)].
433 C(x,x) | ZEX(x).  [resolve(193,b,137,b)].
557 ZEX(x) | EqDim(x,difference(x,y)) | P(x,y) | -EqDim(x,y).  [resolve(207,b,123,b)].
586 ZEX(x) | difference(x,c1) = x.  [resolve(228,b,86,a)].
592 ZEX(x) | PO(x,intersection(x,y)) | P(x,difference(x,y)).  [resolve(275,b,100,a)].
594 ZEX(difference(x,y)) | -(x <= y) | intersection(difference(x,y),y) < difference(x,y).  [resolve(275,b,89,b)].
620 C(x,x) | ZEX(y) | x < y.  [resolve(433,b,114,a)].
691 ZEX(intersection(x,y)) | difference(intersection(x,y),x) = c1.  [resolve(214,b,225,a),flip(b)].
1447 intersection(x,y) <= x | ZEX(z) | intersection(x,y) < z.  [resolve(223,b,114,a)].
1575 EqDim(c4,c3) | c3 < c4.  [resolve(231,c,146,a)].
1584 EqDim(c4,c3).  [resolve(1575,b,115,b),unit_del(b,146)].
1606 c4 <= c3.  [resolve(1584,a,120,b)].
1622 c4 <= intersection(c4,c4).  [resolve(423,b,144,a)].
1647 EqDim(x,c4) | c4 < x | x < intersection(c4,c4).  [resolve(1622,a,232,c)].
1650 c4 < intersection(c4,c4) | EqDim(c4,intersection(c4,c4)).  [resolve(1622,a,118,a)].
1729 difference(c4,c1) = c4.  [resolve(586,a,144,a)].
1730 difference(c3,c1) = c3.  [resolve(586,a,143,a)].
1819 P(c4,c4).  [para(1729(a,1),93(b,1)),rewrite([1729(3)]),unit_del(a,144)].
1826 Cont(c4,c4).  [resolve(1819,a,121,a)].
1838 -EqDim(c4,intersection(c4,c4)) | P(c4,intersection(c4,c4)).  [resolve(1826,a,190,a)].
1845 ZEX(difference(c4,c4)).  [resolve(1826,a,92,b)].
1874 difference(c4,c4) = c1.  [resolve(1845,a,225,a),flip(a)].
1876 P(c3,c3).  [para(1730(a,1),93(b,1)),rewrite([1730(3)]),unit_del(a,143)].
1883 Cont(c3,c3).  [resolve(1876,a,121,a)].
1902 ZEX(difference(c3,c3)).  [resolve(1883,a,92,b)].
1928 difference(c3,c3) = c1.  [resolve(1902,a,225,a),flip(a)].
2015 ZEX(difference(x,y)) | -Cont(z,difference(x,y)) | Cont(z,x).  [resolve(239,a,140,b)].
2022 ZEX(difference(x,y)) | -Cont(difference(x,y),z) | -EqDim(difference(x,y),intersection(x,z)) | P(difference(x,y),intersection(x,z)).  [resolve(239,a,104,a)].
2026 ZEX(difference(x,y)) | -(x <= z) | -(intersection(difference(x,y),z) < difference(x,y)) | Cont(difference(x,y),difference(x,z)).  [resolve(239,a,87,b)].
2090 -P(x,c1) | P(x,c3).  [para(1928(a,1),98(a,2))].
10219 C(x,x) | ZEX(y) | -EqDim(y,x).  [resolve(620,c,116,b)].
18766 EqDim(c4,difference(c4,c3)).  [resolve(557,d,1584,a),unit_del(a,144),unit_del(c,145)].
18769 C(difference(c4,c3),difference(c4,c3)).  [resolve(18766,a,10219,c),unit_del(b,144)].
18771 EqDim(difference(c4,c3),c4) | difference(c4,c3) < c4.  [resolve(18766,a,234,c)].
18847 Cont(f12(difference(c4,c3),difference(c4,c3)),difference(c4,c3)).  [resolve(18769,a,131,a)].
20048 PO(c4,intersection(c4,c4)) | P(c4,c1).  [para(1874(a,1),592(c,2)),unit_del(a,144)].
20100 ZEX(difference(c4,c3)) | intersection(difference(c4,c3),c3) < difference(c4,c3).  [resolve(594,b,1606,a)].
20512 PO(c4,intersection(c4,c4)).  [resolve(20048,b,2090,a),unit_del(b,145)].
20513 P(f5(c4,intersection(c4,c4)),intersection(c4,c4)).  [resolve(20512,a,128,a)].
29672 Cont(f5(c4,intersection(c4,c4)),intersection(c4,c4)).  [resolve(20513,a,121,a)].
31905 intersection(x,y) <= x | ZEX(z) | intersection(x,y) <= z.  [resolve(1447,c,119,b)].
31909 intersection(x,y) <= x | ZEX(x).  [factor(31905,a,c)].
32061 intersection(c4,x) <= c4.  [resolve(31909,b,144,a)].
32072 intersection(c4,x) < c4 | EqDim(intersection(c4,x),c4).  [resolve(32061,a,118,a)].
33456 EqDim(intersection(c4,c4),c4) | c4 < intersection(c4,c4).  [resolve(1647,c,110,a)].
33459 EqDim(c4,intersection(c4,c4)) | -EqDim(intersection(c4,c4),c4).  [resolve(1650,a,116,b)].
34449 -ZEX(intersection(c4,c4)).  [resolve(29672,a,141,b)].
34479 difference(intersection(c4,c4),c4) = c1.  [resolve(34449,a,691,a)].
34485 Cont(intersection(c4,c4),c4).  [para(34479(a,1),90(a,1)),unit_del(a,109),unit_del(b,34449)].
34499 -Cont(c4,intersection(c4,c4)) | intersection(c4,c4) = c4.  [resolve(34485,a,139,b)].
39861 EqDim(difference(c4,c3),c4).  [resolve(18771,b,116,b),unit_del(b,18766)].
45595 EqDim(intersection(c4,x),c4) | -(c4 < intersection(c4,x)).  [resolve(32072,a,111,b)].
49051 EqDim(intersection(c4,c4),c4).  [resolve(45595,b,33456,b),merge(b)].
49053 EqDim(c4,intersection(c4,c4)).  [back_unit_del(33459),unit_del(b,49051)].
49054 P(c4,intersection(c4,c4)).  [back_unit_del(1838),unit_del(a,49053)].
49066 Cont(c4,intersection(c4,c4)).  [resolve(49054,a,121,a)].
49067 intersection(c4,c4) = c4.  [back_unit_del(34499),unit_del(a,49066)].
58946 -ZEX(difference(c4,c3)).  [resolve(18847,a,141,b)].
58955 intersection(difference(c4,c3),c3) < difference(c4,c3).  [back_unit_del(20100),unit_del(a,58946)].
59066 Cont(difference(c4,c3),difference(c4,c3)).  [resolve(58955,a,2026,c),unit_del(a,58946),unit_del(b,1606)].
59072 Cont(difference(c4,c3),c4).  [resolve(59066,a,2015,b),unit_del(a,58946)].
59087 P(difference(c4,c3),c4).  [resolve(59072,a,2022,b),rewrite([49067(10),49067(15)]),unit_del(a,58946),unit_del(b,39861)].
59098 PO(difference(c4,c3),c3).  [resolve(59087,a,149,a)].
59105 P(f5(difference(c4,c3),c3),c3).  [resolve(59098,a,128,a)].
59106 P(f5(difference(c4,c3),c3),difference(c4,c3)).  [resolve(59098,a,127,a)].
59154 PO(c3,x) | -P(f5(difference(c4,c3),c3),x).  [resolve(59105,a,129,b)].
59710 PO(c3,difference(c4,c3)).  [resolve(59154,b,59106,a)].
59714 $F.  [resolve(59710,a,96,c),unit_del(a,143),unit_del(b,58946)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=27995. Generated=2797237. Kept=59631. proofs=1.
Usable=25364. Sos=17681. Demods=1029. Limbo=2, Disabled=16725. Hints=0.
Kept_by_rule=0, Deleted_by_rule=50.
Forward_subsumed=253928. Back_subsumed=142.
Sos_limit_deleted=2483627. Sos_displaced=7796. Sos_removed=0.
New_demodulators=1362 (0 lex), Back_demodulated=7987. Back_unit_deleted=659.
Demod_attempts=62532781. Demod_rewrites=413566.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=667134. Nonunit_bsub_feature_tests=15072.
Megabytes=77.38.
User_CPU=113.01, System_CPU=0.50, Wall_clock=114.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22648 exit (max_proofs) Thu Nov 24 19:42:29 2011
