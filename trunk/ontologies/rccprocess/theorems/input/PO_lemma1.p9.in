formulas(assumptions).

%psl_core.th:ax12
all occ
        (activity_occurrence(occ)
        ->      
        (exists a
                (activity(a)
                & occurrence_of(occ,a)))).

%occtree.th:ax1
all s 
        (arboreal(s)
        ->
        activity_occurrence(s)).

%occtree.th:ax9
all s all a
        (occurrence_of(s,a)
        ->
        (arboreal(s)
        <->
        generator(a))).

%occtree.th:ax10
all a all o
        (occurrence_of(successor(a,o),a)
        <->
        (generator(a)
        & arboreal(o))).

%disc_state.th:ax2
all f all occ
	(holds(f,occ)
	->
	(state(f)
	& arboreal(occ))).

%disc_state.th:ax3
all f all occ
	(prior(f,occ)
	->
	(state(f)
	& arboreal(occ))).

%disc_state.th:ax5
all a all occ all f	
	(prior(f, successor(a,occ))
	<->
	(holds(f,occ)
	& generator(a))).

all f all o
	(falsifies(o,f)
	<->
	(state(f)
	& arboreal(o)
	& prior(f,o)
	& -holds(f,o))).

all f all o
	(achieves(o,f)
	<->
	(state(f)
	& arboreal(o)
	& -prior(f,o)
	& holds(f,o))).

all f all o
	(changes(o,f)
	<->
	(achieves(o,f)
	| falsifies(o,f))).

%rcc_state.th:ax12
all x all y all o 
	(prior(POs(x,y),o) <-> (arboreal(o)  & prior(Os(x,y),o) 
			& -prior(Ps(x,y),o) & -prior(Ps(y,x),o))).

end_of_list.

formulas(goals).

%PO.lemma:1
all x all y all o (changes(o,POs(x,y)) & arboreal(o) -> (changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)))).

end_of_list.

