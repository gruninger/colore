============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 9196 was started by Bahar on Bahar-THINK,
Thu May  2 00:57:44 2013
The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.14 (+ 0.05) seconds.
% Length of proof is 55.
% Level of proof is 15.
% Maximum clause weight is 40.
% Given clauses 115.

8 (all f all o (falsifies(o,f) <-> state(f) & arboreal(o) & prior(f,o) & -holds(f,o))) # label(non_clause).  [assumption].
9 (all f all o (achieves(o,f) <-> state(f) & arboreal(o) & -prior(f,o) & holds(f,o))) # label(non_clause).  [assumption].
10 (all f all o (changes(o,f) <-> achieves(o,f) | falsifies(o,f))) # label(non_clause).  [assumption].
11 (all o all x all y (changes(o,connect(x,y)) & (changes(o,connect(x,compl(y))) | changes(o,connect(compl(x),y)) | changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
14 (all o all x all y (changes(o,Os(x,y)) & (changes(o,Ps(x,y)) | changes(o,Ps(y,x))) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
15 (all o all x all y (changes(o,Ps(x,y)) & changes(o,Ps(y,x)) -> changes(o,region(x)) | changes(o,region(y)))) # label(non_clause).  [assumption].
16 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,ECs(x,y)))) # label(non_clause).  [assumption].
17 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,TPPs(x,y)))) # label(non_clause).  [assumption].
18 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,TPPs(y,x)))) # label(non_clause).  [assumption].
19 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) -> changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)))) # label(non_clause).  [assumption].
20 (all x all y all o (changes(o,POs(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,ECs(x,y)) | changes(o,TPPs(x,y)) | changes(o,TPPs(y,x)))) # label(non_clause) # label(goal).  [goal].
45 -changes(x,y) | achieves(x,y) | falsifies(x,y).  [clausify(10)].
46 -falsifies(x,y) | arboreal(x).  [clausify(8)].
53 -achieves(x,y) | arboreal(x).  [clausify(9)].
58 -changes(x,y) | achieves(x,y) | arboreal(x).  [resolve(45,c,46,a)].
66 -changes(x,connect(y,z)) | -changes(x,Os(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
67 -changes(x,connect(y,z)) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
68 -changes(x,connect(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(11)].
76 -changes(x,Os(y,z)) | -changes(x,Ps(y,z)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(14)].
77 -changes(x,Os(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(14)].
78 -changes(x,Ps(y,z)) | -changes(x,Ps(z,y)) | changes(x,region(y)) | changes(x,region(z)).  [clausify(15)].
79 -changes(x,POs(y,z)) | -arboreal(x) | -changes(x,Os(y,z)) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,ECs(y,z)).  [clausify(16)].
80 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | -changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,TPPs(y,z)).  [clausify(17)].
81 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | -changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,TPPs(z,y)).  [clausify(18)].
82 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)).  [clausify(19)].
83 changes(c3,POs(c1,c2)).  [deny(20)].
84 -changes(c3,region(c1)).  [deny(20)].
85 -changes(c3,region(c2)).  [deny(20)].
86 -changes(c3,ECs(c1,c2)).  [deny(20)].
87 -changes(c3,TPPs(c1,c2)).  [deny(20)].
88 -changes(c3,TPPs(c2,c1)).  [deny(20)].
97 -changes(x,y) | arboreal(x) | arboreal(x).  [resolve(58,b,53,a)].
98 -changes(x,y) | arboreal(x).  [copy(97),merge(c)].
116 -arboreal(c3) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(83,a,82,a)].
117 -arboreal(c3) | changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(83,a,81,a),unit_del(f,84),unit_del(g,85),unit_del(h,88)].
118 -arboreal(c3) | changes(c3,Os(c1,c2)) | -changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(83,a,80,a),unit_del(f,84),unit_del(g,85),unit_del(h,87)].
119 -arboreal(c3) | -changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(83,a,79,a),unit_del(f,84),unit_del(g,85),unit_del(h,86)].
120 arboreal(c3).  [resolve(98,a,83,a)].
121 -changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [back_unit_del(119),unit_del(a,120)].
122 changes(c3,Os(c1,c2)) | -changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [back_unit_del(118),unit_del(a,120)].
123 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [back_unit_del(117),unit_del(a,120)].
124 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [back_unit_del(116),unit_del(a,120)].
163 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(124,a,121,a),merge(c),merge(d)].
167 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,connect(c1,c2)).  [resolve(124,a,66,b),unit_del(d,84),unit_del(e,85)].
258 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(167,c,163,c),merge(c),merge(d)].
259 changes(c3,Ps(c1,c2)) | changes(c3,Os(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(258,b,123,c),merge(c)].
367 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(259,b,77,a),unit_del(d,84),unit_del(e,85)].
384 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(367,c,258,b),merge(c)].
386 changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(384,b,68,a),unit_del(c,84),unit_del(d,85)].
395 changes(c3,Ps(c1,c2)).  [resolve(386,b,258,b),merge(b)].
396 changes(c3,Os(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [back_unit_del(122),unit_del(b,395)].
398 -changes(c3,Ps(c2,c1)).  [resolve(395,a,78,b),unit_del(b,85),unit_del(c,84)].
400 -changes(c3,Os(c1,c2)).  [ur(76,b,395,a,c,84,a,d,85,a)].
406 -changes(c3,connect(c1,c2)).  [ur(67,b,395,a,c,84,a,d,85,a)].
407 $F.  [back_unit_del(396),unit_del(a,400),unit_del(b,398),unit_del(c,406)].

============================== end of proof ==========================
