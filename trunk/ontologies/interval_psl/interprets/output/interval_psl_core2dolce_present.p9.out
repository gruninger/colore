============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 8062 was started by cchui on stl1.mie.utoronto.ca,
Mon Jul 15 12:05:32 2013
The command was "prover9 -t 600 -f test/p9/interval_psl_core2dolce_present.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/interval_psl_core2dolce_present.p9


formulas(sos).
(all x (ED(x) <-> object(x))).
(all x (Q(x) <-> object(x))).
(all x (PD(x) <-> activity_occurrence(x))).
(all x (T(x) <-> timeinterval(x))).
(all t1 all t2 (P(t1,t2) <-> timeinterval(t1) & timeinterval(t2) & beforeEq(beginof(t2),beginof(t1)) & beforeEq(endof(t1),endof(t2)))).
(all x all y all t (PRE(x,t) <-> (object(x) | activity_occurrence(x)) & timeinterval(t) & beforeEq(beginof(x),beginof(t)) & beforeEq(endof(t),endof(x)))).
(all x all y all z (sum(z,x,y) <-> timeinterval(x) & timeinterval(y) & timeinterval(z) & (beginof(z) = beginof(x) & endof(z) = endof(y) | beginof(z) = beginof(y) & endof(z) = endof(x)))).
(all x (object(x) | activity_occurrence(x) -> (exists t psl_interval(x,t)))).
(all x all y all z (beforeEq(x,y) & beforeEq(y,z) -> beforeEq(x,z))).
(all x all y all z (P(x,y) & P(y,z) -> P(x,z))).
(all x all y (psl_interval(x,y) <-> (activity_occurrence(x) | object(x)) & timeinterval(y) & beginof(x) = beginof(y) & endof(x) = endof(y))).
(all x all y all z (overlay(x,y,z) <-> (exists i1 exists i2 (psl_interval(x,i1) & psl_interval(y,i2) & beginof(i2) = beginof(z) & endof(i1) = endof(z))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (ED(x) <-> object(x))) # label(non_clause).  [assumption].
2 (all x (Q(x) <-> object(x))) # label(non_clause).  [assumption].
3 (all x (PD(x) <-> activity_occurrence(x))) # label(non_clause).  [assumption].
4 (all x (T(x) <-> timeinterval(x))) # label(non_clause).  [assumption].
5 (all t1 all t2 (P(t1,t2) <-> timeinterval(t1) & timeinterval(t2) & beforeEq(beginof(t2),beginof(t1)) & beforeEq(endof(t1),endof(t2)))) # label(non_clause).  [assumption].
6 (all x all y all t (PRE(x,t) <-> (object(x) | activity_occurrence(x)) & timeinterval(t) & beforeEq(beginof(x),beginof(t)) & beforeEq(endof(t),endof(x)))) # label(non_clause).  [assumption].
7 (all x all y all z (sum(z,x,y) <-> timeinterval(x) & timeinterval(y) & timeinterval(z) & (beginof(z) = beginof(x) & endof(z) = endof(y) | beginof(z) = beginof(y) & endof(z) = endof(x)))) # label(non_clause).  [assumption].
8 (all x (object(x) | activity_occurrence(x) -> (exists t psl_interval(x,t)))) # label(non_clause).  [assumption].
9 (all x all y all z (beforeEq(x,y) & beforeEq(y,z) -> beforeEq(x,z))) # label(non_clause).  [assumption].
10 (all x all y all z (P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
11 (all x all y (psl_interval(x,y) <-> (activity_occurrence(x) | object(x)) & timeinterval(y) & beginof(x) = beginof(y) & endof(x) = endof(y))) # label(non_clause).  [assumption].
12 (all x all y all z (overlay(x,y,z) <-> (exists i1 exists i2 (psl_interval(x,i1) & psl_interval(y,i2) & beginof(i2) = beginof(z) & endof(i1) = endof(z))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-ED(x) | object(x).  [clausify(1)].
ED(x) | -object(x).  [clausify(1)].
-Q(x) | object(x).  [clausify(2)].
Q(x) | -object(x).  [clausify(2)].
-PD(x) | activity_occurrence(x).  [clausify(3)].
PD(x) | -activity_occurrence(x).  [clausify(3)].
-T(x) | timeinterval(x).  [clausify(4)].
T(x) | -timeinterval(x).  [clausify(4)].
-P(x,y) | timeinterval(x).  [clausify(5)].
-P(x,y) | timeinterval(y).  [clausify(5)].
-P(x,y) | beforeEq(beginof(y),beginof(x)).  [clausify(5)].
-P(x,y) | beforeEq(endof(x),endof(y)).  [clausify(5)].
P(x,y) | -timeinterval(x) | -timeinterval(y) | -beforeEq(beginof(y),beginof(x)) | -beforeEq(endof(x),endof(y)).  [clausify(5)].
-PRE(x,y) | object(x) | activity_occurrence(x).  [clausify(6)].
-PRE(x,y) | timeinterval(y).  [clausify(6)].
-PRE(x,y) | beforeEq(beginof(x),beginof(y)).  [clausify(6)].
-PRE(x,y) | beforeEq(endof(y),endof(x)).  [clausify(6)].
PRE(x,y) | -object(x) | -timeinterval(y) | -beforeEq(beginof(x),beginof(y)) | -beforeEq(endof(y),endof(x)).  [clausify(6)].
PRE(x,y) | -activity_occurrence(x) | -timeinterval(y) | -beforeEq(beginof(x),beginof(y)) | -beforeEq(endof(y),endof(x)).  [clausify(6)].
-sum(x,y,z) | timeinterval(y).  [clausify(7)].
-sum(x,y,z) | timeinterval(z).  [clausify(7)].
-sum(x,y,z) | timeinterval(x).  [clausify(7)].
-sum(x,y,z) | beginof(x) = beginof(y) | beginof(x) = beginof(z).  [clausify(7)].
-sum(x,y,z) | beginof(x) = beginof(y) | endof(x) = endof(y).  [clausify(7)].
-sum(x,y,z) | endof(x) = endof(z) | beginof(x) = beginof(z).  [clausify(7)].
-sum(x,y,z) | endof(x) = endof(z) | endof(x) = endof(y).  [clausify(7)].
sum(x,y,z) | -timeinterval(y) | -timeinterval(z) | -timeinterval(x) | beginof(x) != beginof(y) | endof(x) != endof(z).  [clausify(7)].
sum(x,y,z) | -timeinterval(y) | -timeinterval(z) | -timeinterval(x) | beginof(x) != beginof(z) | endof(x) != endof(y).  [clausify(7)].
-object(x) | psl_interval(x,f1(x)).  [clausify(8)].
-activity_occurrence(x) | psl_interval(x,f1(x)).  [clausify(8)].
-beforeEq(x,y) | -beforeEq(y,z) | beforeEq(x,z).  [clausify(9)].
-P(x,y) | -P(y,z) | P(x,z).  [clausify(10)].
-psl_interval(x,y) | activity_occurrence(x) | object(x).  [clausify(11)].
-psl_interval(x,y) | timeinterval(y).  [clausify(11)].
-psl_interval(x,y) | beginof(y) = beginof(x).  [clausify(11)].
-psl_interval(x,y) | endof(y) = endof(x).  [clausify(11)].
psl_interval(x,y) | -activity_occurrence(x) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x).  [clausify(11)].
psl_interval(x,y) | -object(x) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x).  [clausify(11)].
-overlay(x,y,z) | psl_interval(x,f2(x,y,z)).  [clausify(12)].
-overlay(x,y,z) | psl_interval(y,f3(x,y,z)).  [clausify(12)].
-overlay(x,y,z) | beginof(f3(x,y,z)) = beginof(z).  [clausify(12)].
-overlay(x,y,z) | endof(f2(x,y,z)) = endof(z).  [clausify(12)].
overlay(x,y,z) | -psl_interval(x,u) | -psl_interval(y,w) | beginof(w) != beginof(z) | endof(u) != endof(z).  [clausify(12)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating ED/1
13 ED(x) | -object(x).  [clausify(1)].
14 -ED(x) | object(x).  [clausify(1)].

Eliminating Q/1
15 Q(x) | -object(x).  [clausify(2)].
16 -Q(x) | object(x).  [clausify(2)].

Eliminating PD/1
17 PD(x) | -activity_occurrence(x).  [clausify(3)].
18 -PD(x) | activity_occurrence(x).  [clausify(3)].

Eliminating T/1
19 T(x) | -timeinterval(x).  [clausify(4)].
20 -T(x) | timeinterval(x).  [clausify(4)].

Eliminating PRE/2
21 PRE(x,y) | -object(x) | -timeinterval(y) | -beforeEq(beginof(x),beginof(y)) | -beforeEq(endof(y),endof(x)).  [clausify(6)].
22 -PRE(x,y) | object(x) | activity_occurrence(x).  [clausify(6)].
23 -PRE(x,y) | timeinterval(y).  [clausify(6)].
24 -PRE(x,y) | beforeEq(beginof(x),beginof(y)).  [clausify(6)].
25 -PRE(x,y) | beforeEq(endof(y),endof(x)).  [clausify(6)].
26 PRE(x,y) | -activity_occurrence(x) | -timeinterval(y) | -beforeEq(beginof(x),beginof(y)) | -beforeEq(endof(y),endof(x)).  [clausify(6)].

Eliminating sum/3
27 sum(x,y,z) | -timeinterval(y) | -timeinterval(z) | -timeinterval(x) | beginof(x) != beginof(y) | endof(x) != endof(z).  [clausify(7)].
28 -sum(x,y,z) | timeinterval(y).  [clausify(7)].
29 -sum(x,y,z) | timeinterval(z).  [clausify(7)].
30 -sum(x,y,z) | timeinterval(x).  [clausify(7)].
31 -sum(x,y,z) | beginof(x) = beginof(y) | beginof(x) = beginof(z).  [clausify(7)].
32 -sum(x,y,z) | beginof(x) = beginof(y) | endof(x) = endof(y).  [clausify(7)].
33 -sum(x,y,z) | endof(x) = endof(z) | beginof(x) = beginof(z).  [clausify(7)].
34 -sum(x,y,z) | endof(x) = endof(z) | endof(x) = endof(y).  [clausify(7)].
35 sum(x,y,z) | -timeinterval(y) | -timeinterval(z) | -timeinterval(x) | beginof(x) != beginof(z) | endof(x) != endof(y).  [clausify(7)].

Eliminating object/1
36 -psl_interval(x,y) | activity_occurrence(x) | object(x).  [clausify(11)].
37 -object(x) | psl_interval(x,f1(x)).  [clausify(8)].
Derived: -psl_interval(x,y) | activity_occurrence(x) | psl_interval(x,f1(x)).  [resolve(36,c,37,a)].
38 psl_interval(x,y) | -object(x) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x).  [clausify(11)].
Derived: psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z) | activity_occurrence(x).  [resolve(38,b,36,c)].

Eliminating activity_occurrence/1
39 -psl_interval(x,y) | activity_occurrence(x) | psl_interval(x,f1(x)).  [resolve(36,c,37,a)].
40 -activity_occurrence(x) | psl_interval(x,f1(x)).  [clausify(8)].
41 psl_interval(x,y) | -activity_occurrence(x) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x).  [clausify(11)].
Derived: -psl_interval(x,y) | psl_interval(x,f1(x)) | psl_interval(x,f1(x)).  [resolve(39,b,40,a)].
42 psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z) | activity_occurrence(x).  [resolve(38,b,36,c)].
Derived: psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z) | psl_interval(x,u) | -timeinterval(u) | beginof(u) != beginof(x) | endof(u) != endof(x).  [resolve(42,f,41,b)].

Eliminating overlay/3
43 overlay(x,y,z) | -psl_interval(x,u) | -psl_interval(y,w) | beginof(w) != beginof(z) | endof(u) != endof(z).  [clausify(12)].
44 -overlay(x,y,z) | psl_interval(x,f2(x,y,z)).  [clausify(12)].
45 -overlay(x,y,z) | psl_interval(y,f3(x,y,z)).  [clausify(12)].
46 -overlay(x,y,z) | beginof(f3(x,y,z)) = beginof(z).  [clausify(12)].
47 -overlay(x,y,z) | endof(f2(x,y,z)) = endof(z).  [clausify(12)].
Derived: -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(x,f2(x,z,w)).  [resolve(43,a,44,a)].
Derived: -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(z,f3(x,z,w)).  [resolve(43,a,45,a)].
Derived: -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | beginof(f3(x,z,w)) = beginof(w).  [resolve(43,a,46,a)].
Derived: -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | endof(f2(x,z,w)) = endof(w).  [resolve(43,a,47,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, timeinterval, psl_interval, P, beforeEq ]).
Function symbol precedence:  function_order([ beginof, endof, f1, f2, f3 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      48 -P(x,y) | timeinterval(x).  [clausify(5)].
kept:      49 -P(x,y) | timeinterval(y).  [clausify(5)].
kept:      50 -P(x,y) | beforeEq(beginof(y),beginof(x)).  [clausify(5)].
kept:      51 -P(x,y) | beforeEq(endof(x),endof(y)).  [clausify(5)].
kept:      52 P(x,y) | -timeinterval(x) | -timeinterval(y) | -beforeEq(beginof(y),beginof(x)) | -beforeEq(endof(x),endof(y)).  [clausify(5)].
kept:      53 -beforeEq(x,y) | -beforeEq(y,z) | beforeEq(x,z).  [clausify(9)].
kept:      54 -P(x,y) | -P(y,z) | P(x,z).  [clausify(10)].
kept:      55 -psl_interval(x,y) | timeinterval(y).  [clausify(11)].
kept:      56 -psl_interval(x,y) | beginof(y) = beginof(x).  [clausify(11)].
kept:      57 -psl_interval(x,y) | endof(y) = endof(x).  [clausify(11)].
           58 -psl_interval(x,y) | psl_interval(x,f1(x)) | psl_interval(x,f1(x)).  [resolve(39,b,40,a)].
kept:      59 -psl_interval(x,y) | psl_interval(x,f1(x)).  [copy(58),merge(c)].
kept:      60 psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z) | psl_interval(x,u) | -timeinterval(u) | beginof(u) != beginof(x) | endof(u) != endof(x).  [resolve(42,f,41,b)].
kept:      61 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(x,f2(x,z,w)).  [resolve(43,a,44,a)].
kept:      62 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(z,f3(x,z,w)).  [resolve(43,a,45,a)].
kept:      63 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | beginof(f3(x,z,w)) = beginof(w).  [resolve(43,a,46,a)].
kept:      64 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | endof(f2(x,z,w)) = endof(w).  [resolve(43,a,47,a)].
kept:      65 P(x,x) | -timeinterval(x) | -beforeEq(beginof(x),beginof(x)) | -beforeEq(endof(x),endof(x)).  [factor(52,b,c)].
kept:      66 psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z).  [factor(60,a,f),merge(f),merge(g),merge(h)].
kept:      67 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f2(x,x,z)).  [factor(61,a,b)].
kept:      68 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f3(x,x,z)).  [factor(62,a,b)].
kept:      69 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | beginof(f3(x,x,z)) = beginof(z).  [factor(63,a,b)].
kept:      70 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | endof(f2(x,x,z)) = endof(z).  [factor(64,a,b)].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
48 -P(x,y) | timeinterval(x).  [clausify(5)].
49 -P(x,y) | timeinterval(y).  [clausify(5)].
50 -P(x,y) | beforeEq(beginof(y),beginof(x)).  [clausify(5)].
51 -P(x,y) | beforeEq(endof(x),endof(y)).  [clausify(5)].
52 P(x,y) | -timeinterval(x) | -timeinterval(y) | -beforeEq(beginof(y),beginof(x)) | -beforeEq(endof(x),endof(y)).  [clausify(5)].
53 -beforeEq(x,y) | -beforeEq(y,z) | beforeEq(x,z).  [clausify(9)].
54 -P(x,y) | -P(y,z) | P(x,z).  [clausify(10)].
55 -psl_interval(x,y) | timeinterval(y).  [clausify(11)].
56 -psl_interval(x,y) | beginof(y) = beginof(x).  [clausify(11)].
57 -psl_interval(x,y) | endof(y) = endof(x).  [clausify(11)].
59 -psl_interval(x,y) | psl_interval(x,f1(x)).  [copy(58),merge(c)].
61 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(x,f2(x,z,w)).  [resolve(43,a,44,a)].
62 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(z,f3(x,z,w)).  [resolve(43,a,45,a)].
63 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | beginof(f3(x,z,w)) = beginof(w).  [resolve(43,a,46,a)].
64 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | endof(f2(x,z,w)) = endof(w).  [resolve(43,a,47,a)].
65 P(x,x) | -timeinterval(x) | -beforeEq(beginof(x),beginof(x)) | -beforeEq(endof(x),endof(x)).  [factor(52,b,c)].
66 psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z).  [factor(60,a,f),merge(f),merge(g),merge(h)].
67 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f2(x,x,z)).  [factor(61,a,b)].
68 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f3(x,x,z)).  [factor(62,a,b)].
69 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | beginof(f3(x,x,z)) = beginof(z).  [factor(63,a,b)].
70 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | endof(f2(x,x,z)) = endof(z).  [factor(64,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

given #1 (I,wt=5): 48 -P(x,y) | timeinterval(x).  [clausify(5)].

given #2 (I,wt=5): 49 -P(x,y) | timeinterval(y).  [clausify(5)].

given #3 (I,wt=8): 50 -P(x,y) | beforeEq(beginof(y),beginof(x)).  [clausify(5)].

given #4 (I,wt=8): 51 -P(x,y) | beforeEq(endof(x),endof(y)).  [clausify(5)].

given #5 (I,wt=17): 52 P(x,y) | -timeinterval(x) | -timeinterval(y) | -beforeEq(beginof(y),beginof(x)) | -beforeEq(endof(x),endof(y)).  [clausify(5)].

given #6 (I,wt=9): 53 -beforeEq(x,y) | -beforeEq(y,z) | beforeEq(x,z).  [clausify(9)].

given #7 (I,wt=9): 54 -P(x,y) | -P(y,z) | P(x,z).  [clausify(10)].

given #8 (I,wt=5): 55 -psl_interval(x,y) | timeinterval(y).  [clausify(11)].

given #9 (I,wt=8): 56 -psl_interval(x,y) | beginof(y) = beginof(x).  [clausify(11)].

given #10 (I,wt=8): 57 -psl_interval(x,y) | endof(y) = endof(x).  [clausify(11)].

given #11 (I,wt=7): 59 -psl_interval(x,y) | psl_interval(x,f1(x)).  [copy(58),merge(c)].

given #12 (I,wt=22): 61 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(x,f2(x,z,w)).  [resolve(43,a,44,a)].

given #13 (I,wt=22): 62 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | psl_interval(z,f3(x,z,w)).  [resolve(43,a,45,a)].

given #14 (I,wt=24): 63 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | beginof(f3(x,z,w)) = beginof(w).  [resolve(43,a,46,a)].

given #15 (I,wt=24): 64 -psl_interval(x,y) | -psl_interval(z,u) | beginof(u) != beginof(w) | endof(y) != endof(w) | endof(f2(x,z,w)) = endof(w).  [resolve(43,a,47,a)].

given #16 (I,wt=15): 65 P(x,x) | -timeinterval(x) | -beforeEq(beginof(x),beginof(x)) | -beforeEq(endof(x),endof(x)).  [factor(52,b,c)].

given #17 (I,wt=18): 66 psl_interval(x,y) | -timeinterval(y) | beginof(y) != beginof(x) | endof(y) != endof(x) | -psl_interval(x,z).  [factor(60,a,f),merge(f),merge(g),merge(h)].

given #18 (I,wt=19): 67 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f2(x,x,z)).  [factor(61,a,b)].

given #19 (I,wt=19): 68 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | psl_interval(x,f3(x,x,z)).  [factor(62,a,b)].

given #20 (I,wt=21): 69 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | beginof(f3(x,x,z)) = beginof(z).  [factor(63,a,b)].

given #21 (I,wt=21): 70 -psl_interval(x,y) | beginof(y) != beginof(z) | endof(y) != endof(z) | endof(f2(x,x,z)) = endof(z).  [factor(64,a,b)].

============================== STATISTICS ============================

Given=21. Generated=27. Kept=22. proofs=0.
Usable=21. Sos=0. Demods=0. Limbo=0, Disabled=52. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=5. Back_subsumed=1.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=8. Nonunit_bsub_feature_tests=32.
Megabytes=0.13.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

Exiting with failure.

Process 8062 exit (sos_empty) Mon Jul 15 12:05:32 2013
