============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 8076 was started by cchui on stl1.mie.utoronto.ca,
Mon Jul 15 12:05:47 2013
The command was "mace4 -c -t 600 -s 600 -n 2 -N 20 -f test/p9/interval_with_endpoints.p9 test/p9/finite_sim_vc_end.p9 test/p9/lp_infinite_end.p9 test/p9/lp_ordering.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/interval_with_endpoints.p9


formulas(sos).
end_of_list.

% Reading from file test/p9/finite_sim_vc_end.p9


formulas(sos).
(all x (timepoint(x) <-> -timeinterval(x))).
(all i all p all q (p = beginof(i) & q = endof(i) -> i = between(p,q))).
(all i (timeinterval(i) -> timepoint(beginof(i)) & timepoint(endof(i)))).
(all x all y (before(x,y) -> timeinterval(between(x,y)))).
(all p all q (before(p,q) -> p = beginof(between(p,q)) & q = endof(between(p,q)))).
end_of_list.

% Reading from file test/p9/lp_infinite_end.p9


formulas(sos).
(exists t1 (timepoint(t1) & (all t2 (timepoint(t2) & t1 != t2 -> before(t2,t1))) & (all t3 (timepoint(t3) & t1 != t3 -> (exists t4 (before(t3,t4) & before(t4,t1))))))).
(exists t1 (timepoint(t1) & (all t2 (timepoint(t2) & t1 != t2 -> before(t1,t2))) & (all t3 (timepoint(t3) & t1 != t3 -> (exists t4 (before(t4,t3) & before(t1,t4))))))).
end_of_list.

% Reading from file test/p9/lp_ordering.p9


formulas(sos).
(all x all y all z (timepoint(x) & timepoint(y) & timepoint(z) & before(x,y) & before(y,z) -> before(x,z))).
(all x (timepoint(x) -> -before(x,x))).
(all x all y (timepoint(x) & timepoint(y) -> before(x,y) | before(y,x) | x = y)).
(all x all y (bbefore(x,y) <-> timepoint(x) & timepoint(y) & (before(x,y) | x = y))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 600).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (timepoint(x) <-> -timeinterval(x))) # label(non_clause).  [assumption].
2 (all i all p all q (p = beginof(i) & q = endof(i) -> i = between(p,q))) # label(non_clause).  [assumption].
3 (all i (timeinterval(i) -> timepoint(beginof(i)) & timepoint(endof(i)))) # label(non_clause).  [assumption].
4 (all x all y (before(x,y) -> timeinterval(between(x,y)))) # label(non_clause).  [assumption].
5 (all p all q (before(p,q) -> p = beginof(between(p,q)) & q = endof(between(p,q)))) # label(non_clause).  [assumption].
6 (exists t1 (timepoint(t1) & (all t2 (timepoint(t2) & t1 != t2 -> before(t2,t1))) & (all t3 (timepoint(t3) & t1 != t3 -> (exists t4 (before(t3,t4) & before(t4,t1))))))) # label(non_clause).  [assumption].
7 (exists t1 (timepoint(t1) & (all t2 (timepoint(t2) & t1 != t2 -> before(t1,t2))) & (all t3 (timepoint(t3) & t1 != t3 -> (exists t4 (before(t4,t3) & before(t1,t4))))))) # label(non_clause).  [assumption].
8 (all x all y all z (timepoint(x) & timepoint(y) & timepoint(z) & before(x,y) & before(y,z) -> before(x,z))) # label(non_clause).  [assumption].
9 (all x (timepoint(x) -> -before(x,x))) # label(non_clause).  [assumption].
10 (all x all y (timepoint(x) & timepoint(y) -> before(x,y) | before(y,x) | x = y)) # label(non_clause).  [assumption].
11 (all x all y (bbefore(x,y) <-> timepoint(x) & timepoint(y) & (before(x,y) | x = y))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-timepoint(x) | -timeinterval(x).
timepoint(x) | timeinterval(x).
beginof(x) != y | endof(x) != z | between(y,z) = x.
-timeinterval(x) | timepoint(beginof(x)).
-timeinterval(x) | timepoint(endof(x)).
-before(x,y) | timeinterval(between(x,y)).
-before(x,y) | beginof(between(x,y)) = x.
-before(x,y) | endof(between(x,y)) = y.
timepoint(c1).
-timepoint(x) | x = c1 | before(x,c1).
-timepoint(x) | x = c1 | before(x,f1(x)).
-timepoint(x) | x = c1 | before(f1(x),c1).
timepoint(c2).
-timepoint(x) | x = c2 | before(c2,x).
-timepoint(x) | x = c2 | before(f2(x),x).
-timepoint(x) | x = c2 | before(c2,f2(x)).
-timepoint(x) | -timepoint(y) | -timepoint(z) | -before(x,y) | -before(y,z) | before(x,z).
-timepoint(x) | -before(x,x).
-timepoint(x) | -timepoint(y) | before(x,y) | before(y,x) | y = x.
-bbefore(x,y) | timepoint(x).
-bbefore(x,y) | timepoint(y).
-bbefore(x,y) | before(x,y) | y = x.
bbefore(x,y) | -timepoint(x) | -timepoint(y) | -before(x,y).
bbefore(x,y) | -timepoint(x) | -timepoint(y) | y != x.
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(c1, [ 0 ]),

        function(c2, [ 0 ]),

        function(beginof(_), [ 0, 0 ]),

        function(endof(_), [ 1, 0 ]),

        function(f1(_), [ 0, 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(between(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(timeinterval(_), [ 0, 1 ]),

        relation(timepoint(_), [ 1, 0 ]),

        relation(bbefore(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(before(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=76, kept=70.
Selections=57, assignments=105, propagations=297, current_models=1.
Rewrite_terms=550, rewrite_bools=1701, indexes=120.
Rules_from_neg_clauses=6, cross_offs=6.

============================== end of statistics =====================

User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 8076 exit (max_models) Mon Jul 15 12:05:47 2013
The process finished Mon Jul 15 12:05:47 2013
