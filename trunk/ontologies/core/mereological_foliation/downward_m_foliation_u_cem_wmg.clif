
(cl-text downward_m_foliation_u_cem_wmg

(cl-comment "--------------------cem_wmg---------------")
(forall (x y)
        (if     (in x y)
                (in y x)))

(forall (x)
        (in x x))

(forall (x)
        (iff    (point x)
                (not (line x))))

(forall (x y)
        (if     (and    (in x y)
                        (point x)
                        (point y))
                (= x y)))

(forall (x y)
        (if     (and    (in x y)
                        (line x)
                        (line y))
                (= x y)))

(forall (x)
        (if     (line x)
                (exists (y)
                        (and    (point y)
                                (in y x)))))

(forall (x)
	(if	(point x)
        	(part x x)))

(forall (x y)
        (if     (and    (part x y)
                        (part y x))
                (= x y)))

(forall (x y z)
        (if     (and    (part x y)
                        (part y z))
                (part x z)))

(forall (x y)
	(if	(part x y)
		(and	(point x)
			(point y))))


(cl-comment "imports cm_mereology")

(cl-comment "imports em_mereology")

(cl-comment "imports mereology_def")

(cl-comment "Sum")
(forall (x y)
	(if	(underlaps x y)
		(exists (z)
			(forall (v)
				(iff	(overlaps v z)
					(or	(overlaps v x)
						(overlaps v y)))))))
(cl-comment "Product")
(forall (x y)
	(if	(overlaps x y)
		(exists (z)
			(forall (v)
				(iff	(ppart v z)
					(and	(ppart v x)
						(ppart v y)))))))



(cl-comment "Strong Supplementation Principle")
(forall (x y)
        (if     (not (part x y))
                (exists (z)
                        (and    (part z x)
                                (disjoint z y)))))


(forall (x)
	(part x x))

(forall (x y)
        (if     (and	(part x y)
			(part y x))
		(= x y)))

(forall (x y z)
        (if     (and    (part x y)
                        (part y z))
                (part x z)))


(forall (x y)
(iff	(ppart x y)
	(and	(part x y)
		(not (part y x)))))

(forall (x y)
(iff    (overlaps x y)
        (exists (z)
                (and    (part z x)
                        (part z y)))))

(forall (x y)
(iff    (disjoint x y)
        (not (overlaps x y))))

(forall (x y)
(iff    (underlaps x y)
        (exists (z)
                (and    (part x z)
                        (part y z)))))

(forall (x)
(iff	(atomic_part x)
	(forall (y)
		(if	(part y x)
			(= y x)))))

(cl-comment "--------------------downward_m_foliation-----------------")

(cl-comment "imports m_foliation_root")


(forall (x)
	(part x x))

(forall (x y)
        (if     (and	(part x y)
			(part y x))
		(= x y)))

(forall (x y z)
        (if     (and    (part x y)
                        (part y z))
                (part x z)))

(forall (x y)
(iff	(ppart x y)
	(and	(part x y)
		(not (part y x)))))

(forall (x y)
(iff    (overlaps x y)
        (exists (z)
                (and    (part z x)
                        (part z y)))))

(forall (x y)
(iff    (disjoint x y)
        (not (overlaps x y))))

(forall (x y)
(iff    (underlaps x y)
        (exists (z)
                (and    (part x z)
                        (part y z)))))

(forall (x)
(iff	(atomic_part x)
	(forall (y)
		(if	(part y x)
			(= y x)))))



(forall (x y)
        (if     (in x y)
                (in y x)))

(forall (x)
        (in x x))

(forall (x)
        (iff    (point x)
                (not (line x))))

(forall (x y)
        (if     (and    (in x y)
                        (point x)
                        (point y))
                (= x y)))

(forall (x y)
        (if     (and    (in x y)
                        (line x)
                        (line y))
                (= x y)))

(forall (x)
        (if     (line x)
                (exists (y)
                        (and    (point y)
                                (in y x)))))

(forall (x)
	(if	(point x)
        	(part x x)))

(forall (x y)
        (if     (and    (part x y)
                        (part y x))
                (= x y)))

(forall (x y z)
        (if     (and    (part x y)
                        (part y z))
                (part x z)))

(forall (x y)
	(if	(part x y)
		(and	(point x)
			(point y))))

(forall (x y)
	(if	(in x y)
		(in y x)))

(forall (x)
	(in x x))

(forall (p)
	(if	(point p)
		(not (line p))))

(forall (x y)
	(if	(and	(in x y)
			(point x)
			(point y))
		(= x y)))

(forall (x y)
	(if	(and	(in x y)
			(line x)
			(line y))
		(= x y)))

(forall (x y p)
	(if	(tpart x y p)
		(and	(line x)
			(line y)
			(point p))))

(forall (x y p)
	(if	(tpart x y p)
		(and	(in x p)
			(in y p))))

(forall (x p)
	(if	(line x)
		(tpart x x p)))

(forall (x y p)
        (if     (and	(tpart x y p)
			(tpart y x p))
		(= x y)))

(forall (x y z p)
        (if     (and    (tpart x y p)
                        (tpart y z p))
                (tpart x z p)))


(forall (x y p1 p2)
	(if	(and	(tpart x y p1)
			(part p2 p1))
		(tpart x y p2)))

)
