============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 12901 was started by cchui on stl1.mie.utoronto.ca,
Tue Jul 16 13:47:50 2013
The command was "prover9 -t 600 -f test/p9/dolce_temporary_parthood.p9 test/p9/dolce_temporary_parthood2ideal_cem_wmg.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0715_temporary_parthood2_12.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood2ideal_cem_wmg.p9


formulas(sos).
(all x all y (in2(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))).
(all x (line2(x) <-> PD(x) | Q(x))).
(all x (point2(x) <-> T(x))).
(all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x (AtP(x) -> atomic_part(x))).
(all x all y (DJ(x,y) -> disjoint(x,y))).
(all x all y (O(x,y) -> overlaps(x,y))).
(all x all y (PP(x,y) -> ppart(x,y))).
(all x all y (U(x,y) -> underlaps(x,y))).
(all x all y all z (SUM(z,x,y) -> sum(x,y,z))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
(all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))).
(all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))).
(all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))).
(all x all y all t (tDJ(x,y,t) <-> tdisjoint(x,y,t))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0715_temporary_parthood2_12.p9


formulas(goals).
(all x all y (in2(x,y) -> in2(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
5 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
6 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
7 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
10 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
11 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
12 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
13 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
14 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
15 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
16 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
17 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
18 (all x (line2(x) <-> PD(x) | Q(x))) # label(non_clause).  [assumption].
19 (all x (point2(x) <-> T(x))) # label(non_clause).  [assumption].
20 (all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
21 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
22 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
23 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
24 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
25 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
26 (all x (AtP(x) -> atomic_part(x))) # label(non_clause).  [assumption].
27 (all x all y (DJ(x,y) -> disjoint(x,y))) # label(non_clause).  [assumption].
28 (all x all y (O(x,y) -> overlaps(x,y))) # label(non_clause).  [assumption].
29 (all x all y (PP(x,y) -> ppart(x,y))) # label(non_clause).  [assumption].
30 (all x all y (U(x,y) -> underlaps(x,y))) # label(non_clause).  [assumption].
31 (all x all y all z (SUM(z,x,y) -> sum(x,y,z))) # label(non_clause).  [assumption].
32 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
33 (all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))) # label(non_clause).  [assumption].
34 (all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))) # label(non_clause).  [assumption].
36 (all x all y all t (tDJ(x,y,t) <-> tdisjoint(x,y,t))) # label(non_clause).  [assumption].
37 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
38 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
39 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
40 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
41 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
42 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
43 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
44 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
46 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
47 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
49 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
51 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
52 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
54 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
55 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
56 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
57 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
58 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
59 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
60 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
61 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
62 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
63 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
64 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
65 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
66 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
67 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
68 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
69 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
70 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
71 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
72 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
73 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
74 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
75 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
77 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
78 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
79 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
80 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
81 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
82 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
83 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
84 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
85 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
86 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
87 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
88 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
89 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
90 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
91 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
92 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
93 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
94 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
95 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
96 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
97 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
98 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
99 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
100 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
101 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
102 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
103 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
104 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating tDJ/3
105 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(12)].
106 -PRE(x,y) | -PRE(z,y) | tP(x,z,y) | tDJ(f2(x,z,y),z,y).  [clausify(9)].
Derived: -tO(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(105,a,106,d)].
107 tDJ(x,y,z) | tO(x,y,z).  [clausify(12)].
108 -tDJ(x,y,z) | tdisjoint(x,y,z).  [clausify(36)].
Derived: tdisjoint(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(108,a,106,d)].
Derived: tdisjoint(x,y,z) | tO(x,y,z).  [resolve(108,a,107,a)].
109 tDJ(x,y,z) | -tdisjoint(x,y,z).  [clausify(36)].
Derived: -tdisjoint(x,y,z) | -tO(x,y,z).  [resolve(109,a,105,a)].

Eliminating tU/3
110 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(13)].
111 -tU(x,y,z) | tP(x,f4(x,y,z),z).  [clausify(13)].
112 -tU(x,y,z) | tP(y,f4(x,y,z),z).  [clausify(13)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(110,a,111,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(110,a,112,a)].
113 -tU(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(15)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(113,a,110,a)].
114 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(114,a,110,a)].
115 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(115,a,110,a)].
116 -tU(x,y,z) | tunderlaps(x,y,z).  [clausify(35)].
Derived: tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(116,a,110,a)].
117 tU(x,y,z) | -tunderlaps(x,y,z).  [clausify(35)].
Derived: -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(117,a,111,a)].
Derived: -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(117,a,112,a)].
Derived: -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(117,a,113,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(117,a,114,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(117,a,115,a)].

Eliminating tAtP/2
118 tAtP(x,y) | tP(f5(x,y),x,y).  [clausify(14)].
119 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(14)].
Derived: tP(f5(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(118,a,119,a)].
120 tAtP(x,y) | f5(x,y) != x.  [clausify(14)].
Derived: f5(x,y) != x | -tP(z,x,y) | z = x.  [resolve(120,a,119,a)].

Eliminating line2/1
121 line2(x) | -PD(x).  [clausify(18)].
122 -line2(x) | PD(x) | Q(x).  [clausify(18)].
123 line2(x) | -Q(x).  [clausify(18)].

Eliminating point2/1
124 point2(x) | -T(x).  [clausify(19)].
125 -point2(x) | T(x).  [clausify(19)].

Eliminating part2/2
126 part2(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(20)].
127 -part2(x,y) | P(x,y).  [clausify(20)].
128 -part2(x,y) | T(x).  [clausify(20)].
129 -part2(x,y) | T(y).  [clausify(20)].

Eliminating L_1/1
130 L_1(x) | -ED(x).  [clausify(21)].
131 -L_1(x) | ED(x).  [clausify(21)].

Eliminating L_2/1
132 L_2(x) | -PD(x).  [clausify(22)].
133 -L_2(x) | PD(x).  [clausify(22)].

Eliminating L_3/1
134 L_3(x) | -Q(x).  [clausify(23)].
135 -L_3(x) | Q(x).  [clausify(23)].

Eliminating L_4/1
136 L_4(x) | -PED(x).  [clausify(24)].
137 -L_4(x) | PED(x).  [clausify(24)].

Eliminating L_5/1
138 L_5(x) | -NPED(x).  [clausify(25)].
139 -L_5(x) | NPED(x).  [clausify(25)].

Eliminating AtP/1
140 AtP(x) | -T(x) | T(f14(x)).  [clausify(52)].
141 -AtP(x) | atomic_part(x).  [clausify(26)].
142 -AtP(x) | T(x).  [clausify(52)].
143 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(52)].
Derived: -T(x) | T(f14(x)) | atomic_part(x).  [resolve(140,a,141,a)].
Derived: -T(x) | T(f14(x)) | -T(y) | -P(y,x) | y = x.  [resolve(140,a,143,a)].
144 AtP(x) | -T(x) | P(f14(x),x).  [clausify(52)].
Derived: -T(x) | P(f14(x),x) | atomic_part(x).  [resolve(144,a,141,a)].
Derived: -T(x) | P(f14(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(144,a,143,a)].
145 AtP(x) | -T(x) | f14(x) != x.  [clausify(52)].
Derived: -T(x) | f14(x) != x | atomic_part(x).  [resolve(145,a,141,a)].
Derived: -T(x) | f14(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(145,a,143,a)].

Eliminating DJ/2
146 -T(x) | -T(y) | P(x,y) | DJ(f11(x,y),y).  [clausify(47)].
147 -DJ(x,y) | disjoint(x,y).  [clausify(27)].
Derived: -T(x) | -T(y) | P(x,y) | disjoint(f11(x,y),y).  [resolve(146,d,147,a)].
148 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(50)].
Derived: -T(f11(x,y)) | -T(y) | -O(f11(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(148,c,146,d)].
149 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(50)].
Derived: -T(x) | -T(y) | O(x,y) | disjoint(x,y).  [resolve(149,c,147,a)].

Eliminating overlaps/2

Eliminating ppart/2

Eliminating U/2
150 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(51)].
151 -U(x,y) | underlaps(x,y).  [clausify(30)].
152 -T(x) | -T(y) | -U(x,y) | P(x,f13(x,y)).  [clausify(51)].
153 -T(x) | -T(y) | -U(x,y) | P(y,f13(x,y)).  [clausify(51)].
154 -T(x) | -T(y) | -U(x,y) | T(f13(x,y)).  [clausify(51)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | underlaps(x,y).  [resolve(150,c,151,a)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f13(x,y)).  [resolve(150,c,152,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f13(x,y)).  [resolve(150,c,153,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f13(x,y)).  [resolve(150,c,154,c)].
155 -T(x) | -T(y) | -U(x,y) | T(f15(x,y)).  [clausify(53)].
Derived: -T(x) | -T(y) | T(f15(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(155,c,150,c)].
156 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(156,c,150,c)].
157 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,x).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(157,c,150,c)].
158 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,y).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(158,c,150,c)].

Eliminating SUM/3
159 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f8(x,y,z)).  [clausify(32)].
160 -SUM(x,y,z) | sum(y,z,x).  [clausify(31)].
161 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(32)].
162 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(32)].
163 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | sum(x,y,z).  [resolve(159,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(159,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(159,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(159,d,163,d)].
164 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | sum(x,y,z).  [resolve(164,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(164,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(164,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(164,d,163,d)].
165 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | sum(x,y,z).  [resolve(165,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(165,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(165,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(165,d,163,d)].
166 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | sum(x,y,z).  [resolve(166,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(166,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(166,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(166,d,163,d)].
167 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(40)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | T(f8(y,z,u)).  [resolve(167,c,159,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | O(f8(y,z,u),u) | O(f8(y,z,u),y) | O(f8(y,z,u),z).  [resolve(167,c,164,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),y).  [resolve(167,c,165,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),z).  [resolve(167,c,166,d)].
168 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(55)].
169 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(55)].
170 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(55)].
171 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f17(x,y,z)).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | sum(x,y,z).  [resolve(171,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(171,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(171,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(171,d,163,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(171,d,167,c)].
172 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | sum(x,y,z).  [resolve(172,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(172,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(172,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(172,d,163,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(172,d,167,c)].
173 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | sum(x,y,z).  [resolve(173,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(173,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(173,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(173,d,163,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(173,d,167,c)].
174 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | sum(x,y,z).  [resolve(174,d,160,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(174,d,161,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(174,d,162,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(174,d,163,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(174,d,167,c)].

Eliminating tppart/3
175 tPP(x,y,z) | -tppart(x,y,z).  [clausify(33)].
176 -tPP(x,y,z) | tppart(x,y,z).  [clausify(33)].

Eliminating toverlaps/3
177 tO(x,y,z) | -toverlaps(x,y,z).  [clausify(34)].
178 -tO(x,y,z) | toverlaps(x,y,z).  [clausify(34)].

Eliminating PT/1
179 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(74)].
180 -ED(x) | PT(x).  [clausify(56)].
181 -PD(x) | PT(x).  [clausify(56)].
182 -Q(x) | PT(x).  [clausify(56)].
183 -AB(x) | PT(x).  [clausify(56)].
184 PT(x) | -ED(x).  [clausify(74)].
185 PT(x) | -PD(x).  [clausify(74)].
186 PT(x) | -Q(x).  [clausify(74)].
187 PT(x) | -AB(x).  [clausify(74)].

Eliminating AS/1
188 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(78)].
189 -AS(x) | ED(x).  [clausify(57)].
190 ED(x) | -AS(x).  [clausify(78)].
191 -PED(x) | -AS(x).  [clausify(79)].
192 -NPED(x) | -AS(x).  [clausify(80)].

Eliminating EV/1
193 -ACH(x) | EV(x).  [clausify(63)].
194 -EV(x) | PD(x).  [clausify(58)].
Derived: -ACH(x) | PD(x).  [resolve(193,b,194,a)].
195 -ACC(x) | EV(x).  [clausify(63)].
Derived: -ACC(x) | PD(x).  [resolve(195,b,194,a)].
196 -PD(x) | EV(x) | STV(x).  [clausify(81)].
197 PD(x) | -EV(x).  [clausify(81)].
198 -EV(x) | -STV(x).  [clausify(82)].
Derived: -STV(x) | -ACH(x).  [resolve(198,a,193,b)].
Derived: -STV(x) | -ACC(x).  [resolve(198,a,195,b)].
199 -EV(x) | ACH(x) | ACC(x).  [clausify(89)].
Derived: ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(199,a,196,b)].
200 EV(x) | -ACH(x).  [clausify(89)].
201 EV(x) | -ACC(x).  [clausify(89)].

Eliminating STV/1
202 -ST(x) | STV(x).  [clausify(64)].
203 -STV(x) | PD(x).  [clausify(58)].
Derived: -ST(x) | PD(x).  [resolve(202,b,203,a)].
204 -PRO(x) | STV(x).  [clausify(64)].
Derived: -PRO(x) | PD(x).  [resolve(204,b,203,a)].
205 PD(x) | -STV(x).  [clausify(81)].
206 -STV(x) | ST(x) | PRO(x).  [clausify(91)].
207 STV(x) | -ST(x).  [clausify(91)].
208 STV(x) | -PRO(x).  [clausify(91)].
209 -STV(x) | -ACH(x).  [resolve(198,a,193,b)].
Derived: -ACH(x) | -ST(x).  [resolve(209,a,202,b)].
Derived: -ACH(x) | -PRO(x).  [resolve(209,a,204,b)].
210 -STV(x) | -ACC(x).  [resolve(198,a,195,b)].
Derived: -ACC(x) | -ST(x).  [resolve(210,a,202,b)].
Derived: -ACC(x) | -PRO(x).  [resolve(210,a,204,b)].
211 ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(199,a,196,b)].
Derived: ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(211,d,206,a)].

Eliminating TQ/1
212 -TL(x) | TQ(x).  [clausify(65)].
213 -TQ(x) | Q(x).  [clausify(59)].
Derived: -TL(x) | Q(x).  [resolve(212,b,213,a)].
214 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(83)].
215 Q(x) | -TQ(x).  [clausify(83)].
216 -TQ(x) | -PQ(x).  [clausify(84)].
Derived: -PQ(x) | -TL(x).  [resolve(216,a,212,b)].
217 -TQ(x) | -AQ(x).  [clausify(84)].
Derived: -AQ(x) | -TL(x).  [resolve(217,a,212,b)].

Eliminating PQ/1
218 -SL(x) | PQ(x).  [clausify(66)].
219 -PQ(x) | Q(x).  [clausify(59)].
Derived: -SL(x) | Q(x).  [resolve(218,b,219,a)].
220 Q(x) | -PQ(x).  [clausify(83)].
221 -PQ(x) | -AQ(x).  [clausify(85)].
Derived: -AQ(x) | -SL(x).  [resolve(221,a,218,b)].
222 -PQ(x) | -TL(x).  [resolve(216,a,212,b)].
Derived: -TL(x) | -SL(x).  [resolve(222,a,218,b)].

Eliminating AQ/1

Eliminating R/1
223 -TR(x) | R(x).  [clausify(67)].
224 -R(x) | AB(x).  [clausify(60)].
Derived: -TR(x) | AB(x).  [resolve(223,b,224,a)].
225 -PR(x) | R(x).  [clausify(67)].
Derived: -PR(x) | AB(x).  [resolve(225,b,224,a)].
226 -AR(x) | R(x).  [clausify(67)].
Derived: -AR(x) | AB(x).  [resolve(226,b,224,a)].
227 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(93)].
228 R(x) | -TR(x).  [clausify(93)].
229 R(x) | -PR(x).  [clausify(93)].
230 R(x) | -AR(x).  [clausify(93)].

Eliminating M/1
231 -PED(x) | M(x) | F(x) | POB(x).  [clausify(86)].
232 -M(x) | PED(x).  [clausify(61)].
233 PED(x) | -M(x).  [clausify(86)].
234 -M(x) | -F(x).  [clausify(87)].
235 -M(x) | -POB(x).  [clausify(87)].

Eliminating F/1

Eliminating POB/1
236 -APO(x) | POB(x).  [clausify(68)].
237 -POB(x) | PED(x).  [clausify(61)].
Derived: -APO(x) | PED(x).  [resolve(236,b,237,a)].
238 -NAPO(x) | POB(x).  [clausify(68)].
Derived: -NAPO(x) | PED(x).  [resolve(238,b,237,a)].
239 PED(x) | -POB(x).  [clausify(86)].
240 -POB(x) | APO(x) | NAPO(x).  [clausify(96)].
241 POB(x) | -APO(x).  [clausify(96)].
242 POB(x) | -NAPO(x).  [clausify(96)].

Eliminating NPOB/1
243 -MOB(x) | NPOB(x).  [clausify(69)].
244 -NPOB(x) | NPED(x).  [clausify(62)].
Derived: -MOB(x) | NPED(x).  [resolve(243,b,244,a)].
245 -SOB(x) | NPOB(x).  [clausify(69)].
Derived: -SOB(x) | NPED(x).  [resolve(245,b,244,a)].
246 -NPOB(x) | MOB(x) | SOB(x).  [clausify(98)].
247 NPOB(x) | -MOB(x).  [clausify(98)].
248 NPOB(x) | -SOB(x).  [clausify(98)].

Eliminating TR/1
249 -TR(x) | -PR(x).  [clausify(94)].
250 -T(x) | TR(x).  [clausify(70)].
Derived: -PR(x) | -T(x).  [resolve(249,a,250,b)].
251 -TR(x) | -AR(x).  [clausify(94)].
Derived: -AR(x) | -T(x).  [resolve(251,a,250,b)].
252 -TR(x) | AB(x).  [resolve(223,b,224,a)].
Derived: AB(x) | -T(x).  [resolve(252,a,250,b)].

Eliminating S/1

Eliminating ASO/1
253 -SAG(x) | ASO(x).  [clausify(73)].
254 -ASO(x) | SOB(x).  [clausify(72)].
Derived: -SAG(x) | SOB(x).  [resolve(253,b,254,a)].
255 -SC(x) | ASO(x).  [clausify(73)].
Derived: -SC(x) | SOB(x).  [resolve(255,b,254,a)].
256 -SOB(x) | ASO(x) | NASO(x).  [clausify(100)].
257 SOB(x) | -ASO(x).  [clausify(100)].
258 -ASO(x) | -NASO(x).  [clausify(101)].
Derived: -NASO(x) | -SAG(x).  [resolve(258,a,253,b)].
Derived: -NASO(x) | -SC(x).  [resolve(258,a,255,b)].
259 -ASO(x) | SAG(x) | SC(x).  [clausify(102)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(259,a,256,b)].
260 ASO(x) | -SAG(x).  [clausify(102)].
261 ASO(x) | -SC(x).  [clausify(102)].

Eliminating NASO/1
262 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(259,a,256,b)].
263 -NASO(x) | SOB(x).  [clausify(72)].
264 SOB(x) | -NASO(x).  [clausify(100)].
265 -NASO(x) | -SAG(x).  [resolve(258,a,253,b)].
266 -NASO(x) | -SC(x).  [resolve(258,a,255,b)].

Eliminating AB/1
267 -PR(x) | AB(x).  [resolve(225,b,224,a)].
268 -ED(x) | -AB(x).  [clausify(75)].
269 -PD(x) | -AB(x).  [clausify(76)].
270 -Q(x) | -AB(x).  [clausify(77)].
Derived: -PR(x) | -ED(x).  [resolve(267,b,268,b)].
Derived: -PR(x) | -PD(x).  [resolve(267,b,269,b)].
Derived: -PR(x) | -Q(x).  [resolve(267,b,270,b)].
271 -AR(x) | AB(x).  [resolve(226,b,224,a)].
Derived: -AR(x) | -ED(x).  [resolve(271,b,268,b)].
Derived: -AR(x) | -PD(x).  [resolve(271,b,269,b)].
Derived: -AR(x) | -Q(x).  [resolve(271,b,270,b)].
272 AB(x) | -T(x).  [resolve(252,a,250,b)].
Derived: -T(x) | -ED(x).  [resolve(272,a,268,b)].
Derived: -T(x) | -PD(x).  [resolve(272,a,269,b)].
Derived: -T(x) | -Q(x).  [resolve(272,a,270,b)].

Eliminating ACH/1
273 ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(211,d,206,a)].
274 -ACH(x) | -ACC(x).  [clausify(90)].
275 -ACH(x) | PD(x).  [resolve(193,b,194,a)].
276 -ACH(x) | -ST(x).  [resolve(209,a,202,b)].
277 -ACH(x) | -PRO(x).  [resolve(209,a,204,b)].

Eliminating ST/1

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating tdisjoint/3
278 -tdisjoint(x,y,z) | -tO(x,y,z).  [resolve(109,a,105,a)].
279 tdisjoint(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(108,a,106,d)].
280 tdisjoint(x,y,z) | tO(x,y,z).  [resolve(108,a,107,a)].
Derived: -tO(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(278,a,279,a)].

Eliminating tunderlaps/3
281 -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(117,a,111,a)].
282 tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(116,a,110,a)].
Derived: tP(x,f4(x,y,z),z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(281,a,282,a)].
283 -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(117,a,112,a)].
Derived: tP(x,f4(y,x,z),z) | -tP(y,u,z) | -tP(x,u,z).  [resolve(283,a,282,a)].
284 -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(117,a,113,a)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(284,a,282,a)].
285 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(117,a,114,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(285,a,282,a)].
286 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(117,a,115,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(286,a,282,a)].

Eliminating atomic_part/1

Eliminating disjoint/2

Eliminating underlaps/2

Eliminating sum/3

Eliminating ACC/1

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating NAPO/1

Eliminating SOB/1
287 -SC(x) | SOB(x).  [resolve(255,b,254,a)].
288 -SOB(x) | NPED(x).  [resolve(245,b,244,a)].
Derived: -SC(x) | NPED(x).  [resolve(287,b,288,a)].

Eliminating AR/1

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, PD, Q, NPED, PED, O, PRE, P, in2, PP, tP, tO, tPP ]).
Function symbol precedence:  function_order([ c1, c2, f5, f10, f11, f12, f13, f15, f16, f9, f14, f2, f3, f4, f6, f7, f8, f17, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.23 seconds.

============================== PROOF =================================

% Proof 1 at 0.31 (+ 0.01) seconds.
% Length of proof is 56.
% Level of proof is 19.
% Maximum clause weight is 14.000.
% Given clauses 425.

17 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
60 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
67 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
70 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
76 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
77 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
104 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause) # label(goal).  [goal].
223 -TR(x) | R(x).  [clausify(67)].
224 -R(x) | AB(x).  [clausify(60)].
250 -T(x) | TR(x).  [clausify(70)].
252 -TR(x) | AB(x).  [resolve(223,b,224,a)].
269 -PD(x) | -AB(x).  [clausify(76)].
270 -Q(x) | -AB(x).  [clausify(77)].
272 AB(x) | -T(x).  [resolve(252,a,250,b)].
314 -in2(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(17)].
316 -in2(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(17)].
317 -in2(x,y) | T(y) | T(x) | y = x.  [clausify(17)].
318 -in2(x,y) | T(y) | PD(y) | Q(y).  [clausify(17)].
320 -in2(x,y) | PD(x) | Q(x) | T(x) | y = x.  [clausify(17)].
321 -in2(x,y) | PD(x) | Q(x) | PD(y) | Q(y) | y = x.  [clausify(17)].
322 in2(x,y) | -PRE(x,y) | -T(y) | -PD(x).  [clausify(17)].
323 in2(x,y) | -PRE(x,y) | -T(y) | -Q(x).  [clausify(17)].
324 in2(x,y) | -PRE(y,x) | -T(x) | -PD(y).  [clausify(17)].
325 in2(x,y) | -PRE(y,x) | -T(x) | -Q(y).  [clausify(17)].
361 in2(c1,c2).  [deny(104)].
362 -in2(c2,c1).  [deny(104)].
447 -T(x) | -PD(x).  [resolve(272,a,269,b)].
448 -T(x) | -Q(x).  [resolve(272,a,270,b)].
678 PD(c1) | Q(c1) | PD(c2) | Q(c2) | c2 = c1.  [resolve(361,a,321,a)].
679 PD(c1) | Q(c1) | T(c1) | c2 = c1.  [resolve(361,a,320,a)].
681 T(c2) | PD(c2) | Q(c2).  [resolve(361,a,318,a)].
682 T(c2) | T(c1) | c2 = c1.  [resolve(361,a,317,a)].
683 T(c2) | PRE(c2,c1) | c2 = c1.  [resolve(361,a,316,a)].
685 PRE(c1,c2) | T(c1) | c2 = c1.  [resolve(361,a,314,a)].
687 PD(c1) | Q(c1) | PD(c2) | c2 = c1 | -T(c2).  [resolve(678,d,448,b)].
727 T(c2) | c2 = c1 | -T(c1) | -Q(c2).  [resolve(683,b,323,b),unit_del(c,362)].
728 T(c2) | c2 = c1 | -T(c1) | -PD(c2).  [resolve(683,b,322,b),unit_del(c,362)].
760 T(c1) | c2 = c1 | -T(c2) | -Q(c1).  [resolve(685,a,325,b),unit_del(c,362)].
761 T(c1) | c2 = c1 | -T(c2) | -PD(c1).  [resolve(685,a,324,b),unit_del(c,362)].
892 T(c2) | c2 = c1 | -T(c1) | PD(c2).  [resolve(727,d,681,c),merge(d)].
924 T(c1) | c2 = c1 | -T(c2) | PD(c1).  [resolve(760,d,679,b),merge(e),merge(f)].
971 T(c1) | c2 = c1 | PD(c1).  [resolve(924,c,682,a),merge(d),merge(e)].
972 T(c1) | c2 = c1 | -T(c2).  [resolve(971,c,761,d),merge(c),merge(d)].
976 T(c1) | c2 = c1.  [resolve(972,c,682,a),merge(c),merge(d)].
977 c2 = c1 | T(c2) | PD(c2).  [resolve(976,a,892,c),merge(c)].
1050 c2 = c1 | T(c2) | -T(c1).  [resolve(977,c,728,d),merge(c),merge(d)].
1054 c2 = c1 | T(c2).  [resolve(1050,c,976,a),merge(c)].
1055 c2 = c1 | PD(c1) | Q(c1) | PD(c2).  [resolve(1054,b,687,e),merge(e)].
1229 c2 = c1 | PD(c1) | PD(c2) | -T(c1).  [resolve(1055,c,448,b)].
1302 c2 = c1 | PD(c1) | PD(c2).  [resolve(1229,d,976,a),merge(d)].
1303 c2 = c1 | PD(c1) | -T(c2).  [resolve(1302,c,447,b)].
1328 c2 = c1 | PD(c1).  [resolve(1303,c,1054,b),merge(c)].
1329 c2 = c1 | -T(c1).  [resolve(1328,b,447,b)].
1332 c2 = c1.  [resolve(1329,b,976,a),merge(b)].
1431 -in2(c1,c1).  [back_rewrite(362),rewrite([1332(1)])].
1432 $F.  [back_rewrite(361),rewrite([1332(2)]),unit_del(a,1431)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=425. Generated=3547. Kept=1111. proofs=1.
Usable=349. Sos=0. Demods=1. Limbo=100, Disabled=1033. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=2435. Back_subsumed=562.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=100. Back_unit_deleted=0.
Demod_attempts=2300. Demod_rewrites=656.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=10295. Nonunit_bsub_feature_tests=6907.
Megabytes=2.47.
User_CPU=0.31, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 12901 exit (max_proofs) Tue Jul 16 13:47:50 2013
