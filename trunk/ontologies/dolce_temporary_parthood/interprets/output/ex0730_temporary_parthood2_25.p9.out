============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23254 was started by cchui on stl-ws4.mie.utoronto.ca,
Tue Jul 30 21:30:13 2013
The command was "prover9 -t 120 -f test/p9/dolce_temporary_parthood.p9 test/p9/dolce_temporary_parthood2ideal_cem_downward_cem_foliation2.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0730_temporary_parthood2_25.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood2ideal_cem_downward_cem_foliation2.p9


formulas(sos).
(all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))).
(all x all y (in2(x,y) <-> PRE(x,y) & T(y) & NPED(x) | PRE(y,x) & T(x) & NPED(y) | x = y & (NPED(y) | T(y)))).
(all x (point2(x) <-> T(x))).
(all x (line2(x) <-> NPED(x))).
(all x all y all z (tpart2(x,y,z) <-> tP(x,y,z) & NPED(x) & NPED(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))).
(all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))).
(all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))).
(all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))).
(all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))).
(all x all y all t (tppart(x,y,t) <-> tPP(x,y,t))).
(all x all y all t (toverlaps(x,y,t) <-> tO(x,y,t))).
(all x all y all t (tunderlaps(x,y,t) <-> tU(x,y,t))).
(all x all y all t (tdisjoint(x,y,t) <-> -tO(x,y,t))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0730_temporary_parthood2_25.p9


formulas(goals).
(all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 120).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
5 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
6 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
7 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
10 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
11 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
12 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
13 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
14 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
15 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
16 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
17 (all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & NPED(x) | PRE(y,x) & T(x) & NPED(y) | x = y & (NPED(y) | T(y)))) # label(non_clause).  [assumption].
19 (all x (point2(x) <-> T(x))) # label(non_clause).  [assumption].
20 (all x (line2(x) <-> NPED(x))) # label(non_clause).  [assumption].
21 (all x all y all z (tpart2(x,y,z) <-> tP(x,y,z) & NPED(x) & NPED(y))) # label(non_clause).  [assumption].
22 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
23 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
24 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
25 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
26 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
27 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
28 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
29 (all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
30 (all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
31 (all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))) # label(non_clause).  [assumption].
32 (all x all y all t (tppart(x,y,t) <-> tPP(x,y,t))) # label(non_clause).  [assumption].
33 (all x all y all t (toverlaps(x,y,t) <-> tO(x,y,t))) # label(non_clause).  [assumption].
34 (all x all y all t (tunderlaps(x,y,t) <-> tU(x,y,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tdisjoint(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
36 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
37 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
38 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
39 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
40 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
41 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
42 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
43 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
44 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
45 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
46 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
47 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
49 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
51 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
52 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
54 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
55 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
56 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
57 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
58 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
59 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
60 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
61 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
62 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
63 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
64 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
65 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
66 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
67 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
68 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
69 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
70 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
71 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
72 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
73 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
74 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
75 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
77 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
78 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
79 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
80 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
81 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
82 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
83 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
84 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
85 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
86 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
87 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
88 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
89 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
90 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
91 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
92 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
93 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
94 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
95 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
96 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
97 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
98 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
99 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
100 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
101 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
102 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
103 (all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating tDJ/3
104 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(12)].
105 -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z) | tDJ(f2(x,y,z),y,z).  [clausify(9)].
Derived: -tO(f2(x,y,z),y,z) | -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(104,a,105,f)].
106 tDJ(x,y,z) | tO(x,y,z).  [clausify(12)].

Eliminating tU/3
107 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(13)].
108 -tU(x,y,z) | tP(x,f4(x,y,z),z).  [clausify(13)].
109 -tU(x,y,z) | tP(y,f4(x,y,z),z).  [clausify(13)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(107,a,108,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(107,a,109,a)].
110 -tU(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(15)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(110,a,107,a)].
111 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(111,a,107,a)].
112 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(112,a,107,a)].
113 -tunderlaps(x,y,z) | tU(x,y,z).  [clausify(34)].
Derived: -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(113,b,108,a)].
Derived: -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(113,b,109,a)].
Derived: -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(113,b,110,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(113,b,111,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(113,b,112,a)].
114 tunderlaps(x,y,z) | -tU(x,y,z).  [clausify(34)].
Derived: tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(114,b,107,a)].

Eliminating tAtP/2
115 tAtP(x,y) | tP(f5(x,y),x,y).  [clausify(14)].
116 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(14)].
Derived: tP(f5(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(115,a,116,a)].
117 tAtP(x,y) | f5(x,y) != x.  [clausify(14)].
Derived: f5(x,y) != x | -tP(z,x,y) | z = x.  [resolve(117,a,116,a)].

Eliminating part2/2
118 part2(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(17)].
119 -part2(x,y) | P(x,y).  [clausify(17)].
120 -part2(x,y) | T(x).  [clausify(17)].
121 -part2(x,y) | T(y).  [clausify(17)].
122 part2(c2,c1).  [deny(103)].
Derived: P(c2,c1).  [resolve(122,a,119,a)].
Derived: T(c2).  [resolve(122,a,120,a)].
Derived: T(c1).  [resolve(122,a,121,a)].

Eliminating point2/1
123 point2(x) | -T(x).  [clausify(19)].
124 -point2(x) | T(x).  [clausify(19)].
125 point2(c1).  [deny(103)].
126 point2(c2).  [deny(103)].

Eliminating line2/1
127 line2(x) | -NPED(x).  [clausify(20)].
128 -line2(x) | NPED(x).  [clausify(20)].
129 line2(c3).  [deny(103)].
Derived: NPED(c3).  [resolve(129,a,128,a)].

Eliminating tpart2/3
130 tpart2(x,y,z) | -tP(x,y,z) | -NPED(x) | -NPED(y).  [clausify(21)].
131 -tpart2(x,y,z) | tP(x,y,z).  [clausify(21)].
132 -tpart2(x,y,z) | NPED(x).  [clausify(21)].
133 -tpart2(x,y,z) | NPED(y).  [clausify(21)].

Eliminating L_1/1
134 L_1(x) | -ED(x).  [clausify(22)].
135 -L_1(x) | ED(x).  [clausify(22)].

Eliminating L_2/1
136 L_2(x) | -PD(x).  [clausify(23)].
137 -L_2(x) | PD(x).  [clausify(23)].

Eliminating L_3/1
138 L_3(x) | -Q(x).  [clausify(24)].
139 -L_3(x) | Q(x).  [clausify(24)].

Eliminating L_4/1
140 L_4(x) | -PED(x).  [clausify(25)].
141 -L_4(x) | PED(x).  [clausify(25)].

Eliminating L_5/1
142 L_5(x) | -NPED(x).  [clausify(26)].
143 -L_5(x) | NPED(x).  [clausify(26)].

Eliminating ppart/2
144 ppart(x,y) | -PP(x,y) | -T(x) | -T(y).  [clausify(27)].
145 -ppart(x,y) | PP(x,y).  [clausify(27)].
146 -ppart(x,y) | T(x).  [clausify(27)].
147 -ppart(x,y) | T(y).  [clausify(27)].

Eliminating overlaps/2
148 overlaps(x,y) | -O(x,y) | -T(x) | -T(y).  [clausify(28)].
149 -overlaps(x,y) | O(x,y).  [clausify(28)].
150 -overlaps(x,y) | T(x).  [clausify(28)].
151 -overlaps(x,y) | T(y).  [clausify(28)].

Eliminating underlaps/2
152 underlaps(x,y) | -U(x,y) | -T(x) | -T(y).  [clausify(29)].
153 -underlaps(x,y) | U(x,y).  [clausify(29)].
154 -underlaps(x,y) | T(x).  [clausify(29)].
155 -underlaps(x,y) | T(y).  [clausify(29)].

Eliminating disjoint/2
156 disjoint(x,y) | -DJ(x,y) | -T(x) | -T(y).  [clausify(30)].
157 -disjoint(x,y) | DJ(x,y).  [clausify(30)].
158 -disjoint(x,y) | T(x).  [clausify(30)].
159 -disjoint(x,y) | T(y).  [clausify(30)].

Eliminating sum/3
160 sum(x,y,z) | -SUM(z,x,y) | -T(z) | -T(x) | -T(y).  [clausify(31)].
161 -sum(x,y,z) | SUM(z,x,y).  [clausify(31)].
162 -sum(x,y,z) | T(z).  [clausify(31)].
163 -sum(x,y,z) | T(x).  [clausify(31)].
164 -sum(x,y,z) | T(y).  [clausify(31)].

Eliminating tppart/3
165 tppart(x,y,z) | -tPP(x,y,z).  [clausify(32)].
166 -tppart(x,y,z) | tPP(x,y,z).  [clausify(32)].

Eliminating toverlaps/3
167 toverlaps(x,y,z) | -tO(x,y,z).  [clausify(33)].
168 -toverlaps(x,y,z) | tO(x,y,z).  [clausify(33)].

Eliminating tdisjoint/3
169 tdisjoint(x,y,z) | tO(x,y,z).  [clausify(35)].
170 -tdisjoint(x,y,z) | -tO(x,y,z).  [clausify(35)].

Eliminating PD/1
171 -EV(x) | PD(x).  [clausify(57)].
172 -PD(x) | PRE(x,f8(x)).  [clausify(36)].
173 -PD(x) | PT(x).  [clausify(55)].
Derived: -EV(x) | PRE(x,f8(x)).  [resolve(171,b,172,a)].
Derived: -EV(x) | PT(x).  [resolve(171,b,173,a)].
174 -STV(x) | PD(x).  [clausify(57)].
Derived: -STV(x) | PRE(x,f8(x)).  [resolve(174,b,172,a)].
Derived: -STV(x) | PT(x).  [resolve(174,b,173,a)].
175 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(73)].
Derived: -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f8(x)).  [resolve(175,c,172,a)].
176 PT(x) | -PD(x).  [clausify(73)].
177 -ED(x) | -PD(x).  [clausify(74)].
Derived: -ED(x) | -EV(x).  [resolve(177,b,171,b)].
Derived: -ED(x) | -STV(x).  [resolve(177,b,174,b)].
178 -PD(x) | -Q(x).  [clausify(75)].
Derived: -Q(x) | -EV(x).  [resolve(178,a,171,b)].
Derived: -Q(x) | -STV(x).  [resolve(178,a,174,b)].
179 -PD(x) | -AB(x).  [clausify(75)].
Derived: -AB(x) | -EV(x).  [resolve(179,a,171,b)].
Derived: -AB(x) | -STV(x).  [resolve(179,a,174,b)].
180 -PD(x) | EV(x) | STV(x).  [clausify(80)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(180,a,175,c)].
181 PD(x) | -EV(x).  [clausify(80)].
182 PD(x) | -STV(x).  [clausify(80)].

Eliminating Q/1
183 -TQ(x) | Q(x).  [clausify(58)].
184 -Q(x) | PRE(x,f8(x)).  [clausify(36)].
185 -Q(x) | PT(x).  [clausify(55)].
Derived: -TQ(x) | PRE(x,f8(x)).  [resolve(183,b,184,a)].
Derived: -TQ(x) | PT(x).  [resolve(183,b,185,a)].
186 -PQ(x) | Q(x).  [clausify(58)].
Derived: -PQ(x) | PRE(x,f8(x)).  [resolve(186,b,184,a)].
Derived: -PQ(x) | PT(x).  [resolve(186,b,185,a)].
187 -AQ(x) | Q(x).  [clausify(58)].
Derived: -AQ(x) | PRE(x,f8(x)).  [resolve(187,b,184,a)].
Derived: -AQ(x) | PT(x).  [resolve(187,b,185,a)].
188 PT(x) | -Q(x).  [clausify(73)].
189 -ED(x) | -Q(x).  [clausify(74)].
Derived: -ED(x) | -TQ(x).  [resolve(189,b,183,b)].
Derived: -ED(x) | -PQ(x).  [resolve(189,b,186,b)].
Derived: -ED(x) | -AQ(x).  [resolve(189,b,187,b)].
190 -Q(x) | -AB(x).  [clausify(76)].
Derived: -AB(x) | -TQ(x).  [resolve(190,a,183,b)].
Derived: -AB(x) | -PQ(x).  [resolve(190,a,186,b)].
Derived: -AB(x) | -AQ(x).  [resolve(190,a,187,b)].
191 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(82)].
192 Q(x) | -TQ(x).  [clausify(82)].
193 Q(x) | -PQ(x).  [clausify(82)].
194 Q(x) | -AQ(x).  [clausify(82)].
195 -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f8(x)).  [resolve(175,c,172,a)].
Derived: -PT(x) | ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)).  [resolve(195,c,184,a)].
196 -Q(x) | -EV(x).  [resolve(178,a,171,b)].
Derived: -EV(x) | -TQ(x).  [resolve(196,a,183,b)].
Derived: -EV(x) | -PQ(x).  [resolve(196,a,186,b)].
Derived: -EV(x) | -AQ(x).  [resolve(196,a,187,b)].
197 -Q(x) | -STV(x).  [resolve(178,a,174,b)].
Derived: -STV(x) | -TQ(x).  [resolve(197,a,183,b)].
Derived: -STV(x) | -PQ(x).  [resolve(197,a,186,b)].
Derived: -STV(x) | -AQ(x).  [resolve(197,a,187,b)].
198 EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(180,a,175,c)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(198,e,191,a)].

Eliminating SUM/3
199 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f16(x,y,z)).  [clausify(54)].
200 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(39)].
201 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(54)].
202 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(54)].
203 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(199,d,200,c)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(199,d,201,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(199,d,202,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(199,d,203,d)].
204 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(204,d,200,c)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(204,d,201,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(204,d,202,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(204,d,203,d)].
205 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(205,d,200,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(205,d,201,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(205,d,202,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(205,d,203,d)].
206 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(206,d,200,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(206,d,201,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(206,d,202,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(206,d,203,d)].

Eliminating DJ/2
207 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(49)].
208 -T(x) | -T(y) | P(x,y) | DJ(f10(x,y),y).  [clausify(46)].
Derived: -T(f10(x,y)) | -T(y) | -O(f10(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(207,c,208,d)].
209 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(49)].

Eliminating U/2
210 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(50)].
211 -T(x) | -T(y) | -U(x,y) | P(x,f12(x,y)).  [clausify(50)].
212 -T(x) | -T(y) | -U(x,y) | P(y,f12(x,y)).  [clausify(50)].
213 -T(x) | -T(y) | -U(x,y) | T(f12(x,y)).  [clausify(50)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f12(x,y)).  [resolve(210,c,211,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f12(x,y)).  [resolve(210,c,212,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f12(x,y)).  [resolve(210,c,213,c)].
214 -T(x) | -T(y) | -U(x,y) | T(f14(x,y)).  [clausify(52)].
Derived: -T(x) | -T(y) | T(f14(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(214,c,210,c)].
215 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f14(x,y)) | O(z,x) | O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f14(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(215,c,210,c)].
216 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f14(x,y)) | -O(z,x).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f14(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(216,c,210,c)].
217 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f14(x,y)) | -O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f14(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(217,c,210,c)].

Eliminating AtP/1
218 AtP(x) | -T(x) | T(f13(x)).  [clausify(51)].
219 -AtP(x) | T(x).  [clausify(51)].
220 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(51)].
Derived: -T(x) | T(f13(x)) | -T(y) | -P(y,x) | y = x.  [resolve(218,a,220,a)].
221 AtP(x) | -T(x) | P(f13(x),x).  [clausify(51)].
Derived: -T(x) | P(f13(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(221,a,220,a)].
222 AtP(x) | -T(x) | f13(x) != x.  [clausify(51)].
Derived: -T(x) | f13(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(222,a,220,a)].

Eliminating PT/1
223 -PT(x) | ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)).  [resolve(195,c,184,a)].
224 -ED(x) | PT(x).  [clausify(55)].
225 -AB(x) | PT(x).  [clausify(55)].
226 PT(x) | -ED(x).  [clausify(73)].
227 PT(x) | -AB(x).  [clausify(73)].
228 -EV(x) | PT(x).  [resolve(171,b,173,a)].
229 -STV(x) | PT(x).  [resolve(174,b,173,a)].
230 -TQ(x) | PT(x).  [resolve(183,b,185,a)].
231 -PQ(x) | PT(x).  [resolve(186,b,185,a)].
232 -AQ(x) | PT(x).  [resolve(187,b,185,a)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x).  [resolve(223,a,228,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x).  [resolve(223,a,229,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x).  [resolve(223,a,230,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x).  [resolve(223,a,231,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x).  [resolve(223,a,232,b)].
233 EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(198,e,191,a)].

Eliminating AS/1
234 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(77)].
235 -AS(x) | ED(x).  [clausify(56)].
236 ED(x) | -AS(x).  [clausify(77)].
237 -PED(x) | -AS(x).  [clausify(78)].
238 -NPED(x) | -AS(x).  [clausify(79)].

Eliminating R/1
239 -TR(x) | R(x).  [clausify(66)].
240 -R(x) | AB(x).  [clausify(59)].
Derived: -TR(x) | AB(x).  [resolve(239,b,240,a)].
241 -PR(x) | R(x).  [clausify(66)].
Derived: -PR(x) | AB(x).  [resolve(241,b,240,a)].
242 -AR(x) | R(x).  [clausify(66)].
Derived: -AR(x) | AB(x).  [resolve(242,b,240,a)].
243 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(92)].
244 R(x) | -TR(x).  [clausify(92)].
245 R(x) | -PR(x).  [clausify(92)].
246 R(x) | -AR(x).  [clausify(92)].

Eliminating M/1
247 -PED(x) | M(x) | F(x) | POB(x).  [clausify(85)].
248 -M(x) | PED(x).  [clausify(60)].
249 PED(x) | -M(x).  [clausify(85)].
250 -M(x) | -F(x).  [clausify(86)].
251 -M(x) | -POB(x).  [clausify(86)].

Eliminating F/1

Eliminating POB/1
252 -APO(x) | POB(x).  [clausify(67)].
253 -POB(x) | PED(x).  [clausify(60)].
Derived: -APO(x) | PED(x).  [resolve(252,b,253,a)].
254 -NAPO(x) | POB(x).  [clausify(67)].
Derived: -NAPO(x) | PED(x).  [resolve(254,b,253,a)].
255 PED(x) | -POB(x).  [clausify(85)].
256 -POB(x) | APO(x) | NAPO(x).  [clausify(95)].
257 POB(x) | -APO(x).  [clausify(95)].
258 POB(x) | -NAPO(x).  [clausify(95)].

Eliminating NPOB/1
259 -MOB(x) | NPOB(x).  [clausify(68)].
260 -NPOB(x) | NPED(x).  [clausify(61)].
Derived: -MOB(x) | NPED(x).  [resolve(259,b,260,a)].
261 -SOB(x) | NPOB(x).  [clausify(68)].
Derived: -SOB(x) | NPED(x).  [resolve(261,b,260,a)].
262 -NPOB(x) | MOB(x) | SOB(x).  [clausify(97)].
263 NPOB(x) | -MOB(x).  [clausify(97)].
264 NPOB(x) | -SOB(x).  [clausify(97)].

Eliminating ACH/1
265 -EV(x) | ACH(x) | ACC(x).  [clausify(88)].
266 -ACH(x) | EV(x).  [clausify(62)].
267 EV(x) | -ACH(x).  [clausify(88)].
268 -ACH(x) | -ACC(x).  [clausify(89)].

Eliminating ACC/1

Eliminating ST/1
269 -STV(x) | ST(x) | PRO(x).  [clausify(90)].
270 -ST(x) | STV(x).  [clausify(63)].
271 STV(x) | -ST(x).  [clausify(90)].
272 -ST(x) | -PRO(x).  [clausify(91)].

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating TR/1
273 -TR(x) | -PR(x).  [clausify(93)].
274 -T(x) | TR(x).  [clausify(69)].
Derived: -PR(x) | -T(x).  [resolve(273,a,274,b)].
275 -TR(x) | -AR(x).  [clausify(93)].
Derived: -AR(x) | -T(x).  [resolve(275,a,274,b)].
276 -TR(x) | AB(x).  [resolve(239,b,240,a)].
Derived: AB(x) | -T(x).  [resolve(276,a,274,b)].

Eliminating S/1

Eliminating ASO/1
277 -SAG(x) | ASO(x).  [clausify(72)].
278 -ASO(x) | SOB(x).  [clausify(71)].
Derived: -SAG(x) | SOB(x).  [resolve(277,b,278,a)].
279 -SC(x) | ASO(x).  [clausify(72)].
Derived: -SC(x) | SOB(x).  [resolve(279,b,278,a)].
280 -SOB(x) | ASO(x) | NASO(x).  [clausify(99)].
281 SOB(x) | -ASO(x).  [clausify(99)].
282 -ASO(x) | -NASO(x).  [clausify(100)].
Derived: -NASO(x) | -SAG(x).  [resolve(282,a,277,b)].
Derived: -NASO(x) | -SC(x).  [resolve(282,a,279,b)].
283 -ASO(x) | SAG(x) | SC(x).  [clausify(101)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(283,a,280,b)].
284 ASO(x) | -SAG(x).  [clausify(101)].
285 ASO(x) | -SC(x).  [clausify(101)].

Eliminating NASO/1
286 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(283,a,280,b)].
287 -NASO(x) | SOB(x).  [clausify(71)].
288 SOB(x) | -NASO(x).  [clausify(99)].
289 -NASO(x) | -SAG(x).  [resolve(282,a,277,b)].
290 -NASO(x) | -SC(x).  [resolve(282,a,279,b)].

Eliminating AB/1
291 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x).  [resolve(223,a,228,b)].
292 -ED(x) | -AB(x).  [clausify(74)].
293 -AB(x) | -EV(x).  [resolve(179,a,171,b)].
294 -AB(x) | -STV(x).  [resolve(179,a,174,b)].
295 -AB(x) | -TQ(x).  [resolve(190,a,183,b)].
296 -AB(x) | -PQ(x).  [resolve(190,a,186,b)].
297 -AB(x) | -AQ(x).  [resolve(190,a,187,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x) | -EV(x).  [resolve(291,b,293,a)].
298 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x).  [resolve(223,a,229,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x) | -STV(x).  [resolve(298,b,294,a)].
299 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x).  [resolve(223,a,230,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x) | -TQ(x).  [resolve(299,b,295,a)].
300 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x).  [resolve(223,a,231,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x) | -PQ(x).  [resolve(300,b,296,a)].
301 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x).  [resolve(223,a,232,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x) | -AQ(x).  [resolve(301,b,297,a)].
302 -PR(x) | AB(x).  [resolve(241,b,240,a)].
Derived: -PR(x) | -ED(x).  [resolve(302,b,292,b)].
Derived: -PR(x) | -EV(x).  [resolve(302,b,293,a)].
Derived: -PR(x) | -STV(x).  [resolve(302,b,294,a)].
Derived: -PR(x) | -TQ(x).  [resolve(302,b,295,a)].
Derived: -PR(x) | -PQ(x).  [resolve(302,b,296,a)].
Derived: -PR(x) | -AQ(x).  [resolve(302,b,297,a)].
303 -AR(x) | AB(x).  [resolve(242,b,240,a)].
Derived: -AR(x) | -ED(x).  [resolve(303,b,292,b)].
Derived: -AR(x) | -EV(x).  [resolve(303,b,293,a)].
Derived: -AR(x) | -STV(x).  [resolve(303,b,294,a)].
Derived: -AR(x) | -TQ(x).  [resolve(303,b,295,a)].
Derived: -AR(x) | -PQ(x).  [resolve(303,b,296,a)].
Derived: -AR(x) | -AQ(x).  [resolve(303,b,297,a)].
304 AB(x) | -T(x).  [resolve(276,a,274,b)].
Derived: -T(x) | -ED(x).  [resolve(304,a,292,b)].
Derived: -T(x) | -EV(x).  [resolve(304,a,293,a)].
Derived: -T(x) | -STV(x).  [resolve(304,a,294,a)].
Derived: -T(x) | -TQ(x).  [resolve(304,a,295,a)].
Derived: -T(x) | -PQ(x).  [resolve(304,a,296,a)].
Derived: -T(x) | -AQ(x).  [resolve(304,a,297,a)].

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating tunderlaps/3
305 tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(114,b,107,a)].
306 -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(113,b,108,a)].
307 -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(113,b,109,a)].
308 -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(113,b,110,a)].
309 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(113,b,111,a)].
310 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(113,b,112,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(305,a,306,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(305,a,307,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | -tO(w,f6(x,u,z),z) | tO(w,x,z) | tO(w,u,z).  [resolve(305,a,308,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tO(w,f6(x,u,z),z) | -tO(w,x,z).  [resolve(305,a,309,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tO(w,f6(x,u,z),z) | -tO(w,u,z).  [resolve(305,a,310,a)].

Eliminating NAPO/1

Eliminating SOB/1
311 -SC(x) | SOB(x).  [resolve(279,b,278,a)].
312 -SOB(x) | NPED(x).  [resolve(261,b,260,a)].
Derived: -SC(x) | NPED(x).  [resolve(311,b,312,a)].

Eliminating AR/1

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, NPED, PED, AQ, EV, PQ, STV, TQ, O, PRE, P, in2, PP, tP, tO, tPP ]).
Function symbol precedence:  function_order([ c1, c2, c3, f5, f9, f10, f11, f12, f14, f15, f8, f13, f2, f3, f4, f6, f7, f16, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.16 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 36 (0.00 of 0.52 sec).

============================== PROOF =================================

% Proof 1 at 0.59 (+ 0.02) seconds.
% Length of proof is 41.
% Level of proof is 9.
% Maximum clause weight is 11.000.
% Given clauses 558.

17 (all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & NPED(x) | PRE(y,x) & T(x) & NPED(y) | x = y & (NPED(y) | T(y)))) # label(non_clause).  [assumption].
20 (all x (line2(x) <-> NPED(x))) # label(non_clause).  [assumption].
37 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
56 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
59 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
66 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
69 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
74 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
103 (all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))) # label(non_clause) # label(goal).  [goal].
119 -part2(x,y) | P(x,y).  [clausify(17)].
120 -part2(x,y) | T(x).  [clausify(17)].
121 -part2(x,y) | T(y).  [clausify(17)].
122 part2(c2,c1).  [deny(103)].
128 -line2(x) | NPED(x).  [clausify(20)].
129 line2(c3).  [deny(103)].
239 -TR(x) | R(x).  [clausify(66)].
240 -R(x) | AB(x).  [clausify(59)].
274 -T(x) | TR(x).  [clausify(69)].
276 -TR(x) | AB(x).  [resolve(239,b,240,a)].
292 -ED(x) | -AB(x).  [clausify(74)].
304 AB(x) | -T(x).  [resolve(276,a,274,b)].
340 -in2(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(18)].
347 in2(x,y) | -PRE(y,x) | -T(x) | -NPED(y).  [clausify(18)].
351 -PRE(x,y) | -P(z,y) | PRE(x,z).  [clausify(37)].
375 -NPED(x) | ED(x).  [clausify(56)].
381 in2(c1,c3).  [deny(103)].
382 -in2(c2,c3).  [deny(103)].
391 P(c2,c1).  [resolve(122,a,119,a)].
392 T(c2).  [resolve(122,a,120,a)].
393 T(c1).  [resolve(122,a,121,a)].
394 NPED(c3).  [resolve(129,a,128,a)].
463 -T(x) | -ED(x).  [resolve(304,a,292,b)].
619 T(c3) | PRE(c3,c1) | c3 = c1.  [resolve(381,a,340,a)].
627 -PRE(x,c1) | PRE(x,c2).  [resolve(391,a,351,b)].
648 ED(c3).  [resolve(394,a,375,a)].
729 -T(c3).  [resolve(648,a,463,b)].
731 PRE(c3,c1) | c3 = c1.  [back_unit_del(619),unit_del(a,729)].
3728 c3 = c1 | PRE(c3,c2).  [resolve(731,a,627,a)].
7146 c3 = c1.  [resolve(3728,b,347,b),unit_del(b,382),unit_del(c,392),unit_del(d,394)].
7368 $F.  [back_rewrite(729),rewrite([7146(1)]),unit_del(a,393)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=558. Generated=11427. Kept=7030. proofs=1.
Usable=541. Sos=5773. Demods=1. Limbo=222, Disabled=880. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=4396. Back_subsumed=152.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=253. Back_unit_deleted=89.
Demod_attempts=4714. Demod_rewrites=1018.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=95088. Nonunit_bsub_feature_tests=41564.
Megabytes=11.77.
User_CPU=0.59, System_CPU=0.02, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23254 exit (max_proofs) Tue Jul 30 21:30:15 2013
