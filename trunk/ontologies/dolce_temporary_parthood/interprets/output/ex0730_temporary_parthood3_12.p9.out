============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23450 was started by cchui on stl-ws4.mie.utoronto.ca,
Tue Jul 30 21:38:06 2013
The command was "prover9 -t 120 -f test/p9/dolce_temporary_parthood.p9 test/p9/dolce_temporary_parthood2ideal_cem_wmg3.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0730_temporary_parthood3_12.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood2ideal_cem_wmg3.p9


formulas(sos).
(all x all y (in3(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))).
(all x (line3(x) <-> PD(x) | Q(x))).
(all x (point3(x) <-> T(x))).
(all x all y (part3(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x (AtP(x) <-> atomic_part(x))).
(all x all y (DJ(x,y) <-> disjoint(x,y))).
(all x all y (O(x,y) <-> overlaps(x,y))).
(all x all y (PP(x,y) <-> ppart(x,y))).
(all x all y (U(x,y) <-> underlaps(x,y))).
(all x all y all z (SUM(z,x,y) <-> sum(x,y,z))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
(all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))).
(all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))).
(all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0730_temporary_parthood3_12.p9


formulas(goals).
(all x all y (in3(x,y) -> in3(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 120).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
5 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
6 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
7 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
10 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
11 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
12 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
13 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
14 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
15 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
16 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
17 (all x all y (in3(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
18 (all x (line3(x) <-> PD(x) | Q(x))) # label(non_clause).  [assumption].
19 (all x (point3(x) <-> T(x))) # label(non_clause).  [assumption].
20 (all x all y (part3(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
21 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
22 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
23 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
24 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
25 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
26 (all x (AtP(x) <-> atomic_part(x))) # label(non_clause).  [assumption].
27 (all x all y (DJ(x,y) <-> disjoint(x,y))) # label(non_clause).  [assumption].
28 (all x all y (O(x,y) <-> overlaps(x,y))) # label(non_clause).  [assumption].
29 (all x all y (PP(x,y) <-> ppart(x,y))) # label(non_clause).  [assumption].
30 (all x all y (U(x,y) <-> underlaps(x,y))) # label(non_clause).  [assumption].
31 (all x all y all z (SUM(z,x,y) <-> sum(x,y,z))) # label(non_clause).  [assumption].
32 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
33 (all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))) # label(non_clause).  [assumption].
34 (all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))) # label(non_clause).  [assumption].
36 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
37 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
38 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
39 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
40 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
41 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
42 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
43 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
44 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
45 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
46 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
47 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
49 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
51 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
52 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
54 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
55 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
56 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
57 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
58 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
59 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
60 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
61 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
62 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
63 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
64 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
65 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
66 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
67 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
68 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
69 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
70 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
71 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
72 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
73 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
74 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
75 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
77 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
78 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
79 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
80 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
81 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
82 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
83 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
84 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
85 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
86 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
87 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
88 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
89 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
90 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
91 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
92 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
93 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
94 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
95 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
96 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
97 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
98 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
99 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
100 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
101 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
102 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
103 (all x all y (in3(x,y) -> in3(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating tDJ/3
104 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(12)].
105 -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z) | tDJ(f2(x,y,z),y,z).  [clausify(9)].
Derived: -tO(f2(x,y,z),y,z) | -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(104,a,105,f)].
106 tDJ(x,y,z) | tO(x,y,z).  [clausify(12)].

Eliminating tU/3
107 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(13)].
108 -tU(x,y,z) | tP(x,f4(x,y,z),z).  [clausify(13)].
109 -tU(x,y,z) | tP(y,f4(x,y,z),z).  [clausify(13)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(107,a,108,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(107,a,109,a)].
110 -tU(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(15)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(110,a,107,a)].
111 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(111,a,107,a)].
112 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(112,a,107,a)].
113 -tU(x,y,z) | tunderlaps(x,y,z).  [clausify(35)].
Derived: tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(113,a,107,a)].
114 tU(x,y,z) | -tunderlaps(x,y,z).  [clausify(35)].
Derived: -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(114,a,108,a)].
Derived: -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(114,a,109,a)].
Derived: -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(114,a,110,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(114,a,111,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(114,a,112,a)].

Eliminating tAtP/2
115 tAtP(x,y) | tP(f5(x,y),x,y).  [clausify(14)].
116 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(14)].
Derived: tP(f5(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(115,a,116,a)].
117 tAtP(x,y) | f5(x,y) != x.  [clausify(14)].
Derived: f5(x,y) != x | -tP(z,x,y) | z = x.  [resolve(117,a,116,a)].

Eliminating line3/1
118 line3(x) | -PD(x).  [clausify(18)].
119 -line3(x) | PD(x) | Q(x).  [clausify(18)].
120 line3(x) | -Q(x).  [clausify(18)].

Eliminating point3/1
121 point3(x) | -T(x).  [clausify(19)].
122 -point3(x) | T(x).  [clausify(19)].

Eliminating part3/2
123 part3(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(20)].
124 -part3(x,y) | P(x,y).  [clausify(20)].
125 -part3(x,y) | T(x).  [clausify(20)].
126 -part3(x,y) | T(y).  [clausify(20)].

Eliminating L_1/1
127 L_1(x) | -ED(x).  [clausify(21)].
128 -L_1(x) | ED(x).  [clausify(21)].

Eliminating L_2/1
129 L_2(x) | -PD(x).  [clausify(22)].
130 -L_2(x) | PD(x).  [clausify(22)].

Eliminating L_3/1
131 L_3(x) | -Q(x).  [clausify(23)].
132 -L_3(x) | Q(x).  [clausify(23)].

Eliminating L_4/1
133 L_4(x) | -PED(x).  [clausify(24)].
134 -L_4(x) | PED(x).  [clausify(24)].

Eliminating L_5/1
135 L_5(x) | -NPED(x).  [clausify(25)].
136 -L_5(x) | NPED(x).  [clausify(25)].

Eliminating AtP/1
137 AtP(x) | -atomic_part(x).  [clausify(26)].
138 -AtP(x) | atomic_part(x).  [clausify(26)].
139 -AtP(x) | T(x).  [clausify(51)].
Derived: T(x) | -atomic_part(x).  [resolve(139,a,137,a)].
140 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(51)].
Derived: -T(x) | -P(x,y) | x = y | -atomic_part(y).  [resolve(140,a,137,a)].
141 AtP(x) | -T(x) | T(f14(x)).  [clausify(51)].
Derived: -T(x) | T(f14(x)) | atomic_part(x).  [resolve(141,a,138,a)].
Derived: -T(x) | T(f14(x)) | -T(y) | -P(y,x) | y = x.  [resolve(141,a,140,a)].
142 AtP(x) | -T(x) | P(f14(x),x).  [clausify(51)].
Derived: -T(x) | P(f14(x),x) | atomic_part(x).  [resolve(142,a,138,a)].
Derived: -T(x) | P(f14(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(142,a,140,a)].
143 AtP(x) | -T(x) | f14(x) != x.  [clausify(51)].
Derived: -T(x) | f14(x) != x | atomic_part(x).  [resolve(143,a,138,a)].
Derived: -T(x) | f14(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(143,a,140,a)].

Eliminating DJ/2
144 DJ(x,y) | -disjoint(x,y).  [clausify(27)].
145 -DJ(x,y) | disjoint(x,y).  [clausify(27)].
146 -T(x) | -T(y) | P(x,y) | DJ(f11(x,y),y).  [clausify(46)].
Derived: -T(x) | -T(y) | P(x,y) | disjoint(f11(x,y),y).  [resolve(146,d,145,a)].
147 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(49)].
Derived: -T(x) | -T(y) | -O(x,y) | -disjoint(x,y).  [resolve(147,c,144,a)].
Derived: -T(f11(x,y)) | -T(y) | -O(f11(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(147,c,146,d)].
148 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(49)].
Derived: -T(x) | -T(y) | O(x,y) | disjoint(x,y).  [resolve(148,c,145,a)].

Eliminating overlaps/2
149 O(x,y) | -overlaps(x,y).  [clausify(28)].
150 -O(x,y) | overlaps(x,y).  [clausify(28)].

Eliminating ppart/2
151 PP(x,y) | -ppart(x,y).  [clausify(29)].
152 -PP(x,y) | ppart(x,y).  [clausify(29)].

Eliminating U/2
153 U(x,y) | -underlaps(x,y).  [clausify(30)].
154 -U(x,y) | underlaps(x,y).  [clausify(30)].
155 -T(x) | -T(y) | -U(x,y) | P(x,f13(x,y)).  [clausify(50)].
Derived: -T(x) | -T(y) | P(x,f13(x,y)) | -underlaps(x,y).  [resolve(155,c,153,a)].
156 -T(x) | -T(y) | -U(x,y) | P(y,f13(x,y)).  [clausify(50)].
Derived: -T(x) | -T(y) | P(y,f13(x,y)) | -underlaps(x,y).  [resolve(156,c,153,a)].
157 -T(x) | -T(y) | -U(x,y) | T(f13(x,y)).  [clausify(50)].
Derived: -T(x) | -T(y) | T(f13(x,y)) | -underlaps(x,y).  [resolve(157,c,153,a)].
158 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(50)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | underlaps(x,y).  [resolve(158,c,154,a)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f13(x,y)).  [resolve(158,c,155,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f13(x,y)).  [resolve(158,c,156,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f13(x,y)).  [resolve(158,c,157,c)].
159 -T(x) | -T(y) | -U(x,y) | T(f15(x,y)).  [clausify(52)].
Derived: -T(x) | -T(y) | T(f15(x,y)) | -underlaps(x,y).  [resolve(159,c,153,a)].
Derived: -T(x) | -T(y) | T(f15(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(159,c,158,c)].
160 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y) | -underlaps(x,y).  [resolve(160,c,153,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(160,c,158,c)].
161 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,x).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,x) | -underlaps(x,y).  [resolve(161,c,153,a)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(161,c,158,c)].
162 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,y) | -underlaps(x,y).  [resolve(162,c,153,a)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(162,c,158,c)].

Eliminating SUM/3
163 SUM(x,y,z) | -sum(y,z,x).  [clausify(31)].
164 -SUM(x,y,z) | sum(y,z,x).  [clausify(31)].
165 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -sum(x,y,z).  [resolve(165,d,163,a)].
166 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -sum(x,y,z).  [resolve(166,d,163,a)].
167 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -sum(x,y,z).  [resolve(167,d,163,a)].
168 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f8(x,y,z)).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | sum(x,y,z).  [resolve(168,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(168,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(168,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(168,d,167,d)].
169 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | sum(x,y,z).  [resolve(169,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(169,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(169,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(169,d,167,d)].
170 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | sum(x,y,z).  [resolve(170,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(170,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(170,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(170,d,167,d)].
171 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | sum(x,y,z).  [resolve(171,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(171,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(171,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(171,d,167,d)].
172 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(39)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -sum(y,z,u).  [resolve(172,c,163,a)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | T(f8(y,z,u)).  [resolve(172,c,168,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | O(f8(y,z,u),u) | O(f8(y,z,u),y) | O(f8(y,z,u),z).  [resolve(172,c,169,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),y).  [resolve(172,c,170,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),z).  [resolve(172,c,171,d)].
173 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(54)].
174 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(54)].
175 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(54)].
176 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f17(x,y,z)).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | sum(x,y,z).  [resolve(176,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(176,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(176,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(176,d,167,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(176,d,172,c)].
177 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | sum(x,y,z).  [resolve(177,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(177,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(177,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(177,d,167,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(177,d,172,c)].
178 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | sum(x,y,z).  [resolve(178,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(178,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(178,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(178,d,167,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(178,d,172,c)].
179 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | sum(x,y,z).  [resolve(179,d,164,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(179,d,165,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(179,d,166,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(179,d,167,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(179,d,172,c)].

Eliminating tppart/3
180 tPP(x,y,z) | -tppart(x,y,z).  [clausify(33)].
181 -tPP(x,y,z) | tppart(x,y,z).  [clausify(33)].

Eliminating toverlaps/3
182 tO(x,y,z) | -toverlaps(x,y,z).  [clausify(34)].
183 -tO(x,y,z) | toverlaps(x,y,z).  [clausify(34)].

Eliminating PT/1
184 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(73)].
185 -ED(x) | PT(x).  [clausify(55)].
186 -PD(x) | PT(x).  [clausify(55)].
187 -Q(x) | PT(x).  [clausify(55)].
188 -AB(x) | PT(x).  [clausify(55)].
189 PT(x) | -ED(x).  [clausify(73)].
190 PT(x) | -PD(x).  [clausify(73)].
191 PT(x) | -Q(x).  [clausify(73)].
192 PT(x) | -AB(x).  [clausify(73)].

Eliminating AS/1
193 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(77)].
194 -AS(x) | ED(x).  [clausify(56)].
195 ED(x) | -AS(x).  [clausify(77)].
196 -PED(x) | -AS(x).  [clausify(78)].
197 -NPED(x) | -AS(x).  [clausify(79)].

Eliminating EV/1
198 -ACH(x) | EV(x).  [clausify(62)].
199 -EV(x) | PD(x).  [clausify(57)].
Derived: -ACH(x) | PD(x).  [resolve(198,b,199,a)].
200 -ACC(x) | EV(x).  [clausify(62)].
Derived: -ACC(x) | PD(x).  [resolve(200,b,199,a)].
201 -PD(x) | EV(x) | STV(x).  [clausify(80)].
202 PD(x) | -EV(x).  [clausify(80)].
203 -EV(x) | -STV(x).  [clausify(81)].
Derived: -STV(x) | -ACH(x).  [resolve(203,a,198,b)].
Derived: -STV(x) | -ACC(x).  [resolve(203,a,200,b)].
204 -EV(x) | ACH(x) | ACC(x).  [clausify(88)].
Derived: ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(204,a,201,b)].
205 EV(x) | -ACH(x).  [clausify(88)].
206 EV(x) | -ACC(x).  [clausify(88)].

Eliminating STV/1
207 -ST(x) | STV(x).  [clausify(63)].
208 -STV(x) | PD(x).  [clausify(57)].
Derived: -ST(x) | PD(x).  [resolve(207,b,208,a)].
209 -PRO(x) | STV(x).  [clausify(63)].
Derived: -PRO(x) | PD(x).  [resolve(209,b,208,a)].
210 PD(x) | -STV(x).  [clausify(80)].
211 -STV(x) | ST(x) | PRO(x).  [clausify(90)].
212 STV(x) | -ST(x).  [clausify(90)].
213 STV(x) | -PRO(x).  [clausify(90)].
214 -STV(x) | -ACH(x).  [resolve(203,a,198,b)].
Derived: -ACH(x) | -ST(x).  [resolve(214,a,207,b)].
Derived: -ACH(x) | -PRO(x).  [resolve(214,a,209,b)].
215 -STV(x) | -ACC(x).  [resolve(203,a,200,b)].
Derived: -ACC(x) | -ST(x).  [resolve(215,a,207,b)].
Derived: -ACC(x) | -PRO(x).  [resolve(215,a,209,b)].
216 ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(204,a,201,b)].
Derived: ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(216,d,211,a)].

Eliminating TQ/1
217 -TL(x) | TQ(x).  [clausify(64)].
218 -TQ(x) | Q(x).  [clausify(58)].
Derived: -TL(x) | Q(x).  [resolve(217,b,218,a)].
219 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(82)].
220 Q(x) | -TQ(x).  [clausify(82)].
221 -TQ(x) | -PQ(x).  [clausify(83)].
Derived: -PQ(x) | -TL(x).  [resolve(221,a,217,b)].
222 -TQ(x) | -AQ(x).  [clausify(83)].
Derived: -AQ(x) | -TL(x).  [resolve(222,a,217,b)].

Eliminating PQ/1
223 -SL(x) | PQ(x).  [clausify(65)].
224 -PQ(x) | Q(x).  [clausify(58)].
Derived: -SL(x) | Q(x).  [resolve(223,b,224,a)].
225 Q(x) | -PQ(x).  [clausify(82)].
226 -PQ(x) | -AQ(x).  [clausify(84)].
Derived: -AQ(x) | -SL(x).  [resolve(226,a,223,b)].
227 -PQ(x) | -TL(x).  [resolve(221,a,217,b)].
Derived: -TL(x) | -SL(x).  [resolve(227,a,223,b)].

Eliminating AQ/1

Eliminating R/1
228 -TR(x) | R(x).  [clausify(66)].
229 -R(x) | AB(x).  [clausify(59)].
Derived: -TR(x) | AB(x).  [resolve(228,b,229,a)].
230 -PR(x) | R(x).  [clausify(66)].
Derived: -PR(x) | AB(x).  [resolve(230,b,229,a)].
231 -AR(x) | R(x).  [clausify(66)].
Derived: -AR(x) | AB(x).  [resolve(231,b,229,a)].
232 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(92)].
233 R(x) | -TR(x).  [clausify(92)].
234 R(x) | -PR(x).  [clausify(92)].
235 R(x) | -AR(x).  [clausify(92)].

Eliminating M/1
236 -PED(x) | M(x) | F(x) | POB(x).  [clausify(85)].
237 -M(x) | PED(x).  [clausify(60)].
238 PED(x) | -M(x).  [clausify(85)].
239 -M(x) | -F(x).  [clausify(86)].
240 -M(x) | -POB(x).  [clausify(86)].

Eliminating F/1

Eliminating POB/1
241 -APO(x) | POB(x).  [clausify(67)].
242 -POB(x) | PED(x).  [clausify(60)].
Derived: -APO(x) | PED(x).  [resolve(241,b,242,a)].
243 -NAPO(x) | POB(x).  [clausify(67)].
Derived: -NAPO(x) | PED(x).  [resolve(243,b,242,a)].
244 PED(x) | -POB(x).  [clausify(85)].
245 -POB(x) | APO(x) | NAPO(x).  [clausify(95)].
246 POB(x) | -APO(x).  [clausify(95)].
247 POB(x) | -NAPO(x).  [clausify(95)].

Eliminating NPOB/1
248 -MOB(x) | NPOB(x).  [clausify(68)].
249 -NPOB(x) | NPED(x).  [clausify(61)].
Derived: -MOB(x) | NPED(x).  [resolve(248,b,249,a)].
250 -SOB(x) | NPOB(x).  [clausify(68)].
Derived: -SOB(x) | NPED(x).  [resolve(250,b,249,a)].
251 -NPOB(x) | MOB(x) | SOB(x).  [clausify(97)].
252 NPOB(x) | -MOB(x).  [clausify(97)].
253 NPOB(x) | -SOB(x).  [clausify(97)].

Eliminating TR/1
254 -TR(x) | -PR(x).  [clausify(93)].
255 -T(x) | TR(x).  [clausify(69)].
Derived: -PR(x) | -T(x).  [resolve(254,a,255,b)].
256 -TR(x) | -AR(x).  [clausify(93)].
Derived: -AR(x) | -T(x).  [resolve(256,a,255,b)].
257 -TR(x) | AB(x).  [resolve(228,b,229,a)].
Derived: AB(x) | -T(x).  [resolve(257,a,255,b)].

Eliminating S/1

Eliminating ASO/1
258 -SAG(x) | ASO(x).  [clausify(72)].
259 -ASO(x) | SOB(x).  [clausify(71)].
Derived: -SAG(x) | SOB(x).  [resolve(258,b,259,a)].
260 -SC(x) | ASO(x).  [clausify(72)].
Derived: -SC(x) | SOB(x).  [resolve(260,b,259,a)].
261 -SOB(x) | ASO(x) | NASO(x).  [clausify(99)].
262 SOB(x) | -ASO(x).  [clausify(99)].
263 -ASO(x) | -NASO(x).  [clausify(100)].
Derived: -NASO(x) | -SAG(x).  [resolve(263,a,258,b)].
Derived: -NASO(x) | -SC(x).  [resolve(263,a,260,b)].
264 -ASO(x) | SAG(x) | SC(x).  [clausify(101)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(264,a,261,b)].
265 ASO(x) | -SAG(x).  [clausify(101)].
266 ASO(x) | -SC(x).  [clausify(101)].

Eliminating NASO/1
267 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(264,a,261,b)].
268 -NASO(x) | SOB(x).  [clausify(71)].
269 SOB(x) | -NASO(x).  [clausify(99)].
270 -NASO(x) | -SAG(x).  [resolve(263,a,258,b)].
271 -NASO(x) | -SC(x).  [resolve(263,a,260,b)].

Eliminating AB/1
272 -PR(x) | AB(x).  [resolve(230,b,229,a)].
273 -ED(x) | -AB(x).  [clausify(74)].
274 -PD(x) | -AB(x).  [clausify(75)].
275 -Q(x) | -AB(x).  [clausify(76)].
Derived: -PR(x) | -ED(x).  [resolve(272,b,273,b)].
Derived: -PR(x) | -PD(x).  [resolve(272,b,274,b)].
Derived: -PR(x) | -Q(x).  [resolve(272,b,275,b)].
276 -AR(x) | AB(x).  [resolve(231,b,229,a)].
Derived: -AR(x) | -ED(x).  [resolve(276,b,273,b)].
Derived: -AR(x) | -PD(x).  [resolve(276,b,274,b)].
Derived: -AR(x) | -Q(x).  [resolve(276,b,275,b)].
277 AB(x) | -T(x).  [resolve(257,a,255,b)].
Derived: -T(x) | -ED(x).  [resolve(277,a,273,b)].
Derived: -T(x) | -PD(x).  [resolve(277,a,274,b)].
Derived: -T(x) | -Q(x).  [resolve(277,a,275,b)].

Eliminating ACH/1
278 ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(216,d,211,a)].
279 -ACH(x) | -ACC(x).  [clausify(89)].
280 -ACH(x) | PD(x).  [resolve(198,b,199,a)].
281 -ACH(x) | -ST(x).  [resolve(214,a,207,b)].
282 -ACH(x) | -PRO(x).  [resolve(214,a,209,b)].

Eliminating ST/1

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating tunderlaps/3
283 -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(114,a,108,a)].
284 tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(113,a,107,a)].
Derived: tP(x,f4(x,y,z),z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(283,a,284,a)].
285 -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(114,a,109,a)].
Derived: tP(x,f4(y,x,z),z) | -tP(y,u,z) | -tP(x,u,z).  [resolve(285,a,284,a)].
286 -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(114,a,110,a)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(286,a,284,a)].
287 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(114,a,111,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(287,a,284,a)].
288 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(114,a,112,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(288,a,284,a)].

Eliminating atomic_part/1
289 -T(x) | T(f14(x)) | atomic_part(x).  [resolve(141,a,138,a)].
290 T(x) | -atomic_part(x).  [resolve(139,a,137,a)].
291 -T(x) | -P(x,y) | x = y | -atomic_part(y).  [resolve(140,a,137,a)].
292 -T(x) | P(f14(x),x) | atomic_part(x).  [resolve(142,a,138,a)].
293 -T(x) | f14(x) != x | atomic_part(x).  [resolve(143,a,138,a)].

Eliminating disjoint/2
294 -T(x) | -T(y) | -O(x,y) | -disjoint(x,y).  [resolve(147,c,144,a)].
295 -T(x) | -T(y) | P(x,y) | disjoint(f11(x,y),y).  [resolve(146,d,145,a)].
296 -T(x) | -T(y) | O(x,y) | disjoint(x,y).  [resolve(148,c,145,a)].

Eliminating underlaps/2
297 -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | underlaps(x,y).  [resolve(158,c,154,a)].
298 -T(x) | -T(y) | P(x,f13(x,y)) | -underlaps(x,y).  [resolve(155,c,153,a)].
299 -T(x) | -T(y) | P(y,f13(x,y)) | -underlaps(x,y).  [resolve(156,c,153,a)].
300 -T(x) | -T(y) | T(f13(x,y)) | -underlaps(x,y).  [resolve(157,c,153,a)].
301 -T(x) | -T(y) | T(f15(x,y)) | -underlaps(x,y).  [resolve(159,c,153,a)].
302 -T(x) | -T(y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y) | -underlaps(x,y).  [resolve(160,c,153,a)].
303 -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,x) | -underlaps(x,y).  [resolve(161,c,153,a)].
304 -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,y) | -underlaps(x,y).  [resolve(162,c,153,a)].

Eliminating sum/3
305 -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | sum(x,y,z).  [resolve(168,d,164,a)].
306 -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y) | -sum(x,y,z).  [resolve(165,d,163,a)].
307 -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x) | -sum(x,y,z).  [resolve(166,d,163,a)].
308 -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y) | -sum(x,y,z).  [resolve(167,d,163,a)].
309 -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | sum(x,y,z).  [resolve(169,d,164,a)].
310 -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | sum(x,y,z).  [resolve(170,d,164,a)].
311 -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | sum(x,y,z).  [resolve(171,d,164,a)].
312 -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -sum(y,z,u).  [resolve(172,c,163,a)].
313 -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | sum(x,y,z).  [resolve(176,d,164,a)].
314 -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | sum(x,y,z).  [resolve(177,d,164,a)].
315 -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | sum(x,y,z).  [resolve(178,d,164,a)].
316 -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | sum(x,y,z).  [resolve(179,d,164,a)].

Eliminating ACC/1

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating NAPO/1

Eliminating SOB/1
317 -SC(x) | SOB(x).  [resolve(260,b,259,a)].
318 -SOB(x) | NPED(x).  [resolve(250,b,249,a)].
Derived: -SC(x) | NPED(x).  [resolve(317,b,318,a)].

Eliminating AR/1

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, PD, Q, NPED, PED, O, PRE, P, in3, PP, tP, tO, tPP ]).
Function symbol precedence:  function_order([ c1, c2, f5, f10, f11, f12, f13, f15, f16, f9, f14, f2, f3, f4, f6, f7, f8, f17, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.33 seconds.

============================== PROOF =================================

% Proof 1 at 0.43 (+ 0.01) seconds.
% Length of proof is 56.
% Level of proof is 19.
% Maximum clause weight is 14.000.
% Given clauses 423.

17 (all x all y (in3(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
59 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
66 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
69 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
75 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
103 (all x all y (in3(x,y) -> in3(y,x))) # label(non_clause) # label(goal).  [goal].
228 -TR(x) | R(x).  [clausify(66)].
229 -R(x) | AB(x).  [clausify(59)].
255 -T(x) | TR(x).  [clausify(69)].
257 -TR(x) | AB(x).  [resolve(228,b,229,a)].
274 -PD(x) | -AB(x).  [clausify(75)].
275 -Q(x) | -AB(x).  [clausify(76)].
277 AB(x) | -T(x).  [resolve(257,a,255,b)].
344 -in3(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(17)].
346 -in3(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(17)].
347 -in3(x,y) | T(y) | T(x) | y = x.  [clausify(17)].
348 -in3(x,y) | T(y) | PD(y) | Q(y).  [clausify(17)].
350 -in3(x,y) | PD(x) | Q(x) | T(x) | y = x.  [clausify(17)].
351 -in3(x,y) | PD(x) | Q(x) | PD(y) | Q(y) | y = x.  [clausify(17)].
352 in3(x,y) | -PRE(x,y) | -T(y) | -PD(x).  [clausify(17)].
353 in3(x,y) | -PRE(x,y) | -T(y) | -Q(x).  [clausify(17)].
354 in3(x,y) | -PRE(y,x) | -T(x) | -PD(y).  [clausify(17)].
355 in3(x,y) | -PRE(y,x) | -T(x) | -Q(y).  [clausify(17)].
391 in3(c1,c2).  [deny(103)].
392 -in3(c2,c1).  [deny(103)].
477 -T(x) | -PD(x).  [resolve(277,a,274,b)].
478 -T(x) | -Q(x).  [resolve(277,a,275,b)].
706 PD(c1) | Q(c1) | PD(c2) | Q(c2) | c2 = c1.  [resolve(391,a,351,a)].
707 PD(c1) | Q(c1) | T(c1) | c2 = c1.  [resolve(391,a,350,a)].
709 T(c2) | PD(c2) | Q(c2).  [resolve(391,a,348,a)].
710 T(c2) | T(c1) | c2 = c1.  [resolve(391,a,347,a)].
711 T(c2) | PRE(c2,c1) | c2 = c1.  [resolve(391,a,346,a)].
713 PRE(c1,c2) | T(c1) | c2 = c1.  [resolve(391,a,344,a)].
715 PD(c1) | Q(c1) | PD(c2) | c2 = c1 | -T(c2).  [resolve(706,d,478,b)].
754 T(c2) | c2 = c1 | -T(c1) | -Q(c2).  [resolve(711,b,353,b),unit_del(c,392)].
755 T(c2) | c2 = c1 | -T(c1) | -PD(c2).  [resolve(711,b,352,b),unit_del(c,392)].
786 T(c1) | c2 = c1 | -T(c2) | -Q(c1).  [resolve(713,a,355,b),unit_del(c,392)].
787 T(c1) | c2 = c1 | -T(c2) | -PD(c1).  [resolve(713,a,354,b),unit_del(c,392)].
913 T(c2) | c2 = c1 | -T(c1) | PD(c2).  [resolve(754,d,709,c),merge(d)].
944 T(c1) | c2 = c1 | -T(c2) | PD(c1).  [resolve(786,d,707,b),merge(e),merge(f)].
990 T(c1) | c2 = c1 | PD(c1).  [resolve(944,c,710,a),merge(d),merge(e)].
991 T(c1) | c2 = c1 | -T(c2).  [resolve(990,c,787,d),merge(c),merge(d)].
995 T(c1) | c2 = c1.  [resolve(991,c,710,a),merge(c),merge(d)].
996 c2 = c1 | T(c2) | PD(c2).  [resolve(995,a,913,c),merge(c)].
1066 c2 = c1 | T(c2) | -T(c1).  [resolve(996,c,755,d),merge(c),merge(d)].
1070 c2 = c1 | T(c2).  [resolve(1066,c,995,a),merge(c)].
1071 c2 = c1 | PD(c1) | Q(c1) | PD(c2).  [resolve(1070,b,715,e),merge(e)].
1245 c2 = c1 | PD(c1) | PD(c2) | -T(c1).  [resolve(1071,c,478,b)].
1318 c2 = c1 | PD(c1) | PD(c2).  [resolve(1245,d,995,a),merge(d)].
1319 c2 = c1 | PD(c1) | -T(c2).  [resolve(1318,c,477,b)].
1322 c2 = c1 | PD(c1).  [resolve(1319,c,1070,b),merge(c)].
1323 c2 = c1 | -T(c1).  [resolve(1322,b,477,b)].
1326 c2 = c1.  [resolve(1323,b,995,a),merge(b)].
1400 -in3(c1,c1).  [back_rewrite(392),rewrite([1326(1)])].
1401 $F.  [back_rewrite(391),rewrite([1326(2)]),unit_del(a,1400)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=423. Generated=3504. Kept=1050. proofs=1.
Usable=347. Sos=0. Demods=1. Limbo=75, Disabled=1013. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=2453. Back_subsumed=553.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=75. Back_unit_deleted=0.
Demod_attempts=1522. Demod_rewrites=388.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=10262. Nonunit_bsub_feature_tests=6863.
Megabytes=2.39.
User_CPU=0.43, System_CPU=0.01, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23450 exit (max_proofs) Tue Jul 30 21:38:08 2013
