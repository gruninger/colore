============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 21769 was started by cchui on stl-ws4.mie.utoronto.ca,
Mon Jul 22 02:34:32 2013
The command was "prover9 -t 600 -f test/p9/dolce_temporary_parthood.p9 test/p9/dolce_temporary_parthood2ideal_cem_wmg.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0722_temporary_parthood2_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood2ideal_cem_wmg.p9


formulas(sos).
(all x all y (in2(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))).
(all x (line2(x) <-> PD(x) | Q(x))).
(all x (point2(x) <-> T(x))).
(all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x (AtP(x) -> atomic_part(x))).
(all x all y (DJ(x,y) -> disjoint(x,y))).
(all x all y (O(x,y) -> overlaps(x,y))).
(all x all y (PP(x,y) -> ppart(x,y))).
(all x all y (U(x,y) -> underlaps(x,y))).
(all x all y all z (SUM(z,x,y) -> sum(x,y,z))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
(all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))).
(all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))).
(all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))).
(all x all y all t (tDJ(x,y,t) <-> tdisjoint(x,y,t))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0722_temporary_parthood2_2.p9


formulas(goals).
(all x (L_1(x) -> -L_3(x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
5 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
6 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
7 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
10 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
11 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
12 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
13 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
14 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
15 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
16 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
17 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & (PD(x) | Q(x)) | PRE(y,x) & T(x) & (PD(y) | Q(y)) | x = y & (PD(y) | Q(y) | T(y)))) # label(non_clause).  [assumption].
18 (all x (line2(x) <-> PD(x) | Q(x))) # label(non_clause).  [assumption].
19 (all x (point2(x) <-> T(x))) # label(non_clause).  [assumption].
20 (all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
21 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
22 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
23 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
24 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
25 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
26 (all x (AtP(x) -> atomic_part(x))) # label(non_clause).  [assumption].
27 (all x all y (DJ(x,y) -> disjoint(x,y))) # label(non_clause).  [assumption].
28 (all x all y (O(x,y) -> overlaps(x,y))) # label(non_clause).  [assumption].
29 (all x all y (PP(x,y) -> ppart(x,y))) # label(non_clause).  [assumption].
30 (all x all y (U(x,y) -> underlaps(x,y))) # label(non_clause).  [assumption].
31 (all x all y all z (SUM(z,x,y) -> sum(x,y,z))) # label(non_clause).  [assumption].
32 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
33 (all x all y all t (tPP(x,y,t) <-> tppart(x,y,t))) # label(non_clause).  [assumption].
34 (all x all y all t (tO(x,y,t) <-> toverlaps(x,y,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tU(x,y,t) <-> tunderlaps(x,y,t))) # label(non_clause).  [assumption].
36 (all x all y all t (tDJ(x,y,t) <-> tdisjoint(x,y,t))) # label(non_clause).  [assumption].
37 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
38 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
39 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
40 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
41 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
42 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
43 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
44 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
46 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
47 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
49 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
51 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
52 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
54 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
55 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
56 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
57 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
58 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
59 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
60 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
61 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
62 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
63 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
64 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
65 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
66 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
67 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
68 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
69 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
70 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
71 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
72 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
73 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
74 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
75 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
77 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
78 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
79 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
80 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
81 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
82 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
83 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
84 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
85 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
86 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
87 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
88 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
89 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
90 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
91 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
92 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
93 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
94 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
95 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
96 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
97 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
98 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
99 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
100 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
101 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
102 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
103 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
104 (all x (L_1(x) -> -L_3(x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating tDJ/3
105 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(12)].
106 -PRE(x,y) | -PRE(z,y) | tP(x,z,y) | tDJ(f2(x,z,y),z,y).  [clausify(9)].
Derived: -tO(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(105,a,106,d)].
107 tDJ(x,y,z) | tO(x,y,z).  [clausify(12)].
108 -tDJ(x,y,z) | tdisjoint(x,y,z).  [clausify(36)].
Derived: tdisjoint(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(108,a,106,d)].
Derived: tdisjoint(x,y,z) | tO(x,y,z).  [resolve(108,a,107,a)].
109 tDJ(x,y,z) | -tdisjoint(x,y,z).  [clausify(36)].
Derived: -tdisjoint(x,y,z) | -tO(x,y,z).  [resolve(109,a,105,a)].

Eliminating tU/3
110 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(13)].
111 -tU(x,y,z) | tP(x,f4(x,y,z),z).  [clausify(13)].
112 -tU(x,y,z) | tP(y,f4(x,y,z),z).  [clausify(13)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(110,a,111,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(110,a,112,a)].
113 -tU(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(15)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(113,a,110,a)].
114 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(114,a,110,a)].
115 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(115,a,110,a)].
116 -tU(x,y,z) | tunderlaps(x,y,z).  [clausify(35)].
Derived: tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(116,a,110,a)].
117 tU(x,y,z) | -tunderlaps(x,y,z).  [clausify(35)].
Derived: -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(117,a,111,a)].
Derived: -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(117,a,112,a)].
Derived: -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(117,a,113,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(117,a,114,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(117,a,115,a)].

Eliminating tAtP/2
118 tAtP(x,y) | tP(f5(x,y),x,y).  [clausify(14)].
119 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(14)].
Derived: tP(f5(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(118,a,119,a)].
120 tAtP(x,y) | f5(x,y) != x.  [clausify(14)].
Derived: f5(x,y) != x | -tP(z,x,y) | z = x.  [resolve(120,a,119,a)].

Eliminating in2/2
121 in2(x,y) | -PRE(x,y) | -T(y) | -PD(x).  [clausify(17)].
122 -in2(x,y) | PRE(x,y) | PRE(y,x) | y = x.  [clausify(17)].
123 -in2(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(17)].
124 -in2(x,y) | PRE(x,y) | PD(y) | Q(y) | y = x.  [clausify(17)].
125 -in2(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(17)].
126 -in2(x,y) | T(y) | T(x) | y = x.  [clausify(17)].
127 -in2(x,y) | T(y) | PD(y) | Q(y).  [clausify(17)].
128 -in2(x,y) | PD(x) | Q(x) | PRE(y,x) | y = x.  [clausify(17)].
129 -in2(x,y) | PD(x) | Q(x) | T(x) | y = x.  [clausify(17)].
130 -in2(x,y) | PD(x) | Q(x) | PD(y) | Q(y) | y = x.  [clausify(17)].
131 in2(x,y) | -PRE(x,y) | -T(y) | -Q(x).  [clausify(17)].
132 in2(x,y) | -PRE(y,x) | -T(x) | -PD(y).  [clausify(17)].
133 in2(x,y) | -PRE(y,x) | -T(x) | -Q(y).  [clausify(17)].
134 in2(x,y) | y != x | -PD(y).  [clausify(17)].
135 in2(x,y) | y != x | -Q(y).  [clausify(17)].
136 in2(x,y) | y != x | -T(y).  [clausify(17)].

Eliminating line2/1
137 line2(x) | -PD(x).  [clausify(18)].
138 -line2(x) | PD(x) | Q(x).  [clausify(18)].
139 line2(x) | -Q(x).  [clausify(18)].

Eliminating point2/1
140 point2(x) | -T(x).  [clausify(19)].
141 -point2(x) | T(x).  [clausify(19)].

Eliminating part2/2
142 part2(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(20)].
143 -part2(x,y) | P(x,y).  [clausify(20)].
144 -part2(x,y) | T(x).  [clausify(20)].
145 -part2(x,y) | T(y).  [clausify(20)].

Eliminating L_1/1
146 L_1(x) | -ED(x).  [clausify(21)].
147 -L_1(x) | ED(x).  [clausify(21)].
148 L_1(c1).  [deny(104)].
Derived: ED(c1).  [resolve(148,a,147,a)].

Eliminating L_2/1
149 L_2(x) | -PD(x).  [clausify(22)].
150 -L_2(x) | PD(x).  [clausify(22)].

Eliminating L_3/1
151 L_3(x) | -Q(x).  [clausify(23)].
152 -L_3(x) | Q(x).  [clausify(23)].
153 L_3(c1).  [deny(104)].
Derived: Q(c1).  [resolve(153,a,152,a)].

Eliminating L_4/1
154 L_4(x) | -PED(x).  [clausify(24)].
155 -L_4(x) | PED(x).  [clausify(24)].

Eliminating L_5/1
156 L_5(x) | -NPED(x).  [clausify(25)].
157 -L_5(x) | NPED(x).  [clausify(25)].

Eliminating AtP/1
158 AtP(x) | -T(x) | T(f14(x)).  [clausify(52)].
159 -AtP(x) | atomic_part(x).  [clausify(26)].
160 -AtP(x) | T(x).  [clausify(52)].
161 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(52)].
Derived: -T(x) | T(f14(x)) | atomic_part(x).  [resolve(158,a,159,a)].
Derived: -T(x) | T(f14(x)) | -T(y) | -P(y,x) | y = x.  [resolve(158,a,161,a)].
162 AtP(x) | -T(x) | P(f14(x),x).  [clausify(52)].
Derived: -T(x) | P(f14(x),x) | atomic_part(x).  [resolve(162,a,159,a)].
Derived: -T(x) | P(f14(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(162,a,161,a)].
163 AtP(x) | -T(x) | f14(x) != x.  [clausify(52)].
Derived: -T(x) | f14(x) != x | atomic_part(x).  [resolve(163,a,159,a)].
Derived: -T(x) | f14(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(163,a,161,a)].

Eliminating DJ/2
164 -T(x) | -T(y) | P(x,y) | DJ(f11(x,y),y).  [clausify(47)].
165 -DJ(x,y) | disjoint(x,y).  [clausify(27)].
Derived: -T(x) | -T(y) | P(x,y) | disjoint(f11(x,y),y).  [resolve(164,d,165,a)].
166 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(50)].
Derived: -T(f11(x,y)) | -T(y) | -O(f11(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(166,c,164,d)].
167 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(50)].
Derived: -T(x) | -T(y) | O(x,y) | disjoint(x,y).  [resolve(167,c,165,a)].

Eliminating overlaps/2

Eliminating ppart/2

Eliminating U/2
168 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(51)].
169 -U(x,y) | underlaps(x,y).  [clausify(30)].
170 -T(x) | -T(y) | -U(x,y) | P(x,f13(x,y)).  [clausify(51)].
171 -T(x) | -T(y) | -U(x,y) | P(y,f13(x,y)).  [clausify(51)].
172 -T(x) | -T(y) | -U(x,y) | T(f13(x,y)).  [clausify(51)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | underlaps(x,y).  [resolve(168,c,169,a)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f13(x,y)).  [resolve(168,c,170,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f13(x,y)).  [resolve(168,c,171,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f13(x,y)).  [resolve(168,c,172,c)].
173 -T(x) | -T(y) | -U(x,y) | T(f15(x,y)).  [clausify(53)].
Derived: -T(x) | -T(y) | T(f15(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(173,c,168,c)].
174 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f15(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(174,c,168,c)].
175 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,x).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(175,c,168,c)].
176 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f15(x,y)) | -O(z,y).  [clausify(53)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f15(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(176,c,168,c)].

Eliminating SUM/3
177 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f8(x,y,z)).  [clausify(32)].
178 -SUM(x,y,z) | sum(y,z,x).  [clausify(31)].
179 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(32)].
180 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(32)].
181 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | sum(x,y,z).  [resolve(177,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(177,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(177,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f8(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(177,d,181,d)].
182 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | sum(x,y,z).  [resolve(182,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(182,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(182,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(182,d,181,d)].
183 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | sum(x,y,z).  [resolve(183,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(183,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(183,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(183,d,181,d)].
184 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y).  [clausify(32)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | sum(x,y,z).  [resolve(184,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(184,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(184,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(184,d,181,d)].
185 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(40)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | T(f8(y,z,u)).  [resolve(185,c,177,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | O(f8(y,z,u),u) | O(f8(y,z,u),y) | O(f8(y,z,u),z).  [resolve(185,c,182,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),y).  [resolve(185,c,183,d)].
Derived: -PRE(x,y) | -PRE(x,z) | PRE(x,u) | -T(y) | -T(z) | -T(u) | -O(f8(y,z,u),u) | -O(f8(y,z,u),z).  [resolve(185,c,184,d)].
186 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(55)].
187 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(55)].
188 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(55)].
189 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f17(x,y,z)).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | sum(x,y,z).  [resolve(189,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(189,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(189,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(189,d,181,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f17(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(189,d,185,c)].
190 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | sum(x,y,z).  [resolve(190,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(190,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(190,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(190,d,181,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f17(x,y,z),z) | O(f17(x,y,z),x) | O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(190,d,185,c)].
191 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | sum(x,y,z).  [resolve(191,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(191,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(191,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(191,d,181,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(191,d,185,c)].
192 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y).  [clausify(55)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | sum(x,y,z).  [resolve(192,d,178,a)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(192,d,179,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(192,d,180,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(192,d,181,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f17(x,y,z),z) | -O(f17(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(192,d,185,c)].

Eliminating tppart/3
193 tPP(x,y,z) | -tppart(x,y,z).  [clausify(33)].
194 -tPP(x,y,z) | tppart(x,y,z).  [clausify(33)].

Eliminating toverlaps/3
195 tO(x,y,z) | -toverlaps(x,y,z).  [clausify(34)].
196 -tO(x,y,z) | toverlaps(x,y,z).  [clausify(34)].

Eliminating PD/1
197 -EV(x) | PD(x).  [clausify(58)].
198 -PD(x) | PRE(x,f9(x)).  [clausify(37)].
199 -PD(x) | PT(x).  [clausify(56)].
Derived: -EV(x) | PRE(x,f9(x)).  [resolve(197,b,198,a)].
Derived: -EV(x) | PT(x).  [resolve(197,b,199,a)].
200 -STV(x) | PD(x).  [clausify(58)].
Derived: -STV(x) | PRE(x,f9(x)).  [resolve(200,b,198,a)].
Derived: -STV(x) | PT(x).  [resolve(200,b,199,a)].
201 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(74)].
Derived: -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f9(x)).  [resolve(201,c,198,a)].
202 PT(x) | -PD(x).  [clausify(74)].
203 -ED(x) | -PD(x).  [clausify(75)].
Derived: -ED(x) | -EV(x).  [resolve(203,b,197,b)].
Derived: -ED(x) | -STV(x).  [resolve(203,b,200,b)].
204 -PD(x) | -Q(x).  [clausify(76)].
Derived: -Q(x) | -EV(x).  [resolve(204,a,197,b)].
Derived: -Q(x) | -STV(x).  [resolve(204,a,200,b)].
205 -PD(x) | -AB(x).  [clausify(76)].
Derived: -AB(x) | -EV(x).  [resolve(205,a,197,b)].
Derived: -AB(x) | -STV(x).  [resolve(205,a,200,b)].
206 -PD(x) | EV(x) | STV(x).  [clausify(81)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(206,a,201,c)].
207 PD(x) | -EV(x).  [clausify(81)].
208 PD(x) | -STV(x).  [clausify(81)].

Eliminating Q/1
209 -TQ(x) | Q(x).  [clausify(59)].
210 -Q(x) | PRE(x,f9(x)).  [clausify(37)].
211 -Q(x) | PT(x).  [clausify(56)].
Derived: -TQ(x) | PRE(x,f9(x)).  [resolve(209,b,210,a)].
Derived: -TQ(x) | PT(x).  [resolve(209,b,211,a)].
212 -PQ(x) | Q(x).  [clausify(59)].
Derived: -PQ(x) | PRE(x,f9(x)).  [resolve(212,b,210,a)].
Derived: -PQ(x) | PT(x).  [resolve(212,b,211,a)].
213 -AQ(x) | Q(x).  [clausify(59)].
Derived: -AQ(x) | PRE(x,f9(x)).  [resolve(213,b,210,a)].
Derived: -AQ(x) | PT(x).  [resolve(213,b,211,a)].
214 PT(x) | -Q(x).  [clausify(74)].
215 -ED(x) | -Q(x).  [clausify(75)].
Derived: -ED(x) | -TQ(x).  [resolve(215,b,209,b)].
Derived: -ED(x) | -PQ(x).  [resolve(215,b,212,b)].
Derived: -ED(x) | -AQ(x).  [resolve(215,b,213,b)].
216 -Q(x) | -AB(x).  [clausify(77)].
Derived: -AB(x) | -TQ(x).  [resolve(216,a,209,b)].
Derived: -AB(x) | -PQ(x).  [resolve(216,a,212,b)].
Derived: -AB(x) | -AQ(x).  [resolve(216,a,213,b)].
217 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(83)].
218 Q(x) | -TQ(x).  [clausify(83)].
219 Q(x) | -PQ(x).  [clausify(83)].
220 Q(x) | -AQ(x).  [clausify(83)].
221 Q(c1).  [resolve(153,a,152,a)].
Derived: PRE(c1,f9(c1)).  [resolve(221,a,210,a)].
Derived: PT(c1).  [resolve(221,a,211,a)].
Derived: -ED(c1).  [resolve(221,a,215,b)].
Derived: -AB(c1).  [resolve(221,a,216,a)].
Derived: TQ(c1) | PQ(c1) | AQ(c1).  [resolve(221,a,217,a)].
222 -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f9(x)).  [resolve(201,c,198,a)].
Derived: -PT(x) | ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)).  [resolve(222,c,210,a)].
223 -Q(x) | -EV(x).  [resolve(204,a,197,b)].
Derived: -EV(x) | -TQ(x).  [resolve(223,a,209,b)].
Derived: -EV(x) | -PQ(x).  [resolve(223,a,212,b)].
Derived: -EV(x) | -AQ(x).  [resolve(223,a,213,b)].
Derived: -EV(c1).  [resolve(223,a,221,a)].
224 -Q(x) | -STV(x).  [resolve(204,a,200,b)].
Derived: -STV(x) | -TQ(x).  [resolve(224,a,209,b)].
Derived: -STV(x) | -PQ(x).  [resolve(224,a,212,b)].
Derived: -STV(x) | -AQ(x).  [resolve(224,a,213,b)].
Derived: -STV(c1).  [resolve(224,a,221,a)].
225 EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(206,a,201,c)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(225,e,217,a)].

Eliminating PT/1
226 -PT(x) | ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)).  [resolve(222,c,210,a)].
227 -ED(x) | PT(x).  [clausify(56)].
228 -AB(x) | PT(x).  [clausify(56)].
229 PT(x) | -ED(x).  [clausify(74)].
230 PT(x) | -AB(x).  [clausify(74)].
231 -EV(x) | PT(x).  [resolve(197,b,199,a)].
232 -STV(x) | PT(x).  [resolve(200,b,199,a)].
233 -TQ(x) | PT(x).  [resolve(209,b,211,a)].
234 -PQ(x) | PT(x).  [resolve(212,b,211,a)].
235 -AQ(x) | PT(x).  [resolve(213,b,211,a)].
236 PT(c1).  [resolve(221,a,211,a)].
Derived: ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -EV(x).  [resolve(226,a,231,b)].
Derived: ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -STV(x).  [resolve(226,a,232,b)].
Derived: ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -TQ(x).  [resolve(226,a,233,b)].
Derived: ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -PQ(x).  [resolve(226,a,234,b)].
Derived: ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -AQ(x).  [resolve(226,a,235,b)].
Derived: ED(c1) | AB(c1) | PRE(c1,f9(c1)) | PRE(c1,f9(c1)).  [resolve(226,a,236,a)].
237 EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(225,e,217,a)].
Derived: EV(c1) | STV(c1) | ED(c1) | AB(c1) | TQ(c1) | PQ(c1) | AQ(c1).  [resolve(237,c,236,a)].

Eliminating AS/1
238 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(78)].
239 -AS(x) | ED(x).  [clausify(57)].
240 ED(x) | -AS(x).  [clausify(78)].
241 -PED(x) | -AS(x).  [clausify(79)].
242 -NPED(x) | -AS(x).  [clausify(80)].

Eliminating R/1
243 -TR(x) | R(x).  [clausify(67)].
244 -R(x) | AB(x).  [clausify(60)].
Derived: -TR(x) | AB(x).  [resolve(243,b,244,a)].
245 -PR(x) | R(x).  [clausify(67)].
Derived: -PR(x) | AB(x).  [resolve(245,b,244,a)].
246 -AR(x) | R(x).  [clausify(67)].
Derived: -AR(x) | AB(x).  [resolve(246,b,244,a)].
247 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(93)].
248 R(x) | -TR(x).  [clausify(93)].
249 R(x) | -PR(x).  [clausify(93)].
250 R(x) | -AR(x).  [clausify(93)].

Eliminating M/1
251 -PED(x) | M(x) | F(x) | POB(x).  [clausify(86)].
252 -M(x) | PED(x).  [clausify(61)].
253 PED(x) | -M(x).  [clausify(86)].
254 -M(x) | -F(x).  [clausify(87)].
255 -M(x) | -POB(x).  [clausify(87)].

Eliminating F/1

Eliminating POB/1
256 -APO(x) | POB(x).  [clausify(68)].
257 -POB(x) | PED(x).  [clausify(61)].
Derived: -APO(x) | PED(x).  [resolve(256,b,257,a)].
258 -NAPO(x) | POB(x).  [clausify(68)].
Derived: -NAPO(x) | PED(x).  [resolve(258,b,257,a)].
259 PED(x) | -POB(x).  [clausify(86)].
260 -POB(x) | APO(x) | NAPO(x).  [clausify(96)].
261 POB(x) | -APO(x).  [clausify(96)].
262 POB(x) | -NAPO(x).  [clausify(96)].

Eliminating NPOB/1
263 -MOB(x) | NPOB(x).  [clausify(69)].
264 -NPOB(x) | NPED(x).  [clausify(62)].
Derived: -MOB(x) | NPED(x).  [resolve(263,b,264,a)].
265 -SOB(x) | NPOB(x).  [clausify(69)].
Derived: -SOB(x) | NPED(x).  [resolve(265,b,264,a)].
266 -NPOB(x) | MOB(x) | SOB(x).  [clausify(98)].
267 NPOB(x) | -MOB(x).  [clausify(98)].
268 NPOB(x) | -SOB(x).  [clausify(98)].

Eliminating ACH/1
269 -EV(x) | ACH(x) | ACC(x).  [clausify(89)].
270 -ACH(x) | EV(x).  [clausify(63)].
271 EV(x) | -ACH(x).  [clausify(89)].
272 -ACH(x) | -ACC(x).  [clausify(90)].

Eliminating ACC/1

Eliminating ST/1
273 -STV(x) | ST(x) | PRO(x).  [clausify(91)].
274 -ST(x) | STV(x).  [clausify(64)].
275 STV(x) | -ST(x).  [clausify(91)].
276 -ST(x) | -PRO(x).  [clausify(92)].

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating TR/1
277 -TR(x) | -PR(x).  [clausify(94)].
278 -T(x) | TR(x).  [clausify(70)].
Derived: -PR(x) | -T(x).  [resolve(277,a,278,b)].
279 -TR(x) | -AR(x).  [clausify(94)].
Derived: -AR(x) | -T(x).  [resolve(279,a,278,b)].
280 -TR(x) | AB(x).  [resolve(243,b,244,a)].
Derived: AB(x) | -T(x).  [resolve(280,a,278,b)].

Eliminating S/1

Eliminating ASO/1
281 -SAG(x) | ASO(x).  [clausify(73)].
282 -ASO(x) | SOB(x).  [clausify(72)].
Derived: -SAG(x) | SOB(x).  [resolve(281,b,282,a)].
283 -SC(x) | ASO(x).  [clausify(73)].
Derived: -SC(x) | SOB(x).  [resolve(283,b,282,a)].
284 -SOB(x) | ASO(x) | NASO(x).  [clausify(100)].
285 SOB(x) | -ASO(x).  [clausify(100)].
286 -ASO(x) | -NASO(x).  [clausify(101)].
Derived: -NASO(x) | -SAG(x).  [resolve(286,a,281,b)].
Derived: -NASO(x) | -SC(x).  [resolve(286,a,283,b)].
287 -ASO(x) | SAG(x) | SC(x).  [clausify(102)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(287,a,284,b)].
288 ASO(x) | -SAG(x).  [clausify(102)].
289 ASO(x) | -SC(x).  [clausify(102)].

Eliminating NASO/1
290 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(287,a,284,b)].
291 -NASO(x) | SOB(x).  [clausify(72)].
292 SOB(x) | -NASO(x).  [clausify(100)].
293 -NASO(x) | -SAG(x).  [resolve(286,a,281,b)].
294 -NASO(x) | -SC(x).  [resolve(286,a,283,b)].

Eliminating TQ/1
295 TQ(c1) | PQ(c1) | AQ(c1).  [resolve(221,a,217,a)].
296 -TQ(x) | -PQ(x).  [clausify(84)].
297 -TQ(x) | -AQ(x).  [clausify(84)].
298 -TQ(x) | PRE(x,f9(x)).  [resolve(209,b,210,a)].
299 -ED(x) | -TQ(x).  [resolve(215,b,209,b)].
300 -AB(x) | -TQ(x).  [resolve(216,a,209,b)].
Derived: PQ(c1) | AQ(c1) | PRE(c1,f9(c1)).  [resolve(295,a,298,a)].
Derived: PQ(c1) | AQ(c1) | -ED(c1).  [resolve(295,a,299,b)].
Derived: PQ(c1) | AQ(c1) | -AB(c1).  [resolve(295,a,300,b)].
301 -EV(x) | -TQ(x).  [resolve(223,a,209,b)].
302 -STV(x) | -TQ(x).  [resolve(224,a,209,b)].
303 ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -TQ(x).  [resolve(226,a,233,b)].
304 EV(c1) | STV(c1) | ED(c1) | AB(c1) | TQ(c1) | PQ(c1) | AQ(c1).  [resolve(237,c,236,a)].

Eliminating PQ/1
305 PQ(c1) | AQ(c1) | PRE(c1,f9(c1)).  [resolve(295,a,298,a)].
306 -PQ(x) | -AQ(x).  [clausify(85)].
307 -PQ(x) | PRE(x,f9(x)).  [resolve(212,b,210,a)].
308 -ED(x) | -PQ(x).  [resolve(215,b,212,b)].
309 -AB(x) | -PQ(x).  [resolve(216,a,212,b)].
310 -EV(x) | -PQ(x).  [resolve(223,a,212,b)].
311 -STV(x) | -PQ(x).  [resolve(224,a,212,b)].
312 ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -PQ(x).  [resolve(226,a,234,b)].
Derived: AQ(c1) | PRE(c1,f9(c1)) | PRE(c1,f9(c1)).  [resolve(305,a,307,a)].
313 PQ(c1) | AQ(c1) | -ED(c1).  [resolve(295,a,299,b)].
Derived: AQ(c1) | -ED(c1) | -ED(c1).  [resolve(313,a,308,b)].
314 PQ(c1) | AQ(c1) | -AB(c1).  [resolve(295,a,300,b)].
Derived: AQ(c1) | -AB(c1) | -AB(c1).  [resolve(314,a,309,b)].

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating tdisjoint/3
315 -tdisjoint(x,y,z) | -tO(x,y,z).  [resolve(109,a,105,a)].
316 tdisjoint(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(108,a,106,d)].
317 tdisjoint(x,y,z) | tO(x,y,z).  [resolve(108,a,107,a)].
Derived: -tO(f2(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(315,a,316,a)].

Eliminating tunderlaps/3
318 -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(117,a,111,a)].
319 tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(116,a,110,a)].
Derived: tP(x,f4(x,y,z),z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(318,a,319,a)].
320 -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(117,a,112,a)].
Derived: tP(x,f4(y,x,z),z) | -tP(y,u,z) | -tP(x,u,z).  [resolve(320,a,319,a)].
321 -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(117,a,113,a)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(321,a,319,a)].
322 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(117,a,114,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(322,a,319,a)].
323 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(117,a,115,a)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(323,a,319,a)].

Eliminating atomic_part/1

Eliminating disjoint/2

Eliminating underlaps/2

Eliminating sum/3

Eliminating AQ/1
324 AQ(c1) | PRE(c1,f9(c1)) | PRE(c1,f9(c1)).  [resolve(305,a,307,a)].
325 -AQ(x) | PRE(x,f9(x)).  [resolve(213,b,210,a)].
326 -ED(x) | -AQ(x).  [resolve(215,b,213,b)].
327 -AB(x) | -AQ(x).  [resolve(216,a,213,b)].
328 -EV(x) | -AQ(x).  [resolve(223,a,213,b)].
329 -STV(x) | -AQ(x).  [resolve(224,a,213,b)].
330 ED(x) | AB(x) | PRE(x,f9(x)) | PRE(x,f9(x)) | -AQ(x).  [resolve(226,a,235,b)].
Derived: PRE(c1,f9(c1)) | PRE(c1,f9(c1)) | PRE(c1,f9(c1)).  [resolve(324,a,325,a)].
331 AQ(c1) | -ED(c1) | -ED(c1).  [resolve(313,a,308,b)].
Derived: -ED(c1) | -ED(c1) | -ED(c1).  [resolve(331,a,326,b)].
332 AQ(c1) | -AB(c1) | -AB(c1).  [resolve(314,a,309,b)].
Derived: -AB(c1) | -AB(c1) | -AB(c1).  [resolve(332,a,327,b)].

Eliminating AR/1

Eliminating NAPO/1

Eliminating SOB/1
333 -SC(x) | SOB(x).  [resolve(283,b,282,a)].
334 -SOB(x) | NPED(x).  [resolve(265,b,264,a)].
Derived: -SC(x) | NPED(x).  [resolve(333,b,334,a)].

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, NPED, PED, AB, EV, STV, O, PRE, P, PP, tP, tO, tPP ]).
Function symbol precedence:  function_order([ c1, f5, f10, f11, f12, f13, f15, f16, f9, f14, f2, f3, f4, f6, f7, f8, f17, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== PROOF =================================

% Proof 1 at 0.23 (+ 0.01) seconds.
% Length of proof is 13.
% Level of proof is 4.
% Maximum clause weight is 2.000.
% Given clauses 0.

21 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
23 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
75 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
104 (all x (L_1(x) -> -L_3(x))) # label(non_clause) # label(goal).  [goal].
147 -L_1(x) | ED(x).  [clausify(21)].
148 L_1(c1).  [deny(104)].
152 -L_3(x) | Q(x).  [clausify(23)].
153 L_3(c1).  [deny(104)].
215 -ED(x) | -Q(x).  [clausify(75)].
221 Q(c1).  [resolve(153,a,152,a)].
396 ED(c1).  [resolve(148,a,147,a)].
479 -ED(c1).  [resolve(221,a,215,b)].
480 $F.  [copy(479),unit_del(a,396)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=116. Kept=112. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=112, Disabled=385. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=3. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=72. Nonunit_bsub_feature_tests=0.
Megabytes=0.74.
User_CPU=0.23, System_CPU=0.01, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 21769 exit (max_proofs) Mon Jul 22 02:34:34 2013
