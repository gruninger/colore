============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23306 was started by cchui on stl-ws4.mie.utoronto.ca,
Tue Jul 30 21:33:06 2013
The command was "prover9 -t 120 -f test/p9/dolce_temporary_parthood.p9 test/p9/dolce_temporary_parthood2ideal_cem_downward_cem_foliation2.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0730_temporary_parthood2_33.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood2ideal_cem_downward_cem_foliation2.p9


formulas(sos).
(all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))).
(all x all y (in2(x,y) <-> PRE(x,y) & T(y) & NPED(x) | PRE(y,x) & T(x) & NPED(y) | x = y & (NPED(y) | T(y)))).
(all x (point2(x) <-> T(x))).
(all x (line2(x) <-> NPED(x))).
(all x all y all z (tpart2(x,y,z) <-> tP(x,y,z) & NPED(x) & NPED(y))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))).
(all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))).
(all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))).
(all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))).
(all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))).
(all x all y all t (tppart(x,y,t) <-> tPP(x,y,t))).
(all x all y all t (toverlaps(x,y,t) <-> tO(x,y,t))).
(all x all y all t (tunderlaps(x,y,t) <-> tU(x,y,t))).
(all x all y all t (tdisjoint(x,y,t) <-> -tO(x,y,t))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0730_temporary_parthood2_33.p9


formulas(goals).
(all x all y all z all p (tpart2(x,y,p) & tpart2(y,z,p) -> tpart2(x,z,p))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 120).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
5 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
6 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
7 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
10 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
11 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
12 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
13 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
14 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
15 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
16 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
17 (all x all y (part2(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y (in2(x,y) <-> PRE(x,y) & T(y) & NPED(x) | PRE(y,x) & T(x) & NPED(y) | x = y & (NPED(y) | T(y)))) # label(non_clause).  [assumption].
19 (all x (point2(x) <-> T(x))) # label(non_clause).  [assumption].
20 (all x (line2(x) <-> NPED(x))) # label(non_clause).  [assumption].
21 (all x all y all z (tpart2(x,y,z) <-> tP(x,y,z) & NPED(x) & NPED(y))) # label(non_clause).  [assumption].
22 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
23 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
24 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
25 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
26 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
27 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
28 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
29 (all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
30 (all x all y (disjoint(x,y) <-> DJ(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
31 (all x all y all z (sum(x,y,z) <-> SUM(z,x,y) & T(z) & T(x) & T(y))) # label(non_clause).  [assumption].
32 (all x all y all t (tppart(x,y,t) <-> tPP(x,y,t))) # label(non_clause).  [assumption].
33 (all x all y all t (toverlaps(x,y,t) <-> tO(x,y,t))) # label(non_clause).  [assumption].
34 (all x all y all t (tunderlaps(x,y,t) <-> tU(x,y,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tdisjoint(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
36 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
37 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
38 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
39 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
40 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
41 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
42 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
43 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
44 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
45 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
46 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
47 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
49 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
51 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
52 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
54 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
55 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
56 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
57 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
58 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
59 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
60 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
61 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
62 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
63 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
64 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
65 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
66 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
67 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
68 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
69 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
70 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
71 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
72 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
73 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
74 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
75 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
76 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
77 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
78 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
79 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
80 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
81 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
82 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
83 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
84 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
85 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
86 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
87 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
88 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
89 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
90 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
91 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
92 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
93 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
94 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
95 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
96 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
97 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
98 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
99 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
100 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
101 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
102 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
103 (all x all y all z all p (tpart2(x,y,p) & tpart2(y,z,p) -> tpart2(x,z,p))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating tDJ/3
104 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(12)].
105 -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z) | tDJ(f2(x,y,z),y,z).  [clausify(9)].
Derived: -tO(f2(x,y,z),y,z) | -ED(x) | -ED(y) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(104,a,105,f)].
106 tDJ(x,y,z) | tO(x,y,z).  [clausify(12)].

Eliminating tU/3
107 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(13)].
108 -tU(x,y,z) | tP(x,f4(x,y,z),z).  [clausify(13)].
109 -tU(x,y,z) | tP(y,f4(x,y,z),z).  [clausify(13)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(107,a,108,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(107,a,109,a)].
110 -tU(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(15)].
Derived: -tO(x,f6(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(110,a,107,a)].
111 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(111,a,107,a)].
112 -tU(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [clausify(15)].
Derived: tO(x,f6(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(112,a,107,a)].
113 -tunderlaps(x,y,z) | tU(x,y,z).  [clausify(34)].
Derived: -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(113,b,108,a)].
Derived: -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(113,b,109,a)].
Derived: -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(113,b,110,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(113,b,111,a)].
Derived: -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(113,b,112,a)].
114 tunderlaps(x,y,z) | -tU(x,y,z).  [clausify(34)].
Derived: tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(114,b,107,a)].

Eliminating tAtP/2
115 tAtP(x,y) | tP(f5(x,y),x,y).  [clausify(14)].
116 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(14)].
Derived: tP(f5(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(115,a,116,a)].
117 tAtP(x,y) | f5(x,y) != x.  [clausify(14)].
Derived: f5(x,y) != x | -tP(z,x,y) | z = x.  [resolve(117,a,116,a)].

Eliminating part2/2
118 part2(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(17)].
119 -part2(x,y) | P(x,y).  [clausify(17)].
120 -part2(x,y) | T(x).  [clausify(17)].
121 -part2(x,y) | T(y).  [clausify(17)].

Eliminating in2/2
122 in2(x,y) | -PRE(x,y) | -T(y) | -NPED(x).  [clausify(18)].
123 -in2(x,y) | PRE(x,y) | PRE(y,x) | y = x.  [clausify(18)].
124 -in2(x,y) | PRE(x,y) | T(x) | y = x.  [clausify(18)].
125 -in2(x,y) | PRE(x,y) | NPED(y) | y = x.  [clausify(18)].
126 -in2(x,y) | T(y) | PRE(y,x) | y = x.  [clausify(18)].
127 -in2(x,y) | T(y) | T(x) | y = x.  [clausify(18)].
128 -in2(x,y) | T(y) | NPED(y).  [clausify(18)].
129 -in2(x,y) | NPED(x) | PRE(y,x) | y = x.  [clausify(18)].
130 -in2(x,y) | NPED(x) | T(x) | y = x.  [clausify(18)].
131 -in2(x,y) | NPED(x) | NPED(y) | y = x.  [clausify(18)].
132 in2(x,y) | -PRE(y,x) | -T(x) | -NPED(y).  [clausify(18)].
133 in2(x,y) | y != x | -NPED(y).  [clausify(18)].
134 in2(x,y) | y != x | -T(y).  [clausify(18)].

Eliminating point2/1
135 point2(x) | -T(x).  [clausify(19)].
136 -point2(x) | T(x).  [clausify(19)].

Eliminating line2/1
137 line2(x) | -NPED(x).  [clausify(20)].
138 -line2(x) | NPED(x).  [clausify(20)].

Eliminating L_1/1
139 L_1(x) | -ED(x).  [clausify(22)].
140 -L_1(x) | ED(x).  [clausify(22)].

Eliminating L_2/1
141 L_2(x) | -PD(x).  [clausify(23)].
142 -L_2(x) | PD(x).  [clausify(23)].

Eliminating L_3/1
143 L_3(x) | -Q(x).  [clausify(24)].
144 -L_3(x) | Q(x).  [clausify(24)].

Eliminating L_4/1
145 L_4(x) | -PED(x).  [clausify(25)].
146 -L_4(x) | PED(x).  [clausify(25)].

Eliminating L_5/1
147 L_5(x) | -NPED(x).  [clausify(26)].
148 -L_5(x) | NPED(x).  [clausify(26)].

Eliminating ppart/2
149 ppart(x,y) | -PP(x,y) | -T(x) | -T(y).  [clausify(27)].
150 -ppart(x,y) | PP(x,y).  [clausify(27)].
151 -ppart(x,y) | T(x).  [clausify(27)].
152 -ppart(x,y) | T(y).  [clausify(27)].

Eliminating overlaps/2
153 overlaps(x,y) | -O(x,y) | -T(x) | -T(y).  [clausify(28)].
154 -overlaps(x,y) | O(x,y).  [clausify(28)].
155 -overlaps(x,y) | T(x).  [clausify(28)].
156 -overlaps(x,y) | T(y).  [clausify(28)].

Eliminating underlaps/2
157 underlaps(x,y) | -U(x,y) | -T(x) | -T(y).  [clausify(29)].
158 -underlaps(x,y) | U(x,y).  [clausify(29)].
159 -underlaps(x,y) | T(x).  [clausify(29)].
160 -underlaps(x,y) | T(y).  [clausify(29)].

Eliminating disjoint/2
161 disjoint(x,y) | -DJ(x,y) | -T(x) | -T(y).  [clausify(30)].
162 -disjoint(x,y) | DJ(x,y).  [clausify(30)].
163 -disjoint(x,y) | T(x).  [clausify(30)].
164 -disjoint(x,y) | T(y).  [clausify(30)].

Eliminating sum/3
165 sum(x,y,z) | -SUM(z,x,y) | -T(z) | -T(x) | -T(y).  [clausify(31)].
166 -sum(x,y,z) | SUM(z,x,y).  [clausify(31)].
167 -sum(x,y,z) | T(z).  [clausify(31)].
168 -sum(x,y,z) | T(x).  [clausify(31)].
169 -sum(x,y,z) | T(y).  [clausify(31)].

Eliminating tppart/3
170 tppart(x,y,z) | -tPP(x,y,z).  [clausify(32)].
171 -tppart(x,y,z) | tPP(x,y,z).  [clausify(32)].

Eliminating toverlaps/3
172 toverlaps(x,y,z) | -tO(x,y,z).  [clausify(33)].
173 -toverlaps(x,y,z) | tO(x,y,z).  [clausify(33)].

Eliminating tdisjoint/3
174 tdisjoint(x,y,z) | tO(x,y,z).  [clausify(35)].
175 -tdisjoint(x,y,z) | -tO(x,y,z).  [clausify(35)].

Eliminating PD/1
176 -EV(x) | PD(x).  [clausify(57)].
177 -PD(x) | PRE(x,f8(x)).  [clausify(36)].
178 -PD(x) | PT(x).  [clausify(55)].
Derived: -EV(x) | PRE(x,f8(x)).  [resolve(176,b,177,a)].
Derived: -EV(x) | PT(x).  [resolve(176,b,178,a)].
179 -STV(x) | PD(x).  [clausify(57)].
Derived: -STV(x) | PRE(x,f8(x)).  [resolve(179,b,177,a)].
Derived: -STV(x) | PT(x).  [resolve(179,b,178,a)].
180 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(73)].
Derived: -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f8(x)).  [resolve(180,c,177,a)].
181 PT(x) | -PD(x).  [clausify(73)].
182 -ED(x) | -PD(x).  [clausify(74)].
Derived: -ED(x) | -EV(x).  [resolve(182,b,176,b)].
Derived: -ED(x) | -STV(x).  [resolve(182,b,179,b)].
183 -PD(x) | -Q(x).  [clausify(75)].
Derived: -Q(x) | -EV(x).  [resolve(183,a,176,b)].
Derived: -Q(x) | -STV(x).  [resolve(183,a,179,b)].
184 -PD(x) | -AB(x).  [clausify(75)].
Derived: -AB(x) | -EV(x).  [resolve(184,a,176,b)].
Derived: -AB(x) | -STV(x).  [resolve(184,a,179,b)].
185 -PD(x) | EV(x) | STV(x).  [clausify(80)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(185,a,180,c)].
186 PD(x) | -EV(x).  [clausify(80)].
187 PD(x) | -STV(x).  [clausify(80)].

Eliminating Q/1
188 -TQ(x) | Q(x).  [clausify(58)].
189 -Q(x) | PRE(x,f8(x)).  [clausify(36)].
190 -Q(x) | PT(x).  [clausify(55)].
Derived: -TQ(x) | PRE(x,f8(x)).  [resolve(188,b,189,a)].
Derived: -TQ(x) | PT(x).  [resolve(188,b,190,a)].
191 -PQ(x) | Q(x).  [clausify(58)].
Derived: -PQ(x) | PRE(x,f8(x)).  [resolve(191,b,189,a)].
Derived: -PQ(x) | PT(x).  [resolve(191,b,190,a)].
192 -AQ(x) | Q(x).  [clausify(58)].
Derived: -AQ(x) | PRE(x,f8(x)).  [resolve(192,b,189,a)].
Derived: -AQ(x) | PT(x).  [resolve(192,b,190,a)].
193 PT(x) | -Q(x).  [clausify(73)].
194 -ED(x) | -Q(x).  [clausify(74)].
Derived: -ED(x) | -TQ(x).  [resolve(194,b,188,b)].
Derived: -ED(x) | -PQ(x).  [resolve(194,b,191,b)].
Derived: -ED(x) | -AQ(x).  [resolve(194,b,192,b)].
195 -Q(x) | -AB(x).  [clausify(76)].
Derived: -AB(x) | -TQ(x).  [resolve(195,a,188,b)].
Derived: -AB(x) | -PQ(x).  [resolve(195,a,191,b)].
Derived: -AB(x) | -AQ(x).  [resolve(195,a,192,b)].
196 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(82)].
197 Q(x) | -TQ(x).  [clausify(82)].
198 Q(x) | -PQ(x).  [clausify(82)].
199 Q(x) | -AQ(x).  [clausify(82)].
200 -PT(x) | ED(x) | Q(x) | AB(x) | PRE(x,f8(x)).  [resolve(180,c,177,a)].
Derived: -PT(x) | ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)).  [resolve(200,c,189,a)].
201 -Q(x) | -EV(x).  [resolve(183,a,176,b)].
Derived: -EV(x) | -TQ(x).  [resolve(201,a,188,b)].
Derived: -EV(x) | -PQ(x).  [resolve(201,a,191,b)].
Derived: -EV(x) | -AQ(x).  [resolve(201,a,192,b)].
202 -Q(x) | -STV(x).  [resolve(183,a,179,b)].
Derived: -STV(x) | -TQ(x).  [resolve(202,a,188,b)].
Derived: -STV(x) | -PQ(x).  [resolve(202,a,191,b)].
Derived: -STV(x) | -AQ(x).  [resolve(202,a,192,b)].
203 EV(x) | STV(x) | -PT(x) | ED(x) | Q(x) | AB(x).  [resolve(185,a,180,c)].
Derived: EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(203,e,196,a)].

Eliminating SUM/3
204 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f16(x,y,z)).  [clausify(54)].
205 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(39)].
206 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(54)].
207 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(54)].
208 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(204,d,205,c)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(204,d,206,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(204,d,207,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f16(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(204,d,208,d)].
209 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(209,d,205,c)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(209,d,206,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(209,d,207,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f16(x,y,z),z) | O(f16(x,y,z),x) | O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(209,d,208,d)].
210 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(210,d,205,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(210,d,206,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(210,d,207,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(210,d,208,d)].
211 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y).  [clausify(54)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(211,d,205,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(211,d,206,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(211,d,207,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f16(x,y,z),z) | -O(f16(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(211,d,208,d)].

Eliminating DJ/2
212 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(49)].
213 -T(x) | -T(y) | P(x,y) | DJ(f10(x,y),y).  [clausify(46)].
Derived: -T(f10(x,y)) | -T(y) | -O(f10(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(212,c,213,d)].
214 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(49)].

Eliminating U/2
215 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(50)].
216 -T(x) | -T(y) | -U(x,y) | P(x,f12(x,y)).  [clausify(50)].
217 -T(x) | -T(y) | -U(x,y) | P(y,f12(x,y)).  [clausify(50)].
218 -T(x) | -T(y) | -U(x,y) | T(f12(x,y)).  [clausify(50)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f12(x,y)).  [resolve(215,c,216,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f12(x,y)).  [resolve(215,c,217,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f12(x,y)).  [resolve(215,c,218,c)].
219 -T(x) | -T(y) | -U(x,y) | T(f14(x,y)).  [clausify(52)].
Derived: -T(x) | -T(y) | T(f14(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(219,c,215,c)].
220 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f14(x,y)) | O(z,x) | O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f14(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(220,c,215,c)].
221 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f14(x,y)) | -O(z,x).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f14(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(221,c,215,c)].
222 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f14(x,y)) | -O(z,y).  [clausify(52)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f14(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(222,c,215,c)].

Eliminating AtP/1
223 AtP(x) | -T(x) | T(f13(x)).  [clausify(51)].
224 -AtP(x) | T(x).  [clausify(51)].
225 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(51)].
Derived: -T(x) | T(f13(x)) | -T(y) | -P(y,x) | y = x.  [resolve(223,a,225,a)].
226 AtP(x) | -T(x) | P(f13(x),x).  [clausify(51)].
Derived: -T(x) | P(f13(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(226,a,225,a)].
227 AtP(x) | -T(x) | f13(x) != x.  [clausify(51)].
Derived: -T(x) | f13(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(227,a,225,a)].

Eliminating PT/1
228 -PT(x) | ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)).  [resolve(200,c,189,a)].
229 -ED(x) | PT(x).  [clausify(55)].
230 -AB(x) | PT(x).  [clausify(55)].
231 PT(x) | -ED(x).  [clausify(73)].
232 PT(x) | -AB(x).  [clausify(73)].
233 -EV(x) | PT(x).  [resolve(176,b,178,a)].
234 -STV(x) | PT(x).  [resolve(179,b,178,a)].
235 -TQ(x) | PT(x).  [resolve(188,b,190,a)].
236 -PQ(x) | PT(x).  [resolve(191,b,190,a)].
237 -AQ(x) | PT(x).  [resolve(192,b,190,a)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x).  [resolve(228,a,233,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x).  [resolve(228,a,234,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x).  [resolve(228,a,235,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x).  [resolve(228,a,236,b)].
Derived: ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x).  [resolve(228,a,237,b)].
238 EV(x) | STV(x) | -PT(x) | ED(x) | AB(x) | TQ(x) | PQ(x) | AQ(x).  [resolve(203,e,196,a)].

Eliminating AS/1
239 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(77)].
240 -AS(x) | ED(x).  [clausify(56)].
241 ED(x) | -AS(x).  [clausify(77)].
242 -PED(x) | -AS(x).  [clausify(78)].
243 -NPED(x) | -AS(x).  [clausify(79)].

Eliminating R/1
244 -TR(x) | R(x).  [clausify(66)].
245 -R(x) | AB(x).  [clausify(59)].
Derived: -TR(x) | AB(x).  [resolve(244,b,245,a)].
246 -PR(x) | R(x).  [clausify(66)].
Derived: -PR(x) | AB(x).  [resolve(246,b,245,a)].
247 -AR(x) | R(x).  [clausify(66)].
Derived: -AR(x) | AB(x).  [resolve(247,b,245,a)].
248 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(92)].
249 R(x) | -TR(x).  [clausify(92)].
250 R(x) | -PR(x).  [clausify(92)].
251 R(x) | -AR(x).  [clausify(92)].

Eliminating M/1
252 -PED(x) | M(x) | F(x) | POB(x).  [clausify(85)].
253 -M(x) | PED(x).  [clausify(60)].
254 PED(x) | -M(x).  [clausify(85)].
255 -M(x) | -F(x).  [clausify(86)].
256 -M(x) | -POB(x).  [clausify(86)].

Eliminating F/1

Eliminating POB/1
257 -APO(x) | POB(x).  [clausify(67)].
258 -POB(x) | PED(x).  [clausify(60)].
Derived: -APO(x) | PED(x).  [resolve(257,b,258,a)].
259 -NAPO(x) | POB(x).  [clausify(67)].
Derived: -NAPO(x) | PED(x).  [resolve(259,b,258,a)].
260 PED(x) | -POB(x).  [clausify(85)].
261 -POB(x) | APO(x) | NAPO(x).  [clausify(95)].
262 POB(x) | -APO(x).  [clausify(95)].
263 POB(x) | -NAPO(x).  [clausify(95)].

Eliminating NPOB/1
264 -MOB(x) | NPOB(x).  [clausify(68)].
265 -NPOB(x) | NPED(x).  [clausify(61)].
Derived: -MOB(x) | NPED(x).  [resolve(264,b,265,a)].
266 -SOB(x) | NPOB(x).  [clausify(68)].
Derived: -SOB(x) | NPED(x).  [resolve(266,b,265,a)].
267 -NPOB(x) | MOB(x) | SOB(x).  [clausify(97)].
268 NPOB(x) | -MOB(x).  [clausify(97)].
269 NPOB(x) | -SOB(x).  [clausify(97)].

Eliminating ACH/1
270 -EV(x) | ACH(x) | ACC(x).  [clausify(88)].
271 -ACH(x) | EV(x).  [clausify(62)].
272 EV(x) | -ACH(x).  [clausify(88)].
273 -ACH(x) | -ACC(x).  [clausify(89)].

Eliminating ACC/1

Eliminating ST/1
274 -STV(x) | ST(x) | PRO(x).  [clausify(90)].
275 -ST(x) | STV(x).  [clausify(63)].
276 STV(x) | -ST(x).  [clausify(90)].
277 -ST(x) | -PRO(x).  [clausify(91)].

Eliminating PRO/1

Eliminating TL/1

Eliminating SL/1

Eliminating TR/1
278 -TR(x) | -PR(x).  [clausify(93)].
279 -T(x) | TR(x).  [clausify(69)].
Derived: -PR(x) | -T(x).  [resolve(278,a,279,b)].
280 -TR(x) | -AR(x).  [clausify(93)].
Derived: -AR(x) | -T(x).  [resolve(280,a,279,b)].
281 -TR(x) | AB(x).  [resolve(244,b,245,a)].
Derived: AB(x) | -T(x).  [resolve(281,a,279,b)].

Eliminating S/1

Eliminating ASO/1
282 -SAG(x) | ASO(x).  [clausify(72)].
283 -ASO(x) | SOB(x).  [clausify(71)].
Derived: -SAG(x) | SOB(x).  [resolve(282,b,283,a)].
284 -SC(x) | ASO(x).  [clausify(72)].
Derived: -SC(x) | SOB(x).  [resolve(284,b,283,a)].
285 -SOB(x) | ASO(x) | NASO(x).  [clausify(99)].
286 SOB(x) | -ASO(x).  [clausify(99)].
287 -ASO(x) | -NASO(x).  [clausify(100)].
Derived: -NASO(x) | -SAG(x).  [resolve(287,a,282,b)].
Derived: -NASO(x) | -SC(x).  [resolve(287,a,284,b)].
288 -ASO(x) | SAG(x) | SC(x).  [clausify(101)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(288,a,285,b)].
289 ASO(x) | -SAG(x).  [clausify(101)].
290 ASO(x) | -SC(x).  [clausify(101)].

Eliminating NASO/1
291 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(288,a,285,b)].
292 -NASO(x) | SOB(x).  [clausify(71)].
293 SOB(x) | -NASO(x).  [clausify(99)].
294 -NASO(x) | -SAG(x).  [resolve(287,a,282,b)].
295 -NASO(x) | -SC(x).  [resolve(287,a,284,b)].

Eliminating AB/1
296 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x).  [resolve(228,a,233,b)].
297 -ED(x) | -AB(x).  [clausify(74)].
298 -AB(x) | -EV(x).  [resolve(184,a,176,b)].
299 -AB(x) | -STV(x).  [resolve(184,a,179,b)].
300 -AB(x) | -TQ(x).  [resolve(195,a,188,b)].
301 -AB(x) | -PQ(x).  [resolve(195,a,191,b)].
302 -AB(x) | -AQ(x).  [resolve(195,a,192,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -EV(x) | -EV(x).  [resolve(296,b,298,a)].
303 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x).  [resolve(228,a,234,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -STV(x) | -STV(x).  [resolve(303,b,299,a)].
304 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x).  [resolve(228,a,235,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -TQ(x) | -TQ(x).  [resolve(304,b,300,a)].
305 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x).  [resolve(228,a,236,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -PQ(x) | -PQ(x).  [resolve(305,b,301,a)].
306 ED(x) | AB(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x).  [resolve(228,a,237,b)].
Derived: ED(x) | PRE(x,f8(x)) | PRE(x,f8(x)) | -AQ(x) | -AQ(x).  [resolve(306,b,302,a)].
307 -PR(x) | AB(x).  [resolve(246,b,245,a)].
Derived: -PR(x) | -ED(x).  [resolve(307,b,297,b)].
Derived: -PR(x) | -EV(x).  [resolve(307,b,298,a)].
Derived: -PR(x) | -STV(x).  [resolve(307,b,299,a)].
Derived: -PR(x) | -TQ(x).  [resolve(307,b,300,a)].
Derived: -PR(x) | -PQ(x).  [resolve(307,b,301,a)].
Derived: -PR(x) | -AQ(x).  [resolve(307,b,302,a)].
308 -AR(x) | AB(x).  [resolve(247,b,245,a)].
Derived: -AR(x) | -ED(x).  [resolve(308,b,297,b)].
Derived: -AR(x) | -EV(x).  [resolve(308,b,298,a)].
Derived: -AR(x) | -STV(x).  [resolve(308,b,299,a)].
Derived: -AR(x) | -TQ(x).  [resolve(308,b,300,a)].
Derived: -AR(x) | -PQ(x).  [resolve(308,b,301,a)].
Derived: -AR(x) | -AQ(x).  [resolve(308,b,302,a)].
309 AB(x) | -T(x).  [resolve(281,a,279,b)].
Derived: -T(x) | -ED(x).  [resolve(309,a,297,b)].
Derived: -T(x) | -EV(x).  [resolve(309,a,298,a)].
Derived: -T(x) | -STV(x).  [resolve(309,a,299,a)].
Derived: -T(x) | -TQ(x).  [resolve(309,a,300,a)].
Derived: -T(x) | -PQ(x).  [resolve(309,a,301,a)].
Derived: -T(x) | -AQ(x).  [resolve(309,a,302,a)].

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating tunderlaps/3
310 tunderlaps(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [resolve(114,b,107,a)].
311 -tunderlaps(x,y,z) | tP(x,f4(x,y,z),z).  [resolve(113,b,108,a)].
312 -tunderlaps(x,y,z) | tP(y,f4(x,y,z),z).  [resolve(113,b,109,a)].
313 -tunderlaps(x,y,z) | -tO(u,f6(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [resolve(113,b,110,a)].
314 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,x,z).  [resolve(113,b,111,a)].
315 -tunderlaps(x,y,z) | tO(u,f6(x,y,z),z) | -tO(u,y,z).  [resolve(113,b,112,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f4(x,u,z),z).  [resolve(310,a,311,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f4(x,u,z),z).  [resolve(310,a,312,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | -tO(w,f6(x,u,z),z) | tO(w,x,z) | tO(w,u,z).  [resolve(310,a,313,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tO(w,f6(x,u,z),z) | -tO(w,x,z).  [resolve(310,a,314,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tO(w,f6(x,u,z),z) | -tO(w,u,z).  [resolve(310,a,315,a)].

Eliminating NAPO/1

Eliminating SOB/1
316 -SC(x) | SOB(x).  [resolve(284,b,283,a)].
317 -SOB(x) | NPED(x).  [resolve(266,b,265,a)].
Derived: -SC(x) | NPED(x).  [resolve(316,b,317,a)].

Eliminating AR/1

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, NPED, PED, AQ, EV, PQ, STV, TQ, O, P, PRE, PP, tP, tO, tPP, tpart2 ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f5, f9, f10, f11, f12, f14, f15, f8, f13, f2, f3, f4, f6, f7, f16, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.15 seconds.

============================== PROOF =================================

% Proof 1 at 0.23 (+ 0.01) seconds.
% Length of proof is 18.
% Level of proof is 5.
% Maximum clause weight is 12.000.
% Given clauses 352.

4 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
21 (all x all y all z (tpart2(x,y,z) <-> tP(x,y,z) & NPED(x) & NPED(y))) # label(non_clause).  [assumption].
103 (all x all y all z all p (tpart2(x,y,p) & tpart2(y,z,p) -> tpart2(x,z,p))) # label(non_clause) # label(goal).  [goal].
325 -tP(x,y,z) | -tP(y,u,z) | tP(x,u,z).  [clausify(4)].
342 -tpart2(x,y,z) | tP(x,y,z).  [clausify(21)].
343 -tpart2(x,y,z) | NPED(x).  [clausify(21)].
344 -tpart2(x,y,z) | NPED(y).  [clausify(21)].
345 tpart2(x,y,z) | -tP(x,y,z) | -NPED(x) | -NPED(y).  [clausify(21)].
377 tpart2(c1,c2,c4).  [deny(103)].
378 tpart2(c2,c3,c4).  [deny(103)].
379 -tpart2(c1,c3,c4).  [deny(103)].
613 NPED(c1).  [resolve(377,a,343,a)].
614 tP(c1,c2,c4).  [resolve(377,a,342,a)].
615 NPED(c3).  [resolve(378,a,344,a)].
616 tP(c2,c3,c4).  [resolve(378,a,342,a)].
639 -tP(c2,x,c4) | tP(c1,x,c4).  [resolve(614,a,325,a)].
1635 tP(c1,c3,c4).  [resolve(639,a,616,a)].
1644 $F.  [resolve(1635,a,345,b),unit_del(a,379),unit_del(b,613),unit_del(c,615)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=352. Generated=3240. Kept=1301. proofs=1.
Usable=352. Sos=851. Demods=0. Limbo=8, Disabled=469. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=1938. Back_subsumed=32.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=58.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=7820. Nonunit_bsub_feature_tests=6113.
Megabytes=2.94.
User_CPU=0.23, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23306 exit (max_proofs) Tue Jul 30 21:33:06 2013
