============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 19211 was started by cchui on stl-ws4.mie.utoronto.ca,
Sun Jul 21 23:01:30 2013
The command was "prover9 -t 600 -f test/p9/ideal_cem_lower_reflect_down_foliation1.p9 test/p9/ideal_cem_downward_m_foliation2.p9 test/p9/dolce_constitution_reduction.p9 test/p9/options.txt test/p9/ex0721_constitution_reduction_8.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/ideal_cem_lower_reflect_down_foliation1.p9


formulas(sos).
(all x all y all p1 all p2 (tleq(x,y,p1) & part1(p2,p1) -> tleq(x,y,p2))).
(all x all y all p1 all p2 (tpart(x,y,p1) & part1(p2,p1) -> tpart(x,y,p2))).
(all x all y all z all l (point1(x) & point1(y) & line1(l) & in1(x,l) & in1(y,l) & sum(x,y,z) -> in1(z,l))).
(all x all y all y1 all p (tlt(x,y,p) & tpart(y1,y,p) -> (exists x1 (tpart(x1,x,p) & tlt(x1,y1,p))))).
(all x all y all l (point1(x) & point1(y) & line1(l) & in1(x,l) & part1(y,x) -> in1(y,l))).
(all x (point1(x) -> part1(x,x))).
(all x all y (point1(x) & point1(y) -> (part1(x,y) & part1(y,x) -> x = y))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))).
(all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))).
(all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))).
(all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))).
(all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))).
(all x all y (in1(x,y) -> in1(y,x))).
(all x (point1(x) | line1(x) -> in1(x,x))).
(all x (point1(x) -> -line1(x))).
(all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)).
(all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)).
(all x (line1(x) -> (exists y (point1(y) & in1(x,y))))).
(all x all l (point1(x) & line1(l) & in1(x,l) -> part1(x,x))).
(all x all y all l (line1(l) & in1(x,l) & in1(y,l) & part1(x,y) & part1(y,x) -> x = y)).
(all x all y all z all l (line1(l) & in1(x,l) & in1(y,l) & in1(z,l) & part1(x,y) & part1(y,z) -> part1(x,z))).
(all x all y (part1(x,y) -> point1(x) & point1(y))).
(all x all y (point1(x) & point1(y) & underlaps(x,y) -> (exists z (point1(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))).
(all x all y (point1(x) & point1(y) & overlaps(x,y) -> (exists z (point1(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))).
(all x all y (point1(x) & point1(y) & -part1(x,y) -> (exists z (point1(z) & part1(z,x) & disjoint(z,y))))).
(all x (point1(x) -> part1(x,x))).
(all x all y (point1(x) & point1(y) & part1(x,y) & part1(y,x) -> x = y)).
(all x all y all z (point1(x) & point1(y) & point1(z) & part1(x,y) & part1(y,z) -> part1(x,z))).
(all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))).
(all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))).
(all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))).
(all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))).
(all x all y all t (tleq(x,y,t) -> line1(x) & line1(y) & poset_element(x) & poset_element(y) & point1(t))).
(all x all y all t (tleq(x,y,t) -> in(t,x) & in(t,y))).
(all x all y all t (line1(x) & poset_element(x) -> tleq(x,x,t))).
(all x all y all t (tleq(x,y,t) & tleq(y,x,t) -> x = y)).
(all x all y all z all t (tleq(x,y,t) & tleq(y,z,t) -> tleq(x,z,t))).
(all x all y all t (tpart(x,y,t) -> line1(x) & line1(y) & Q(x) & Q(y) & point1(t))).
(all x all y all t (tpart(x,y,t) -> in(t,x) & in(t,y))).
(all x all y all t (line1(x) & poset_element(x) -> tpart(x,x,t))).
(all x all y all z all t (tpart(x,y,t) & tpart(y,z,t) -> tpart(x,z,t))).
(all x all y all t (tlt(x,y,t) <-> tleq(x,y,t) & x != y)).
(all x all y all t (tppart(x,y,t) <-> tpart(x,y,t) & x != y)).
(all x all y all p (tpart(x,y,p) -> line1(x) & line1(y) & point1(p))).
(all x all y all p (tpart(x,y,p) -> in1(x,p) & in1(y,p))).
(all x all p (line1(x) & point1(p) & in1(p,x) -> tpart(x,x,p))).
(all x all y all p (tpart(x,y,p) & tpart(y,x,p) -> x = y)).
(all x all y all z all p (tpart(x,y,p) & tpart(y,z,p) -> tpart(x,z,p))).
(all x all y (in1(x,y) -> in1(y,x))).
(all x (point1(x) | line1(x) -> in1(x,x))).
(all p (point1(p) -> -line1(p))).
(all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)).
(all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)).
end_of_list.

% Reading from file test/p9/ideal_cem_downward_m_foliation2.p9


formulas(sos).
(all x all y all p1 all p2 (tpart(x,y,p1) & part2(p2,p1) -> tpart(x,y,p2))).
(all x all y all z all l (point2(x) & point2(y) & line2(l) & in2(x,l) & in2(y,l) & sum(x,y,z) -> in2(z,l))).
(all x all y (in2(x,y) -> in2(y,x))).
(all x (point2(x) | line2(x) -> in2(x,x))).
(all x (point2(x) -> -line2(x))).
(all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)).
(all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)).
(all x (line2(x) -> (exists y (point2(y) & in2(x,y))))).
(all x all l (point2(x) & line2(l) & in2(x,l) -> part2(x,x))).
(all x all y all l (line2(l) & in2(x,l) & in2(y,l) & part2(x,y) & part2(y,x) -> x = y)).
(all x all y all z all l (line2(l) & in2(x,l) & in2(y,l) & in2(z,l) & part2(x,y) & part2(y,z) -> part2(x,z))).
(all x all y (part2(x,y) -> point2(x) & point2(y))).
(all x all y all p (tpart(x,y,p) -> line2(x) & line2(y) & point2(p))).
(all x all y all p (tpart(x,y,p) -> in2(x,p) & in2(y,p))).
(all x all p (line2(x) & point2(p) & in2(p,x) -> tpart(x,x,p))).
(all x all y all p (tpart(x,y,p) & tpart(y,x,p) -> x = y)).
(all x all y all z all p (tpart(x,y,p) & tpart(y,z,p) -> tpart(x,z,p))).
(all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))).
(all x (point2(x) -> part2(x,x))).
(all x all y (point2(x) & point2(y) -> (part2(x,y) & part2(y,x) -> x = y))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (part2(x,y) & part2(y,z) -> part2(x,z)))).
(all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))).
(all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))).
(all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))).
(all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))).
(all x all y (point2(x) & point2(y) & underlaps(x,y) -> (exists z (point2(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))).
(all x all y (point2(x) & point2(y) & overlaps(x,y) -> (exists z (point2(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))).
(all x all y (point2(x) & point2(y) & -part2(x,y) -> (exists z (point2(z) & part2(z,x) & disjoint(z,y))))).
(all x (point2(x) -> part2(x,x))).
(all x all y (point2(x) & point2(y) & part2(x,y) & part2(y,x) -> x = y)).
(all x all y all z (point2(x) & point2(y) & point2(z) & part2(x,y) & part2(y,z) -> part2(x,z))).
(all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))).
(all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))).
(all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))).
(all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))).
(all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))).
(all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))).
(all x all y (in2(x,y) -> in2(y,x))).
(all x (point2(x) | line2(x) -> in2(x,x))).
(all p (point2(p) -> -line2(p))).
(all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)).
(all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)).
end_of_list.

% Reading from file test/p9/dolce_constitution_reduction.p9


formulas(sos).
(all x all y all z (K(x,y,z) <-> tlt(x,y,z) & L_1(x) & L_1(y) & (L_4(x) <-> L_4(y)) & (L_5(x) <-> L_5(y)) & L_2(x) & L_2(y) | tppart(x,y,z))).
(all x all y all z (tP(x,y,z) <-> tpart(x,y,z) & L_1(x) & L_1(y) & (L_4(x) <-> L_4(y)) & (L_5(x) <-> L_5(y)))).
(all x all y (PRE(x,y) <-> in1(y,x) & point1(y) & line1(x) | in2(y,x) & point2(y) & line2(x))).
(all x all y (P(x,y) <-> part1(x,y) | part2(x,y))).
(all x (T(x) <-> point1(x))).
(all x (T(x) <-> point2(x))).
(all x (ED(x) <-> line1(x))).
(all x (ED(x) <-> L_1(x))).
(all x (PED(x) <-> line1(x) & L_4(x))).
(all x (NPED(x) <-> line1(x) & L_5(x))).
(all x (PD(x) <-> line2(x))).
(all x (PD(x) <-> L_2(x))).
(all x (ED(x) <-> poset_element(x))).
(all x (PD(x) <-> mereo_element(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0721_constitution_reduction_8.p9


formulas(goals).
(all x all y all t (K(x,y,t) <-> (all t2 (P(t2,t) -> K(x,y,t2))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all p1 all p2 (tleq(x,y,p1) & part1(p2,p1) -> tleq(x,y,p2))) # label(non_clause).  [assumption].
2 (all x all y all p1 all p2 (tpart(x,y,p1) & part1(p2,p1) -> tpart(x,y,p2))) # label(non_clause).  [assumption].
3 (all x all y all z all l (point1(x) & point1(y) & line1(l) & in1(x,l) & in1(y,l) & sum(x,y,z) -> in1(z,l))) # label(non_clause).  [assumption].
4 (all x all y all y1 all p (tlt(x,y,p) & tpart(y1,y,p) -> (exists x1 (tpart(x1,x,p) & tlt(x1,y1,p))))) # label(non_clause).  [assumption].
5 (all x all y all l (point1(x) & point1(y) & line1(l) & in1(x,l) & part1(y,x) -> in1(y,l))) # label(non_clause).  [assumption].
6 (all x (point1(x) -> part1(x,x))) # label(non_clause).  [assumption].
7 (all x all y (point1(x) & point1(y) -> (part1(x,y) & part1(y,x) -> x = y))) # label(non_clause).  [assumption].
8 (all x all y all z (point1(x) & point1(y) & point1(z) -> (part1(x,y) & part1(y,z) -> part1(x,z)))) # label(non_clause).  [assumption].
9 (all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))) # label(non_clause).  [assumption].
10 (all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))) # label(non_clause).  [assumption].
11 (all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
12 (all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))) # label(non_clause).  [assumption].
13 (all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))) # label(non_clause).  [assumption].
14 (all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
15 (all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))) # label(non_clause).  [assumption].
16 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause).  [assumption].
17 (all x (point1(x) | line1(x) -> in1(x,x))) # label(non_clause).  [assumption].
18 (all x (point1(x) -> -line1(x))) # label(non_clause).  [assumption].
19 (all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)) # label(non_clause).  [assumption].
20 (all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)) # label(non_clause).  [assumption].
21 (all x (line1(x) -> (exists y (point1(y) & in1(x,y))))) # label(non_clause).  [assumption].
22 (all x all l (point1(x) & line1(l) & in1(x,l) -> part1(x,x))) # label(non_clause).  [assumption].
23 (all x all y all l (line1(l) & in1(x,l) & in1(y,l) & part1(x,y) & part1(y,x) -> x = y)) # label(non_clause).  [assumption].
24 (all x all y all z all l (line1(l) & in1(x,l) & in1(y,l) & in1(z,l) & part1(x,y) & part1(y,z) -> part1(x,z))) # label(non_clause).  [assumption].
25 (all x all y (part1(x,y) -> point1(x) & point1(y))) # label(non_clause).  [assumption].
26 (all x all y (point1(x) & point1(y) & underlaps(x,y) -> (exists z (point1(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))) # label(non_clause).  [assumption].
27 (all x all y (point1(x) & point1(y) & overlaps(x,y) -> (exists z (point1(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))) # label(non_clause).  [assumption].
28 (all x all y (point1(x) & point1(y) & -part1(x,y) -> (exists z (point1(z) & part1(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
29 (all x (point1(x) -> part1(x,x))) # label(non_clause).  [assumption].
30 (all x all y (point1(x) & point1(y) & part1(x,y) & part1(y,x) -> x = y)) # label(non_clause).  [assumption].
31 (all x all y all z (point1(x) & point1(y) & point1(z) & part1(x,y) & part1(y,z) -> part1(x,z))) # label(non_clause).  [assumption].
32 (all x all y (point1(x) & point1(y) -> (ppart(x,y) <-> part1(x,y) & -part1(y,x)))) # label(non_clause).  [assumption].
33 (all x all y (point1(x) & point1(y) -> (overlaps(x,y) <-> (exists z (point1(z) & part1(z,x) & part1(z,y)))))) # label(non_clause).  [assumption].
34 (all x all y (point1(x) & point1(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
35 (all x all y (point1(x) & point1(y) -> (underlaps(x,y) <-> (exists z (point1(z) & part1(x,z) & part1(y,z)))))) # label(non_clause).  [assumption].
36 (all x (point1(x) -> (atomic_part(x) <-> (all y (point1(y) & part1(y,x) -> y = x))))) # label(non_clause).  [assumption].
37 (all x all y all z (point1(x) & point1(y) & point1(z) -> (sum(x,y,z) <-> (all w (point1(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
38 (all x all y all z (point1(x) & point1(y) & point1(z) -> (prod(x,y,z) <-> (all w (point1(w) -> (part1(w,z) <-> part1(w,x) | part1(w,y))))))) # label(non_clause).  [assumption].
39 (all x all y all t (tleq(x,y,t) -> line1(x) & line1(y) & poset_element(x) & poset_element(y) & point1(t))) # label(non_clause).  [assumption].
40 (all x all y all t (tleq(x,y,t) -> in(t,x) & in(t,y))) # label(non_clause).  [assumption].
41 (all x all y all t (line1(x) & poset_element(x) -> tleq(x,x,t))) # label(non_clause).  [assumption].
42 (all x all y all t (tleq(x,y,t) & tleq(y,x,t) -> x = y)) # label(non_clause).  [assumption].
43 (all x all y all z all t (tleq(x,y,t) & tleq(y,z,t) -> tleq(x,z,t))) # label(non_clause).  [assumption].
44 (all x all y all t (tpart(x,y,t) -> line1(x) & line1(y) & Q(x) & Q(y) & point1(t))) # label(non_clause).  [assumption].
45 (all x all y all t (tpart(x,y,t) -> in(t,x) & in(t,y))) # label(non_clause).  [assumption].
46 (all x all y all t (line1(x) & poset_element(x) -> tpart(x,x,t))) # label(non_clause).  [assumption].
47 (all x all y all z all t (tpart(x,y,t) & tpart(y,z,t) -> tpart(x,z,t))) # label(non_clause).  [assumption].
48 (all x all y all t (tlt(x,y,t) <-> tleq(x,y,t) & x != y)) # label(non_clause).  [assumption].
49 (all x all y all t (tppart(x,y,t) <-> tpart(x,y,t) & x != y)) # label(non_clause).  [assumption].
50 (all x all y all p (tpart(x,y,p) -> line1(x) & line1(y) & point1(p))) # label(non_clause).  [assumption].
51 (all x all y all p (tpart(x,y,p) -> in1(x,p) & in1(y,p))) # label(non_clause).  [assumption].
52 (all x all p (line1(x) & point1(p) & in1(p,x) -> tpart(x,x,p))) # label(non_clause).  [assumption].
53 (all x all y all p (tpart(x,y,p) & tpart(y,x,p) -> x = y)) # label(non_clause).  [assumption].
54 (all x all y all z all p (tpart(x,y,p) & tpart(y,z,p) -> tpart(x,z,p))) # label(non_clause).  [assumption].
55 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause).  [assumption].
56 (all x (point1(x) | line1(x) -> in1(x,x))) # label(non_clause).  [assumption].
57 (all p (point1(p) -> -line1(p))) # label(non_clause).  [assumption].
58 (all x all y (in1(x,y) & point1(x) & point1(y) -> x = y)) # label(non_clause).  [assumption].
59 (all x all y (in1(x,y) & line1(x) & line1(y) -> x = y)) # label(non_clause).  [assumption].
60 (all x all y all p1 all p2 (tpart(x,y,p1) & part2(p2,p1) -> tpart(x,y,p2))) # label(non_clause).  [assumption].
61 (all x all y all z all l (point2(x) & point2(y) & line2(l) & in2(x,l) & in2(y,l) & sum(x,y,z) -> in2(z,l))) # label(non_clause).  [assumption].
62 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause).  [assumption].
63 (all x (point2(x) | line2(x) -> in2(x,x))) # label(non_clause).  [assumption].
64 (all x (point2(x) -> -line2(x))) # label(non_clause).  [assumption].
65 (all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)) # label(non_clause).  [assumption].
66 (all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)) # label(non_clause).  [assumption].
67 (all x (line2(x) -> (exists y (point2(y) & in2(x,y))))) # label(non_clause).  [assumption].
68 (all x all l (point2(x) & line2(l) & in2(x,l) -> part2(x,x))) # label(non_clause).  [assumption].
69 (all x all y all l (line2(l) & in2(x,l) & in2(y,l) & part2(x,y) & part2(y,x) -> x = y)) # label(non_clause).  [assumption].
70 (all x all y all z all l (line2(l) & in2(x,l) & in2(y,l) & in2(z,l) & part2(x,y) & part2(y,z) -> part2(x,z))) # label(non_clause).  [assumption].
71 (all x all y (part2(x,y) -> point2(x) & point2(y))) # label(non_clause).  [assumption].
72 (all x all y all p (tpart(x,y,p) -> line2(x) & line2(y) & point2(p))) # label(non_clause).  [assumption].
73 (all x all y all p (tpart(x,y,p) -> in2(x,p) & in2(y,p))) # label(non_clause).  [assumption].
74 (all x all p (line2(x) & point2(p) & in2(p,x) -> tpart(x,x,p))) # label(non_clause).  [assumption].
75 (all x all y all p (tpart(x,y,p) & tpart(y,x,p) -> x = y)) # label(non_clause).  [assumption].
76 (all x all y all z all p (tpart(x,y,p) & tpart(y,z,p) -> tpart(x,z,p))) # label(non_clause).  [assumption].
77 (all x all y all l (point2(x) & point2(y) & line2(l) & in2(x,l) & part2(y,x) -> in2(y,l))) # label(non_clause).  [assumption].
78 (all x (point2(x) -> part2(x,x))) # label(non_clause).  [assumption].
79 (all x all y (point2(x) & point2(y) -> (part2(x,y) & part2(y,x) -> x = y))) # label(non_clause).  [assumption].
80 (all x all y all z (point2(x) & point2(y) & point2(z) -> (part2(x,y) & part2(y,z) -> part2(x,z)))) # label(non_clause).  [assumption].
81 (all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))) # label(non_clause).  [assumption].
82 (all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))) # label(non_clause).  [assumption].
83 (all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
84 (all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))) # label(non_clause).  [assumption].
85 (all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))) # label(non_clause).  [assumption].
86 (all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
87 (all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))) # label(non_clause).  [assumption].
88 (all x all y (point2(x) & point2(y) & underlaps(x,y) -> (exists z (point2(z) & (all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))))) # label(non_clause).  [assumption].
89 (all x all y (point2(x) & point2(y) & overlaps(x,y) -> (exists z (point2(z) & (all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))))) # label(non_clause).  [assumption].
90 (all x all y (point2(x) & point2(y) & -part2(x,y) -> (exists z (point2(z) & part2(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
91 (all x (point2(x) -> part2(x,x))) # label(non_clause).  [assumption].
92 (all x all y (point2(x) & point2(y) & part2(x,y) & part2(y,x) -> x = y)) # label(non_clause).  [assumption].
93 (all x all y all z (point2(x) & point2(y) & point2(z) & part2(x,y) & part2(y,z) -> part2(x,z))) # label(non_clause).  [assumption].
94 (all x all y (point2(x) & point2(y) -> (ppart(x,y) <-> part2(x,y) & -part2(y,x)))) # label(non_clause).  [assumption].
95 (all x all y (point2(x) & point2(y) -> (overlaps(x,y) <-> (exists z (point2(z) & part2(z,x) & part2(z,y)))))) # label(non_clause).  [assumption].
96 (all x all y (point2(x) & point2(y) -> (disjoint(x,y) <-> -overlaps(x,y)))) # label(non_clause).  [assumption].
97 (all x all y (point2(x) & point2(y) -> (underlaps(x,y) <-> (exists z (point2(z) & part2(x,z) & part2(y,z)))))) # label(non_clause).  [assumption].
98 (all x (point2(x) -> (atomic_part(x) <-> (all y (point2(y) & part2(y,x) -> y = x))))) # label(non_clause).  [assumption].
99 (all x all y all z (point2(x) & point2(y) & point2(z) -> (sum(x,y,z) <-> (all w (point2(w) -> (overlaps(w,z) <-> overlaps(w,x) | overlaps(w,y))))))) # label(non_clause).  [assumption].
100 (all x all y all z (point2(x) & point2(y) & point2(z) -> (prod(x,y,z) <-> (all w (point2(w) -> (part2(w,z) <-> part2(w,x) | part2(w,y))))))) # label(non_clause).  [assumption].
101 (all x all y (in2(x,y) -> in2(y,x))) # label(non_clause).  [assumption].
102 (all x (point2(x) | line2(x) -> in2(x,x))) # label(non_clause).  [assumption].
103 (all p (point2(p) -> -line2(p))) # label(non_clause).  [assumption].
104 (all x all y (in2(x,y) & point2(x) & point2(y) -> x = y)) # label(non_clause).  [assumption].
105 (all x all y (in2(x,y) & line2(x) & line2(y) -> x = y)) # label(non_clause).  [assumption].
106 (all x all y all z (K(x,y,z) <-> tlt(x,y,z) & L_1(x) & L_1(y) & (L_4(x) <-> L_4(y)) & (L_5(x) <-> L_5(y)) & L_2(x) & L_2(y) | tppart(x,y,z))) # label(non_clause).  [assumption].
107 (all x all y all z (tP(x,y,z) <-> tpart(x,y,z) & L_1(x) & L_1(y) & (L_4(x) <-> L_4(y)) & (L_5(x) <-> L_5(y)))) # label(non_clause).  [assumption].
108 (all x all y (PRE(x,y) <-> in1(y,x) & point1(y) & line1(x) | in2(y,x) & point2(y) & line2(x))) # label(non_clause).  [assumption].
109 (all x all y (P(x,y) <-> part1(x,y) | part2(x,y))) # label(non_clause).  [assumption].
110 (all x (T(x) <-> point1(x))) # label(non_clause).  [assumption].
111 (all x (T(x) <-> point2(x))) # label(non_clause).  [assumption].
112 (all x (ED(x) <-> line1(x))) # label(non_clause).  [assumption].
113 (all x (ED(x) <-> L_1(x))) # label(non_clause).  [assumption].
114 (all x (PED(x) <-> line1(x) & L_4(x))) # label(non_clause).  [assumption].
115 (all x (NPED(x) <-> line1(x) & L_5(x))) # label(non_clause).  [assumption].
116 (all x (PD(x) <-> line2(x))) # label(non_clause).  [assumption].
117 (all x (PD(x) <-> L_2(x))) # label(non_clause).  [assumption].
118 (all x (ED(x) <-> poset_element(x))) # label(non_clause).  [assumption].
119 (all x (PD(x) <-> mereo_element(x))) # label(non_clause).  [assumption].
120 (all x all y all t (K(x,y,t) <-> (all t2 (P(t2,t) -> K(x,y,t2))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating sum/3
121 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | point1(f5(x,y,z)).  [clausify(14)].
122 -point1(x) | -point1(y) | -line1(z) | -in1(x,z) | -in1(y,z) | -sum(x,y,u) | in1(u,z).  [clausify(3)].
123 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [clausify(14)].
124 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [clausify(14)].
125 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [clausify(14)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(121,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(121,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(121,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(121,d,125,d)].
126 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y).  [clausify(14)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(126,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(126,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(126,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(126,d,125,d)].
127 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x).  [clausify(14)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(127,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(127,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(127,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(127,d,125,d)].
128 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y).  [clausify(14)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(128,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(128,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(128,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(128,d,125,d)].
129 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [clausify(37)].
130 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [clausify(37)].
131 -point1(x) | -point1(y) | -point1(z) | -sum(x,y,z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [clausify(37)].
132 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | point1(f14(x,y,z)).  [clausify(37)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(132,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(132,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(132,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(132,d,125,d)].
133 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y).  [clausify(37)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(133,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(133,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(133,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(133,d,125,d)].
134 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x).  [clausify(37)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(134,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(134,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(134,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(134,d,125,d)].
135 -point1(x) | -point1(y) | -point1(z) | sum(x,y,z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y).  [clausify(37)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(135,d,122,f)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(135,d,123,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(135,d,124,d)].
Derived: -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(135,d,125,d)].
136 -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | -sum(x,y,u) | in2(u,z).  [clausify(61)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | point1(f5(x,y,u)).  [resolve(136,f,121,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | overlaps(f5(x,y,u),u) | overlaps(f5(x,y,u),x) | overlaps(f5(x,y,u),y).  [resolve(136,f,126,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | -overlaps(f5(x,y,u),u) | -overlaps(f5(x,y,u),x).  [resolve(136,f,127,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | -overlaps(f5(x,y,u),u) | -overlaps(f5(x,y,u),y).  [resolve(136,f,128,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | point1(f14(x,y,u)).  [resolve(136,f,132,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | overlaps(f14(x,y,u),u) | overlaps(f14(x,y,u),x) | overlaps(f14(x,y,u),y).  [resolve(136,f,133,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | -overlaps(f14(x,y,u),u) | -overlaps(f14(x,y,u),x).  [resolve(136,f,134,d)].
Derived: -point2(x) | -point2(y) | -line2(z) | -in2(x,z) | -in2(y,z) | in2(u,z) | -point1(x) | -point1(y) | -point1(u) | -overlaps(f14(x,y,u),u) | -overlaps(f14(x,y,u),y).  [resolve(136,f,135,d)].
137 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)).  [resolve(137,d,121,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y).  [resolve(137,d,126,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x).  [resolve(137,d,127,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y).  [resolve(137,d,128,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)).  [resolve(137,d,132,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y).  [resolve(137,d,133,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x).  [resolve(137,d,134,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y).  [resolve(137,d,135,d)].
138 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)).  [resolve(138,d,121,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y).  [resolve(138,d,126,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x).  [resolve(138,d,127,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y).  [resolve(138,d,128,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)).  [resolve(138,d,132,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y).  [resolve(138,d,133,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x).  [resolve(138,d,134,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y).  [resolve(138,d,135,d)].
139 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | point1(f5(x,y,z)).  [resolve(139,d,121,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | overlaps(f5(x,y,z),z) | overlaps(f5(x,y,z),x) | overlaps(f5(x,y,z),y).  [resolve(139,d,126,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),x).  [resolve(139,d,127,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f5(x,y,z),z) | -overlaps(f5(x,y,z),y).  [resolve(139,d,128,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | point1(f14(x,y,z)).  [resolve(139,d,132,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | overlaps(f14(x,y,z),z) | overlaps(f14(x,y,z),x) | overlaps(f14(x,y,z),y).  [resolve(139,d,133,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),x).  [resolve(139,d,134,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y) | -point1(x) | -point1(y) | -point1(z) | -overlaps(f14(x,y,z),z) | -overlaps(f14(x,y,z),y).  [resolve(139,d,135,d)].
140 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | point2(f20(x,y,z)).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(140,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(140,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(140,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(140,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(140,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(140,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(140,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f20(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(140,d,139,d)].
141 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(141,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(141,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(141,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(141,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(141,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(141,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(141,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f20(x,y,z),z) | overlaps(f20(x,y,z),x) | overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(141,d,139,d)].
142 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(142,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(142,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(142,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(142,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(142,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(142,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(142,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(142,d,139,d)].
143 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y).  [clausify(86)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(143,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(143,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(143,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(143,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(143,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(143,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(143,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f20(x,y,z),z) | -overlaps(f20(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(143,d,139,d)].
144 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [clausify(99)].
145 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [clausify(99)].
146 -point2(x) | -point2(y) | -point2(z) | -sum(x,y,z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [clausify(99)].
147 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | point2(f28(x,y,z)).  [clausify(99)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(147,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(147,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(147,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(147,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(147,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(147,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(147,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | point2(f28(x,y,z)) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(147,d,139,d)].
148 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y).  [clausify(99)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(148,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(148,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(148,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(148,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(148,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(148,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(148,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | overlaps(f28(x,y,z),z) | overlaps(f28(x,y,z),x) | overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(148,d,139,d)].
149 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x).  [clausify(99)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(149,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(149,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(149,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(149,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(149,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(149,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(149,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),x) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(149,d,139,d)].
150 -point2(x) | -point2(y) | -point2(z) | sum(x,y,z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y).  [clausify(99)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -line1(u) | -in1(x,u) | -in1(y,u) | in1(z,u).  [resolve(150,d,122,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(150,d,123,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(150,d,124,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point1(x) | -point1(y) | -point1(z) | -point1(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(150,d,125,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -line2(u) | -in2(x,u) | -in2(y,u) | in2(z,u).  [resolve(150,d,136,f)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | -overlaps(u,z) | overlaps(u,x) | overlaps(u,y).  [resolve(150,d,137,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,x).  [resolve(150,d,138,d)].
Derived: -point2(x) | -point2(y) | -point2(z) | -overlaps(f28(x,y,z),z) | -overlaps(f28(x,y,z),y) | -point2(x) | -point2(y) | -point2(z) | -point2(u) | overlaps(u,z) | -overlaps(u,y).  [resolve(150,d,139,d)].

Eliminating disjoint/2
151 -point1(x) | -point1(y) | disjoint(x,y) | overlaps(x,y).  [clausify(11)].
152 -point1(x) | -point1(y) | -disjoint(x,y) | -overlaps(x,y).  [clausify(11)].
153 -point1(x) | -point1(y) | part1(x,y) | disjoint(f10(x,y),y).  [clausify(28)].
Derived: -point1(x) | -point1(y) | part1(x,y) | -point1(f10(x,y)) | -point1(y) | -overlaps(f10(x,y),y).  [resolve(153,d,152,c)].
154 -point1(x) | -point1(y) | -disjoint(x,y) | -overlaps(x,y).  [clausify(34)].
155 -point1(x) | -point1(y) | disjoint(x,y) | overlaps(x,y).  [clausify(34)].
156 -point2(x) | -point2(y) | -disjoint(x,y) | -overlaps(x,y).  [clausify(83)].
Derived: -point2(f10(x,y)) | -point2(y) | -overlaps(f10(x,y),y) | -point1(x) | -point1(y) | part1(x,y).  [resolve(156,c,153,d)].
157 -point2(x) | -point2(y) | disjoint(x,y) | overlaps(x,y).  [clausify(83)].
158 -point2(x) | -point2(y) | part2(x,y) | disjoint(f24(x,y),y).  [clausify(90)].
Derived: -point2(x) | -point2(y) | part2(x,y) | -point1(f24(x,y)) | -point1(y) | -overlaps(f24(x,y),y).  [resolve(158,d,152,c)].
Derived: -point2(x) | -point2(y) | part2(x,y) | -point2(f24(x,y)) | -point2(y) | -overlaps(f24(x,y),y).  [resolve(158,d,156,c)].
159 -point2(x) | -point2(y) | -disjoint(x,y) | -overlaps(x,y).  [clausify(96)].
160 -point2(x) | -point2(y) | disjoint(x,y) | overlaps(x,y).  [clausify(96)].
160 -point2(x) | -point2(y) | disjoint(x,y) | overlaps(x,y).  [clausify(96)].

Prover catching signal 2.

============================== STATISTICS ============================

Given=0. Generated=0. Kept=0. proofs=0.
Usable=0. Sos=0. Demods=0. Limbo=0, Disabled=30. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.68.
User_CPU=0.75, System_CPU=0.01, Wall_clock=2.

Megs malloced by palloc(): 20.
  type (bytes each)        gets      frees     in use      bytes
chunk ( 112)               3392       3392          0      0.0 K
string_buf (  16)          3016       3016          0      0.0 K
token (  32)               6764       6764          0      0.0 K
pterm (  32)               3811       3811          0      0.0 K
hashtab (  16)              120        120          0      0.0 K
hashnode (  16)            1060       1060          0      0.0 K
term (  32)               45970      38368       7602    237.6 K
      term arg arrays:                                    70.6 K
attribute (  24)            121          0        121      2.8 K
ilist (  16)               1848        861        987     15.4 K
plist (  16)               3319       1749       1570     24.5 K
i2list (  16)               189        189          0      0.0 K
just (  24)                 674         12        662     15.5 K
parajust (  24)               0          0          0      0.0 K
instancejust (  16)           0          0          0      0.0 K
ivyjust (  40)                0          0          0      0.0 K
formula (  48)            10581       8240       2341    109.7 K
    formula arg arrays:                                   16.4 K
topform (  88)              674         12        662     56.9 K
clist_pos (  40)            340        310         30      1.2 K
clist (  32)                  6          0          6      0.2 K
context (1616)            47520      47520          0      0.0 K
trail (  24)            5865515    5865515          0      0.0 K
ac_match_pos (100072)          0          0          0      0.0 K
ac_match_free_vars_pos (20032)
                              0          0          0      0.0 K
btm_state ( 112)              0          0          0      0.0 K
btu_state ( 112)              0          0          0      0.0 K
ac_position (388448)          0          0          0      0.0 K
fpa_trie (  40)               0          0          0      0.0 K
fpa_state (  56)              0          0          0      0.0 K
fpa_index (  24)              0          0          0      0.0 K
fpa_chunk (  40)              0          0          0      0.0 K
fpa_list (  24)               0          0          0      0.0 K
      fpa_list chunks:                                     0.0 K
discrim (  24)                0          0          0      0.0 K
discrim_pos (  32)            0          0          0      0.0 K
flat2 (  56)                  0          0          0      0.0 K
flat (  72)                   0          0          0      0.0 K
flatterm (  56)               0          0          0      0.0 K
mindex (  48)                 0          0          0      0.0 K
mindex_pos ( 112)             0          0          0      0.0 K
lindex (  24)                 0          0          0      0.0 K
clash (  72)                  0          0          0      0.0 K
di_tree (  24)                0          0          0      0.0 K
avl_node (  32)               0          0          0      0.0 K

Memory report, 1 @ 20 = 20 megs (0.65 megs used).
List   1, length      18,      0.1 K
List   2, length     393,      6.1 K
List   3, length       4,      0.1 K
List   4, length      30,      0.9 K
List   5, length      10,      0.4 K
List   6, length      10,      0.5 K
List   7, length       4,      0.2 K
List   8, length       4,      0.2 K
List   9, length       6,      0.4 K
List  10, length       4,      0.3 K
List  14, length      46,      5.0 K
List 202, length       2,      3.2 K

============================== SELECTOR REPORT =======================
Sos_deleted=0, Sos_displaced=0, Sos_size=0
  SELECTOR       PART   PRIORITY      ORDER       SIZE   SELECTED
============================== end of selector report ================

============================== end of statistics =====================

Exiting with failure.

Process 19211 exit (SIGINT) Sun Jul 21 23:01:32 2013
