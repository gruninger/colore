============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 20377 was started by cchui on stl-ws4.mie.utoronto.ca,
Mon Jul 22 00:38:53 2013
The command was "prover9 -t 600 -f test/p9/dolce_constitution.p9 test/p9/dolce_constitution2ideal_cem_lower_reflect_down_foliation1.p9 test/p9/dolce_temporary_parthood.p9 test/p9/dolce_present.p9 test/p9/dolce_time_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/options.txt test/p9/ex0721_constitution_1_15.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_constitution.p9


formulas(sos).
(all x all y all t (K(x,y,t) -> (ED(x) | PD(x)) & (ED(y) | PD(y)) & T(t))).
(all x all y all t (K(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (K(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all t (K(x,y,t) -> (PD(x) <-> PD(y)))).
(all x all y all t (K(x,y,t) -> -K(y,x,t))).
(all x all y all z all t (K(x,y,t) & K(y,z,t) -> K(x,z,t))).
(all x all y all t (K(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t (K(x,y,t) <-> (all t2 (P(t2,t) -> K(x,y,t2))))).
(all x all y all t all y1 (K(x,y,t) & tP(y1,y,t) -> (exists x1 (tP(x1,x,t) & K(x1,y1,t))))).
(all x all t -K(x,x,t)).
end_of_list.

% Reading from file test/p9/dolce_constitution2ideal_cem_lower_reflect_down_foliation1.p9


formulas(sos).
(all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))).
(all x all y (in1(x,y) <-> PRE(x,y) & T(y) & ED(x) | PRE(y,x) & T(x) & ED(y) | x = y & (ED(y) | T(y)))).
(all x (point1(x) <-> T(x))).
(all x (line1(x) <-> ED(x))).
(all x all y all z (tpart(x,y,z) <-> tP(x,y,z) & ED(x) & ED(y) & T(z))).
(all x all y all z (tlt(x,y,z) <-> K(x,y,z) & ED(x) & ED(y) & T(z))).
(all x (L_1(x) <-> ED(x))).
(all x (L_2(x) <-> PD(x))).
(all x (L_3(x) <-> Q(x))).
(all x (L_4(x) <-> PED(x))).
(all x (L_5(x) <-> NPED(x))).
(all x all y (disjoint(x,y) -> DJ(x,y) & T(x) & T(y))).
(all x (poset_element(x) <-> ED(x))).
(all x (mereo_element(x) <-> PD(x))).
end_of_list.

% Reading from file test/p9/dolce_temporary_parthood.p9


formulas(sos).
(all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))).
(all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))).
(all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))).
(all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))).
(all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))).
(all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))).
(all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))).
(all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))).
(all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))).
(all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))).
(all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))).
(all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))).
(all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))).
(all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))).
(all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))).
end_of_list.

% Reading from file test/p9/dolce_present.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/ex0721_constitution_1_15.p9


formulas(goals).
(all x all y (in1(x,y) -> in1(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all t (K(x,y,t) -> (ED(x) | PD(x)) & (ED(y) | PD(y)) & T(t))) # label(non_clause).  [assumption].
2 (all x all y all t (K(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
3 (all x all y all t (K(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
4 (all x all y all t (K(x,y,t) -> (PD(x) <-> PD(y)))) # label(non_clause).  [assumption].
5 (all x all y all t (K(x,y,t) -> -K(y,x,t))) # label(non_clause).  [assumption].
6 (all x all y all z all t (K(x,y,t) & K(y,z,t) -> K(x,z,t))) # label(non_clause).  [assumption].
7 (all x all y all t (K(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
8 (all x all y all t (K(x,y,t) <-> (all t2 (P(t2,t) -> K(x,y,t2))))) # label(non_clause).  [assumption].
9 (all x all y all t all y1 (K(x,y,t) & tP(y1,y,t) -> (exists x1 (tP(x1,x,t) & K(x1,y1,t))))) # label(non_clause).  [assumption].
10 (all x all t -K(x,x,t)) # label(non_clause).  [assumption].
11 (all x all y (part1(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
12 (all x all y (in1(x,y) <-> PRE(x,y) & T(y) & ED(x) | PRE(y,x) & T(x) & ED(y) | x = y & (ED(y) | T(y)))) # label(non_clause).  [assumption].
13 (all x (point1(x) <-> T(x))) # label(non_clause).  [assumption].
14 (all x (line1(x) <-> ED(x))) # label(non_clause).  [assumption].
15 (all x all y all z (tpart(x,y,z) <-> tP(x,y,z) & ED(x) & ED(y) & T(z))) # label(non_clause).  [assumption].
16 (all x all y all z (tlt(x,y,z) <-> K(x,y,z) & ED(x) & ED(y) & T(z))) # label(non_clause).  [assumption].
17 (all x (L_1(x) <-> ED(x))) # label(non_clause).  [assumption].
18 (all x (L_2(x) <-> PD(x))) # label(non_clause).  [assumption].
19 (all x (L_3(x) <-> Q(x))) # label(non_clause).  [assumption].
20 (all x (L_4(x) <-> PED(x))) # label(non_clause).  [assumption].
21 (all x (L_5(x) <-> NPED(x))) # label(non_clause).  [assumption].
22 (all x all y (disjoint(x,y) -> DJ(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
23 (all x (poset_element(x) <-> ED(x))) # label(non_clause).  [assumption].
24 (all x (mereo_element(x) <-> PD(x))) # label(non_clause).  [assumption].
25 (all x all y all t (tP(x,y,t) -> ED(x) & ED(y) & T(t))) # label(non_clause).  [assumption].
26 (all x all y all t (tP(x,y,t) -> (PED(x) <-> PED(y)))) # label(non_clause).  [assumption].
27 (all x all y all t (tP(x,y,t) -> (NPED(x) <-> NPED(y)))) # label(non_clause).  [assumption].
28 (all x all y all z all t (tP(x,y,t) & tP(y,z,t) -> tP(x,z,t))) # label(non_clause).  [assumption].
29 (all x all y all z all t (ED(x) & ED(y) & PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & -tO(z,y,t))))) # label(non_clause).  [assumption].
30 (all x all t (ED(x) & PRE(x,t) -> tP(x,x,t))) # label(non_clause).  [assumption].
31 (all x all y all t (tP(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
32 (all x all y all t1 (tP(x,y,t1) -> (all t2 (P(t2,t1) -> tP(x,y,t2))))) # label(non_clause).  [assumption].
33 (all x all y all t (PRE(x,t) & PRE(y,t) & -tP(x,y,t) -> (exists z (tP(z,x,t) & tDJ(z,y,t))))) # label(non_clause).  [assumption].
34 (all x all y all t (tPP(x,y,t) <-> tP(x,y,t) & -tP(y,x,t))) # label(non_clause).  [assumption].
35 (all x all y all t (tO(x,y,t) <-> (exists z (tP(z,x,t) & tP(z,y,t))))) # label(non_clause).  [assumption].
36 (all x all y all t (tDJ(x,y,t) <-> -tO(x,y,t))) # label(non_clause).  [assumption].
37 (all x all y all t (tU(x,y,t) <-> (exists z (tP(x,z,t) & tP(y,z,t))))) # label(non_clause).  [assumption].
38 (all x all t (tAtP(x,t) <-> (all y (tP(y,x,t) -> y = x)))) # label(non_clause).  [assumption].
39 (all x all y all t (tU(x,y,t) -> (exists z all v (tO(v,z,t) <-> tO(v,x,t) | tO(v,y,t))))) # label(non_clause).  [assumption].
40 (all x all y all t (tO(x,y,t) -> (exists z all v (tPP(v,z,t) <-> tPP(v,x,t) & tPP(v,y,t))))) # label(non_clause).  [assumption].
41 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
42 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
43 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
44 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
45 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
46 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
47 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
48 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
49 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
50 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
51 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
52 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
53 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
54 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
55 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
56 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
57 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
58 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
59 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
60 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
61 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
62 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
63 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
64 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
65 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
66 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
67 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
68 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
69 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
70 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
71 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
72 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
73 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
74 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
75 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
76 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
77 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
78 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
79 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
80 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
81 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
82 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
83 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
84 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
85 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
86 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
87 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
88 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
89 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
90 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
91 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
92 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
93 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
94 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
95 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
96 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
97 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
98 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
99 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
100 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
101 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
102 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
103 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
104 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
105 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
106 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
107 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
108 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating part1/2
109 part1(x,y) | -P(x,y) | -T(x) | -T(y).  [clausify(11)].
110 -part1(x,y) | P(x,y).  [clausify(11)].
111 -part1(x,y) | T(x).  [clausify(11)].
112 -part1(x,y) | T(y).  [clausify(11)].

Eliminating point1/1
113 point1(x) | -T(x).  [clausify(13)].
114 -point1(x) | T(x).  [clausify(13)].

Eliminating line1/1
115 line1(x) | -ED(x).  [clausify(14)].
116 -line1(x) | ED(x).  [clausify(14)].

Eliminating tpart/3
117 tpart(x,y,z) | -tP(x,y,z) | -ED(x) | -ED(y) | -T(z).  [clausify(15)].
118 -tpart(x,y,z) | tP(x,y,z).  [clausify(15)].
119 -tpart(x,y,z) | ED(x).  [clausify(15)].
120 -tpart(x,y,z) | ED(y).  [clausify(15)].
121 -tpart(x,y,z) | T(z).  [clausify(15)].

Eliminating tlt/3
122 tlt(x,y,z) | -K(x,y,z) | -ED(x) | -ED(y) | -T(z).  [clausify(16)].
123 -tlt(x,y,z) | K(x,y,z).  [clausify(16)].
124 -tlt(x,y,z) | ED(x).  [clausify(16)].
125 -tlt(x,y,z) | ED(y).  [clausify(16)].
126 -tlt(x,y,z) | T(z).  [clausify(16)].

Eliminating L_1/1
127 L_1(x) | -ED(x).  [clausify(17)].
128 -L_1(x) | ED(x).  [clausify(17)].

Eliminating L_2/1
129 L_2(x) | -PD(x).  [clausify(18)].
130 -L_2(x) | PD(x).  [clausify(18)].

Eliminating L_3/1
131 L_3(x) | -Q(x).  [clausify(19)].
132 -L_3(x) | Q(x).  [clausify(19)].

Eliminating L_4/1
133 L_4(x) | -PED(x).  [clausify(20)].
134 -L_4(x) | PED(x).  [clausify(20)].

Eliminating L_5/1
135 L_5(x) | -NPED(x).  [clausify(21)].
136 -L_5(x) | NPED(x).  [clausify(21)].

Eliminating disjoint/2

Eliminating poset_element/1
137 poset_element(x) | -ED(x).  [clausify(23)].
138 -poset_element(x) | ED(x).  [clausify(23)].

Eliminating mereo_element/1
139 mereo_element(x) | -PD(x).  [clausify(24)].
140 -mereo_element(x) | PD(x).  [clausify(24)].

Eliminating tDJ/3
141 -tDJ(x,y,z) | -tO(x,y,z).  [clausify(36)].
142 -PRE(x,y) | -PRE(z,y) | tP(x,z,y) | tDJ(f4(x,z,y),z,y).  [clausify(33)].
Derived: -tO(f4(x,y,z),y,z) | -PRE(x,z) | -PRE(y,z) | tP(x,y,z).  [resolve(141,a,142,d)].
143 tDJ(x,y,z) | tO(x,y,z).  [clausify(36)].

Eliminating tU/3
144 tU(x,y,z) | -tP(x,u,z) | -tP(y,u,z).  [clausify(37)].
145 -tU(x,y,z) | tP(x,f6(x,y,z),z).  [clausify(37)].
146 -tU(x,y,z) | tP(y,f6(x,y,z),z).  [clausify(37)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(x,f6(x,u,z),z).  [resolve(144,a,145,a)].
Derived: -tP(x,y,z) | -tP(u,y,z) | tP(u,f6(x,u,z),z).  [resolve(144,a,146,a)].
147 -tU(x,y,z) | -tO(u,f8(x,y,z),z) | tO(u,x,z) | tO(u,y,z).  [clausify(39)].
Derived: -tO(x,f8(y,z,u),u) | tO(x,y,u) | tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(147,a,144,a)].
148 -tU(x,y,z) | tO(u,f8(x,y,z),z) | -tO(u,x,z).  [clausify(39)].
Derived: tO(x,f8(y,z,u),u) | -tO(x,y,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(148,a,144,a)].
149 -tU(x,y,z) | tO(u,f8(x,y,z),z) | -tO(u,y,z).  [clausify(39)].
Derived: tO(x,f8(y,z,u),u) | -tO(x,z,u) | -tP(y,w,u) | -tP(z,w,u).  [resolve(149,a,144,a)].

Eliminating tAtP/2
150 tAtP(x,y) | tP(f7(x,y),x,y).  [clausify(38)].
151 -tAtP(x,y) | -tP(z,x,y) | z = x.  [clausify(38)].
Derived: tP(f7(x,y),x,y) | -tP(z,x,y) | z = x.  [resolve(150,a,151,a)].
152 tAtP(x,y) | f7(x,y) != x.  [clausify(38)].
Derived: f7(x,y) != x | -tP(z,x,y) | z = x.  [resolve(152,a,151,a)].

Eliminating Q/1
153 -TQ(x) | Q(x).  [clausify(63)].
154 -Q(x) | PRE(x,f10(x)).  [clausify(41)].
155 -Q(x) | PT(x).  [clausify(60)].
Derived: -TQ(x) | PRE(x,f10(x)).  [resolve(153,b,154,a)].
Derived: -TQ(x) | PT(x).  [resolve(153,b,155,a)].
156 -PQ(x) | Q(x).  [clausify(63)].
Derived: -PQ(x) | PRE(x,f10(x)).  [resolve(156,b,154,a)].
Derived: -PQ(x) | PT(x).  [resolve(156,b,155,a)].
157 -AQ(x) | Q(x).  [clausify(63)].
Derived: -AQ(x) | PRE(x,f10(x)).  [resolve(157,b,154,a)].
Derived: -AQ(x) | PT(x).  [resolve(157,b,155,a)].
158 -PT(x) | ED(x) | PD(x) | Q(x) | AB(x).  [clausify(78)].
Derived: -PT(x) | ED(x) | PD(x) | AB(x) | PRE(x,f10(x)).  [resolve(158,d,154,a)].
159 PT(x) | -Q(x).  [clausify(78)].
160 -ED(x) | -Q(x).  [clausify(79)].
Derived: -ED(x) | -TQ(x).  [resolve(160,b,153,b)].
Derived: -ED(x) | -PQ(x).  [resolve(160,b,156,b)].
Derived: -ED(x) | -AQ(x).  [resolve(160,b,157,b)].
161 -PD(x) | -Q(x).  [clausify(80)].
Derived: -PD(x) | -TQ(x).  [resolve(161,b,153,b)].
Derived: -PD(x) | -PQ(x).  [resolve(161,b,156,b)].
Derived: -PD(x) | -AQ(x).  [resolve(161,b,157,b)].
162 -Q(x) | -AB(x).  [clausify(81)].
Derived: -AB(x) | -TQ(x).  [resolve(162,a,153,b)].
Derived: -AB(x) | -PQ(x).  [resolve(162,a,156,b)].
Derived: -AB(x) | -AQ(x).  [resolve(162,a,157,b)].
163 -Q(x) | TQ(x) | PQ(x) | AQ(x).  [clausify(87)].
Derived: TQ(x) | PQ(x) | AQ(x) | -PT(x) | ED(x) | PD(x) | AB(x).  [resolve(163,a,158,d)].
164 Q(x) | -TQ(x).  [clausify(87)].
165 Q(x) | -PQ(x).  [clausify(87)].
166 Q(x) | -AQ(x).  [clausify(87)].

Eliminating SUM/3
167 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f18(x,y,z)).  [clausify(59)].
168 -PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).  [clausify(44)].
169 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [clausify(59)].
170 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).  [clausify(59)].
171 -T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).  [clausify(59)].
Derived: -T(x) | -T(y) | -T(z) | T(f18(x,y,z)) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(167,d,168,c)].
Derived: -T(x) | -T(y) | -T(z) | T(f18(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(167,d,169,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f18(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(167,d,170,d)].
Derived: -T(x) | -T(y) | -T(z) | T(f18(x,y,z)) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(167,d,171,d)].
172 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f18(x,y,z),z) | O(f18(x,y,z),x) | O(f18(x,y,z),y).  [clausify(59)].
Derived: -T(x) | -T(y) | -T(z) | O(f18(x,y,z),z) | O(f18(x,y,z),x) | O(f18(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(172,d,168,c)].
Derived: -T(x) | -T(y) | -T(z) | O(f18(x,y,z),z) | O(f18(x,y,z),x) | O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(172,d,169,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f18(x,y,z),z) | O(f18(x,y,z),x) | O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(172,d,170,d)].
Derived: -T(x) | -T(y) | -T(z) | O(f18(x,y,z),z) | O(f18(x,y,z),x) | O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(172,d,171,d)].
173 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f18(x,y,z),z) | -O(f18(x,y,z),x).  [clausify(59)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),x) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(173,d,168,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(173,d,169,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(173,d,170,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),x) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(173,d,171,d)].
174 -T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f18(x,y,z),z) | -O(f18(x,y,z),y).  [clausify(59)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),y) | -PRE(u,x) | -PRE(u,y) | PRE(u,z).  [resolve(174,d,168,c)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | -O(u,z) | O(u,x) | O(u,y).  [resolve(174,d,169,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,x).  [resolve(174,d,170,d)].
Derived: -T(x) | -T(y) | -T(z) | -O(f18(x,y,z),z) | -O(f18(x,y,z),y) | -T(x) | -T(y) | -T(z) | -T(u) | O(u,z) | -O(u,y).  [resolve(174,d,171,d)].

Eliminating DJ/2
175 -T(x) | -T(y) | -DJ(x,y) | -O(x,y).  [clausify(54)].
176 -T(x) | -T(y) | P(x,y) | DJ(f12(x,y),y).  [clausify(51)].
Derived: -T(f12(x,y)) | -T(y) | -O(f12(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(175,c,176,d)].
177 -T(x) | -T(y) | DJ(x,y) | O(x,y).  [clausify(54)].

Eliminating U/2
178 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(55)].
179 -T(x) | -T(y) | -U(x,y) | P(x,f14(x,y)).  [clausify(55)].
180 -T(x) | -T(y) | -U(x,y) | P(y,f14(x,y)).  [clausify(55)].
181 -T(x) | -T(y) | -U(x,y) | T(f14(x,y)).  [clausify(55)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f14(x,y)).  [resolve(178,c,179,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f14(x,y)).  [resolve(178,c,180,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f14(x,y)).  [resolve(178,c,181,c)].
182 -T(x) | -T(y) | -U(x,y) | T(f16(x,y)).  [clausify(57)].
Derived: -T(x) | -T(y) | T(f16(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(182,c,178,c)].
183 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f16(x,y)) | O(z,x) | O(z,y).  [clausify(57)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f16(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(183,c,178,c)].
184 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f16(x,y)) | -O(z,x).  [clausify(57)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f16(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(184,c,178,c)].
185 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f16(x,y)) | -O(z,y).  [clausify(57)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f16(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(185,c,178,c)].

Eliminating AtP/1
186 AtP(x) | -T(x) | T(f15(x)).  [clausify(56)].
187 -AtP(x) | T(x).  [clausify(56)].
188 -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(56)].
Derived: -T(x) | T(f15(x)) | -T(y) | -P(y,x) | y = x.  [resolve(186,a,188,a)].
189 AtP(x) | -T(x) | P(f15(x),x).  [clausify(56)].
Derived: -T(x) | P(f15(x),x) | -T(y) | -P(y,x) | y = x.  [resolve(189,a,188,a)].
190 AtP(x) | -T(x) | f15(x) != x.  [clausify(56)].
Derived: -T(x) | f15(x) != x | -T(y) | -P(y,x) | y = x.  [resolve(190,a,188,a)].

Eliminating PT/1
191 -PT(x) | ED(x) | PD(x) | AB(x) | PRE(x,f10(x)).  [resolve(158,d,154,a)].
192 -ED(x) | PT(x).  [clausify(60)].
193 -PD(x) | PT(x).  [clausify(60)].
194 -AB(x) | PT(x).  [clausify(60)].
195 PT(x) | -ED(x).  [clausify(78)].
196 PT(x) | -PD(x).  [clausify(78)].
197 PT(x) | -AB(x).  [clausify(78)].
198 -TQ(x) | PT(x).  [resolve(153,b,155,a)].
199 -PQ(x) | PT(x).  [resolve(156,b,155,a)].
200 -AQ(x) | PT(x).  [resolve(157,b,155,a)].
Derived: ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -TQ(x).  [resolve(191,a,198,b)].
Derived: ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -PQ(x).  [resolve(191,a,199,b)].
Derived: ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -AQ(x).  [resolve(191,a,200,b)].
201 TQ(x) | PQ(x) | AQ(x) | -PT(x) | ED(x) | PD(x) | AB(x).  [resolve(163,a,158,d)].

Eliminating AS/1
202 -ED(x) | PED(x) | NPED(x) | AS(x).  [clausify(82)].
203 -AS(x) | ED(x).  [clausify(61)].
204 ED(x) | -AS(x).  [clausify(82)].
205 -PED(x) | -AS(x).  [clausify(83)].
206 -NPED(x) | -AS(x).  [clausify(84)].

Eliminating EV/1
207 -ACH(x) | EV(x).  [clausify(67)].
208 -EV(x) | PD(x).  [clausify(62)].
Derived: -ACH(x) | PD(x).  [resolve(207,b,208,a)].
209 -ACC(x) | EV(x).  [clausify(67)].
Derived: -ACC(x) | PD(x).  [resolve(209,b,208,a)].
210 -PD(x) | EV(x) | STV(x).  [clausify(85)].
211 PD(x) | -EV(x).  [clausify(85)].
212 -EV(x) | -STV(x).  [clausify(86)].
Derived: -STV(x) | -ACH(x).  [resolve(212,a,207,b)].
Derived: -STV(x) | -ACC(x).  [resolve(212,a,209,b)].
213 -EV(x) | ACH(x) | ACC(x).  [clausify(93)].
Derived: ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(213,a,210,b)].
214 EV(x) | -ACH(x).  [clausify(93)].
215 EV(x) | -ACC(x).  [clausify(93)].

Eliminating STV/1
216 -ST(x) | STV(x).  [clausify(68)].
217 -STV(x) | PD(x).  [clausify(62)].
Derived: -ST(x) | PD(x).  [resolve(216,b,217,a)].
218 -PRO(x) | STV(x).  [clausify(68)].
Derived: -PRO(x) | PD(x).  [resolve(218,b,217,a)].
219 PD(x) | -STV(x).  [clausify(85)].
220 -STV(x) | ST(x) | PRO(x).  [clausify(95)].
221 STV(x) | -ST(x).  [clausify(95)].
222 STV(x) | -PRO(x).  [clausify(95)].
223 -STV(x) | -ACH(x).  [resolve(212,a,207,b)].
Derived: -ACH(x) | -ST(x).  [resolve(223,a,216,b)].
Derived: -ACH(x) | -PRO(x).  [resolve(223,a,218,b)].
224 -STV(x) | -ACC(x).  [resolve(212,a,209,b)].
Derived: -ACC(x) | -ST(x).  [resolve(224,a,216,b)].
Derived: -ACC(x) | -PRO(x).  [resolve(224,a,218,b)].
225 ACH(x) | ACC(x) | -PD(x) | STV(x).  [resolve(213,a,210,b)].
Derived: ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(225,d,220,a)].

Eliminating R/1
226 -TR(x) | R(x).  [clausify(71)].
227 -R(x) | AB(x).  [clausify(64)].
Derived: -TR(x) | AB(x).  [resolve(226,b,227,a)].
228 -PR(x) | R(x).  [clausify(71)].
Derived: -PR(x) | AB(x).  [resolve(228,b,227,a)].
229 -AR(x) | R(x).  [clausify(71)].
Derived: -AR(x) | AB(x).  [resolve(229,b,227,a)].
230 -R(x) | TR(x) | PR(x) | AR(x).  [clausify(97)].
231 R(x) | -TR(x).  [clausify(97)].
232 R(x) | -PR(x).  [clausify(97)].
233 R(x) | -AR(x).  [clausify(97)].

Eliminating M/1
234 -PED(x) | M(x) | F(x) | POB(x).  [clausify(90)].
235 -M(x) | PED(x).  [clausify(65)].
236 PED(x) | -M(x).  [clausify(90)].
237 -M(x) | -F(x).  [clausify(91)].
238 -M(x) | -POB(x).  [clausify(91)].

Eliminating F/1

Eliminating POB/1
239 -APO(x) | POB(x).  [clausify(72)].
240 -POB(x) | PED(x).  [clausify(65)].
Derived: -APO(x) | PED(x).  [resolve(239,b,240,a)].
241 -NAPO(x) | POB(x).  [clausify(72)].
Derived: -NAPO(x) | PED(x).  [resolve(241,b,240,a)].
242 PED(x) | -POB(x).  [clausify(90)].
243 -POB(x) | APO(x) | NAPO(x).  [clausify(100)].
244 POB(x) | -APO(x).  [clausify(100)].
245 POB(x) | -NAPO(x).  [clausify(100)].

Eliminating NPOB/1
246 -MOB(x) | NPOB(x).  [clausify(73)].
247 -NPOB(x) | NPED(x).  [clausify(66)].
Derived: -MOB(x) | NPED(x).  [resolve(246,b,247,a)].
248 -SOB(x) | NPOB(x).  [clausify(73)].
Derived: -SOB(x) | NPED(x).  [resolve(248,b,247,a)].
249 -NPOB(x) | MOB(x) | SOB(x).  [clausify(102)].
250 NPOB(x) | -MOB(x).  [clausify(102)].
251 NPOB(x) | -SOB(x).  [clausify(102)].

Eliminating TL/1

Eliminating SL/1

Eliminating TR/1
252 -TR(x) | -PR(x).  [clausify(98)].
253 -T(x) | TR(x).  [clausify(74)].
Derived: -PR(x) | -T(x).  [resolve(252,a,253,b)].
254 -TR(x) | -AR(x).  [clausify(98)].
Derived: -AR(x) | -T(x).  [resolve(254,a,253,b)].
255 -TR(x) | AB(x).  [resolve(226,b,227,a)].
Derived: AB(x) | -T(x).  [resolve(255,a,253,b)].

Eliminating S/1

Eliminating ASO/1
256 -SAG(x) | ASO(x).  [clausify(77)].
257 -ASO(x) | SOB(x).  [clausify(76)].
Derived: -SAG(x) | SOB(x).  [resolve(256,b,257,a)].
258 -SC(x) | ASO(x).  [clausify(77)].
Derived: -SC(x) | SOB(x).  [resolve(258,b,257,a)].
259 -SOB(x) | ASO(x) | NASO(x).  [clausify(104)].
260 SOB(x) | -ASO(x).  [clausify(104)].
261 -ASO(x) | -NASO(x).  [clausify(105)].
Derived: -NASO(x) | -SAG(x).  [resolve(261,a,256,b)].
Derived: -NASO(x) | -SC(x).  [resolve(261,a,258,b)].
262 -ASO(x) | SAG(x) | SC(x).  [clausify(106)].
Derived: SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(262,a,259,b)].
263 ASO(x) | -SAG(x).  [clausify(106)].
264 ASO(x) | -SC(x).  [clausify(106)].

Eliminating NASO/1
265 SAG(x) | SC(x) | -SOB(x) | NASO(x).  [resolve(262,a,259,b)].
266 -NASO(x) | SOB(x).  [clausify(76)].
267 SOB(x) | -NASO(x).  [clausify(104)].
268 -NASO(x) | -SAG(x).  [resolve(261,a,256,b)].
269 -NASO(x) | -SC(x).  [resolve(261,a,258,b)].

Eliminating AB/1
270 ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -TQ(x).  [resolve(191,a,198,b)].
271 -ED(x) | -AB(x).  [clausify(79)].
272 -PD(x) | -AB(x).  [clausify(80)].
273 -AB(x) | -TQ(x).  [resolve(162,a,153,b)].
274 -AB(x) | -PQ(x).  [resolve(162,a,156,b)].
275 -AB(x) | -AQ(x).  [resolve(162,a,157,b)].
Derived: ED(x) | PD(x) | PRE(x,f10(x)) | -TQ(x) | -TQ(x).  [resolve(270,c,273,a)].
276 ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -PQ(x).  [resolve(191,a,199,b)].
Derived: ED(x) | PD(x) | PRE(x,f10(x)) | -PQ(x) | -PQ(x).  [resolve(276,c,274,a)].
277 ED(x) | PD(x) | AB(x) | PRE(x,f10(x)) | -AQ(x).  [resolve(191,a,200,b)].
Derived: ED(x) | PD(x) | PRE(x,f10(x)) | -AQ(x) | -AQ(x).  [resolve(277,c,275,a)].
278 -PR(x) | AB(x).  [resolve(228,b,227,a)].
Derived: -PR(x) | -ED(x).  [resolve(278,b,271,b)].
Derived: -PR(x) | -PD(x).  [resolve(278,b,272,b)].
Derived: -PR(x) | -TQ(x).  [resolve(278,b,273,a)].
Derived: -PR(x) | -PQ(x).  [resolve(278,b,274,a)].
Derived: -PR(x) | -AQ(x).  [resolve(278,b,275,a)].
279 -AR(x) | AB(x).  [resolve(229,b,227,a)].
Derived: -AR(x) | -ED(x).  [resolve(279,b,271,b)].
Derived: -AR(x) | -PD(x).  [resolve(279,b,272,b)].
Derived: -AR(x) | -TQ(x).  [resolve(279,b,273,a)].
Derived: -AR(x) | -PQ(x).  [resolve(279,b,274,a)].
Derived: -AR(x) | -AQ(x).  [resolve(279,b,275,a)].
280 AB(x) | -T(x).  [resolve(255,a,253,b)].
Derived: -T(x) | -ED(x).  [resolve(280,a,271,b)].
Derived: -T(x) | -PD(x).  [resolve(280,a,272,b)].
Derived: -T(x) | -TQ(x).  [resolve(280,a,273,a)].
Derived: -T(x) | -PQ(x).  [resolve(280,a,274,a)].
Derived: -T(x) | -AQ(x).  [resolve(280,a,275,a)].

Eliminating ACH/1
281 ACH(x) | ACC(x) | -PD(x) | ST(x) | PRO(x).  [resolve(225,d,220,a)].
282 -ACH(x) | -ACC(x).  [clausify(94)].
283 -ACH(x) | PD(x).  [resolve(207,b,208,a)].
284 -ACH(x) | -ST(x).  [resolve(223,a,216,b)].
285 -ACH(x) | -PRO(x).  [resolve(223,a,218,b)].

Eliminating ST/1

Eliminating PR/1

Eliminating APO/1

Eliminating MOB/1

Eliminating SAG/1

Eliminating ACC/1

Eliminating PRO/1

Eliminating NAPO/1

Eliminating SOB/1
286 -SC(x) | SOB(x).  [resolve(258,b,257,a)].
287 -SOB(x) | NPED(x).  [resolve(248,b,247,a)].
Derived: -SC(x) | NPED(x).  [resolve(286,b,287,a)].

Eliminating AR/1

Eliminating SC/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, ED, NPED, PD, PED, AQ, PQ, TQ, O, P, PRE, in1, PP, tP, K, tO, tPP ]).
Function symbol precedence:  function_order([ c1, c2, f7, f11, f12, f13, f14, f16, f17, f10, f15, f1, f4, f5, f6, f8, f9, f18, f2, f3 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.15 seconds.

============================== PROOF =================================

% Proof 1 at 0.18 (+ 0.01) seconds.
% Length of proof is 29.
% Level of proof is 8.
% Maximum clause weight is 10.000.
% Given clauses 290.

8 (all x all y all t (K(x,y,t) <-> (all t2 (P(t2,t) -> K(x,y,t2))))) # label(non_clause).  [assumption].
10 (all x all t -K(x,x,t)) # label(non_clause).  [assumption].
12 (all x all y (in1(x,y) <-> PRE(x,y) & T(y) & ED(x) | PRE(y,x) & T(x) & ED(y) | x = y & (ED(y) | T(y)))) # label(non_clause).  [assumption].
45 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
64 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
71 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
74 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
79 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
108 (all x all y (in1(x,y) -> in1(y,x))) # label(non_clause) # label(goal).  [goal].
226 -TR(x) | R(x).  [clausify(71)].
227 -R(x) | AB(x).  [clausify(64)].
253 -T(x) | TR(x).  [clausify(74)].
255 -TR(x) | AB(x).  [resolve(226,b,227,a)].
271 -ED(x) | -AB(x).  [clausify(79)].
280 AB(x) | -T(x).  [resolve(255,a,253,b)].
302 K(x,y,z) | P(f1(x,y,z),z).  [clausify(8)].
306 -K(x,x,y).  [clausify(10)].
315 -in1(x,y) | ED(x) | ED(y) | y = x.  [clausify(12)].
348 -P(x,y) | T(y).  [clausify(45)].
376 in1(c1,c2).  [deny(108)].
377 -in1(c2,c1).  [deny(108)].
445 -T(x) | -ED(x).  [resolve(280,a,271,b)].
619 P(f1(x,x,y),y).  [resolve(306,a,302,a)].
620 ED(c1) | ED(c2) | c2 = c1.  [resolve(376,a,315,a)].
710 T(x).  [resolve(619,a,348,a)].
864 -ED(x).  [back_unit_del(445),unit_del(a,710)].
909 c2 = c1.  [back_unit_del(620),unit_del(a,864),unit_del(b,864)].
914 -in1(c1,c1).  [back_rewrite(377),rewrite([909(1)])].
915 $F.  [back_rewrite(376),rewrite([909(2)]),unit_del(a,914)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=290. Generated=1388. Kept=604. proofs=1.
Usable=36. Sos=101. Demods=1. Limbo=6, Disabled=821. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=783. Back_subsumed=223.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=2. Back_unit_deleted=236.
Demod_attempts=404. Demod_rewrites=2.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=3490. Nonunit_bsub_feature_tests=5205.
Megabytes=1.51.
User_CPU=0.18, System_CPU=0.01, Wall_clock=1.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 20377 exit (max_proofs) Mon Jul 22 00:38:54 2013
