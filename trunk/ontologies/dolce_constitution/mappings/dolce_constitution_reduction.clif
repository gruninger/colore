/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger, Carmen Chui
 *******************************************************************************/
 
(cl-text dolce_constitution_reduction

(cl-comment "Translation definition for ideal_cem_lower_reflect_down_foliation, ideal_cem_downward_m_foliation, taxonomy into dolce_constitution.")

(forall (x y z)
	(iff (K x y z)
		(or (tlt1 x y z)(tlt4 x y z)(tppart2 x y z))))

(forall (x y z)
	(iff (tP x y z)
		(or (tpart1 x y z)(tpart4 x y z))))

(forall (x y)
	(iff (PRE x y)
		(or (and (in1 y x)(point1 y)(line1 x))
			(and (in2 y x)(point2 y)(line2 x))
			(and (in3 y x)(point3 y)(line3 x))
			(and (in4 y x)(point4 y)(line4 x)))))

(forall (x y)
	(iff (P x y)
		(part1 x y)))

(forall (x y)
	(iff (P x y)
		(part2 x y)))

(forall (x y)
	(iff (P x y)
		(part3 x y)))

(forall (x y)
	(iff (P x y)
		(part4 x y)))

(forall (x)
	(iff (PED x)(poset_element1 x)))

(forall (x)
	(iff (NPED x)(poset_element4 x)))

(forall (x)
	(iff (PED x)(mereo_element1 x)))

(forall (x)
	(iff (NPED x)(mereo_element4 x)))

(forall (x)
	(iff (T x)(point1 x)))

(forall (x)
	(iff (T x)(point2 x)))

(forall (x)
	(iff (T x)(point3 x)))

(forall (x)
	(iff (T x)(point4 x)))

(forall (x)
	(iff (ED x)
		(or (line1 x)(line4 x))))

(forall (x)
	(iff (PED x)
		(line1 x)))

(forall (x)
	(iff (NPED x)
		(line4 x)))

(forall (x)
	(iff (PD x)
		(line2 x)))

(forall (x)
	(iff (Q x)
		(line3 x)))

(forall (x)
	(iff (ED x)
		(L_1 x)))

(forall (x)
	(iff (PD x)
		(L_2 x)))

(forall (x)
	(iff (Q x)
		(L_3 x)))

(forall (x)
	(iff (PED x)
		(L_4 x)))

(forall (x)
	(iff (NPED x)
		(L_5 x)))

(cl-comment "additional lemmas")
(forall (x y t)
	(iff (tppart2 x y t)
		(and (tpart2 x y t)(not (= x y)))))

)