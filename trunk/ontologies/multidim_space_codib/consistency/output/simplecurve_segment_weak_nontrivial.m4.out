============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 6024 was started by torsten on torsten-laptop,
Fri Aug  1 13:28:17 2014
The command was "/cygdrive/c/Reasoning/prover9-bin/mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\simple_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\simplecurve_segment_weak_nontrivial.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\branchpoint.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\simple_curve_segment.p9


formulas(sos).
(all x12 (simplecurvesegment(x12) <-> curve(x12) & (exists x13 exists x11 (x13 != x11 & endpoint(x13,x12) & endpoint(x11,x12) & (all x14 (endpoint(x14,x12) -> x13 = x14 | x11 = x14)))) & -(exists x14 branchpoint(x14,x12)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9


formulas(sos).
(all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9


formulas(sos).
(all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))).
(all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9


formulas(sos).
(all x12 (closed(x12) <-> (all x11 -bcont(x11,x12)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9


formulas(sos).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9


formulas(sos).
(all x11 -inc(x11,x11)).
(all x22 all x21 (inc(x22,x21) -> inc(x21,x22))).
(all x32 all x31 (eqdim(x32,x31) -> -inc(x32,x31))).
(all x42 all x41 (inc(x42,x41) -> lt(x42,x41) | lt(x41,x42))).
(all x52 all x51 (cont(x52,x51) & lt(x52,x51) -> inc(x52,x51))).
(all x62 all x61 all x63 (inc(x62,x61) & p(x61,x63) -> inc(x62,x63))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9


formulas(sos).
(all x12 (atomicloopcurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (point(x11) & cont(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))) & -(exists x11 endpoint(x11,x12)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) -> c(x12,x11))).
(all x22 all x21 (sc(x22,x21) -> -(exists x23 (cont(x23,x22) & p(x23,x21))))).
(all x32 all x31 (sc(x32,x31) -> -(exists x33 (p(x33,x32) & cont(x33,x31))))).
(all x42 all x41 (c(x42,x41) & (all x43 (-cont(x43,x42) | -cont(x43,x41) | -p(x43,x42) & -p(x43,x41))) -> sc(x42,x41))).
(all x51 -sc(x51,x51)).
(all x62 all x61 (sc(x62,x61) -> sc(x61,x62))).
(all x72 all x71 (sc(x72,x71) -> (exists x73 (lt(x73,x72) & lt(x73,x71) & cont(x73,x72) & cont(x73,x71))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9


formulas(sos).
(all x12 all x11 (bcont(x12,x11) -> cont(x12,x11) & inc(x12,x11))).
(all x22 all x21 all x24 all x23 (sc(x22,x21) & min(x22) & p(x22,x24) & cont(x21,x24) & cont(x23,x22) & cont(x23,x21) -> bcont(x23,x22))).
(all x32 all x31 all x33 all x34 (sc(x32,x31) & p(x32,x34) & p(x31,x34) & cont(x33,x32) & cont(x33,x31) & covers(x34,x33) -> -bcont(x33,x34))).
(all x42 all x41 all x43 (bcont(x42,x41) & p(x41,x43) & (all x45 all x44 (p(x45,x43) & -po(x45,x41) & p(x44,x42) -> -cont(x44,x45))) -> bcont(x42,x43))).
(all x52 all x51 all x53 (bcont(x52,x51) & cont(x53,x52) -> bcont(x53,x51))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9


formulas(sos).
(all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9


formulas(sos).
(all x12 all x11 (endpoint(x12,x11) <-> point(x12) & curve(x11) & bcont(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9


formulas(sos).
(all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\simplecurve_segment_weak_nontrivial.p9


formulas(sos).
(exists x11 (simplecurvesegment(x11) & atomiccurvesegment(x11))).
(exists x21 exists x22 branchpoint(x21,x22)).
(exists x33 exists x34 exists x31 exists x32 exists x35 exists x36 (endpoint(x33,x34) & endpoint(x31,x32) & endpoint(x35,x36) & x33 != x31 & x34 != x32 & x33 = x35 & x34 != x36)).
(exists x41 (simplecurvesegment(x41) & -atomiccurvesegment(x41))).
(exists x51 atomiccurvesegment(x51)).
(exists x61 atomicloopcurve(x61)).
(exists x71 atomicraycurve(x71)).
(exists x81 -s(x81)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\branchpoint.p9


formulas(sos).
(all x12 all x11 (branchpoint(x12,x11) <-> point(x12) & curve(x11) & cont(x12,x11) & ((exists x13 exists x15 (atomiccurvesegment(x13) & atomicloopcurve(x15) & cont(x13,x11) & cont(x15,x11) & x13 != x15 & cont(x12,x13) & cont(x12,x15))) | (exists x13 exists x15 exists x14 (atomiccurvesegment(x13) & atomiccurvesegment(x15) & atomiccurvesegment(x14) & cont(x13,x11) & cont(x15,x11) & cont(x14,x11) & x13 != x15 & x13 != x14 & x15 != x14 & cont(x12,x13) & cont(x12,x15) & cont(x12,x14)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> s(x12) & -(exists x11 (s(x11) & lt(x12,x11))))).
(all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & lt(x21,x22) -> zex(x21))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9


formulas(sos).
(all x2 (pointregion(x2) <-> mindim(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9


formulas(sos).
(all x12 (atomiccurvesegment(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x14 exists x13 (endpoint(x14,x12) & endpoint(x13,x12) & x14 != x13 & (all x15 (point(x15) & cont(x15,x12) -> x14 = x15 | x13 = x15)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9


formulas(sos).
(all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9


formulas(sos).
(all x2 (point(x2) <-> min(x2) & mindim(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9


formulas(sos).
(all x12 (atomicraycurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (endpoint(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9


formulas(sos).
(all x12 (curve(x12) <-> (all x11 (point(x11) -> covers(x12,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9


formulas(sos).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9


formulas(sos).
(all x2 (atomiccurve(x2) <-> atomiccurvesegment(x2) | atomicloopcurve(x2) | atomicraycurve(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9


formulas(sos).
(all x2 (pointregion(x2) -> point(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9


formulas(sos).
(all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) -> po(x11,x11))).
(all x22 all x21 (po(x22,x21) -> po(x21,x22))).
(all x32 all x31 (po(x32,x31) -> eqdim(x32,x31))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9


formulas(sos).
(all x12 all x11 (atomiccurve(x12) & -atomicloopcurve(x12) & cont(x11,x12) & x12 != x11 -> point(x11) & bcont(x11,x12))).
(all x22 all x23 all x21 all x24 (atomiccurve(x22) & point(x23) & point(x21) & point(x24) & cont(x23,x22) & cont(x21,x22) & cont(x24,x22) -> x23 = x21 | x23 = x24 | x21 = x24)).
(all x32 all x33 all x31 (atomiccurve(x32) & point(x33) & point(x31) & x33 != x31 & cont(x33,x32) & cont(x31,x32) -> -closed(x32))).
(all x42 (curve(x42) -> (exists x41 (p(x41,x42) & atomiccurve(x41))))).
(all x52 all x51 (point(x52) & curve(x51) & -atomiccurvesegment(x51) -> (bcont(x52,x51) <-> (exists x53 (atomiccurve(x53) & p(x53,x51) & bcont(x52,x53) & (all x54 (p(x54,x51) & atomiccurve(x54) & bcont(x52,x54) -> x53 = x54))))))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 (simplecurvesegment(x12) <-> curve(x12) & (exists x13 exists x11 (x13 != x11 & endpoint(x13,x12) & endpoint(x11,x12) & (all x14 (endpoint(x14,x12) -> x13 = x14 | x11 = x14)))) & -(exists x14 branchpoint(x14,x12)))) # label(non_clause).  [assumption].
2 (all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))) # label(non_clause).  [assumption].
3 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
4 (all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))) # label(non_clause).  [assumption].
5 (all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))) # label(non_clause).  [assumption].
6 (all x12 (closed(x12) <-> (all x11 -bcont(x11,x12)))) # label(non_clause).  [assumption].
7 (all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))) # label(non_clause).  [assumption].
8 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
9 (all x11 -inc(x11,x11)) # label(non_clause).  [assumption].
10 (all x22 all x21 (inc(x22,x21) -> inc(x21,x22))) # label(non_clause).  [assumption].
11 (all x32 all x31 (eqdim(x32,x31) -> -inc(x32,x31))) # label(non_clause).  [assumption].
12 (all x42 all x41 (inc(x42,x41) -> lt(x42,x41) | lt(x41,x42))) # label(non_clause).  [assumption].
13 (all x52 all x51 (cont(x52,x51) & lt(x52,x51) -> inc(x52,x51))) # label(non_clause).  [assumption].
14 (all x62 all x61 all x63 (inc(x62,x61) & p(x61,x63) -> inc(x62,x63))) # label(non_clause).  [assumption].
15 (all x12 (atomicloopcurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (point(x11) & cont(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))) & -(exists x11 endpoint(x11,x12)))) # label(non_clause).  [assumption].
16 (all x12 all x11 (sc(x12,x11) -> c(x12,x11))) # label(non_clause).  [assumption].
17 (all x22 all x21 (sc(x22,x21) -> -(exists x23 (cont(x23,x22) & p(x23,x21))))) # label(non_clause).  [assumption].
18 (all x32 all x31 (sc(x32,x31) -> -(exists x33 (p(x33,x32) & cont(x33,x31))))) # label(non_clause).  [assumption].
19 (all x42 all x41 (c(x42,x41) & (all x43 (-cont(x43,x42) | -cont(x43,x41) | -p(x43,x42) & -p(x43,x41))) -> sc(x42,x41))) # label(non_clause).  [assumption].
20 (all x51 -sc(x51,x51)) # label(non_clause).  [assumption].
21 (all x62 all x61 (sc(x62,x61) -> sc(x61,x62))) # label(non_clause).  [assumption].
22 (all x72 all x71 (sc(x72,x71) -> (exists x73 (lt(x73,x72) & lt(x73,x71) & cont(x73,x72) & cont(x73,x71))))) # label(non_clause).  [assumption].
23 (all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
24 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
25 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
26 (all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
27 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
28 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
29 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
30 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].
31 (all x12 all x11 (bcont(x12,x11) -> cont(x12,x11) & inc(x12,x11))) # label(non_clause).  [assumption].
32 (all x22 all x21 all x24 all x23 (sc(x22,x21) & min(x22) & p(x22,x24) & cont(x21,x24) & cont(x23,x22) & cont(x23,x21) -> bcont(x23,x22))) # label(non_clause).  [assumption].
33 (all x32 all x31 all x33 all x34 (sc(x32,x31) & p(x32,x34) & p(x31,x34) & cont(x33,x32) & cont(x33,x31) & covers(x34,x33) -> -bcont(x33,x34))) # label(non_clause).  [assumption].
34 (all x42 all x41 all x43 (bcont(x42,x41) & p(x41,x43) & (all x45 all x44 (p(x45,x43) & -po(x45,x41) & p(x44,x42) -> -cont(x44,x45))) -> bcont(x42,x43))) # label(non_clause).  [assumption].
35 (all x52 all x51 all x53 (bcont(x52,x51) & cont(x53,x52) -> bcont(x53,x51))) # label(non_clause).  [assumption].
36 (all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)) # label(non_clause).  [assumption].
37 (all x12 all x11 (endpoint(x12,x11) <-> point(x12) & curve(x11) & bcont(x12,x11))) # label(non_clause).  [assumption].
38 (all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))) # label(non_clause).  [assumption].
39 (exists x11 (simplecurvesegment(x11) & atomiccurvesegment(x11))) # label(non_clause).  [assumption].
40 (exists x21 exists x22 branchpoint(x21,x22)) # label(non_clause).  [assumption].
41 (exists x33 exists x34 exists x31 exists x32 exists x35 exists x36 (endpoint(x33,x34) & endpoint(x31,x32) & endpoint(x35,x36) & x33 != x31 & x34 != x32 & x33 = x35 & x34 != x36)) # label(non_clause).  [assumption].
42 (exists x41 (simplecurvesegment(x41) & -atomiccurvesegment(x41))) # label(non_clause).  [assumption].
43 (exists x51 atomiccurvesegment(x51)) # label(non_clause).  [assumption].
44 (exists x61 atomicloopcurve(x61)) # label(non_clause).  [assumption].
45 (exists x71 atomicraycurve(x71)) # label(non_clause).  [assumption].
46 (exists x81 -s(x81)) # label(non_clause).  [assumption].
47 (all x12 all x11 (branchpoint(x12,x11) <-> point(x12) & curve(x11) & cont(x12,x11) & ((exists x13 exists x15 (atomiccurvesegment(x13) & atomicloopcurve(x15) & cont(x13,x11) & cont(x15,x11) & x13 != x15 & cont(x12,x13) & cont(x12,x15))) | (exists x13 exists x15 exists x14 (atomiccurvesegment(x13) & atomiccurvesegment(x15) & atomiccurvesegment(x14) & cont(x13,x11) & cont(x15,x11) & cont(x14,x11) & x13 != x15 & x13 != x14 & x15 != x14 & cont(x12,x13) & cont(x12,x15) & cont(x12,x14)))))) # label(non_clause).  [assumption].
48 (all x12 (maxdim(x12) <-> s(x12) & -(exists x11 (s(x11) & lt(x12,x11))))) # label(non_clause).  [assumption].
49 (all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & lt(x21,x22) -> zex(x21))))) # label(non_clause).  [assumption].
50 (all x2 (pointregion(x2) <-> mindim(x2))) # label(non_clause).  [assumption].
51 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))) # label(non_clause).  [assumption].
52 (all x12 (atomiccurvesegment(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x14 exists x13 (endpoint(x14,x12) & endpoint(x13,x12) & x14 != x13 & (all x15 (point(x15) & cont(x15,x12) -> x14 = x15 | x13 = x15)))))) # label(non_clause).  [assumption].
53 (all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))) # label(non_clause).  [assumption].
54 (all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))) # label(non_clause).  [assumption].
55 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
56 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
57 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
58 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
59 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
60 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
61 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
62 (all x2 (point(x2) <-> min(x2) & mindim(x2))) # label(non_clause).  [assumption].
63 (all x12 (atomicraycurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (endpoint(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))))) # label(non_clause).  [assumption].
64 (all x12 (curve(x12) <-> (all x11 (point(x11) -> covers(x12,x11))))) # label(non_clause).  [assumption].
65 (all x2 (atomiccurve(x2) <-> atomiccurvesegment(x2) | atomicloopcurve(x2) | atomicraycurve(x2))) # label(non_clause).  [assumption].
66 (all x2 (pointregion(x2) -> point(x2))) # label(non_clause).  [assumption].
67 (all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))) # label(non_clause).  [assumption].
68 (all x11 (s(x11) & -zex(x11) -> po(x11,x11))) # label(non_clause).  [assumption].
69 (all x22 all x21 (po(x22,x21) -> po(x21,x22))) # label(non_clause).  [assumption].
70 (all x32 all x31 (po(x32,x31) -> eqdim(x32,x31))) # label(non_clause).  [assumption].
71 (all x12 all x11 (atomiccurve(x12) & -atomicloopcurve(x12) & cont(x11,x12) & x12 != x11 -> point(x11) & bcont(x11,x12))) # label(non_clause).  [assumption].
72 (all x22 all x23 all x21 all x24 (atomiccurve(x22) & point(x23) & point(x21) & point(x24) & cont(x23,x22) & cont(x21,x22) & cont(x24,x22) -> x23 = x21 | x23 = x24 | x21 = x24)) # label(non_clause).  [assumption].
73 (all x32 all x33 all x31 (atomiccurve(x32) & point(x33) & point(x31) & x33 != x31 & cont(x33,x32) & cont(x31,x32) -> -closed(x32))) # label(non_clause).  [assumption].
74 (all x42 (curve(x42) -> (exists x41 (p(x41,x42) & atomiccurve(x41))))) # label(non_clause).  [assumption].
75 (all x52 all x51 (point(x52) & curve(x51) & -atomiccurvesegment(x51) -> (bcont(x52,x51) <-> (exists x53 (atomiccurve(x53) & p(x53,x51) & bcont(x52,x53) & (all x54 (p(x54,x51) & atomiccurve(x54) & bcont(x52,x54) -> x53 = x54))))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-simplecurvesegment(x) | curve(x).
-simplecurvesegment(x) | f2(x) != f1(x).
-simplecurvesegment(x) | endpoint(f1(x),x).
-simplecurvesegment(x) | endpoint(f2(x),x).
-simplecurvesegment(x) | -endpoint(y,x) | y = f1(x) | y = f2(x).
-simplecurvesegment(x) | -branchpoint(y,x).
simplecurvesegment(x) | -curve(x) | y = z | -endpoint(z,x) | -endpoint(y,x) | endpoint(f3(x,z,y),x) | branchpoint(f4(x),x).
simplecurvesegment(x) | -curve(x) | y = z | -endpoint(z,x) | -endpoint(y,x) | f3(x,z,y) != z | branchpoint(f4(x),x).
simplecurvesegment(x) | -curve(x) | y = z | -endpoint(z,x) | -endpoint(y,x) | f3(x,z,y) != y | branchpoint(f4(x),x).
-p(x,y) | cont(x,y).
-p(x,y) | eqdim(x,y).
p(x,y) | -cont(x,y) | -eqdim(x,y).
-eqdim(x,y) | leq(x,y).
-eqdim(x,y) | leq(y,x).
eqdim(x,y) | -leq(x,y) | -leq(y,x).
-max(x) | s(x).
-max(x) | -zex(x).
-max(x) | -pp(x,y).
max(x) | -s(x) | zex(x) | pp(x,f5(x)).
-min(x) | s(x).
-min(x) | -zex(x).
-min(x) | -pp(y,x).
min(x) | -s(x) | zex(x) | pp(f6(x),x).
-closed(x) | -bcont(y,x).
closed(x) | bcont(f7(x),x).
-cont(x,y) | lt(x,y) | eqdim(x,y).
mindim(c1).
-inc(x,x).
-inc(x,y) | inc(y,x).
-eqdim(x,y) | -inc(x,y).
-inc(x,y) | lt(x,y) | lt(y,x).
-cont(x,y) | -lt(x,y) | inc(x,y).
-inc(x,y) | -p(y,z) | inc(x,z).
-atomicloopcurve(x) | curve(x).
-atomicloopcurve(x) | -pp(y,x).
-atomicloopcurve(x) | point(f8(x)).
-atomicloopcurve(x) | cont(f8(x),x).
-atomicloopcurve(x) | -point(y) | -cont(y,x) | f8(x) = y.
-atomicloopcurve(x) | -endpoint(y,x).
atomicloopcurve(x) | -curve(x) | pp(f9(x),x) | -point(y) | -cont(y,x) | point(f10(x,y)) | endpoint(f11(x),x).
atomicloopcurve(x) | -curve(x) | pp(f9(x),x) | -point(y) | -cont(y,x) | cont(f10(x,y),x) | endpoint(f11(x),x).
atomicloopcurve(x) | -curve(x) | pp(f9(x),x) | -point(y) | -cont(y,x) | y != f10(x,y) | endpoint(f11(x),x).
-sc(x,y) | c(x,y).
-sc(x,y) | -cont(z,x) | -p(z,y).
-sc(x,y) | -p(z,x) | -cont(z,y).
-c(x,y) | cont(f12(x,y),x) | sc(x,y).
-c(x,y) | cont(f12(x,y),y) | sc(x,y).
-c(x,y) | p(f12(x,y),x) | p(f12(x,y),y) | sc(x,y).
-sc(x,x).
-sc(x,y) | sc(y,x).
-sc(x,y) | lt(f13(x,y),x).
-sc(x,y) | lt(f13(x,y),y).
-sc(x,y) | cont(f13(x,y),x).
-sc(x,y) | cont(f13(x,y),y).
-s(x) | zex(x) | cont(x,x).
s(x) | -cont(x,x).
-zex(x) | -cont(x,x).
-cont(x,y) | -cont(y,x) | y = x.
-cont(x,y) | -cont(y,z) | cont(x,z).
-zex(x) | s(x).
-zex(x) | -cont(y,x).
-zex(x) | -cont(x,y).
-zex(x) | -zex(y) | y = x.
-gt(x,y) | lt(y,x).
gt(x,y) | -lt(y,x).
-geq(x,y) | leq(y,x).
geq(x,y) | -leq(y,x).
-lt(x,y) | leq(x,y).
-lt(x,y) | -eqdim(x,y).
lt(x,y) | -leq(x,y) | eqdim(x,y).
-bcont(x,y) | cont(x,y).
-bcont(x,y) | inc(x,y).
-sc(x,y) | -min(x) | -p(x,z) | -cont(y,z) | -cont(u,x) | -cont(u,y) | bcont(u,x).
-sc(x,y) | -p(x,z) | -p(y,z) | -cont(u,x) | -cont(u,y) | -covers(z,u) | -bcont(u,z).
-bcont(x,y) | -p(y,z) | p(f14(x,y,z),z) | bcont(x,z).
-bcont(x,y) | -p(y,z) | -po(f14(x,y,z),y) | bcont(x,z).
-bcont(x,y) | -p(y,z) | p(f15(x,y,z),x) | bcont(x,z).
-bcont(x,y) | -p(y,z) | cont(f15(x,y,z),f14(x,y,z)) | bcont(x,z).
-bcont(x,y) | -cont(z,x) | bcont(z,y).
-pp(x,y) | p(x,y).
-pp(x,y) | y != x.
pp(x,y) | -p(x,y) | y = x.
-endpoint(x,y) | point(x).
-endpoint(x,y) | curve(y).
-endpoint(x,y) | bcont(x,y).
endpoint(x,y) | -point(x) | -curve(y) | -bcont(x,y).
-c(x,y) | cont(f16(x,y),x).
-c(x,y) | cont(f16(x,y),y).
c(x,y) | -cont(z,x) | -cont(z,y).
simplecurvesegment(c2).
atomiccurvesegment(c2).
branchpoint(c3,c4).
endpoint(c5,c6).
endpoint(c7,c8).
endpoint(c9,c10).
c5 != c7.
c6 != c8.
c9 = c5.
c10 != c6.
simplecurvesegment(c11).
-atomiccurvesegment(c11).
atomiccurvesegment(c12).
atomicloopcurve(c13).
atomicraycurve(c14).
-s(c15).
-branchpoint(x,y) | point(x).
-branchpoint(x,y) | curve(y).
-branchpoint(x,y) | cont(x,y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(f19(x,y),y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(f20(x,y),y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(f21(x,y),y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(x,f19(x,y)).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(x,f20(x,y)).
-branchpoint(x,y) | atomiccurvesegment(f17(x,y)) | cont(x,f21(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(f19(x,y),y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(f20(x,y),y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(f21(x,y),y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(x,f19(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(x,f20(x,y)).
-branchpoint(x,y) | atomicloopcurve(f18(x,y)) | cont(x,f21(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(f19(x,y),y).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(f20(x,y),y).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(f21(x,y),y).
-branchpoint(x,y) | cont(f17(x,y),y) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | cont(f17(x,y),y) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | cont(f17(x,y),y) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(x,f19(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(x,f20(x,y)).
-branchpoint(x,y) | cont(f17(x,y),y) | cont(x,f21(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(f19(x,y),y).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(f20(x,y),y).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(f21(x,y),y).
-branchpoint(x,y) | cont(f18(x,y),y) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | cont(f18(x,y),y) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | cont(f18(x,y),y) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(x,f19(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(x,f20(x,y)).
-branchpoint(x,y) | cont(f18(x,y),y) | cont(x,f21(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(f19(x,y),y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(f20(x,y),y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(f21(x,y),y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(x,f19(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(x,f20(x,y)).
-branchpoint(x,y) | f18(x,y) != f17(x,y) | cont(x,f21(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(f19(x,y),y).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(f20(x,y),y).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(f21(x,y),y).
-branchpoint(x,y) | cont(x,f17(x,y)) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | cont(x,f17(x,y)) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | cont(x,f17(x,y)) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(x,f19(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(x,f20(x,y)).
-branchpoint(x,y) | cont(x,f17(x,y)) | cont(x,f21(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | atomiccurvesegment(f19(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | atomiccurvesegment(f20(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | atomiccurvesegment(f21(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(f19(x,y),y).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(f20(x,y),y).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(f21(x,y),y).
-branchpoint(x,y) | cont(x,f18(x,y)) | f20(x,y) != f19(x,y).
-branchpoint(x,y) | cont(x,f18(x,y)) | f21(x,y) != f19(x,y).
-branchpoint(x,y) | cont(x,f18(x,y)) | f20(x,y) != f21(x,y).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(x,f19(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(x,f20(x,y)).
-branchpoint(x,y) | cont(x,f18(x,y)) | cont(x,f21(x,y)).
branchpoint(x,y) | -point(x) | -curve(y) | -cont(x,y) | -atomiccurvesegment(z) | -atomicloopcurve(u) | -cont(z,y) | -cont(u,y) | u = z | -cont(x,z) | -cont(x,u).
branchpoint(x,y) | -point(x) | -curve(y) | -cont(x,y) | -atomiccurvesegment(z) | -atomiccurvesegment(u) | -atomiccurvesegment(w) | -cont(z,y) | -cont(u,y) | -cont(w,y) | u = z | w = z | u = w | -cont(x,z) | -cont(x,u) | -cont(x,w).
-maxdim(x) | s(x).
-maxdim(x) | -s(y) | -lt(x,y).
maxdim(x) | -s(x) | s(f22(x)).
maxdim(x) | -s(x) | lt(x,f22(x)).
-mindim(x) | s(x).
-mindim(x) | -zex(x).
-mindim(x) | -s(y) | -lt(y,x) | zex(y).
mindim(x) | -s(x) | zex(x) | s(f23(x)).
mindim(x) | -s(x) | zex(x) | lt(f23(x),x).
mindim(x) | -s(x) | zex(x) | -zex(f23(x)).
-pointregion(x) | mindim(x).
pointregion(x) | -mindim(x).
-covers(x,y) | lt(y,x).
-covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).
covers(x,y) | -lt(y,x) | s(f24(x,y)).
covers(x,y) | -lt(y,x) | lt(y,f24(x,y)).
covers(x,y) | -lt(y,x) | lt(f24(x,y),x).
-atomiccurvesegment(x) | curve(x).
-atomiccurvesegment(x) | -pp(y,x).
-atomiccurvesegment(x) | endpoint(f25(x),x).
-atomiccurvesegment(x) | endpoint(f26(x),x).
-atomiccurvesegment(x) | f25(x) != f26(x).
-atomiccurvesegment(x) | -point(y) | -cont(y,x) | y = f25(x) | y = f26(x).
atomiccurvesegment(x) | -curve(x) | pp(f27(x),x) | -endpoint(y,x) | -endpoint(z,x) | y = z | point(f28(x,y,z)).
atomiccurvesegment(x) | -curve(x) | pp(f27(x),x) | -endpoint(y,x) | -endpoint(z,x) | y = z | cont(f28(x,y,z),x).
atomiccurvesegment(x) | -curve(x) | pp(f27(x),x) | -endpoint(y,x) | -endpoint(z,x) | y = z | f28(x,y,z) != y.
atomiccurvesegment(x) | -curve(x) | pp(f27(x),x) | -endpoint(y,x) | -endpoint(z,x) | y = z | f28(x,y,z) != z.
-sc(x,y) | cont(f29(x,y),x).
-sc(x,y) | cont(f29(x,y),y).
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,x).
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,y).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f30(x,y),x).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f30(x,y),y).
sc(x,y) | -cont(z,x) | -cont(z,y) | -lt(f30(x,y),x) | -lt(f30(x,y),y).
-inc(x,y) | lt(f31(x,y),x) | lt(f32(x,y),y).
-inc(x,y) | lt(f31(x,y),x) | cont(f32(x,y),y).
-inc(x,y) | lt(f31(x,y),x) | p(f32(x,y),x).
-inc(x,y) | cont(f31(x,y),x) | lt(f32(x,y),y).
-inc(x,y) | cont(f31(x,y),x) | cont(f32(x,y),y).
-inc(x,y) | cont(f31(x,y),x) | p(f32(x,y),x).
-inc(x,y) | p(f31(x,y),y) | lt(f32(x,y),y).
-inc(x,y) | p(f31(x,y),y) | cont(f32(x,y),y).
-inc(x,y) | p(f31(x,y),y) | p(f32(x,y),x).
inc(x,y) | -lt(z,x) | -cont(z,x) | -p(z,y).
inc(x,y) | -lt(z,y) | -cont(z,y) | -p(z,x).
-leq(x,y) | s(x).
-leq(x,y) | s(y).
-zex(x) | s(x).
-s(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-zex(x) | -zex(y) | y = x.
-zex(x) | -s(y) | leq(x,y).
-point(x) | min(x).
-point(x) | mindim(x).
point(x) | -min(x) | -mindim(x).
-atomicraycurve(x) | curve(x).
-atomicraycurve(x) | -pp(y,x).
-atomicraycurve(x) | endpoint(f33(x),x).
-atomicraycurve(x) | -point(y) | -cont(y,x) | f33(x) = y.
atomicraycurve(x) | -curve(x) | pp(f34(x),x) | -endpoint(y,x) | point(f35(x,y)).
atomicraycurve(x) | -curve(x) | pp(f34(x),x) | -endpoint(y,x) | cont(f35(x,y),x).
atomicraycurve(x) | -curve(x) | pp(f34(x),x) | -endpoint(y,x) | y != f35(x,y).
-curve(x) | -point(y) | covers(x,y).
curve(x) | point(f36(x)).
curve(x) | -covers(x,f36(x)).
-atomiccurve(x) | atomiccurvesegment(x) | atomicloopcurve(x) | atomicraycurve(x).
atomiccurve(x) | -atomiccurvesegment(x).
atomiccurve(x) | -atomicloopcurve(x).
atomiccurve(x) | -atomicraycurve(x).
-pointregion(x) | point(x).
-po(x,y) | p(f37(x,y),x).
-po(x,y) | p(f37(x,y),y).
po(x,y) | -p(z,x) | -p(z,y).
-s(x) | zex(x) | po(x,x).
-po(x,y) | po(y,x).
-po(x,y) | eqdim(x,y).
-atomiccurve(x) | atomicloopcurve(x) | -cont(y,x) | y = x | point(y).
-atomiccurve(x) | atomicloopcurve(x) | -cont(y,x) | y = x | bcont(y,x).
-atomiccurve(x) | -point(y) | -point(z) | -point(u) | -cont(y,x) | -cont(z,x) | -cont(u,x) | y = z | u = y | u = z.
-atomiccurve(x) | -point(y) | -point(z) | y = z | -cont(y,x) | -cont(z,x) | -closed(x).
-curve(x) | p(f38(x),x).
-curve(x) | atomiccurve(f38(x)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | atomiccurve(f39(x,y)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | p(f39(x,y),y).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | bcont(x,f39(x,y)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | -p(z,y) | -atomiccurve(z) | -bcont(x,z) | z = f39(x,y).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | p(f40(x,y,z),y).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | atomiccurve(f40(x,y,z)).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | bcont(x,f40(x,y,z)).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | f40(x,y,z) != z.
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=1191, kept=943.
Selections=1, assignments=2, propagations=166, current_models=0.
Rewrite_terms=34, rewrite_bools=1791, indexes=8.
Rules_from_neg_clauses=14, cross_offs=14.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=3230, kept=2528.
Selections=3, assignments=7, propagations=332, current_models=0.
Rewrite_terms=26, rewrite_bools=5908, indexes=11.
Rules_from_neg_clauses=10, cross_offs=44.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.08 seconds).
Ground clauses: seen=7229, kept=5597.
Selections=6, assignments=17, propagations=772, current_models=0.
Rewrite_terms=111, rewrite_bools=19194, indexes=24.
Rules_from_neg_clauses=44, cross_offs=194.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.19 seconds).
Ground clauses: seen=14472, kept=11152.
Selections=34, assignments=154, propagations=2325, current_models=0.
Rewrite_terms=919, rewrite_bools=60636, indexes=105.
Rules_from_neg_clauses=160, cross_offs=788.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 5.51 seconds).
Ground clauses: seen=26819, kept=20699.
Selections=34347, assignments=206037, propagations=435190, current_models=0.
Rewrite_terms=1387130, rewrite_bools=3064493, indexes=117809.
Rules_from_neg_clauses=37236, cross_offs=291912.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===
============================= C:\Reasoning\prover9-bin\mace4 ================================
execution finished: Fri Aug 01 13:28:56 2014
total CPU time used: 34.2
The command was "C:\Reasoning\prover9-bin\mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\simple_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\simplecurve_segment_weak_nontrivial.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\branchpoint.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9"
Input read from 
============================ end of footer ===========================
