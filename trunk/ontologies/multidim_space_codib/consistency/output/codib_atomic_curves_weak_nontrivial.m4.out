============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 5044 was started by torsten on torsten-laptop,
Fri Aug  1 12:19:57 2014
The command was "/cygdrive/c/Reasoning/prover9-bin/mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9 E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\codib_atomic_curves_weak_nontrivial.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9


formulas(sos).
(all x12 (atomiccurvesegment(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x14 exists x13 (endpoint(x14,x12) & endpoint(x13,x12) & x14 != x13 & (all x15 (point(x15) & cont(x15,x12) -> x14 = x15 | x13 = x15)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9


formulas(sos).
(all x11 -inc(x11,x11)).
(all x22 all x21 (inc(x22,x21) -> inc(x21,x22))).
(all x32 all x31 (eqdim(x32,x31) -> -inc(x32,x31))).
(all x42 all x41 (inc(x42,x41) -> less(x42,x41) | less(x41,x42))).
(all x52 all x51 (cont(x52,x51) & less(x52,x51) -> inc(x52,x51))).
(all x62 all x61 all x63 (inc(x62,x61) & p(x61,x63) -> inc(x62,x63))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9


formulas(sos).
(all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9


formulas(sos).
(all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9


formulas(sos).
(all x12 (closed(x12) <-> (all x11 -bcont(x11,x12)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9


formulas(sos).
(all x12 all x11 (inc(x12,x11) <-> (exists x13 (less(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (less(x13,x11) & cont(x13,x11) & p(x13,x12))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9


formulas(sos).
(all x2 (point(x2) <-> min(x2) & mindim(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9


formulas(sos).
(all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))).
(all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9


formulas(sos).
(all x12 (curve(x12) <-> (all x11 (point(x11) -> covers(x12,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) -> po(x11,x11))).
(all x22 all x21 (po(x22,x21) -> po(x21,x22))).
(all x32 all x31 (po(x32,x31) -> eqdim(x32,x31))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9


formulas(sos).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9


formulas(sos).
(all x12 (atomicloopcurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (point(x11) & cont(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))) & -(exists x11 endpoint(x11,x12)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9


formulas(sos).
(all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> less(x13,x12) & less(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9


formulas(sos).
(all x12 all x11 (bcont(x12,x11) -> cont(x12,x11) & inc(x12,x11))).
(all x22 all x21 all x24 all x23 (sc(x22,x21) & min(x22) & p(x22,x24) & cont(x21,x24) & cont(x23,x22) & cont(x23,x21) -> bcont(x23,x22))).
(all x32 all x31 all x33 all x34 (sc(x32,x31) & p(x32,x34) & p(x31,x34) & cont(x33,x32) & cont(x33,x31) & covers(x34,x33) -> -bcont(x33,x34))).
(all x42 all x41 all x43 (bcont(x42,x41) & p(x41,x43) & (all x45 all x44 (p(x45,x43) & -po(x45,x41) & p(x44,x42) -> -cont(x44,x45))) -> bcont(x42,x43))).
(all x52 all x51 all x53 (bcont(x52,x51) & cont(x53,x52) -> bcont(x53,x51))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9


formulas(sos).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\codib_atomic_curves_weak_nontrivial.p9


formulas(sos).
(exists x2 atomiccurvesegment(x2)).
(exists x3 atomicloopcurve(x3)).
(exists x4 atomicraycurve(x4)).
(exists x5 -s(x5)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9


formulas(sos).
(all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9


formulas(sos).
(all x12 all x11 (atomiccurve(x12) & -atomicloopcurve(x12) & cont(x11,x12) & x12 != x11 -> point(x11) & bcont(x11,x12))).
(all x22 all x23 all x21 all x24 (atomiccurve(x22) & point(x23) & point(x21) & point(x24) & cont(x23,x22) & cont(x21,x22) & cont(x24,x22) -> x23 = x21 | x23 = x24 | x21 = x24)).
(all x32 all x33 all x31 (atomiccurve(x32) & point(x33) & point(x31) & x33 != x31 & cont(x33,x32) & cont(x31,x32) -> -closed(x32))).
(all x42 (curve(x42) -> (exists x41 (p(x41,x42) & atomiccurve(x41))))).
(all x52 all x51 (point(x52) & curve(x51) & -atomiccurvesegment(x51) -> (bcont(x52,x51) <-> (exists x53 (atomiccurve(x53) & p(x53,x51) & bcont(x52,x53) & (all x54 (p(x54,x51) & atomiccurve(x54) & bcont(x52,x54) -> x53 = x54))))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> less(x11,x12) & (all x13 (s(x13) -> -(less(x11,x13) & less(x13,x12)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9


formulas(sos).
(all x2 (pointregion(x2) -> point(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9


formulas(sos).
(all x2 (atomiccurve(x2) <-> atomiccurvesegment(x2) | atomicloopcurve(x2) | atomicraycurve(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> less(x12,x11) | eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9


formulas(sos).
(all x2 (pointregion(x2) <-> mindim(x2))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9


formulas(sos).
(all x12 (atomicraycurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (endpoint(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> s(x12) & (all x11 (s(x11) -> leq(x11,x12))))).
(all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & less(x21,x22) -> zex(x21))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) -> c(x12,x11))).
(all x22 all x21 (sc(x22,x21) -> -(exists x23 (cont(x23,x22) & p(x23,x21))))).
(all x32 all x31 (sc(x32,x31) -> -(exists x33 (p(x33,x32) & cont(x33,x31))))).
(all x42 all x41 (c(x42,x41) & (all x43 (-cont(x43,x42) | -cont(x43,x41) | -p(x43,x42) & -p(x43,x41))) -> sc(x42,x41))).
(all x51 -sc(x51,x51)).
(all x62 all x61 (sc(x62,x61) -> sc(x61,x62))).
(all x72 all x71 (sc(x72,x71) -> (exists x73 (less(x73,x72) & less(x73,x71) & cont(x73,x72) & cont(x73,x71))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9


formulas(sos).
(all x12 all x11 (endpoint(x12,x11) <-> point(x12) & curve(x11) & bcont(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (clifsym2(x12,x11) <-> less(x11,x12))).
(all x22 all x21 (clifsym1(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (less(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 (atomiccurvesegment(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x14 exists x13 (endpoint(x14,x12) & endpoint(x13,x12) & x14 != x13 & (all x15 (point(x15) & cont(x15,x12) -> x14 = x15 | x13 = x15)))))) # label(non_clause).  [assumption].
2 (all x11 -inc(x11,x11)) # label(non_clause).  [assumption].
3 (all x22 all x21 (inc(x22,x21) -> inc(x21,x22))) # label(non_clause).  [assumption].
4 (all x32 all x31 (eqdim(x32,x31) -> -inc(x32,x31))) # label(non_clause).  [assumption].
5 (all x42 all x41 (inc(x42,x41) -> less(x42,x41) | less(x41,x42))) # label(non_clause).  [assumption].
6 (all x52 all x51 (cont(x52,x51) & less(x52,x51) -> inc(x52,x51))) # label(non_clause).  [assumption].
7 (all x62 all x61 all x63 (inc(x62,x61) & p(x61,x63) -> inc(x62,x63))) # label(non_clause).  [assumption].
8 (all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))) # label(non_clause).  [assumption].
9 (all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)) # label(non_clause).  [assumption].
10 (all x12 (closed(x12) <-> (all x11 -bcont(x11,x12)))) # label(non_clause).  [assumption].
11 (all x12 all x11 (inc(x12,x11) <-> (exists x13 (less(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (less(x13,x11) & cont(x13,x11) & p(x13,x12))))) # label(non_clause).  [assumption].
12 (all x2 (point(x2) <-> min(x2) & mindim(x2))) # label(non_clause).  [assumption].
13 (all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))) # label(non_clause).  [assumption].
14 (all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))) # label(non_clause).  [assumption].
15 (all x12 (curve(x12) <-> (all x11 (point(x11) -> covers(x12,x11))))) # label(non_clause).  [assumption].
16 (all x11 (s(x11) & -zex(x11) -> po(x11,x11))) # label(non_clause).  [assumption].
17 (all x22 all x21 (po(x22,x21) -> po(x21,x22))) # label(non_clause).  [assumption].
18 (all x32 all x31 (po(x32,x31) -> eqdim(x32,x31))) # label(non_clause).  [assumption].
19 (all x12 (atomicloopcurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (point(x11) & cont(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))) & -(exists x11 endpoint(x11,x12)))) # label(non_clause).  [assumption].
20 (all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))) # label(non_clause).  [assumption].
21 (all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> less(x13,x12) & less(x13,x11))))) # label(non_clause).  [assumption].
22 (all x12 all x11 (bcont(x12,x11) -> cont(x12,x11) & inc(x12,x11))) # label(non_clause).  [assumption].
23 (all x22 all x21 all x24 all x23 (sc(x22,x21) & min(x22) & p(x22,x24) & cont(x21,x24) & cont(x23,x22) & cont(x23,x21) -> bcont(x23,x22))) # label(non_clause).  [assumption].
24 (all x32 all x31 all x33 all x34 (sc(x32,x31) & p(x32,x34) & p(x31,x34) & cont(x33,x32) & cont(x33,x31) & covers(x34,x33) -> -bcont(x33,x34))) # label(non_clause).  [assumption].
25 (all x42 all x41 all x43 (bcont(x42,x41) & p(x41,x43) & (all x45 all x44 (p(x45,x43) & -po(x45,x41) & p(x44,x42) -> -cont(x44,x45))) -> bcont(x42,x43))) # label(non_clause).  [assumption].
26 (all x52 all x51 all x53 (bcont(x52,x51) & cont(x53,x52) -> bcont(x53,x51))) # label(non_clause).  [assumption].
27 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
28 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
29 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
30 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
31 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
32 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
33 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
34 (exists x2 atomiccurvesegment(x2)) # label(non_clause).  [assumption].
35 (exists x3 atomicloopcurve(x3)) # label(non_clause).  [assumption].
36 (exists x4 atomicraycurve(x4)) # label(non_clause).  [assumption].
37 (exists x5 -s(x5)) # label(non_clause).  [assumption].
38 (all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))) # label(non_clause).  [assumption].
39 (all x12 all x11 (atomiccurve(x12) & -atomicloopcurve(x12) & cont(x11,x12) & x12 != x11 -> point(x11) & bcont(x11,x12))) # label(non_clause).  [assumption].
40 (all x22 all x23 all x21 all x24 (atomiccurve(x22) & point(x23) & point(x21) & point(x24) & cont(x23,x22) & cont(x21,x22) & cont(x24,x22) -> x23 = x21 | x23 = x24 | x21 = x24)) # label(non_clause).  [assumption].
41 (all x32 all x33 all x31 (atomiccurve(x32) & point(x33) & point(x31) & x33 != x31 & cont(x33,x32) & cont(x31,x32) -> -closed(x32))) # label(non_clause).  [assumption].
42 (all x42 (curve(x42) -> (exists x41 (p(x41,x42) & atomiccurve(x41))))) # label(non_clause).  [assumption].
43 (all x52 all x51 (point(x52) & curve(x51) & -atomiccurvesegment(x51) -> (bcont(x52,x51) <-> (exists x53 (atomiccurve(x53) & p(x53,x51) & bcont(x52,x53) & (all x54 (p(x54,x51) & atomiccurve(x54) & bcont(x52,x54) -> x53 = x54))))))) # label(non_clause).  [assumption].
44 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
45 (all x12 all x11 (covers(x12,x11) <-> less(x11,x12) & (all x13 (s(x13) -> -(less(x11,x13) & less(x13,x12)))))) # label(non_clause).  [assumption].
46 (all x2 (pointregion(x2) -> point(x2))) # label(non_clause).  [assumption].
47 (all x2 (atomiccurve(x2) <-> atomiccurvesegment(x2) | atomicloopcurve(x2) | atomicraycurve(x2))) # label(non_clause).  [assumption].
48 (all x12 all x11 (cont(x12,x11) -> less(x12,x11) | eqdim(x12,x11))) # label(non_clause).  [assumption].
49 (all x2 (pointregion(x2) <-> mindim(x2))) # label(non_clause).  [assumption].
50 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
51 (all x12 (atomicraycurve(x12) <-> curve(x12) & (all x11 -pp(x11,x12)) & (exists x11 (endpoint(x11,x12) & (all x13 (point(x13) & cont(x13,x12) -> x11 = x13)))))) # label(non_clause).  [assumption].
52 (all x12 (maxdim(x12) <-> s(x12) & (all x11 (s(x11) -> leq(x11,x12))))) # label(non_clause).  [assumption].
53 (all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & less(x21,x22) -> zex(x21))))) # label(non_clause).  [assumption].
54 (all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
55 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
56 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
57 (all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
58 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
59 (all x12 all x11 (sc(x12,x11) -> c(x12,x11))) # label(non_clause).  [assumption].
60 (all x22 all x21 (sc(x22,x21) -> -(exists x23 (cont(x23,x22) & p(x23,x21))))) # label(non_clause).  [assumption].
61 (all x32 all x31 (sc(x32,x31) -> -(exists x33 (p(x33,x32) & cont(x33,x31))))) # label(non_clause).  [assumption].
62 (all x42 all x41 (c(x42,x41) & (all x43 (-cont(x43,x42) | -cont(x43,x41) | -p(x43,x42) & -p(x43,x41))) -> sc(x42,x41))) # label(non_clause).  [assumption].
63 (all x51 -sc(x51,x51)) # label(non_clause).  [assumption].
64 (all x62 all x61 (sc(x62,x61) -> sc(x61,x62))) # label(non_clause).  [assumption].
65 (all x72 all x71 (sc(x72,x71) -> (exists x73 (less(x73,x72) & less(x73,x71) & cont(x73,x72) & cont(x73,x71))))) # label(non_clause).  [assumption].
66 (all x12 all x11 (endpoint(x12,x11) <-> point(x12) & curve(x11) & bcont(x12,x11))) # label(non_clause).  [assumption].
67 (all x12 all x11 (clifsym2(x12,x11) <-> less(x11,x12))) # label(non_clause).  [assumption].
68 (all x22 all x21 (clifsym1(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
69 (all x32 all x31 (less(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-atomiccurvesegment(x) | curve(x).
-atomiccurvesegment(x) | -pp(y,x).
-atomiccurvesegment(x) | endpoint(f1(x),x).
-atomiccurvesegment(x) | endpoint(f2(x),x).
-atomiccurvesegment(x) | f2(x) != f1(x).
-atomiccurvesegment(x) | -point(y) | -cont(y,x) | y = f1(x) | y = f2(x).
atomiccurvesegment(x) | -curve(x) | pp(f3(x),x) | -endpoint(y,x) | -endpoint(z,x) | z = y | point(f4(x,y,z)).
atomiccurvesegment(x) | -curve(x) | pp(f3(x),x) | -endpoint(y,x) | -endpoint(z,x) | z = y | cont(f4(x,y,z),x).
atomiccurvesegment(x) | -curve(x) | pp(f3(x),x) | -endpoint(y,x) | -endpoint(z,x) | z = y | f4(x,y,z) != y.
atomiccurvesegment(x) | -curve(x) | pp(f3(x),x) | -endpoint(y,x) | -endpoint(z,x) | z = y | f4(x,y,z) != z.
-inc(x,x).
-inc(x,y) | inc(y,x).
-eqdim(x,y) | -inc(x,y).
-inc(x,y) | less(x,y) | less(y,x).
-cont(x,y) | -less(x,y) | inc(x,y).
-inc(x,y) | -p(y,z) | inc(x,z).
-p(x,y) | cont(x,y).
-p(x,y) | eqdim(x,y).
p(x,y) | -cont(x,y) | -eqdim(x,y).
-pp(x,y) | p(x,y).
-pp(x,y) | y != x.
pp(x,y) | -p(x,y) | y = x.
-closed(x) | -bcont(y,x).
closed(x) | bcont(f5(x),x).
-inc(x,y) | less(f6(x,y),x) | less(f7(x,y),y).
-inc(x,y) | less(f6(x,y),x) | cont(f7(x,y),y).
-inc(x,y) | less(f6(x,y),x) | p(f7(x,y),x).
-inc(x,y) | cont(f6(x,y),x) | less(f7(x,y),y).
-inc(x,y) | cont(f6(x,y),x) | cont(f7(x,y),y).
-inc(x,y) | cont(f6(x,y),x) | p(f7(x,y),x).
-inc(x,y) | p(f6(x,y),y) | less(f7(x,y),y).
-inc(x,y) | p(f6(x,y),y) | cont(f7(x,y),y).
-inc(x,y) | p(f6(x,y),y) | p(f7(x,y),x).
inc(x,y) | -less(z,x) | -cont(z,x) | -p(z,y).
inc(x,y) | -less(z,y) | -cont(z,y) | -p(z,x).
-point(x) | min(x).
-point(x) | mindim(x).
point(x) | -min(x) | -mindim(x).
-max(x) | s(x).
-max(x) | -zex(x).
-max(x) | -pp(x,y).
max(x) | -s(x) | zex(x) | pp(x,f8(x)).
-min(x) | s(x).
-min(x) | -zex(x).
-min(x) | -pp(y,x).
min(x) | -s(x) | zex(x) | pp(f9(x),x).
-curve(x) | -point(y) | covers(x,y).
curve(x) | point(f10(x)).
curve(x) | -covers(x,f10(x)).
-s(x) | zex(x) | po(x,x).
-po(x,y) | po(y,x).
-po(x,y) | eqdim(x,y).
-atomicloopcurve(x) | curve(x).
-atomicloopcurve(x) | -pp(y,x).
-atomicloopcurve(x) | point(f11(x)).
-atomicloopcurve(x) | cont(f11(x),x).
-atomicloopcurve(x) | -point(y) | -cont(y,x) | y = f11(x).
-atomicloopcurve(x) | -endpoint(y,x).
atomicloopcurve(x) | -curve(x) | pp(f12(x),x) | -point(y) | -cont(y,x) | point(f13(x,y)) | endpoint(f14(x),x).
atomicloopcurve(x) | -curve(x) | pp(f12(x),x) | -point(y) | -cont(y,x) | cont(f13(x,y),x) | endpoint(f14(x),x).
atomicloopcurve(x) | -curve(x) | pp(f12(x),x) | -point(y) | -cont(y,x) | f13(x,y) != y | endpoint(f14(x),x).
-c(x,y) | cont(f15(x,y),x).
-c(x,y) | cont(f15(x,y),y).
c(x,y) | -cont(z,x) | -cont(z,y).
-sc(x,y) | cont(f16(x,y),x).
-sc(x,y) | cont(f16(x,y),y).
-sc(x,y) | -cont(z,x) | -cont(z,y) | less(z,x).
-sc(x,y) | -cont(z,x) | -cont(z,y) | less(z,y).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f17(x,y),x).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f17(x,y),y).
sc(x,y) | -cont(z,x) | -cont(z,y) | -less(f17(x,y),x) | -less(f17(x,y),y).
-bcont(x,y) | cont(x,y).
-bcont(x,y) | inc(x,y).
-sc(x,y) | -min(x) | -p(x,z) | -cont(y,z) | -cont(u,x) | -cont(u,y) | bcont(u,x).
-sc(x,y) | -p(x,z) | -p(y,z) | -cont(u,x) | -cont(u,y) | -covers(z,u) | -bcont(u,z).
-bcont(x,y) | -p(y,z) | p(f18(x,y,z),z) | bcont(x,z).
-bcont(x,y) | -p(y,z) | -po(f18(x,y,z),y) | bcont(x,z).
-bcont(x,y) | -p(y,z) | p(f19(x,y,z),x) | bcont(x,z).
-bcont(x,y) | -p(y,z) | cont(f19(x,y,z),f18(x,y,z)) | bcont(x,z).
-bcont(x,y) | -cont(z,x) | bcont(z,y).
-leq(x,y) | s(x).
-leq(x,y) | s(y).
-zex(x) | s(x).
-s(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-zex(x) | -zex(y) | y = x.
-zex(x) | -s(y) | leq(x,y).
atomiccurvesegment(c1).
atomicloopcurve(c2).
atomicraycurve(c3).
-s(c4).
-po(x,y) | p(f20(x,y),x).
-po(x,y) | p(f20(x,y),y).
po(x,y) | -p(z,x) | -p(z,y).
-atomiccurve(x) | atomicloopcurve(x) | -cont(y,x) | y = x | point(y).
-atomiccurve(x) | atomicloopcurve(x) | -cont(y,x) | y = x | bcont(y,x).
-atomiccurve(x) | -point(y) | -point(z) | -point(u) | -cont(y,x) | -cont(z,x) | -cont(u,x) | y = z | y = u | u = z.
-atomiccurve(x) | -point(y) | -point(z) | y = z | -cont(y,x) | -cont(z,x) | -closed(x).
-curve(x) | p(f21(x),x).
-curve(x) | atomiccurve(f21(x)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | atomiccurve(f22(x,y)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | p(f22(x,y),y).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | bcont(x,f22(x,y)).
-point(x) | -curve(y) | atomiccurvesegment(y) | -bcont(x,y) | -p(z,y) | -atomiccurve(z) | -bcont(x,z) | z = f22(x,y).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | p(f23(x,y,z),y).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | atomiccurve(f23(x,y,z)).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | bcont(x,f23(x,y,z)).
-point(x) | -curve(y) | atomiccurvesegment(y) | bcont(x,y) | -atomiccurve(z) | -p(z,y) | -bcont(x,z) | f23(x,y,z) != z.
mindim(c5).
-covers(x,y) | less(y,x).
-covers(x,y) | -s(z) | -less(y,z) | -less(z,x).
covers(x,y) | -less(y,x) | s(f24(x,y)).
covers(x,y) | -less(y,x) | less(y,f24(x,y)).
covers(x,y) | -less(y,x) | less(f24(x,y),x).
-pointregion(x) | point(x).
-atomiccurve(x) | atomiccurvesegment(x) | atomicloopcurve(x) | atomicraycurve(x).
atomiccurve(x) | -atomiccurvesegment(x).
atomiccurve(x) | -atomicloopcurve(x).
atomiccurve(x) | -atomicraycurve(x).
-cont(x,y) | less(x,y) | eqdim(x,y).
-pointregion(x) | mindim(x).
pointregion(x) | -mindim(x).
-eqdim(x,y) | leq(x,y).
-eqdim(x,y) | leq(y,x).
eqdim(x,y) | -leq(x,y) | -leq(y,x).
-atomicraycurve(x) | curve(x).
-atomicraycurve(x) | -pp(y,x).
-atomicraycurve(x) | endpoint(f25(x),x).
-atomicraycurve(x) | -point(y) | -cont(y,x) | y = f25(x).
atomicraycurve(x) | -curve(x) | pp(f26(x),x) | -endpoint(y,x) | point(f27(x,y)).
atomicraycurve(x) | -curve(x) | pp(f26(x),x) | -endpoint(y,x) | cont(f27(x,y),x).
atomicraycurve(x) | -curve(x) | pp(f26(x),x) | -endpoint(y,x) | f27(x,y) != y.
-maxdim(x) | s(x).
-maxdim(x) | -s(y) | leq(y,x).
maxdim(x) | -s(x) | s(f28(x)).
maxdim(x) | -s(x) | -leq(f28(x),x).
-mindim(x) | s(x).
-mindim(x) | -zex(x).
-mindim(x) | -s(y) | -less(y,x) | zex(y).
mindim(x) | -s(x) | zex(x) | s(f29(x)).
mindim(x) | -s(x) | zex(x) | less(f29(x),x).
mindim(x) | -s(x) | zex(x) | -zex(f29(x)).
-s(x) | zex(x) | cont(x,x).
s(x) | -cont(x,x).
-zex(x) | -cont(x,x).
-cont(x,y) | -cont(y,x) | y = x.
-cont(x,y) | -cont(y,z) | cont(x,z).
-zex(x) | s(x).
-zex(x) | -cont(y,x).
-zex(x) | -cont(x,y).
-zex(x) | -zex(y) | y = x.
-sc(x,y) | c(x,y).
-sc(x,y) | -cont(z,x) | -p(z,y).
-sc(x,y) | -p(z,x) | -cont(z,y).
-c(x,y) | cont(f30(x,y),x) | sc(x,y).
-c(x,y) | cont(f30(x,y),y) | sc(x,y).
-c(x,y) | p(f30(x,y),x) | p(f30(x,y),y) | sc(x,y).
-sc(x,x).
-sc(x,y) | sc(y,x).
-sc(x,y) | less(f31(x,y),x).
-sc(x,y) | less(f31(x,y),y).
-sc(x,y) | cont(f31(x,y),x).
-sc(x,y) | cont(f31(x,y),y).
-endpoint(x,y) | point(x).
-endpoint(x,y) | curve(y).
-endpoint(x,y) | bcont(x,y).
endpoint(x,y) | -point(x) | -curve(y) | -bcont(x,y).
-clifsym2(x,y) | less(y,x).
clifsym2(x,y) | -less(y,x).
-clifsym1(x,y) | leq(y,x).
clifsym1(x,y) | -leq(y,x).
-less(x,y) | leq(x,y).
-less(x,y) | -eqdim(x,y).
less(x,y) | -leq(x,y) | eqdim(x,y).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=743, kept=589.
Selections=1, assignments=2, propagations=108, current_models=0.
Rewrite_terms=22, rewrite_bools=1014, indexes=6.
Rules_from_neg_clauses=8, cross_offs=8.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=2000, kept=1661.
Selections=3, assignments=7, propagations=219, current_models=0.
Rewrite_terms=48, rewrite_bools=3152, indexes=16.
Rules_from_neg_clauses=18, cross_offs=52.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.06 seconds).
Ground clauses: seen=4305, kept=3677.
Selections=10, assignments=33, propagations=659, current_models=0.
Rewrite_terms=123, rewrite_bools=10871, indexes=23.
Rules_from_neg_clauses=38, cross_offs=166.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.09 seconds).
Ground clauses: seen=8090, kept=7045.
Selections=46, assignments=214, propagations=2792, current_models=0.
Rewrite_terms=2593, rewrite_bools=46826, indexes=115.
Rules_from_neg_clauses=259, cross_offs=1569.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== MODEL =================================

interpretation( 6, [number=1, seconds=0], [

        function(c1, [ 0 ]),

        function(c2, [ 3 ]),

        function(c3, [ 5 ]),

        function(c4, [ 1 ]),

        function(c5, [ 2 ]),

        function(f1(_), [ 2, 0, 0, 0, 0, 0 ]),

        function(f2(_), [ 4, 0, 0, 0, 0, 0 ]),

        function(f3(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f5(_), [ 2, 0, 0, 0, 0, 2 ]),

        function(f8(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f9(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f10(_), [ 0, 2, 2, 0, 2, 0 ]),

        function(f11(_), [ 0, 0, 0, 2, 0, 0 ]),

        function(f12(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f14(_), [ 0, 0, 0, 0, 0, 2 ]),

        function(f21(_), [ 0, 0, 0, 3, 0, 5 ]),

        function(f25(_), [ 0, 0, 0, 0, 0, 2 ]),

        function(f26(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f28(_), [ 0, 0, 0, 0, 0, 0 ]),

        function(f29(_), [ 2, 0, 0, 2, 0, 2 ]),

        function(f6(_,_), [
			   0, 0, 2, 0, 4, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 2, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 2, 0, 0, 0 ]),

        function(f7(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 0, 2, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   4, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f13(_,_), [
			   0, 0, 4, 0, 2, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f15(_,_), [
			   0, 0, 2, 2, 4, 2,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 2, 2, 0, 2,
			   2, 0, 2, 2, 0, 2,
			   4, 0, 0, 0, 4, 0,
			   2, 0, 2, 2, 0, 2 ]),

        function(f16(_,_), [
			   0, 0, 0, 2, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 0, 0, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 0, 2, 0, 0 ]),

        function(f17(_,_), [
			   0, 0, 2, 0, 4, 0,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 2, 2, 0, 2,
			   0, 0, 2, 3, 0, 0,
			   4, 0, 0, 0, 4, 0,
			   0, 0, 2, 0, 0, 5 ]),

        function(f20(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 2, 0, 0, 0,
			   0, 0, 0, 3, 0, 0,
			   0, 0, 0, 0, 4, 0,
			   0, 0, 0, 0, 0, 5 ]),

        function(f22(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 5,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f24(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f27(_,_), [
			   0, 0, 4, 0, 2, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f30(_,_), [
			   0, 0, 2, 0, 4, 0,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 2, 2, 0, 2,
			   0, 0, 2, 3, 0, 0,
			   4, 0, 0, 0, 4, 0,
			   0, 0, 2, 0, 0, 5 ]),

        function(f31(_,_), [
			   0, 0, 0, 2, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 0, 0, 0, 2,
			   0, 0, 0, 0, 0, 0,
			   2, 0, 0, 2, 0, 0 ]),

        function(f4(_,_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f18(_,_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f19(_,_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        function(f23(_,_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        relation(atomiccurve(_), [ 1, 0, 0, 1, 0, 1 ]),

        relation(atomiccurvesegment(_), [ 1, 0, 0, 0, 0, 0 ]),

        relation(atomicloopcurve(_), [ 0, 0, 0, 1, 0, 0 ]),

        relation(atomicraycurve(_), [ 0, 0, 0, 0, 0, 1 ]),

        relation(closed(_), [ 0, 1, 1, 1, 1, 0 ]),

        relation(curve(_), [ 1, 0, 0, 1, 0, 1 ]),

        relation(max(_), [ 1, 0, 1, 1, 1, 1 ]),

        relation(maxdim(_), [ 1, 0, 0, 1, 0, 1 ]),

        relation(min(_), [ 1, 0, 1, 1, 1, 1 ]),

        relation(mindim(_), [ 0, 0, 1, 0, 1, 0 ]),

        relation(point(_), [ 0, 0, 1, 0, 1, 0 ]),

        relation(pointregion(_), [ 0, 0, 1, 0, 1, 0 ]),

        relation(s(_), [ 1, 0, 1, 1, 1, 1 ]),

        relation(zex(_), [ 0, 0, 0, 0, 0, 0 ]),

        relation(bcont(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        relation(c(_,_), [
			   1, 0, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 1, 1, 0, 1,
			   1, 0, 1, 1, 0, 1,
			   1, 0, 0, 0, 1, 0,
			   1, 0, 1, 1, 0, 1 ]),

        relation(clifsym1(_,_), [
			   1, 0, 1, 1, 1, 1,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0,
			   1, 0, 1, 1, 1, 1,
			   0, 0, 0, 0, 1, 0,
			   1, 0, 1, 1, 1, 1 ]),

        relation(clifsym2(_,_), [
			   0, 0, 1, 0, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 1, 0 ]),

        relation(cont(_,_), [
			   1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 1, 1, 0, 1,
			   0, 0, 0, 1, 0, 0,
			   1, 0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0, 1 ]),

        relation(covers(_,_), [
			   0, 0, 1, 0, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 1, 0 ]),

        relation(endpoint(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        relation(eqdim(_,_), [
			   1, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0,
			   1, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 1, 0,
			   1, 0, 0, 1, 0, 1 ]),

        relation(inc(_,_), [
			   0, 0, 1, 0, 1, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 1, 0, 1,
			   0, 0, 1, 0, 0, 0,
			   1, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0 ]),

        relation(leq(_,_), [
			   1, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 1, 1, 0, 1,
			   1, 0, 0, 1, 0, 1,
			   1, 0, 0, 1, 1, 1,
			   1, 0, 0, 1, 0, 1 ]),

        relation(less(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 0, 0 ]),

        relation(p(_,_), [
			   1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0,
			   0, 0, 0, 1, 0, 0,
			   0, 0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0, 1 ]),

        relation(po(_,_), [
			   1, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 1, 0, 0, 0,
			   0, 0, 0, 1, 0, 0,
			   0, 0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0, 1 ]),

        relation(pp(_,_), [
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0 ]),

        relation(sc(_,_), [
			   0, 0, 0, 1, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0, 1,
			   0, 0, 0, 0, 0, 0,
			   1, 0, 0, 1, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.19 seconds).
Ground clauses: seen=13859, kept=12245.
Selections=1346, assignments=1464, propagations=807, current_models=1.
Rewrite_terms=6775, rewrite_bools=17974, indexes=24.
Rules_from_neg_clauses=72, cross_offs=503.

============================== end of statistics =====================

------ process 5044 exit (max_models) ------

User_CPU=0.19, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 5044 exit (max_models) Fri Aug  1 12:19:57 2014
The process finished Fri Aug  1 12:19:57 2014
============================= C:\Reasoning\prover9-bin\mace4 ================================
execution finished: Fri Aug 01 12:19:58 2014
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve_segment.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\inc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\closed.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\curve.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\po_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_loop_curve.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codi_bcont.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi.p9 E:\COLORE-local-testbed\multidim_space_codib\consistency\conversions\codib_atomic_curves_weak_nontrivial.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_atomic_curves.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_atomic_point_regions.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_curve.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\point_region.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\atomic_ray_curve.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\theorems\conversions\sc_theorems.p9 E:\COLORE-local-testbed\multidim_space_codib\definitions\conversions\endpoint.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9"
Input read from 
============================ end of footer ===========================
