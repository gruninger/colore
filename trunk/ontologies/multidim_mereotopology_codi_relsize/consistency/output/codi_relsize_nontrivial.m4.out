============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 6100 was started by torsten on stl-ws2,
Wed Aug  7 16:28:54 2013
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/p9/codi_relsize.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/consistency/p9/codi_relsize_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/p9/codi_relsize.p9


formulas(sos).
(all x all y (EqSize(x,y) <-> LeqSize(x,y) & LeqSize(y,x))).
(all x all y (LeqSize(x,y) & LeqSize(y,x) -> EqSize(x,y))).
(all x EqSize(x,x)).
(all x all y (LesserSize(x,y) <-> LeqSize(x,y) & -LeqSize(y,x))).
(all x all y (Cont(x,y) -> LeqSize(x,y))).
(all x all y (Cont(x,y) & x != y -> LesserSize(x,y))).
(all x all y (EqDim(x,y) -> LeqSize(x,y) | LeqSize(x,y))).
(all x all y (InfiniteSize(x) -> LeqSize(y,x))).
(all x all y (InfiniteSize(x) & InfiniteSize(y) & EqDim(x,y) -> EqSize(x,y))).
(all x all y (InfiniteSize(x) & InfiniteSize(y) & x < y -> LesserSize(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/consistency/p9/codi_relsize_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (LesserSize(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-LesserSize(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (EqSize(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqSize(x0,x1) & x0 != x1)).
(exists x0 exists x1 (LeqSize(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-LeqSize(x0,x1) & x0 != x1)).
(exists x0 InfiniteSize(x0)).
(exists x0 -InfiniteSize(x0)).
(exists x0 exists x1 (x0 < x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 < x1) & x0 != x1)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9


formulas(sos).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 300).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (EqSize(x,y) <-> LeqSize(x,y) & LeqSize(y,x))) # label(non_clause).  [assumption].
4 (all x all y (LeqSize(x,y) & LeqSize(y,x) -> EqSize(x,y))) # label(non_clause).  [assumption].
5 (all x EqSize(x,x)) # label(non_clause).  [assumption].
6 (all x all y (LesserSize(x,y) <-> LeqSize(x,y) & -LeqSize(y,x))) # label(non_clause).  [assumption].
7 (all x all y (Cont(x,y) -> LeqSize(x,y))) # label(non_clause).  [assumption].
8 (all x all y (Cont(x,y) & x != y -> LesserSize(x,y))) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) -> LeqSize(x,y) | LeqSize(x,y))) # label(non_clause).  [assumption].
10 (all x all y (InfiniteSize(x) -> LeqSize(y,x))) # label(non_clause).  [assumption].
11 (all x all y (InfiniteSize(x) & InfiniteSize(y) & EqDim(x,y) -> EqSize(x,y))) # label(non_clause).  [assumption].
12 (all x all y (InfiniteSize(x) & InfiniteSize(y) & x < y -> LesserSize(x,y))) # label(non_clause).  [assumption].
13 (all x x <= x) # label(non_clause).  [assumption].
14 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
15 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
16 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
17 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
18 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
19 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
20 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
21 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
22 (exists x MinDim(x)) # label(non_clause).  [assumption].
23 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
24 (exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
25 (exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
26 (exists x0 exists x1 (LesserSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
27 (exists x0 exists x1 (-LesserSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
28 (exists x0 exists x1 (Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
29 (exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
30 (exists x0 exists x1 (EqSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
31 (exists x0 exists x1 (-EqSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
32 (exists x0 exists x1 (LeqSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
33 (exists x0 exists x1 (-LeqSize(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
34 (exists x0 InfiniteSize(x0)) # label(non_clause).  [assumption].
35 (exists x0 -InfiniteSize(x0)) # label(non_clause).  [assumption].
36 (exists x0 exists x1 (x0 < x1 & x0 != x1)) # label(non_clause).  [assumption].
37 (exists x0 exists x1 (-(x0 < x1) & x0 != x1)) # label(non_clause).  [assumption].
38 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
39 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
40 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
41 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
42 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
43 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
44 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
45 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
46 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
47 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
48 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
49 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
50 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
51 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
52 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
53 (all x -(x < x)) # label(non_clause).  [assumption].
54 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
55 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
56 (all x EqDim(x,x)) # label(non_clause).  [assumption].
57 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
58 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
59 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
60 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
61 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
62 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
63 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
64 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-Cont(x,y) | x < y | EqDim(x,y).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-EqSize(x,y) | LeqSize(x,y).
-EqSize(x,y) | LeqSize(y,x).
EqSize(x,y) | -LeqSize(x,y) | -LeqSize(y,x).
-LeqSize(x,y) | -LeqSize(y,x) | EqSize(x,y).
EqSize(x,x).
-LesserSize(x,y) | LeqSize(x,y).
-LesserSize(x,y) | -LeqSize(y,x).
LesserSize(x,y) | -LeqSize(x,y) | LeqSize(y,x).
-Cont(x,y) | LeqSize(x,y).
-Cont(x,y) | y = x | LesserSize(x,y).
-EqDim(x,y) | LeqSize(x,y).
-InfiniteSize(x) | LeqSize(y,x).
-InfiniteSize(x) | -InfiniteSize(y) | -EqDim(x,y) | EqSize(x,y).
-InfiniteSize(x) | -InfiniteSize(y) | -(x < y) | LesserSize(x,y).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
MinDim(c1).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f1(x,y).
Covers(x,y) | -(y < x) | f1(x,y) < x.
EqDim(c2,c3).
c3 != c2.
-EqDim(c4,c5).
c5 != c4.
LesserSize(c6,c7).
c7 != c6.
-LesserSize(c8,c9).
c9 != c8.
Cont(c10,c11).
c11 != c10.
-Cont(c12,c13).
c13 != c12.
EqSize(c14,c15).
c15 != c14.
-EqSize(c16,c17).
c17 != c16.
LeqSize(c18,c19).
c19 != c18.
-LeqSize(c20,c21).
c21 != c20.
InfiniteSize(c22).
-InfiniteSize(c23).
c24 < c25.
c25 != c24.
-(c26 < c27).
c27 != c26.
-C(x,y) | Cont(f2(x,y),x).
-C(x,y) | Cont(f2(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-PO(x,y) | P(f3(x,y),x).
-PO(x,y) | P(f3(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
-SC(x,y) | Cont(f4(x,y),x).
-SC(x,y) | Cont(f4(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).
Cont(f6(x,y),x) | Cont(f6(x,y),y) | y = x.
-Cont(f6(x,y),x) | -Cont(f6(x,y),y) | y = x.
-Inc(x,y) | f7(x,y) < x | f8(x,y) < y.
-Inc(x,y) | f7(x,y) < x | Cont(f8(x,y),y).
-Inc(x,y) | f7(x,y) < x | P(f8(x,y),x).
-Inc(x,y) | Cont(f7(x,y),x) | f8(x,y) < y.
-Inc(x,y) | Cont(f7(x,y),x) | Cont(f8(x,y),y).
-Inc(x,y) | Cont(f7(x,y),x) | P(f8(x,y),x).
-Inc(x,y) | P(f7(x,y),y) | f8(x,y) < y.
-Inc(x,y) | P(f7(x,y),y) | Cont(f8(x,y),y).
-Inc(x,y) | P(f7(x,y),y) | P(f8(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f9(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f10(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f10(x)).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f11(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f12(x),x).
-Cont(x,y) | x < y | EqDim(x,y).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c28).
-(x < c28) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=450, kept=364.
Selections=4, assignments=7, propagations=105, current_models=0.
Rewrite_terms=57, rewrite_bools=672, indexes=3.
Rules_from_neg_clauses=18, cross_offs=18.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== MODEL =================================

interpretation( 3, [number=1, seconds=0], [

        function(c1, [ 0 ]),

        function(c2, [ 0 ]),

        function(c3, [ 1 ]),

        function(c4, [ 0 ]),

        function(c5, [ 2 ]),

        function(c6, [ 0 ]),

        function(c7, [ 2 ]),

        function(c8, [ 0 ]),

        function(c9, [ 1 ]),

        function(c10, [ 0 ]),

        function(c11, [ 2 ]),

        function(c12, [ 0 ]),

        function(c13, [ 1 ]),

        function(c14, [ 0 ]),

        function(c15, [ 1 ]),

        function(c16, [ 0 ]),

        function(c17, [ 2 ]),

        function(c18, [ 0 ]),

        function(c19, [ 1 ]),

        function(c20, [ 1 ]),

        function(c21, [ 2 ]),

        function(c22, [ 1 ]),

        function(c23, [ 0 ]),

        function(c24, [ 0 ]),

        function(c25, [ 2 ]),

        function(c26, [ 0 ]),

        function(c27, [ 1 ]),

        function(c28, [ 0 ]),

        function(f9(_), [ 2, 2, 0 ]),

        function(f10(_), [ 0, 0, 0 ]),

        function(f11(_), [ 0, 0, 0 ]),

        function(f12(_), [ 0, 0, 0 ]),

        function(f1(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        function(f2(_,_), [
			   0, 0, 0,
			   0, 1, 0,
			   0, 0, 0 ]),

        function(f3(_,_), [
			   0, 0, 0,
			   0, 1, 0,
			   0, 0, 2 ]),

        function(f4(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        function(f5(_,_), [
			   0, 0, 0,
			   0, 1, 0,
			   0, 0, 2 ]),

        function(f6(_,_), [
			   0, 0, 2,
			   0, 0, 0,
			   2, 0, 0 ]),

        function(f7(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        function(f8(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        relation(InfiniteSize(_), [ 0, 1, 0 ]),

        relation(Max(_), [ 1, 1, 1 ]),

        relation(MaxDim(_), [ 0, 0, 1 ]),

        relation(Min(_), [ 1, 1, 1 ]),

        relation(MinDim(_), [ 1, 1, 0 ]),

        relation(ZEX(_), [ 0, 0, 0 ]),

        relation(<(_,_), [
			   0, 0, 1,
			   0, 0, 1,
			   0, 0, 0 ]),

        relation(<=(_,_), [
			   1, 1, 1,
			   1, 1, 1,
			   0, 0, 1 ]),

        relation(>(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   1, 1, 0 ]),

        relation(>=(_,_), [
			   1, 1, 0,
			   1, 1, 0,
			   1, 1, 1 ]),

        relation(C(_,_), [
			   1, 0, 1,
			   0, 1, 0,
			   1, 0, 1 ]),

        relation(Cont(_,_), [
			   1, 0, 1,
			   0, 1, 0,
			   0, 0, 1 ]),

        relation(Covers(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   1, 1, 0 ]),

        relation(EqDim(_,_), [
			   1, 1, 0,
			   1, 1, 0,
			   0, 0, 1 ]),

        relation(EqSize(_,_), [
			   1, 1, 0,
			   1, 1, 0,
			   0, 0, 1 ]),

        relation(Inc(_,_), [
			   0, 0, 1,
			   0, 0, 0,
			   1, 0, 0 ]),

        relation(LeqSize(_,_), [
			   1, 1, 1,
			   1, 1, 0,
			   0, 1, 1 ]),

        relation(LesserSize(_,_), [
			   0, 0, 1,
			   0, 0, 0,
			   0, 1, 0 ]),

        relation(P(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   0, 0, 1 ]),

        relation(PO(_,_), [
			   1, 0, 0,
			   0, 1, 0,
			   0, 0, 1 ]),

        relation(PP(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ]),

        relation(SC(_,_), [
			   0, 0, 0,
			   0, 0, 0,
			   0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=1099, kept=943.
Selections=93, assignments=104, propagations=183, current_models=1.
Rewrite_terms=451, rewrite_bools=1457, indexes=7.
Rules_from_neg_clauses=20, cross_offs=53.

============================== end of statistics =====================

------ process 6100 exit (max_models) ------

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 6100 exit (max_models) Wed Aug  7 16:28:54 2013
The process finished Wed Aug  7 16:28:54 2013
============================= mace4 ================================
execution finished: Wed Aug 07 16:28:55 2013
total CPU time used: 0
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/p9/codi_relsize.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi_relsize/consistency/p9/codi_relsize_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9"
Input read from 
============================ end of footer ===========================
