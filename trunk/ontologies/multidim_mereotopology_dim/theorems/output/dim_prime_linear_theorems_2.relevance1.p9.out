============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 4132 was started by torsten on stl-ws2,
Mon May  2 11:27:11 2011
The command was "prover9 -t 600 -f dim/conversions/dim_prime_linear.p9 dim/theorems/input/options.txt dim/theorems/generated/dim_prime_linear_theorems_relevance1.order dim/theorems/input/dim_prime_linear_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file dim/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file dim/theorems/generated/dim_prime_linear_theorems_relevance1.order

predicate_order([=,<=,ZEX,EqDim,<]).
set(inverse_order).
assign(order,kbo).

% Reading from file dim/theorems/input/dim_prime_linear_theorems_2.p9


formulas(goals).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x -(x < x)) # label(non_clause).  [assumption].
2 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
3 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
4 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
5 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
6 (exists x MinDim(x)) # label(non_clause).  [assumption].
7 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
8 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
9 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
10 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
11 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
12 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating MinDim/1
13 -MinDim(x) | -ZEX(x).  [clausify(10)].
14 MinDim(c1).  [clausify(6)].
Derived: -ZEX(c1).  [resolve(13,a,14,a)].
15 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(10)].
Derived: -(x < c1) | ZEX(x).  [resolve(15,a,14,a)].
16 MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(10)].
Derived: ZEX(x) | f2(x) < x | -(y < x) | ZEX(y).  [resolve(16,a,15,a)].
17 MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(10)].
Derived: ZEX(x) | -ZEX(f2(x)) | -(y < x) | ZEX(y).  [resolve(17,a,15,a)].

Eliminating MaxDim/1
18 MaxDim(x) | -(f1(x) <= x).  [clausify(9)].
19 -MaxDim(x) | y <= x.  [clausify(9)].
Derived: -(f1(x) <= x) | y <= x.  [resolve(18,a,19,a)].

Eliminating Covers/2
20 Covers(x,y) | -(y < x) | y < f3(x,y).  [clausify(11)].
21 -Covers(x,y) | y < x.  [clausify(11)].
22 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(11)].
Derived: -(x < y) | x < f3(y,x) | -(x < z) | -(z < y).  [resolve(20,a,22,a)].
23 Covers(x,y) | -(y < x) | f3(x,y) < x.  [clausify(11)].
Derived: -(x < y) | f3(y,x) < y | -(x < z) | -(z < y).  [resolve(23,a,22,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. f3=1. f1=1. f2=1.
Predicate symbol precedence:  predicate_order([ =, <=, ZEX, EqDim, < ]).
Function symbol precedence:  function_order([ c1, c2, c3, f3, f1, f2 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 22.

7 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
12 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause) # label(goal).  [goal].
29 -EqDim(x,y) | -(x < y).  [clausify(7)].
30 -EqDim(x,y) | -(y < x).  [clausify(7)].
31 EqDim(x,y) | x < y | y < x.  [clausify(7)].
35 EqDim(c2,c3).  [deny(12)].
36 -EqDim(c3,c2).  [deny(12)].
45 EqDim(x,y) | y < x | -EqDim(y,x).  [resolve(31,b,30,b)].
53 -(c2 < c3).  [ur(29,a,35,a)].
73 $F.  [resolve(45,c,35,a),unit_del(a,36),unit_del(b,53)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=22. Generated=95. Kept=49. proofs=1.
Usable=22. Sos=27. Demods=0. Limbo=0, Disabled=31. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=45. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=108. Nonunit_bsub_feature_tests=171.
Megabytes=0.12.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 4132 exit (max_proofs) Mon May  2 11:27:11 2011
