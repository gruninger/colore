%axioms from module dim/p9/dim_prime_linear_bounded_discrete.p9
%----------------------------------

% automatically generated from cl/kif
formulas(sos).
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_bounded_discrete.clif
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_bounded.clif").
% 'd-a8: discrete set of dimensions: next highest dimension'
 all x ((-(maxdim(x)) ->  exists y (covers(y, x)))).
% 'd-a9: discrete set of dimensions: next lowest dimension'
 all x ((-(zex(x)) & -(mindim(x)) ->  exists y (covers(x, y)))).

end_of_list.

%axioms from module dim/p9/dim_prime_linear_bounded.p9
%----------------------------------

% automatically generated from cl/kif
formulas(sos).
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear_bounded.clif
%imports("http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif").
% 'd-a7: there exists a unique maximum dimension'
 exists x (maxdim(x)).

end_of_list.

%axioms from module dim/p9/dim_prime_linear.p9
%----------------------------------

% automatically generated from cl/kif
formulas(sos).
% Module http://colore.oor.net/multidim_mereotopology_dim/dim_prime_linear.clif
% 'compact axioms for linear relative dimension'
% 'd-a1: irreflexive'
 all x (-(<(x, x))).
% 'd-a2: asymmetric (antisymmetric & irreflexive)'
 all x all y ((<(x, y) -> -(<(y, x)))).
% 'd-a3: transitive'
 all x all y all z ((<(x, y) & <(y, z) -> <(x, z))).
% 'd-a4: unique zex'
 all x all y ((zex(x) & zex(y) -> (x = y))).
% 'd-a5: zex has dimension lower than anything else'
 all x all y ((zex(x) & -(zex(y)) -> <(x, y))).
% 'd-a6: a lowest dimension must exist'
 exists x (mindim(x)).
% 'd-d2: define eqdim in terms of <'
 all x all y ((eqdim(x, y) <-> -(<(x, y)) & -(<(y, x)))).
% 'd-d3: <='
 all x all y ((<=(x, y) <-> <(x, y) | eqdim(x, y))).
% 'd-d4: maximal dimension (codim=0)'
 all x ((maxdim(x) <->  all y (<=(y, x)))).
% 'd-d5: minimal dimension (dim=0)'
 all x ((mindim(x) <-> -(zex(x)) &  all y ((<(y, x) -> zex(y))))).
% 'd-d6: next highest dimension (covers), x covers y if x>y and no z s.t. x>z>y'
 all x all y ((covers(x, y) <-> <(y, x) &  all z (-(<(y, z) & <(z, x))))).

end_of_list.

