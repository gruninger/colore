============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 9342 was started by cchui on stl1.mie.utoronto.ca,
Mon Jul 15 19:42:44 2013
The command was "mace4 -c -t 600 -s 600 -n 2 -N 20 -f test/p9/dolce_time_mereology.p9 test/p9/dolce_time_mereology2cem_mereology.p9 test/p9/dolce_taxonomy.p9 test/p9/ex0715_dolce_time_mereology_3.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
end_of_list.

% Reading from file test/p9/dolce_time_mereology2cem_mereology.p9


formulas(sos).
(all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (x = x <-> T(x))).
(all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))).
(all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))).
(all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))).
(all x all y (disjoint(x,y) <-> -overlaps(x,y))).
(all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))).
(all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))).
end_of_list.

% Reading from file test/p9/dolce_taxonomy.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% Reading from file test/p9/ex0715_dolce_time_mereology_3.p9


formulas(goals).
(all x all y (-part(x,y) -> (exists z (part(z,x) & disjoint(z,y))))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 600).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
3 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
4 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
5 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
6 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
8 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
9 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
10 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
12 (all x (AtP(x) <-> T(x) & (all y (T(y) & P(y,x) -> y = x)))) # label(non_clause).  [assumption].
13 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
14 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
15 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
16 (all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
17 (all x (x = x <-> T(x))) # label(non_clause).  [assumption].
18 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
19 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
20 (all x all y (underlaps(x,y) <-> U(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
21 (all x all y (disjoint(x,y) <-> -overlaps(x,y))) # label(non_clause).  [assumption].
22 (all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))) # label(non_clause).  [assumption].
23 (all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))) # label(non_clause).  [assumption].
24 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
25 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
26 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
27 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
28 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
29 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
30 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
31 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
32 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
33 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
34 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
35 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
36 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
37 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
38 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
39 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
40 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
41 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
42 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
43 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
44 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
45 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
46 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
47 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
48 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
49 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
50 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
51 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
52 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
53 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
54 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
55 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
56 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
57 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
58 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
59 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
60 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
61 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
62 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
63 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
64 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
65 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
66 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
67 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
68 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
69 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
70 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
71 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].
72 (all x all y (-part(x,y) -> (exists z (part(z,x) & disjoint(z,y))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-P(x,y) | T(y).
-P(x,y) | -T(x) | T(y).
-P(x,y) | T(x) | -T(y).
-T(x) | P(x,x).
-T(x) | -T(y) | -P(x,y) | -P(y,x) | y = x.
-T(x) | -T(y) | -P(x,y) | -P(y,z) | P(x,z).
-T(x) | -T(y) | P(x,y) | T(f1(x,y)).
-T(x) | -T(y) | P(x,y) | P(f1(x,y),x).
-T(x) | -T(y) | P(x,y) | -O(f1(x,y),y).
-T(x) | -T(y) | P(x,y) | P(f2(x,y),x).
-T(x) | -T(y) | P(x,y) | DJ(f2(x,y),y).
-T(x) | -T(y) | P(x,y) | T(f2(x,y)).
-T(x) | -T(y) | -PP(x,y) | P(x,y).
-T(x) | -T(y) | -PP(x,y) | -P(y,x).
-T(x) | -T(y) | PP(x,y) | -P(x,y) | P(y,x).
-T(x) | -T(y) | -O(x,y) | P(f3(x,y),x).
-T(x) | -T(y) | -O(x,y) | P(f3(x,y),y).
-T(x) | -T(y) | -O(x,y) | T(f3(x,y)).
-T(x) | -T(y) | O(x,y) | -P(z,x) | -P(z,y) | -T(z).
-T(x) | -T(y) | -DJ(x,y) | -O(x,y).
-T(x) | -T(y) | DJ(x,y) | O(x,y).
-T(x) | -T(y) | -U(x,y) | P(x,f4(x,y)).
-T(x) | -T(y) | -U(x,y) | P(y,f4(x,y)).
-T(x) | -T(y) | -U(x,y) | T(f4(x,y)).
-T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).
-AtP(x) | T(x).
-AtP(x) | -T(y) | -P(y,x) | y = x.
AtP(x) | -T(x) | T(f5(x)).
AtP(x) | -T(x) | P(f5(x),x).
AtP(x) | -T(x) | f5(x) != x.
-T(x) | -T(y) | -U(x,y) | T(f6(x,y)).
-T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f6(x,y)) | O(z,x) | O(z,y).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f6(x,y)) | -O(z,x).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f6(x,y)) | -O(z,y).
-T(x) | -T(y) | -O(x,y) | T(f7(x,y)).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f7(x,y)) | PP(z,x).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f7(x,y)) | PP(z,y).
-T(x) | -T(y) | -O(x,y) | -T(z) | PP(z,f7(x,y)) | -PP(z,x) | -PP(z,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f8(x,y,z)).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f8(x,y,z),z) | O(f8(x,y,z),x) | O(f8(x,y,z),y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),x).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f8(x,y,z),z) | -O(f8(x,y,z),y).
-part(x,y) | P(x,y).
-part(x,y) | T(x).
-part(x,y) | T(y).
part(x,y) | -P(x,y) | -T(x) | -T(y).
x != x | T(x).
x = x | -T(x).
-ppart(x,y) | PP(x,y).
-ppart(x,y) | T(x).
-ppart(x,y) | T(y).
ppart(x,y) | -PP(x,y) | -T(x) | -T(y).
-overlaps(x,y) | O(x,y).
-overlaps(x,y) | T(x).
-overlaps(x,y) | T(y).
overlaps(x,y) | -O(x,y) | -T(x) | -T(y).
-underlaps(x,y) | U(x,y).
-underlaps(x,y) | T(x).
-underlaps(x,y) | T(y).
underlaps(x,y) | -U(x,y) | -T(x) | -T(y).
-disjoint(x,y) | -overlaps(x,y).
disjoint(x,y) | overlaps(x,y).
-overlaps(x,y) | part(f9(x,y),x).
-overlaps(x,y) | part(f9(x,y),y).
overlaps(x,y) | -part(z,x) | -part(z,y).
-underlaps(x,y) | part(x,f10(x,y)).
-underlaps(x,y) | part(y,f10(x,y)).
underlaps(x,y) | -part(x,z) | -part(y,z).
-ED(x) | PT(x).
-PD(x) | PT(x).
-Q(x) | PT(x).
-AB(x) | PT(x).
-PED(x) | ED(x).
-NPED(x) | ED(x).
-AS(x) | ED(x).
-EV(x) | PD(x).
-STV(x) | PD(x).
-TQ(x) | Q(x).
-PQ(x) | Q(x).
-AQ(x) | Q(x).
-R(x) | AB(x).
-M(x) | PED(x).
-F(x) | PED(x).
-POB(x) | PED(x).
-NPOB(x) | NPED(x).
-ACH(x) | EV(x).
-ACC(x) | EV(x).
-ST(x) | STV(x).
-PRO(x) | STV(x).
-TL(x) | TQ(x).
-SL(x) | PQ(x).
-TR(x) | R(x).
-PR(x) | R(x).
-AR(x) | R(x).
-APO(x) | POB(x).
-NAPO(x) | POB(x).
-MOB(x) | NPOB(x).
-SOB(x) | NPOB(x).
-T(x) | TR(x).
-S(x) | PR(x).
-ASO(x) | SOB(x).
-NASO(x) | SOB(x).
-SAG(x) | ASO(x).
-SC(x) | ASO(x).
-PT(x) | ED(x) | PD(x) | Q(x) | AB(x).
PT(x) | -ED(x).
PT(x) | -PD(x).
PT(x) | -Q(x).
PT(x) | -AB(x).
-ED(x) | -PD(x).
-ED(x) | -Q(x).
-ED(x) | -AB(x).
-PD(x) | -Q(x).
-PD(x) | -AB(x).
-Q(x) | -AB(x).
-ED(x) | PED(x) | NPED(x) | AS(x).
ED(x) | -PED(x).
ED(x) | -NPED(x).
ED(x) | -AS(x).
-PED(x) | -NPED(x).
-PED(x) | -AS(x).
-NPED(x) | -AS(x).
-PD(x) | EV(x) | STV(x).
PD(x) | -EV(x).
PD(x) | -STV(x).
-EV(x) | -STV(x).
-Q(x) | TQ(x) | PQ(x) | AQ(x).
Q(x) | -TQ(x).
Q(x) | -PQ(x).
Q(x) | -AQ(x).
-TQ(x) | -PQ(x).
-TQ(x) | -AQ(x).
-PQ(x) | -AQ(x).
-PED(x) | M(x) | F(x) | POB(x).
PED(x) | -M(x).
PED(x) | -F(x).
PED(x) | -POB(x).
-M(x) | -F(x).
-M(x) | -POB(x).
-F(x) | -POB(x).
-EV(x) | ACH(x) | ACC(x).
EV(x) | -ACH(x).
EV(x) | -ACC(x).
-ACH(x) | -ACC(x).
-STV(x) | ST(x) | PRO(x).
STV(x) | -ST(x).
STV(x) | -PRO(x).
-ST(x) | -PRO(x).
-R(x) | TR(x) | PR(x) | AR(x).
R(x) | -TR(x).
R(x) | -PR(x).
R(x) | -AR(x).
-TR(x) | -PR(x).
-TR(x) | -AR(x).
-PR(x) | -AR(x).
-POB(x) | APO(x) | NAPO(x).
POB(x) | -APO(x).
POB(x) | -NAPO(x).
-APO(x) | -NAPO(x).
-NPOB(x) | MOB(x) | SOB(x).
NPOB(x) | -MOB(x).
NPOB(x) | -SOB(x).
-MOB(x) | -SOB(x).
-SOB(x) | ASO(x) | NASO(x).
SOB(x) | -ASO(x).
SOB(x) | -NASO(x).
-ASO(x) | -NASO(x).
-ASO(x) | SAG(x) | SC(x).
ASO(x) | -SAG(x).
ASO(x) | -SC(x).
-SAG(x) | -SC(x).
-part(c1,c2).
-part(x,c1) | -disjoint(x,c2).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=575, kept=411.
Selections=1, assignments=1, propagations=134, current_models=0.
Rewrite_terms=76, rewrite_bools=971, indexes=8.
Rules_from_neg_clauses=19, cross_offs=19.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=1396, kept=1126.
Selections=2, assignments=3, propagations=256, current_models=0.
Rewrite_terms=207, rewrite_bools=3194, indexes=12.
Rules_from_neg_clauses=44, cross_offs=104.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=2909, kept=2517.
Selections=3, assignments=6, propagations=220, current_models=0.
Rewrite_terms=20, rewrite_bools=6261, indexes=12.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.04 seconds).
Ground clauses: seen=5456, kept=4926.
Selections=3, assignments=6, propagations=267, current_models=0.
Rewrite_terms=23, rewrite_bools=12844, indexes=15.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.07 seconds).
Ground clauses: seen=9451, kept=8767.
Selections=3, assignments=6, propagations=314, current_models=0.
Rewrite_terms=26, rewrite_bools=23877, indexes=18.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 0.13 seconds).
Ground clauses: seen=15380, kept=14526.
Selections=3, assignments=6, propagations=361, current_models=0.
Rewrite_terms=29, rewrite_bools=41082, indexes=21.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

============================== STATISTICS ============================

For domain size 8.

Current CPU time: 0.00 seconds (total CPU time: 0.24 seconds).
Ground clauses: seen=23801, kept=22761.
Selections=3, assignments=6, propagations=408, current_models=0.
Rewrite_terms=32, rewrite_bools=66469, indexes=24.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 9 =========================

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 0.41 seconds).
Ground clauses: seen=35344, kept=34102.
Selections=3, assignments=6, propagations=455, current_models=0.
Rewrite_terms=35, rewrite_bools=102336, indexes=27.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 10 ========================

============================== STATISTICS ============================

For domain size 10.

Current CPU time: 0.00 seconds (total CPU time: 0.66 seconds).
Ground clauses: seen=50711, kept=49251.
Selections=3, assignments=6, propagations=502, current_models=0.
Rewrite_terms=38, rewrite_bools=151269, indexes=30.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 11 ========================

============================== STATISTICS ============================

For domain size 11.

Current CPU time: 0.00 seconds (total CPU time: 1.05 seconds).
Ground clauses: seen=70676, kept=68982.
Selections=3, assignments=6, propagations=549, current_models=0.
Rewrite_terms=41, rewrite_bools=216142, indexes=33.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 12 ========================

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 1.59 seconds).
Ground clauses: seen=96085, kept=94141.
Selections=3, assignments=6, propagations=596, current_models=0.
Rewrite_terms=44, rewrite_bools=300117, indexes=36.
Rules_from_neg_clauses=0, cross_offs=39.

============================== end of statistics =====================

============================== DOMAIN SIZE 13 ========================

mace4_sig_handler: condition 2
============================== STATISTICS ============================

For domain size 13.

Current CPU time: 0.00 seconds (total CPU time: 1.91 seconds).
Ground clauses: seen=74034, kept=74008.
Selections=0, assignments=0, propagations=0, current_models=0.
Rewrite_terms=0, rewrite_bools=0, indexes=0.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

User_CPU=1.91, System_CPU=0.05, Wall_clock=2.

Exiting with failure.

Process 9342 exit (mace_sigint) Mon Jul 15 19:42:46 2013
The process finished Mon Jul 15 19:42:46 2013
