============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 20916 was started by torsten on stl-ws2,
Thu Jul  5 17:57:36 2012
The command was "prover9 -t 600 -f inch/conversions/inch_original.p9 inch/conversions/inch_weak_closed.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_original_theorems_7.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/conversions/inch_original.p9


formulas(sos).
(all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))).
(all x all y (CH(x,y) -> CS(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_closed.p9


formulas(sos).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_original_theorems_7.p9


formulas(goals).
(all x all y (INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))) -> CH(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
2 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))) # label(non_clause).  [assumption].
3 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
4 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))) # label(non_clause).  [assumption].
5 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))) # label(non_clause).  [assumption].
6 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
7 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
9 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
11 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
13 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
14 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))) -> CH(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating CS/2
16 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(6)].
17 -INCH(x,y) | CS(f1(x,y),x).  [clausify(2)].
18 -CH(x,y) | CS(x,y).  [clausify(3)].
Derived: -INCH(f1(x,y),z) | INCH(x,z) | -INCH(x,y).  [resolve(16,a,17,b)].
Derived: -INCH(x,y) | INCH(z,y) | -CH(x,z).  [resolve(16,a,18,b)].
19 CS(x,y) | INCH(x,f5(x,y)).  [clausify(6)].
Derived: INCH(x,f5(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(19,a,16,a)].
20 CS(x,y) | -INCH(y,f5(x,y)).  [clausify(6)].
Derived: -INCH(x,f5(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(20,a,16,a)].

Eliminating ZEXI/1
21 ZEXI(x) | INCH(x,x).  [clausify(8)].
22 -ZEXI(x) | -INCH(x,x).  [clausify(8)].
23 -GED(x,y) | ZEXI(y) | INCH(x,f7(x,y)).  [clausify(9)].
Derived: -GED(x,y) | INCH(x,f7(x,y)) | -INCH(y,y).  [resolve(23,b,22,a)].
24 -GED(x,y) | ZEXI(y) | INCH(f7(x,y),y).  [clausify(9)].
Derived: -GED(x,y) | INCH(f7(x,y),y) | -INCH(y,y).  [resolve(24,b,22,a)].
25 GED(x,y) | -ZEXI(y).  [clausify(9)].
Derived: GED(x,y) | INCH(y,y).  [resolve(25,b,21,a)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f7(z,y)).  [resolve(25,b,23,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f7(z,y),y).  [resolve(25,b,24,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, INCH, GED, CH ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f5, f6, f7, f8, f9, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 14.
% Level of proof is 4.
% Maximum clause weight is 16.000.
% Given clauses 71.

7 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))) -> CH(x,y))) # label(non_clause) # label(goal).  [goal].
40 CH(x,y) | -INCH(x,y) | INCH(x,f6(x,y)).  [clausify(7)].
41 CH(x,y) | -INCH(x,y) | INCH(f6(x,y),x).  [clausify(7)].
42 CH(x,y) | -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y).  [clausify(7)].
55 INCH(c1,c2).  [deny(15)].
56 -INCH(c1,x) | -INCH(x,c1) | INCH(c2,x).  [deny(15)].
57 -INCH(c1,x) | -INCH(x,c1) | INCH(x,c2).  [deny(15)].
58 -CH(c1,c2).  [deny(15)].
149 INCH(f6(c1,c2),c1).  [resolve(55,a,41,b),unit_del(a,58)].
150 INCH(c1,f6(c1,c2)).  [resolve(55,a,40,b),unit_del(a,58)].
261 INCH(f6(c1,c2),c2).  [resolve(149,a,57,b),unit_del(a,150)].
262 INCH(c2,f6(c1,c2)).  [resolve(149,a,56,b),unit_del(a,150)].
496 $F.  [resolve(261,a,42,d),unit_del(a,58),unit_del(b,55),unit_del(c,262)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=71. Generated=679. Kept=470. proofs=1.
Usable=71. Sos=381. Demods=0. Limbo=8, Disabled=62. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=208. Back_subsumed=3.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=7.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1285. Nonunit_bsub_feature_tests=1144.
Megabytes=0.77.
User_CPU=0.03, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 20916 exit (max_proofs) Thu Jul  5 17:57:36 2012
