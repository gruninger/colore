============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 21429 was started by torsten on scotus.mie.utoronto.ca,
Fri Jun 29 03:42:10 2012
The command was "prover9 -t 600 -f inch/conversions/inch_calculus.p9 inch/conversions/inch_original.p9 inch/conversions/inch_weak_closed.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_calculus_theorems_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/conversions/inch_calculus.p9


formulas(sos).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & CH(z,y))))).
end_of_list.

% Reading from file inch/conversions/inch_original.p9


formulas(sos).
(all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))).
(all x all y (CH(x,y) -> CS(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_closed.p9


formulas(sos).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_calculus_theorems_2.p9


formulas(goals).
(all x all y (GED(x,y) & GED(y,x) & (all z (CH(z,x) -> CH(z,y))) -> CS(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & CH(z,y))))) # label(non_clause).  [assumption].
2 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
3 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))) # label(non_clause).  [assumption].
4 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
5 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))) # label(non_clause).  [assumption].
6 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))) # label(non_clause).  [assumption].
7 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
8 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
9 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
10 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
11 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
12 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
13 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
14 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
15 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
16 (all x all y (GED(x,y) & GED(y,x) & (all z (CH(z,x) -> CH(z,y))) -> CS(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating ZEXI/1
17 ZEXI(x) | INCH(x,x).  [clausify(9)].
18 -ZEXI(x) | -INCH(x,x).  [clausify(9)].
19 -GED(x,y) | ZEXI(y) | INCH(x,f8(x,y)).  [clausify(10)].
Derived: -GED(x,y) | INCH(x,f8(x,y)) | -INCH(y,y).  [resolve(19,b,18,a)].
20 -GED(x,y) | ZEXI(y) | INCH(f8(x,y),y).  [clausify(10)].
Derived: -GED(x,y) | INCH(f8(x,y),y) | -INCH(y,y).  [resolve(20,b,18,a)].
21 GED(x,y) | -ZEXI(y).  [clausify(10)].
Derived: GED(x,y) | INCH(y,y).  [resolve(21,b,17,a)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f8(z,y)).  [resolve(21,b,19,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f8(z,y),y).  [resolve(21,b,20,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, INCH, GED, CH, CS ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f6, f7, f8, f9, f10, f5 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 20.
% Level of proof is 5.
% Maximum clause weight is 16.000.
% Given clauses 70.

4 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
7 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
8 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
13 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
16 (all x all y (GED(x,y) & GED(y,x) & (all z (CH(z,x) -> CH(z,y))) -> CS(x,y))) # label(non_clause) # label(goal).  [goal].
28 -CH(x,y) | CS(x,y).  [clausify(4)].
38 CS(x,y) | INCH(x,f6(x,y)).  [clausify(7)].
43 CH(x,y) | -INCH(x,y) | INCH(x,f7(x,y)).  [clausify(8)].
44 CH(x,y) | -INCH(x,y) | INCH(f7(x,y),x).  [clausify(8)].
45 CH(x,y) | -INCH(x,y) | -INCH(y,f7(x,y)) | -INCH(f7(x,y),y).  [clausify(8)].
55 -INCH(x,y) | INCH(x,x).  [clausify(13)].
60 -CH(x,c1) | CH(x,c2).  [deny(16)].
61 -CS(c1,c2).  [deny(16)].
172 INCH(c1,f6(c1,c2)).  [resolve(61,a,38,a)].
174 -CH(c1,c2).  [ur(28,b,61,a)].
223 -CH(c1,c1).  [ur(60,b,174,a)].
228 INCH(c1,c1).  [resolve(172,a,55,a)].
252 INCH(f7(c1,c1),c1).  [resolve(228,a,44,b),unit_del(a,223)].
253 INCH(c1,f7(c1,c1)).  [resolve(228,a,43,b),unit_del(a,223)].
340 $F.  [resolve(252,a,45,d),unit_del(a,223),unit_del(b,228),unit_del(c,253)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=70. Generated=480. Kept=318. proofs=1.
Usable=70. Sos=226. Demods=0. Limbo=7, Disabled=65. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=161. Back_subsumed=5.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=10.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=529. Nonunit_bsub_feature_tests=790.
Megabytes=0.58.
User_CPU=0.03, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 21429 exit (max_proofs) Fri Jun 29 03:42:10 2012
