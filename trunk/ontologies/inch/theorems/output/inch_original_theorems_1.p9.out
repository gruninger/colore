============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 20856 was started by torsten on stl-ws2,
Thu Jul  5 17:57:00 2012
The command was "prover9 -t 600 -f inch/conversions/inch_original.p9 inch/conversions/inch_weak_closed.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_original_theorems_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/conversions/inch_original.p9


formulas(sos).
(all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))).
(all x all y (CH(x,y) -> CS(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_closed.p9


formulas(sos).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_original_theorems_1.p9


formulas(goals).
(all x all y (INCH(x,y) -> GED(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
2 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))) # label(non_clause).  [assumption].
3 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
4 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))) # label(non_clause).  [assumption].
5 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))) # label(non_clause).  [assumption].
6 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
7 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
9 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
11 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
13 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
14 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) -> GED(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating CS/2
16 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(6)].
17 -INCH(x,y) | CS(f1(x,y),x).  [clausify(2)].
18 -CH(x,y) | CS(x,y).  [clausify(3)].
Derived: -INCH(f1(x,y),z) | INCH(x,z) | -INCH(x,y).  [resolve(16,a,17,b)].
Derived: -INCH(x,y) | INCH(z,y) | -CH(x,z).  [resolve(16,a,18,b)].
19 CS(x,y) | INCH(x,f5(x,y)).  [clausify(6)].
Derived: INCH(x,f5(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(19,a,16,a)].
20 CS(x,y) | -INCH(y,f5(x,y)).  [clausify(6)].
Derived: -INCH(x,f5(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(20,a,16,a)].

Eliminating CH/2
21 -GED(x,y) | -GED(y,x) | INCH(f3(x,y),z) | -INCH(u,z) | -CH(u,x) | INCH(u,y).  [clausify(5)].
22 -GED(x,y) | -GED(y,x) | -INCH(f3(x,y),z) | CH(f4(x,y,z),x).  [clausify(5)].
Derived: -GED(x,y) | -GED(y,x) | INCH(f3(x,y),z) | -INCH(f4(x,u,w),z) | INCH(f4(x,u,w),y) | -GED(x,u) | -GED(u,x) | -INCH(f3(x,u),w).  [resolve(21,e,22,d)].
23 -GED(x,y) | -GED(y,x) | INCH(f3(x,y),z) | -INCH(u,z) | -CH(u,x) | INCH(y,u).  [clausify(5)].
Derived: -GED(x,y) | -GED(y,x) | INCH(f3(x,y),z) | -INCH(f4(x,u,w),z) | INCH(y,f4(x,u,w)) | -GED(x,u) | -GED(u,x) | -INCH(f3(x,u),w).  [resolve(23,e,22,d)].
24 -CH(x,y) | INCH(x,y).  [clausify(7)].
Derived: INCH(f4(x,y,z),x) | -GED(x,y) | -GED(y,x) | -INCH(f3(x,y),z).  [resolve(24,a,22,d)].
25 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [clausify(7)].
Derived: -INCH(f4(x,y,z),u) | -INCH(u,f4(x,y,z)) | INCH(x,u) | -GED(x,y) | -GED(y,x) | -INCH(f3(x,y),z).  [resolve(25,a,22,d)].
26 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [clausify(7)].
Derived: -INCH(f4(x,y,z),u) | -INCH(u,f4(x,y,z)) | INCH(u,x) | -GED(x,y) | -GED(y,x) | -INCH(f3(x,y),z).  [resolve(26,a,22,d)].
27 CH(x,y) | -INCH(x,y) | INCH(x,f6(x,y)).  [clausify(7)].
Derived: -INCH(x,y) | INCH(x,f6(x,y)) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(x,z).  [resolve(27,a,21,e)].
Derived: -INCH(x,y) | INCH(x,f6(x,y)) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(z,x).  [resolve(27,a,23,e)].
Derived: -INCH(x,y) | INCH(x,f6(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(27,a,25,a)].
Derived: -INCH(x,y) | INCH(x,f6(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(27,a,26,a)].
28 CH(x,y) | -INCH(x,y) | INCH(f6(x,y),x).  [clausify(7)].
Derived: -INCH(x,y) | INCH(f6(x,y),x) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(x,z).  [resolve(28,a,21,e)].
Derived: -INCH(x,y) | INCH(f6(x,y),x) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(z,x).  [resolve(28,a,23,e)].
Derived: -INCH(x,y) | INCH(f6(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(28,a,25,a)].
Derived: -INCH(x,y) | INCH(f6(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(28,a,26,a)].
29 CH(x,y) | -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y).  [clausify(7)].
Derived: -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(x,z).  [resolve(29,a,21,e)].
Derived: -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y) | -GED(y,z) | -GED(z,y) | INCH(f3(y,z),u) | -INCH(x,u) | INCH(z,x).  [resolve(29,a,23,e)].
Derived: -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(29,a,25,a)].
Derived: -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(29,a,26,a)].
30 -INCH(x,y) | INCH(z,y) | -CH(x,z).  [resolve(16,a,18,b)].
Derived: -INCH(f4(x,y,z),u) | INCH(x,u) | -GED(x,y) | -GED(y,x) | -INCH(f3(x,y),z).  [resolve(30,c,22,d)].
Derived: -INCH(x,y) | INCH(z,y) | -INCH(x,z) | INCH(x,f6(x,z)).  [resolve(30,c,27,a)].
Derived: -INCH(x,y) | INCH(z,y) | -INCH(x,z) | INCH(f6(x,z),x).  [resolve(30,c,28,a)].
Derived: -INCH(x,y) | INCH(z,y) | -INCH(x,z) | -INCH(z,f6(x,z)) | -INCH(f6(x,z),z).  [resolve(30,c,29,a)].

Eliminating ZEXI/1
31 ZEXI(x) | INCH(x,x).  [clausify(8)].
32 -ZEXI(x) | -INCH(x,x).  [clausify(8)].
33 -GED(x,y) | ZEXI(y) | INCH(x,f7(x,y)).  [clausify(9)].
Derived: -GED(x,y) | INCH(x,f7(x,y)) | -INCH(y,y).  [resolve(33,b,32,a)].
34 -GED(x,y) | ZEXI(y) | INCH(f7(x,y),y).  [clausify(9)].
Derived: -GED(x,y) | INCH(f7(x,y),y) | -INCH(y,y).  [resolve(34,b,32,a)].
35 GED(x,y) | -ZEXI(y).  [clausify(9)].
Derived: GED(x,y) | INCH(y,y).  [resolve(35,b,31,a)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f7(z,y)).  [resolve(35,b,33,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f7(z,y),y).  [resolve(35,b,34,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, INCH, GED ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f5, f6, f7, f8, f9, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 9.
% Level of proof is 3.
% Maximum clause weight is 9.000.
% Given clauses 22.

9 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) -> GED(x,y))) # label(non_clause) # label(goal).  [goal].
44 GED(x,y) | -INCH(x,z) | -INCH(z,y).  [clausify(9)].
53 -INCH(x,y) | INCH(x,x).  [clausify(12)].
56 INCH(c1,c2).  [deny(15)].
57 -GED(c1,c2).  [deny(15)].
181 INCH(c1,c1).  [resolve(56,a,53,a)].
192 $F.  [ur(44,a,57,a,c,56,a),unit_del(a,181)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=22. Generated=284. Kept=156. proofs=1.
Usable=22. Sos=122. Demods=0. Limbo=1, Disabled=82. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=127. Back_subsumed=7.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=4.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=442. Nonunit_bsub_feature_tests=754.
Megabytes=0.34.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 20856 exit (max_proofs) Thu Jul  5 17:57:00 2012
