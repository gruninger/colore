============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 21544 was started by torsten on stl-ws2,
Thu Jul  5 18:08:17 2012
The command was "prover9 -t 600 -f inch/conversions/inch_original.p9 inch/conversions/inch_weak_closed.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_original_theorems_10.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/conversions/inch_original.p9


formulas(sos).
(all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))).
(all x all y (CH(x,y) -> CS(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_closed.p9


formulas(sos).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_original_theorems_10.p9


formulas(goals).
(all x all y (CS(x,y) & GED(x,y) & GED(y,x) & -ZEXI(x) -> CH(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
2 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))) # label(non_clause).  [assumption].
3 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
4 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))) # label(non_clause).  [assumption].
5 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))) # label(non_clause).  [assumption].
6 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
7 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
9 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
11 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
13 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
14 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
15 (all x all y (CS(x,y) & GED(x,y) & GED(y,x) & -ZEXI(x) -> CH(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating CS/2
16 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(6)].
17 -INCH(x,y) | CS(f1(x,y),x).  [clausify(2)].
18 -CH(x,y) | CS(x,y).  [clausify(3)].
Derived: -INCH(f1(x,y),z) | INCH(x,z) | -INCH(x,y).  [resolve(16,a,17,b)].
Derived: -INCH(x,y) | INCH(z,y) | -CH(x,z).  [resolve(16,a,18,b)].
19 CS(x,y) | INCH(x,f5(x,y)).  [clausify(6)].
Derived: INCH(x,f5(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(19,a,16,a)].
20 CS(x,y) | -INCH(y,f5(x,y)).  [clausify(6)].
Derived: -INCH(x,f5(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(20,a,16,a)].
21 CS(c1,c2).  [deny(15)].
Derived: -INCH(c1,x) | INCH(c2,x).  [resolve(21,a,16,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEXI, INCH, GED, CH ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f5, f6, f7, f8, f9, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.00 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 257 (0.00 of 0.89 sec).

Low Water (keep): wt=30.000, iters=6678

Low Water (keep): wt=28.000, iters=6703

Low Water (keep): wt=27.000, iters=6734

Low Water (keep): wt=26.000, iters=6717

Low Water (keep): wt=25.000, iters=6666

Low Water (keep): wt=24.000, iters=6681

Low Water (keep): wt=23.000, iters=6692

Low Water (keep): wt=22.000, iters=6672

Low Water (keep): wt=21.000, iters=6667

Low Water (keep): wt=20.000, iters=6709

Low Water (keep): wt=19.000, iters=6698

============================== PROOF =================================

% Proof 1 at 2.45 (+ 0.01) seconds.
% Length of proof is 36.
% Level of proof is 11.
% Maximum clause weight is 16.000.
% Given clauses 1098.

1 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
6 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
7 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
9 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
15 (all x all y (CS(x,y) & GED(x,y) & GED(y,x) & -ZEXI(x) -> CH(x,y))) # label(non_clause) # label(goal).  [goal].
16 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(6)].
21 CS(c1,c2).  [deny(15)].
22 -INCH(x,y) | -INCH(y,z) | -INCH(z,x) | INCH(y,x).  [clausify(1)].
36 CH(x,y) | -INCH(x,y) | INCH(x,f6(x,y)).  [clausify(7)].
37 CH(x,y) | -INCH(x,y) | INCH(f6(x,y),x).  [clausify(7)].
38 CH(x,y) | -INCH(x,y) | -INCH(y,f6(x,y)) | -INCH(f6(x,y),y).  [clausify(7)].
39 -ZEXI(x) | -INCH(x,x).  [clausify(8)].
40 ZEXI(x) | INCH(x,x).  [clausify(8)].
41 -GED(x,y) | ZEXI(y) | INCH(x,f7(x,y)).  [clausify(9)].
42 -GED(x,y) | ZEXI(y) | INCH(f7(x,y),y).  [clausify(9)].
53 -INCH(x,y) | INCH(x,x).  [clausify(12)].
56 GED(c1,c2).  [deny(15)].
58 -ZEXI(c1).  [deny(15)].
59 -CH(c1,c2).  [deny(15)].
64 -INCH(c1,x) | INCH(c2,x).  [resolve(21,a,16,a)].
154 ZEXI(c2) | INCH(f7(c1,c2),c2).  [resolve(56,a,42,a)].
155 ZEXI(c2) | INCH(c1,f7(c1,c2)).  [resolve(56,a,41,a)].
193 INCH(c2,c1).  [resolve(64,a,40,b),unit_del(b,58)].
222 INCH(c2,c2).  [resolve(193,a,53,a)].
232 -INCH(c1,x) | -INCH(x,c2) | INCH(c1,c2).  [resolve(193,a,22,a)].
240 -ZEXI(c2).  [resolve(222,a,39,b)].
245 INCH(c1,f7(c1,c2)).  [back_unit_del(155),unit_del(a,240)].
246 INCH(f7(c1,c2),c2).  [back_unit_del(154),unit_del(a,240)].
11561 INCH(c1,c2).  [resolve(232,a,245,a),unit_del(a,246)].
11591 INCH(f6(c1,c2),c1).  [resolve(11561,a,37,b),unit_del(a,59)].
11592 INCH(c1,f6(c1,c2)).  [resolve(11561,a,36,b),unit_del(a,59)].
11676 INCH(c2,f6(c1,c2)).  [resolve(11592,a,64,a)].
11854 -INCH(f6(c1,c2),c2).  [ur(38,a,59,a,b,11561,a,c,11676,a)].
11999 $F.  [ur(22,b,11591,a,c,11561,a,d,11854,a),unit_del(a,11676)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=1098. Generated=22583. Kept=11977. proofs=1.
Usable=1037. Sos=10417. Demods=0. Limbo=80, Disabled=492. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=5483. Back_subsumed=21.
Sos_limit_deleted=5122. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=422.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=209582. Nonunit_bsub_feature_tests=28236.
Megabytes=18.51.
User_CPU=2.45, System_CPU=0.01, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 21544 exit (max_proofs) Thu Jul  5 18:08:19 2012
