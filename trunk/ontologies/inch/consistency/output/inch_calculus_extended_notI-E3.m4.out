============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 21407 was started by torsten on scotus.mie.utoronto.ca,
Fri Jun 29 03:37:02 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f inch/consistency/input/inch_calculus_extended_notI-E3.p9 inch/conversions/inch_calculus_extended.p9 inch/mappings/conversions/inch2codi.p9 inch/conversions/inch_calculus.p9 inch/conversions/inch_original.p9 inch/conversions/inch_weak_closed.p9 inch/conversions/inch_weak.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/consistency/input/inch_calculus_extended_notI-E3.p9


formulas(sos).
-(exists y all x (-ZEX(x) -> Cont(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_calculus_extended.p9


formulas(sos).
(exists x (-ZEXI(x) & (all y (-ZEXI(y) -> GED(y,x))))).
(all x all y ((exists w (-ZEXI(w) & CS(w,x) & CS(w,y))) -> (exists z (CS(z,x) & CS(z,y) & (all w (CS(w,x) & CS(w,y) -> GED(z,w))) & (all w (CS(w,x) & CS(w,y) & GED(w,z) & GED(z,w) -> CS(w,z))))))).
end_of_list.

% Reading from file inch/mappings/conversions/inch2codi.p9


formulas(sos).
(all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))).
(all x (ZEX(x) <-> ZEXI(x))).
(all x all y (x < y <-> GED(y,x) & -GED(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_calculus.p9


formulas(sos).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & CH(z,y))))).
end_of_list.

% Reading from file inch/conversions/inch_original.p9


formulas(sos).
(all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))).
(all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))).
(all x all y (CH(x,y) -> CS(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_closed.p9


formulas(sos).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))).
(all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 -(exists y all x (-ZEX(x) -> Cont(x,y))) # label(non_clause).  [assumption].
2 (exists x (-ZEXI(x) & (all y (-ZEXI(y) -> GED(y,x))))) # label(non_clause).  [assumption].
3 (all x all y ((exists w (-ZEXI(w) & CS(w,x) & CS(w,y))) -> (exists z (CS(z,x) & CS(z,y) & (all w (CS(w,x) & CS(w,y) -> GED(z,w))) & (all w (CS(w,x) & CS(w,y) & GED(w,z) & GED(z,w) -> CS(w,z))))))) # label(non_clause).  [assumption].
4 (all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))) # label(non_clause).  [assumption].
5 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
6 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
7 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & CH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y all z (INCH(x,y) & INCH(y,z) & INCH(z,x) -> INCH(y,x))) # label(non_clause).  [assumption].
9 (all x all y (INCH(x,y) -> (exists z (CS(z,x) & INCH(z,y) & INCH(y,z))))) # label(non_clause).  [assumption].
10 (all x all y (CH(x,y) -> CS(x,y))) # label(non_clause).  [assumption].
11 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> INCH(x,w) | INCH(y,w))))) # label(non_clause).  [assumption].
12 (all x all y (GED(x,y) & GED(y,x) -> (exists z all w (INCH(z,w) <-> (exists v (INCH(v,w) & CH(v,x) & -(INCH(v,y) & INCH(y,v)))))))) # label(non_clause).  [assumption].
13 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
14 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
15 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
16 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
17 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
18 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
19 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
20 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
21 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-ZEX(f1(x)).
-Cont(f1(x),x).
-ZEXI(c1).
ZEXI(x) | GED(x,c1).
ZEXI(x) | -CS(x,y) | -CS(x,z) | CS(f2(y,z),y).
ZEXI(x) | -CS(x,y) | -CS(x,z) | CS(f2(y,z),z).
ZEXI(x) | -CS(x,y) | -CS(x,z) | -CS(u,y) | -CS(u,z) | GED(f2(y,z),u).
ZEXI(x) | -CS(x,y) | -CS(x,z) | -CS(u,y) | -CS(u,z) | -GED(u,f2(y,z)) | -GED(f2(y,z),u) | CS(u,f2(y,z)).
-Cont(x,y) | CS(x,y).
-Cont(x,y) | -ZEXI(x).
Cont(x,y) | -CS(x,y) | ZEXI(x).
-ZEX(x) | ZEXI(x).
ZEX(x) | -ZEXI(x).
-(x < y) | GED(y,x).
-(x < y) | -GED(x,y).
x < y | -GED(y,x) | GED(x,y).
-INCH(x,y) | CS(f3(x,y),x).
-INCH(x,y) | CH(f3(x,y),y).
-INCH(x,y) | -INCH(y,z) | -INCH(z,x) | INCH(y,x).
-INCH(x,y) | CS(f4(x,y),x).
-INCH(x,y) | INCH(f4(x,y),y).
-INCH(x,y) | INCH(y,f4(x,y)).
-CH(x,y) | CS(x,y).
-GED(x,y) | -GED(y,x) | -INCH(f5(x,y),z) | INCH(x,z) | INCH(y,z).
-GED(x,y) | -GED(y,x) | INCH(f5(x,y),z) | -INCH(x,z).
-GED(x,y) | -GED(y,x) | INCH(f5(x,y),z) | -INCH(y,z).
-GED(x,y) | -GED(y,x) | -INCH(f6(x,y),z) | INCH(f7(x,y,z),z).
-GED(x,y) | -GED(y,x) | -INCH(f6(x,y),z) | CH(f7(x,y,z),x).
-GED(x,y) | -GED(y,x) | -INCH(f6(x,y),z) | -INCH(f7(x,y,z),y) | -INCH(y,f7(x,y,z)).
-GED(x,y) | -GED(y,x) | INCH(f6(x,y),z) | -INCH(u,z) | -CH(u,x) | INCH(u,y).
-GED(x,y) | -GED(y,x) | INCH(f6(x,y),z) | -INCH(u,z) | -CH(u,x) | INCH(y,u).
-CS(x,y) | -INCH(x,z) | INCH(y,z).
CS(x,y) | INCH(x,f8(x,y)).
CS(x,y) | -INCH(y,f8(x,y)).
-CH(x,y) | INCH(x,y).
-CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).
-CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).
CH(x,y) | -INCH(x,y) | INCH(x,f9(x,y)).
CH(x,y) | -INCH(x,y) | INCH(f9(x,y),x).
CH(x,y) | -INCH(x,y) | -INCH(y,f9(x,y)) | -INCH(f9(x,y),y).
-ZEXI(x) | -INCH(x,x).
ZEXI(x) | INCH(x,x).
-GED(x,y) | ZEXI(y) | INCH(x,f10(x,y)).
-GED(x,y) | ZEXI(y) | INCH(f10(x,y),y).
GED(x,y) | -ZEXI(y).
GED(x,y) | -INCH(x,z) | -INCH(z,y).
x != y | -INCH(x,z) | INCH(y,z).
x != y | INCH(x,z) | -INCH(y,z).
x = y | INCH(x,f11(x,y)) | INCH(y,f11(x,y)).
x = y | -INCH(x,f11(x,y)) | -INCH(y,f11(x,y)).
x != y | -INCH(z,x) | INCH(z,y).
x != y | INCH(z,x) | -INCH(z,y).
x = y | INCH(f12(x,y),x) | INCH(f12(x,y),y).
x = y | -INCH(f12(x,y),x) | -INCH(f12(x,y),y).
-INCH(x,y) | INCH(x,x).
GED(x,y) | GED(y,x).
-GED(x,y) | -GED(y,z) | GED(x,z).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=331, kept=303.
Selections=2, assignments=3, propagations=70, current_models=0.
Rewrite_terms=165, rewrite_bools=830, indexes=42.
Rules_from_neg_clauses=25, cross_offs=25.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 5.59 seconds).
Ground clauses: seen=1075, kept=982.
Selections=221375, assignments=664121, propagations=1303948, current_models=0.
Rewrite_terms=3873059, rewrite_bools=18108353, indexes=646411.
Rules_from_neg_clauses=442992, cross_offs=1107584.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

====== Domain size 4 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 65.59 seconds).
Ground clauses: seen=2637, kept=2413.
Selections=1874948, assignments=7499730, propagations=8054799, current_models=0.
Rewrite_terms=207976830, rewrite_bools=111657621, indexes=25773283.
Rules_from_neg_clauses=4765583, cross_offs=17194576.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

============================== MODEL =================================

interpretation( 5, [number=1, seconds=65], [

        function(c1, [ 0 ]),

        function(f1(_), [ 1, 0, 3, 1, 0 ]),

        function(f2(_,_), [
			   0, 0, 0, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 1, 2, 0, 0,
			   0, 0, 0, 3, 0,
			   0, 0, 0, 0, 0 ]),

        function(f3(_,_), [
			   0, 0, 0, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 1, 0, 0, 0,
			   0, 0, 0, 3, 0,
			   0, 0, 0, 0, 0 ]),

        function(f4(_,_), [
			   0, 0, 0, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 1, 0, 0, 0,
			   0, 0, 0, 3, 0,
			   0, 0, 0, 0, 0 ]),

        function(f5(_,_), [
			   0, 2, 2, 0, 0,
			   2, 1, 2, 0, 0,
			   2, 2, 2, 0, 0,
			   0, 0, 0, 3, 0,
			   0, 0, 0, 0, 4 ]),

        function(f6(_,_), [
			   4, 0, 4, 0, 0,
			   1, 4, 4, 0, 0,
			   1, 0, 4, 0, 0,
			   0, 0, 0, 4, 0,
			   0, 0, 0, 0, 4 ]),

        function(f8(_,_), [
			   0, 0, 0, 0, 0,
			   1, 0, 0, 1, 1,
			   1, 0, 0, 1, 0,
			   3, 0, 3, 0, 0,
			   0, 0, 0, 0, 0 ]),

        function(f9(_,_), [
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   1, 0, 0, 0, 0,
			   3, 0, 3, 0, 0,
			   0, 0, 0, 0, 0 ]),

        function(f10(_,_), [
			   0, 2, 0, 0, 0,
			   2, 1, 1, 0, 0,
			   0, 1, 0, 0, 0,
			   0, 2, 0, 3, 0,
			   0, 0, 0, 0, 0 ]),

        function(f11(_,_), [
			   0, 0, 1, 3, 0,
			   0, 0, 0, 0, 1,
			   1, 0, 0, 1, 0,
			   3, 0, 1, 0, 0,
			   0, 1, 0, 0, 0 ]),

        function(f12(_,_), [
			   0, 0, 1, 0, 0,
			   0, 0, 0, 1, 1,
			   1, 0, 0, 0, 0,
			   0, 1, 0, 0, 3,
			   0, 1, 0, 3, 0 ]),

        function(f7(_,_,_), [
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0,
			   0, 0, 0, 0, 0 ]),

        relation(ZEX(_), [ 0, 0, 0, 0, 1 ]),

        relation(ZEXI(_), [ 0, 0, 0, 0, 1 ]),

        relation(<(_,_), [
			   0, 0, 0, 1, 0,
			   0, 0, 0, 1, 0,
			   0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0,
			   1, 1, 1, 1, 0 ]),

        relation(CH(_,_), [
			   1, 0, 1, 0, 0,
			   0, 1, 1, 0, 0,
			   0, 0, 1, 0, 0,
			   0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0 ]),

        relation(CS(_,_), [
			   1, 0, 1, 1, 0,
			   0, 1, 1, 0, 0,
			   0, 0, 1, 0, 0,
			   0, 0, 0, 1, 0,
			   1, 1, 1, 1, 1 ]),

        relation(Cont(_,_), [
			   1, 0, 1, 1, 0,
			   0, 1, 1, 0, 0,
			   0, 0, 1, 0, 0,
			   0, 0, 0, 1, 0,
			   0, 0, 0, 0, 0 ]),

        relation(GED(_,_), [
			   1, 1, 1, 0, 1,
			   1, 1, 1, 0, 1,
			   1, 1, 1, 0, 1,
			   1, 1, 1, 1, 1,
			   0, 0, 0, 0, 1 ]),

        relation(INCH(_,_), [
			   1, 0, 1, 0, 0,
			   0, 1, 1, 0, 0,
			   1, 1, 1, 0, 0,
			   1, 0, 1, 1, 0,
			   0, 0, 0, 0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 65.62 seconds).
Ground clauses: seen=5461, kept=5016.
Selections=389, assignments=550, propagations=352, current_models=1.
Rewrite_terms=8872, rewrite_bools=16723, indexes=2201.
Rules_from_neg_clauses=32, cross_offs=531.

============================== end of statistics =====================

User_CPU=65.62, System_CPU=0.90, Wall_clock=66.

Exiting with 1 model.

Process 21407 exit (max_models) Fri Jun 29 03:38:08 2012
The process finished Fri Jun 29 03:38:08 2012
