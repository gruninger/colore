============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 21550 was started by torsten on stl-ws2,
Mon May 28 16:23:52 2012
The command was "prover9 -t 600 -f codi/conversions/C-E4.p9 codi/conversions/codi_linear_nodefs.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_ged.p9 inch/definitions/input/inch_I-M2.p9 inch/definitions/input/inch_I-M3.p9 codi/definitions/input/ep.p9 cont/conversions/cont_basic.p9 inch/definitions/input/inch_zex.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_C-E4_I-E1_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/C-E4.p9


formulas(sos).
(all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
end_of_list.

% Reading from file codi/conversions/codi_linear_nodefs.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_ged.p9


formulas(sos).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M2.p9


formulas(sos).
(all x (ZEX(x) <-> ZEXI(x))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M3.p9


formulas(sos).
(all x all y (GED(y,x) <-> x <= y)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file inch/definitions/input/inch_zex.p9


formulas(sos).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_C-E4_I-E1_1.p9


formulas(goals).
(exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
2 (all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
3 (all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
4 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
5 (all x -(x < x)) # label(non_clause).  [assumption].
6 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
7 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
8 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
9 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
10 (exists x MinDim(x)) # label(non_clause).  [assumption].
11 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
12 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
14 (exists x ZEX(x)) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
16 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
17 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
18 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
19 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
20 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
21 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
22 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
23 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
26 (exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating <=/2
27 x <= y | -(x < y).  [clausify(12)].
28 -(x <= y) | ZEX(x) | P(f2(x,y),x).  [clausify(1)].
29 -(x <= y) | ZEX(x) | Cont(f2(x,y),f1(x,y)).  [clausify(1)].
30 -(x <= y) | ZEX(x) | P(f3(x,y),f1(x,y)).  [clausify(1)].
31 -(x <= y) | ZEX(x) | Cont(f3(x,y),y).  [clausify(1)].
32 -(x < y) | -(y <= z) | x < z.  [clausify(7)].
33 -(x <= y) | x < y | EqDim(x,y).  [clausify(12)].
Derived: -(x < y) | ZEX(x) | P(f2(x,y),x).  [resolve(27,a,28,a)].
Derived: -(x < y) | ZEX(x) | Cont(f2(x,y),f1(x,y)).  [resolve(27,a,29,a)].
Derived: -(x < y) | ZEX(x) | P(f3(x,y),f1(x,y)).  [resolve(27,a,30,a)].
Derived: -(x < y) | ZEX(x) | Cont(f3(x,y),y).  [resolve(27,a,31,a)].
Derived: -(x < y) | -(z < x) | z < y.  [resolve(27,a,32,b)].
34 x <= y | -EqDim(x,y).  [clausify(12)].
Derived: -EqDim(x,y) | ZEX(x) | P(f2(x,y),x).  [resolve(34,a,28,a)].
Derived: -EqDim(x,y) | ZEX(x) | Cont(f2(x,y),f1(x,y)).  [resolve(34,a,29,a)].
Derived: -EqDim(x,y) | ZEX(x) | P(f3(x,y),f1(x,y)).  [resolve(34,a,30,a)].
Derived: -EqDim(x,y) | ZEX(x) | Cont(f3(x,y),y).  [resolve(34,a,31,a)].
Derived: -EqDim(x,y) | -(z < x) | z < y.  [resolve(34,a,32,b)].
35 -GED(x,y) | y <= x.  [clausify(18)].
Derived: -GED(x,y) | ZEX(y) | P(f2(y,x),y).  [resolve(35,b,28,a)].
Derived: -GED(x,y) | ZEX(y) | Cont(f2(y,x),f1(y,x)).  [resolve(35,b,29,a)].
Derived: -GED(x,y) | ZEX(y) | P(f3(y,x),f1(y,x)).  [resolve(35,b,30,a)].
Derived: -GED(x,y) | ZEX(y) | Cont(f3(y,x),x).  [resolve(35,b,31,a)].
Derived: -GED(x,y) | -(z < y) | z < x.  [resolve(35,b,32,b)].
Derived: -GED(x,y) | y < x | EqDim(y,x).  [resolve(35,b,33,a)].
36 GED(x,y) | -(y <= x).  [clausify(18)].
Derived: GED(x,y) | -(y < x).  [resolve(36,b,27,a)].
Derived: GED(x,y) | -EqDim(y,x).  [resolve(36,b,34,a)].

Eliminating P/2
37 -P(x,y) | Cont(x,y).  [clausify(19)].
38 -(x < y) | ZEX(x) | P(f5(x,y),x).  [clausify(2)].
39 -(x < y) | ZEX(x) | P(f6(x,y),f4(x,y)).  [clausify(2)].
40 -EqDim(x,y) | ZEX(x) | P(f8(x,y),x).  [clausify(3)].
41 -EqDim(x,y) | ZEX(x) | P(f9(x,y),f7(x,y)).  [clausify(3)].
Derived: Cont(f5(x,y),x) | -(x < y) | ZEX(x).  [resolve(37,a,38,c)].
Derived: Cont(f6(x,y),f4(x,y)) | -(x < y) | ZEX(x).  [resolve(37,a,39,c)].
Derived: Cont(f8(x,y),x) | -EqDim(x,y) | ZEX(x).  [resolve(37,a,40,c)].
Derived: Cont(f9(x,y),f7(x,y)) | -EqDim(x,y) | ZEX(x).  [resolve(37,a,41,c)].
42 -P(x,y) | EqDim(x,y).  [clausify(19)].
Derived: EqDim(f5(x,y),x) | -(x < y) | ZEX(x).  [resolve(42,a,38,c)].
Derived: EqDim(f6(x,y),f4(x,y)) | -(x < y) | ZEX(x).  [resolve(42,a,39,c)].
Derived: EqDim(f8(x,y),x) | -EqDim(x,y) | ZEX(x).  [resolve(42,a,40,c)].
Derived: EqDim(f9(x,y),f7(x,y)) | -EqDim(x,y) | ZEX(x).  [resolve(42,a,41,c)].
43 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(19)].
44 -(x < y) | ZEX(x) | P(f2(x,y),x).  [resolve(27,a,28,a)].
Derived: -(x < y) | ZEX(x) | Cont(f2(x,y),x).  [resolve(44,c,37,a)].
Derived: -(x < y) | ZEX(x) | EqDim(f2(x,y),x).  [resolve(44,c,42,a)].
45 -(x < y) | ZEX(x) | P(f3(x,y),f1(x,y)).  [resolve(27,a,30,a)].
Derived: -(x < y) | ZEX(x) | Cont(f3(x,y),f1(x,y)).  [resolve(45,c,37,a)].
Derived: -(x < y) | ZEX(x) | EqDim(f3(x,y),f1(x,y)).  [resolve(45,c,42,a)].
46 -EqDim(x,y) | ZEX(x) | P(f2(x,y),x).  [resolve(34,a,28,a)].
Derived: -EqDim(x,y) | ZEX(x) | Cont(f2(x,y),x).  [resolve(46,c,37,a)].
Derived: -EqDim(x,y) | ZEX(x) | EqDim(f2(x,y),x).  [resolve(46,c,42,a)].
47 -EqDim(x,y) | ZEX(x) | P(f3(x,y),f1(x,y)).  [resolve(34,a,30,a)].
Derived: -EqDim(x,y) | ZEX(x) | Cont(f3(x,y),f1(x,y)).  [resolve(47,c,37,a)].
Derived: -EqDim(x,y) | ZEX(x) | EqDim(f3(x,y),f1(x,y)).  [resolve(47,c,42,a)].
48 -GED(x,y) | ZEX(y) | P(f2(y,x),y).  [resolve(35,b,28,a)].
Derived: -GED(x,y) | ZEX(y) | Cont(f2(y,x),y).  [resolve(48,c,37,a)].
Derived: -GED(x,y) | ZEX(y) | EqDim(f2(y,x),y).  [resolve(48,c,42,a)].
49 -GED(x,y) | ZEX(y) | P(f3(y,x),f1(y,x)).  [resolve(35,b,30,a)].
Derived: -GED(x,y) | ZEX(y) | Cont(f3(y,x),f1(y,x)).  [resolve(49,c,37,a)].
Derived: -GED(x,y) | ZEX(y) | EqDim(f3(y,x),f1(y,x)).  [resolve(49,c,42,a)].

Eliminating MinDim/1
50 -MinDim(x) | -ZEX(x).  [clausify(13)].
51 MinDim(c1).  [clausify(10)].
Derived: -ZEX(c1).  [resolve(50,a,51,a)].
52 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(13)].
Derived: -(x < c1) | ZEX(x).  [resolve(52,a,51,a)].
53 MinDim(x) | ZEX(x) | f10(x) < x.  [clausify(13)].
Derived: ZEX(x) | f10(x) < x | -(y < x) | ZEX(y).  [resolve(53,a,52,a)].
54 MinDim(x) | ZEX(x) | -ZEX(f10(x)).  [clausify(13)].
Derived: ZEX(x) | -ZEX(f10(x)) | -(y < x) | ZEX(y).  [resolve(54,a,52,a)].

Eliminating ZEXI/1
55 GED(x,y) | -ZEXI(y).  [clausify(16)].
56 -GED(x,y) | ZEXI(y) | INCH(x,f12(x,y)).  [clausify(16)].
57 -GED(x,y) | ZEXI(y) | INCH(f12(x,y),y).  [clausify(16)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f12(z,y)).  [resolve(55,b,56,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f12(z,y),y).  [resolve(55,b,57,b)].
58 -ZEX(x) | ZEXI(x).  [clausify(17)].
Derived: -ZEX(x) | GED(y,x).  [resolve(58,b,55,b)].
59 ZEX(x) | -ZEXI(x).  [clausify(17)].
Derived: ZEX(x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(59,b,56,b)].
Derived: ZEX(x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(59,b,57,b)].
60 -ZEXI(x) | -INCH(x,x).  [clausify(25)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(60,a,56,b)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(60,a,57,b)].
Derived: -INCH(x,x) | -ZEX(x).  [resolve(60,a,58,b)].
61 ZEXI(x) | INCH(x,x).  [clausify(25)].
Derived: INCH(x,x) | GED(y,x).  [resolve(61,a,55,b)].
Derived: INCH(x,x) | ZEX(x).  [resolve(61,a,59,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Cont, <, EqDim, GED, INCH ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f5, f6, f7, f8, f9, f11, f12, f10, f13 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 25.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 105.

10 (exists x MinDim(x)) # label(non_clause).  [assumption].
11 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
12 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
18 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
26 (exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))) # label(non_clause) # label(goal).  [goal].
27 x <= y | -(x < y).  [clausify(12)].
34 x <= y | -EqDim(x,y).  [clausify(12)].
36 GED(x,y) | -(y <= x).  [clausify(18)].
50 -MinDim(x) | -ZEX(x).  [clausify(13)].
51 MinDim(c1).  [clausify(10)].
52 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(13)].
73 EqDim(x,y) | x < y | y < x.  [clausify(11)].
86 ZEX(x) | -ZEX(f13(x)).  [deny(26)].
87 ZEX(x) | -GED(f13(x),x).  [deny(26)].
98 GED(x,y) | -(y < x).  [resolve(36,b,27,a)].
99 GED(x,y) | -EqDim(y,x).  [resolve(36,b,34,a)].
120 -ZEX(c1).  [resolve(50,a,51,a)].
121 -(x < c1) | ZEX(x).  [resolve(52,a,51,a)].
172 -GED(f13(c1),c1).  [ur(87,a,120,a)].
173 -ZEX(f13(c1)).  [ur(86,a,120,a)].
223 -(f13(c1) < c1).  [ur(121,b,173,a)].
282 -EqDim(c1,f13(c1)).  [ur(99,a,172,a)].
283 -(c1 < f13(c1)).  [ur(98,a,172,a)].
315 $F.  [resolve(282,a,73,a),unit_del(a,283),unit_del(b,223)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=105. Generated=528. Kept=253. proofs=1.
Usable=105. Sos=141. Demods=0. Limbo=0, Disabled=115. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=274. Back_subsumed=7.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=553. Nonunit_bsub_feature_tests=470.
Megabytes=0.59.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 21550 exit (max_proofs) Mon May 28 16:23:52 2012
