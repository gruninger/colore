============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22776 was started by torsten on stl-ws2,
Mon May 28 17:16:55 2012
The command was "prover9 -t 600 -f codi/conversions/codi_linear_nodefs.p9 codi/conversions/C-E4.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_ged.p9 inch/definitions/input/inch_I-M2.p9 cont/conversions/cont_basic.p9 codi/definitions/input/ep.p9 inch/definitions/input/inch_zex.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_C-E4_I-M3_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_linear_nodefs.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file codi/conversions/C-E4.p9


formulas(sos).
(all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_ged.p9


formulas(sos).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M2.p9


formulas(sos).
(all x (ZEX(x) <-> ZEXI(x))).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file inch/definitions/input/inch_zex.p9


formulas(sos).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_C-E4_I-M3_2.p9


formulas(goals).
(all x all y (x <= y -> GED(y,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x -(x < x)) # label(non_clause).  [assumption].
3 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
4 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
8 (exists x MinDim(x)) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
10 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
12 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
13 (all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
14 (all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
15 (exists x ZEX(x)) # label(non_clause).  [assumption].
16 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
17 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
18 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
19 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
21 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
23 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
24 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
25 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
26 (all x all y (x <= y -> GED(y,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
27 -EqDim(x,y) | -(x < y).  [clausify(9)].
28 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
29 -EqDim(x,y) | -(y < x).  [clausify(9)].
Derived: -(x < y) | -Cont(y,x) | y < x.  [resolve(29,a,28,c)].
30 EqDim(x,y) | x < y | y < x.  [clausify(9)].
31 -(x <= y) | x < y | EqDim(x,y).  [clausify(10)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(31,c,29,a)].
32 x <= y | -EqDim(x,y).  [clausify(10)].
Derived: x <= y | -Cont(x,y) | x < y.  [resolve(32,b,28,c)].
Derived: x <= y | x < y | y < x.  [resolve(32,b,30,a)].
33 -EqDim(x,y) | ZEX(x) | P(f9(x,y),x).  [clausify(14)].
Derived: ZEX(x) | P(f9(x,y),x) | -Cont(x,y) | x < y.  [resolve(33,a,28,c)].
Derived: ZEX(x) | P(f9(x,y),x) | x < y | y < x.  [resolve(33,a,30,a)].
Derived: ZEX(x) | P(f9(x,y),x) | -(x <= y) | x < y.  [resolve(33,a,31,c)].
34 -EqDim(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(34,a,28,c)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | x < y | y < x.  [resolve(34,a,30,a)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(34,a,31,c)].
35 -EqDim(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(35,a,28,c)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | x < y | y < x.  [resolve(35,a,30,a)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(35,a,31,c)].
36 -EqDim(x,y) | ZEX(x) | Cont(f10(x,y),y).  [clausify(14)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -Cont(x,y) | x < y.  [resolve(36,a,28,c)].
Derived: ZEX(x) | Cont(f10(x,y),y) | x < y | y < x.  [resolve(36,a,30,a)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -(x <= y) | x < y.  [resolve(36,a,31,c)].
37 -INCH(x,y) | EqDim(f11(x,y),y).  [clausify(16)].
Derived: -INCH(x,y) | -(f11(x,y) < y).  [resolve(37,b,27,a)].
Derived: -INCH(x,y) | -(y < f11(x,y)).  [resolve(37,b,29,a)].
Derived: -INCH(x,y) | f11(x,y) <= y.  [resolve(37,b,32,b)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | P(f9(f11(x,y),y),f11(x,y)).  [resolve(37,b,33,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | Cont(f9(f11(x,y),y),f8(f11(x,y),y)).  [resolve(37,b,34,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | P(f10(f11(x,y),y),f8(f11(x,y),y)).  [resolve(37,b,35,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | Cont(f10(f11(x,y),y),y).  [resolve(37,b,36,a)].
38 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(16)].
Derived: INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -Cont(z,y) | z < y.  [resolve(38,d,28,c)].
Derived: INCH(x,y) | -Cont(f11(z,y),x) | -Cont(f11(z,y),y) | -INCH(z,y).  [resolve(38,d,37,b)].
39 -P(x,y) | EqDim(x,y).  [clausify(24)].
Derived: -P(x,y) | -(x < y).  [resolve(39,b,27,a)].
Derived: -P(x,y) | -(y < x).  [resolve(39,b,29,a)].
Derived: -P(x,y) | x <= y.  [resolve(39,b,32,b)].
Derived: -P(x,y) | ZEX(x) | P(f9(x,y),x).  [resolve(39,b,33,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [resolve(39,b,34,a)].
Derived: -P(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [resolve(39,b,35,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f10(x,y),y).  [resolve(39,b,36,a)].
Derived: -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(39,b,38,d)].
40 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(24)].
Derived: P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(40,c,28,c)].
Derived: P(f11(x,y),y) | -Cont(f11(x,y),y) | -INCH(x,y).  [resolve(40,c,37,b)].

Eliminating MinDim/1
41 -MinDim(x) | -ZEX(x).  [clausify(11)].
42 MinDim(c1).  [clausify(8)].
Derived: -ZEX(c1).  [resolve(41,a,42,a)].
43 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(11)].
Derived: -(x < c1) | ZEX(x).  [resolve(43,a,42,a)].
44 MinDim(x) | ZEX(x) | f1(x) < x.  [clausify(11)].
Derived: ZEX(x) | f1(x) < x | -(y < x) | ZEX(y).  [resolve(44,a,43,a)].
45 MinDim(x) | ZEX(x) | -ZEX(f1(x)).  [clausify(11)].
Derived: ZEX(x) | -ZEX(f1(x)) | -(y < x) | ZEX(y).  [resolve(45,a,43,a)].

Eliminating ZEXI/1
46 GED(x,y) | -ZEXI(y).  [clausify(17)].
47 -GED(x,y) | ZEXI(y) | INCH(x,f12(x,y)).  [clausify(17)].
48 -GED(x,y) | ZEXI(y) | INCH(f12(x,y),y).  [clausify(17)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f12(z,y)).  [resolve(46,b,47,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f12(z,y),y).  [resolve(46,b,48,b)].
49 -ZEX(x) | ZEXI(x).  [clausify(18)].
Derived: -ZEX(x) | GED(y,x).  [resolve(49,b,46,b)].
50 ZEX(x) | -ZEXI(x).  [clausify(18)].
Derived: ZEX(x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(50,b,47,b)].
Derived: ZEX(x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(50,b,48,b)].
51 -ZEXI(x) | -INCH(x,x).  [clausify(25)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(51,a,47,b)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(51,a,48,b)].
Derived: -INCH(x,x) | -ZEX(x).  [resolve(51,a,49,b)].
52 ZEXI(x) | INCH(x,x).  [clausify(25)].
Derived: INCH(x,x) | GED(y,x).  [resolve(52,a,46,b)].
Derived: INCH(x,x) | ZEX(x).  [resolve(52,a,50,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Cont, <, INCH, P, <=, GED ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 35 (0.00 of 0.25 sec).

Low Water (keep): wt=46.000, iters=6732

Low Water (keep): wt=38.000, iters=6687

Low Water (keep): wt=35.000, iters=6792

Low Water (keep): wt=31.000, iters=6790

Low Water (keep): wt=30.000, iters=6721

Low Water (keep): wt=29.000, iters=6717

Low Water (keep): wt=28.000, iters=6777

Low Water (keep): wt=27.000, iters=6688

Low Water (keep): wt=26.000, iters=6672

Low Water (keep): wt=23.000, iters=6680

Low Water (keep): wt=22.000, iters=6671

============================== PROOF =================================

% Proof 1 at 1.22 (+ 0.02) seconds.
% Length of proof is 36.
% Level of proof is 9.
% Maximum clause weight is 13.000.
% Given clauses 1257.

12 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
16 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
17 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
18 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
24 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
26 (all x all y (x <= y -> GED(y,x))) # label(non_clause) # label(goal).  [goal].
38 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(16)].
39 -P(x,y) | EqDim(x,y).  [clausify(24)].
46 GED(x,y) | -ZEXI(y).  [clausify(17)].
49 -ZEX(x) | ZEXI(x).  [clausify(18)].
60 -(x <= y) | ZEX(x) | P(f3(x,y),x).  [clausify(12)].
61 -(x <= y) | ZEX(x) | Cont(f3(x,y),f2(x,y)).  [clausify(12)].
62 -(x <= y) | ZEX(x) | P(f4(x,y),f2(x,y)).  [clausify(12)].
63 -(x <= y) | ZEX(x) | Cont(f4(x,y),y).  [clausify(12)].
71 GED(x,y) | -INCH(x,z) | -INCH(z,y).  [clausify(17)].
78 -P(x,y) | Cont(x,y).  [clausify(24)].
79 c3 <= c4.  [deny(26)].
80 -GED(c4,c3).  [deny(26)].
114 -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(39,b,38,d)].
124 -ZEX(x) | GED(y,x).  [resolve(49,b,46,b)].
145 ZEX(c3) | Cont(f4(c3,c4),c4).  [resolve(79,a,63,a)].
146 ZEX(c3) | P(f4(c3,c4),f2(c3,c4)).  [resolve(79,a,62,a)].
147 ZEX(c3) | Cont(f3(c3,c4),f2(c3,c4)).  [resolve(79,a,61,a)].
148 ZEX(c3) | P(f3(c3,c4),c3).  [resolve(79,a,60,a)].
244 -ZEX(c3).  [ur(124,b,80,a)].
249 P(f3(c3,c4),c3).  [back_unit_del(148),unit_del(a,244)].
250 Cont(f3(c3,c4),f2(c3,c4)).  [back_unit_del(147),unit_del(a,244)].
251 P(f4(c3,c4),f2(c3,c4)).  [back_unit_del(146),unit_del(a,244)].
252 Cont(f4(c3,c4),c4).  [back_unit_del(145),unit_del(a,244)].
338 INCH(x,c3) | -Cont(f3(c3,c4),x) | -Cont(f3(c3,c4),c3).  [resolve(249,a,114,a)].
346 Cont(f3(c3,c4),c3).  [resolve(249,a,78,a)].
347 INCH(x,c3) | -Cont(f3(c3,c4),x).  [back_unit_del(338),unit_del(c,346)].
1391 Cont(f4(c3,c4),f2(c3,c4)).  [resolve(251,a,78,a)].
14072 INCH(f2(c3,c4),c3).  [resolve(347,b,250,a)].
14154 -INCH(c4,f2(c3,c4)).  [ur(71,a,80,a,c,14072,a)].
14164 $F.  [ur(114,b,14154,a,c,252,a,d,1391,a),unit_del(a,251)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=1257. Generated=28962. Kept=14109. proofs=1.
Usable=1257. Sos=11782. Demods=0. Limbo=0, Disabled=1174. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=12476. Back_subsumed=107.
Sos_limit_deleted=2376. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=963.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=83255. Nonunit_bsub_feature_tests=6450.
Megabytes=26.56.
User_CPU=1.22, System_CPU=0.02, Wall_clock=1.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22776 exit (max_proofs) Mon May 28 17:16:56 2012
