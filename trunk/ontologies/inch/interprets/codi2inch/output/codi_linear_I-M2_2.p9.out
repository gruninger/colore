============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 18386 was started by torsten on stl-ws2,
Mon May 28 14:25:24 2012
The command was "prover9 -t 600 -f codi/conversions/codi_linear.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_zex.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_I-M2_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_zex.p9


formulas(sos).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_I-M2_2.p9


formulas(goals).
(all x (ZEXI(x) -> ZEX(x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
2 (exists x ZEX(x)) # label(non_clause).  [assumption].
3 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
4 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
5 (all x -(x < x)) # label(non_clause).  [assumption].
6 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
7 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
8 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
9 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
10 (exists x MinDim(x)) # label(non_clause).  [assumption].
11 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
12 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
14 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
15 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
16 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
18 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
19 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
20 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
21 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
22 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
23 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
24 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
25 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
26 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
27 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
28 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
29 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
30 (all x (ZEXI(x) -> ZEX(x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
31 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(3)].
32 -INCH(x,y) | EqDim(f1(x,y),y).  [clausify(3)].
Derived: INCH(x,y) | -Cont(f1(z,y),x) | -Cont(f1(z,y),y) | -INCH(z,y).  [resolve(31,d,32,b)].
33 -EqDim(x,y) | -(x < y).  [clausify(11)].
Derived: -(f1(x,y) < y) | -INCH(x,y).  [resolve(33,a,32,b)].
34 -EqDim(x,y) | -(y < x).  [clausify(11)].
Derived: -(x < f1(y,x)) | -INCH(y,x).  [resolve(34,a,32,b)].
35 EqDim(x,y) | x < y | y < x.  [clausify(11)].
Derived: x < y | y < x | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(35,a,31,d)].
36 -(x <= y) | x < y | EqDim(x,y).  [clausify(12)].
Derived: -(x <= y) | x < y | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(36,c,31,d)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(36,c,34,a)].
37 x <= y | -EqDim(x,y).  [clausify(12)].
Derived: f1(x,y) <= y | -INCH(x,y).  [resolve(37,b,32,b)].
Derived: x <= y | x < y | y < x.  [resolve(37,b,35,a)].
38 -P(x,y) | EqDim(x,y).  [clausify(16)].
Derived: -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(38,b,31,d)].
Derived: -P(x,y) | -(x < y).  [resolve(38,b,33,a)].
Derived: -P(x,y) | -(y < x).  [resolve(38,b,34,a)].
Derived: -P(x,y) | x <= y.  [resolve(38,b,37,b)].
39 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(16)].
Derived: P(f1(x,y),y) | -Cont(f1(x,y),y) | -INCH(x,y).  [resolve(39,c,32,b)].
Derived: P(x,y) | -Cont(x,y) | x < y | y < x.  [resolve(39,c,35,a)].
Derived: P(x,y) | -Cont(x,y) | -(x <= y) | x < y.  [resolve(39,c,36,c)].

Eliminating ZEXI/1
40 ZEXI(x) | INCH(x,x).  [clausify(4)].
41 -ZEXI(x) | -INCH(x,x).  [clausify(4)].
42 ZEXI(c3).  [deny(30)].
Derived: -INCH(c3,c3).  [resolve(42,a,41,a)].

Eliminating MinDim/1
43 -MinDim(x) | -ZEX(x).  [clausify(14)].
44 MinDim(c2).  [clausify(10)].
Derived: -ZEX(c2).  [resolve(43,a,44,a)].
45 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(14)].
Derived: -(x < c2) | ZEX(x).  [resolve(45,a,44,a)].
46 MinDim(x) | ZEX(x) | f3(x) < x.  [clausify(14)].
Derived: ZEX(x) | f3(x) < x | -(y < x) | ZEX(y).  [resolve(46,a,45,a)].
47 MinDim(x) | ZEX(x) | -ZEX(f3(x)).  [clausify(14)].
Derived: ZEX(x) | -ZEX(f3(x)) | -(y < x) | ZEX(y).  [resolve(47,a,45,a)].

Eliminating MaxDim/1
48 MaxDim(x) | -(f2(x) <= x).  [clausify(13)].
49 -MaxDim(x) | y <= x.  [clausify(13)].
Derived: -(f2(x) <= x) | y <= x.  [resolve(48,a,49,a)].

Eliminating Covers/2
50 Covers(x,y) | -(y < x) | y < f4(x,y).  [clausify(15)].
51 -Covers(x,y) | y < x.  [clausify(15)].
52 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(15)].
Derived: -(x < y) | x < f4(y,x) | -(x < z) | -(z < y).  [resolve(50,a,52,a)].
53 Covers(x,y) | -(y < x) | f4(x,y) < x.  [clausify(15)].
Derived: -(x < y) | f4(y,x) < y | -(x < z) | -(z < y).  [resolve(53,a,52,a)].

Eliminating PP/2
54 PP(x,y) | -P(x,y) | y = x.  [clausify(17)].
55 -PP(x,y) | P(x,y).  [clausify(17)].
56 -PP(x,y) | y != x.  [clausify(17)].
57 -Max(x) | -PP(x,y).  [clausify(21)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(57,b,54,a)].
58 Max(x) | ZEX(x) | PP(x,f10(x)).  [clausify(21)].
Derived: Max(x) | ZEX(x) | P(x,f10(x)).  [resolve(58,c,55,a)].
Derived: Max(x) | ZEX(x) | f10(x) != x.  [resolve(58,c,56,a)].
59 -Min(x) | -PP(y,x).  [clausify(22)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(59,b,54,a)].
Derived: -Min(f10(x)) | Max(x) | ZEX(x).  [resolve(59,b,58,c)].
60 Min(x) | ZEX(x) | PP(f11(x),x).  [clausify(22)].
Derived: Min(x) | ZEX(x) | P(f11(x),x).  [resolve(60,c,55,a)].
Derived: Min(x) | ZEX(x) | x != f11(x).  [resolve(60,c,56,a)].
Derived: Min(x) | ZEX(x) | -Max(f11(x)).  [resolve(60,c,57,b)].

Eliminating PO/2
61 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(18)].
62 -PO(x,y) | P(f5(x,y),x).  [clausify(18)].
63 -PO(x,y) | P(f5(x,y),y).  [clausify(18)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),y).  [resolve(61,a,62,a)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),z).  [resolve(61,a,63,a)].

Eliminating Inc/2
64 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(19)].
65 -Inc(x,y) | f6(x,y) < x | f7(x,y) < y.  [clausify(19)].
66 -Inc(x,y) | f6(x,y) < x | Cont(f7(x,y),y).  [clausify(19)].
67 -Inc(x,y) | f6(x,y) < x | P(f7(x,y),x).  [clausify(19)].
68 -Inc(x,y) | Cont(f6(x,y),x) | f7(x,y) < y.  [clausify(19)].
69 -Inc(x,y) | Cont(f6(x,y),x) | Cont(f7(x,y),y).  [clausify(19)].
70 -Inc(x,y) | Cont(f6(x,y),x) | P(f7(x,y),x).  [clausify(19)].
71 -Inc(x,y) | P(f6(x,y),y) | f7(x,y) < y.  [clausify(19)].
72 -Inc(x,y) | P(f6(x,y),y) | Cont(f7(x,y),y).  [clausify(19)].
73 -Inc(x,y) | P(f6(x,y),y) | P(f7(x,y),x).  [clausify(19)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | f7(y,z) < z.  [resolve(64,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | Cont(f7(y,z),z).  [resolve(64,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | P(f7(y,z),y).  [resolve(64,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | f7(y,z) < z.  [resolve(64,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | Cont(f7(y,z),z).  [resolve(64,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | P(f7(y,z),y).  [resolve(64,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | f7(y,z) < z.  [resolve(64,a,71,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | Cont(f7(y,z),z).  [resolve(64,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | P(f7(y,z),y).  [resolve(64,a,73,a)].
74 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(19)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | f7(z,y) < y.  [resolve(74,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | Cont(f7(z,y),y).  [resolve(74,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | P(f7(z,y),z).  [resolve(74,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | f7(z,y) < y.  [resolve(74,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | Cont(f7(z,y),y).  [resolve(74,a,69,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | P(f7(z,y),z).  [resolve(74,a,70,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | f7(z,y) < y.  [resolve(74,a,71,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | Cont(f7(z,y),y).  [resolve(74,a,72,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | P(f7(z,y),z).  [resolve(74,a,73,a)].

Eliminating SC/2
75 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),x).  [clausify(20)].
76 -SC(x,y) | Cont(f8(x,y),x).  [clausify(20)].
77 -SC(x,y) | Cont(f8(x,y),y).  [clausify(20)].
78 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(20)].
79 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(20)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),y).  [resolve(75,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),z).  [resolve(75,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(75,a,78,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(75,a,79,a)].
80 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),y).  [clausify(20)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),y).  [resolve(80,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),z).  [resolve(80,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(80,a,78,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(80,a,79,a)].
81 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f9(x,y) < x) | -(f9(x,y) < y).  [clausify(20)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),y).  [resolve(81,a,76,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),z).  [resolve(81,a,77,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(81,a,78,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(81,a,79,a)].

Eliminating C/2
82 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(23)].
83 -C(x,y) | Cont(f12(x,y),x).  [clausify(23)].
84 -C(x,y) | Cont(f12(x,y),y).  [clausify(23)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y).  [resolve(82,a,83,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z).  [resolve(82,a,84,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Max, Min, Cont, <, P, <=, INCH ]).
Function symbol precedence:  function_order([ c1, c2, c3, f1, f4, f5, f6, f7, f8, f9, f12, f13, f2, f3, f10, f11 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 18.
% Level of proof is 5.
% Maximum clause weight is 15.000.
% Given clauses 108.

3 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
4 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
5 (all x -(x < x)) # label(non_clause).  [assumption].
11 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
25 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
30 (all x (ZEXI(x) -> ZEX(x))) # label(non_clause) # label(goal).  [goal].
31 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(3)].
35 EqDim(x,y) | x < y | y < x.  [clausify(11)].
41 -ZEXI(x) | -INCH(x,x).  [clausify(4)].
42 ZEXI(c3).  [deny(30)].
89 -(x < x).  [clausify(5)].
100 ZEX(x) | Cont(x,x).  [clausify(25)].
106 -ZEX(c3).  [deny(30)].
110 x < y | y < x | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(35,a,31,d)].
122 -INCH(c3,c3).  [resolve(42,a,41,a)].
175 x < y | y < x | INCH(y,y) | -Cont(x,y).  [factor(110,d,e)].
321 INCH(x,x) | ZEX(x).  [resolve(175,d,100,b),merge(b),unit_del(a,89)].
395 $F.  [resolve(321,a,122,a),unit_del(a,106)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=108. Generated=449. Kept=309. proofs=1.
Usable=108. Sos=179. Demods=0. Limbo=0, Disabled=164. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=139. Back_subsumed=22.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1227. Nonunit_bsub_feature_tests=1427.
Megabytes=0.70.
User_CPU=0.03, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 18386 exit (max_proofs) Mon May 28 14:25:24 2012
