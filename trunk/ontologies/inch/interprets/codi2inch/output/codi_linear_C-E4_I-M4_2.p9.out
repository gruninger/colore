============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22331 was started by torsten on stl-ws2,
Mon May 28 17:06:56 2012
The command was "prover9 -t 600 -f codi/conversions/codi_linear_nodefs.p9 codi/conversions/C-E4.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_ed.p9 inch/definitions/input/inch_ged.p9 inch/definitions/input/inch_I-M2.p9 inch/definitions/input/inch_I-M3.p9 cont/conversions/cont_basic.p9 codi/definitions/input/ep.p9 inch/definitions/input/inch_zex.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_C-E4_I-M4_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_linear_nodefs.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file codi/conversions/C-E4.p9


formulas(sos).
(all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_ed.p9


formulas(sos).
(all x all y (ED(x,y) <-> GED(x,y) & GED(y,x))).
end_of_list.

% Reading from file inch/definitions/input/inch_ged.p9


formulas(sos).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M2.p9


formulas(sos).
(all x (ZEX(x) <-> ZEXI(x))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M3.p9


formulas(sos).
(all x all y (GED(y,x) <-> x <= y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file inch/definitions/input/inch_zex.p9


formulas(sos).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_C-E4_I-M4_2.p9


formulas(goals).
(all x all y (EqDim(x,y) -> ED(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x -(x < x)) # label(non_clause).  [assumption].
3 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
4 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
8 (exists x MinDim(x)) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
10 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
12 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
13 (all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
14 (all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
15 (exists x ZEX(x)) # label(non_clause).  [assumption].
16 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
17 (all x all y (ED(x,y) <-> GED(x,y) & GED(y,x))) # label(non_clause).  [assumption].
18 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
19 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
20 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
21 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
22 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
23 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
26 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
27 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
28 (all x all y (EqDim(x,y) -> ED(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
29 -EqDim(x,y) | -(x < y).  [clausify(9)].
30 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
31 -EqDim(x,y) | -(y < x).  [clausify(9)].
Derived: -(x < y) | -Cont(y,x) | y < x.  [resolve(31,a,30,c)].
32 EqDim(x,y) | x < y | y < x.  [clausify(9)].
33 -(x <= y) | x < y | EqDim(x,y).  [clausify(10)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(33,c,31,a)].
34 x <= y | -EqDim(x,y).  [clausify(10)].
Derived: x <= y | -Cont(x,y) | x < y.  [resolve(34,b,30,c)].
Derived: x <= y | x < y | y < x.  [resolve(34,b,32,a)].
35 -EqDim(x,y) | ZEX(x) | P(f9(x,y),x).  [clausify(14)].
Derived: ZEX(x) | P(f9(x,y),x) | -Cont(x,y) | x < y.  [resolve(35,a,30,c)].
Derived: ZEX(x) | P(f9(x,y),x) | x < y | y < x.  [resolve(35,a,32,a)].
Derived: ZEX(x) | P(f9(x,y),x) | -(x <= y) | x < y.  [resolve(35,a,33,c)].
36 -EqDim(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(36,a,30,c)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | x < y | y < x.  [resolve(36,a,32,a)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(36,a,33,c)].
37 -EqDim(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(37,a,30,c)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | x < y | y < x.  [resolve(37,a,32,a)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(37,a,33,c)].
38 -EqDim(x,y) | ZEX(x) | Cont(f10(x,y),y).  [clausify(14)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -Cont(x,y) | x < y.  [resolve(38,a,30,c)].
Derived: ZEX(x) | Cont(f10(x,y),y) | x < y | y < x.  [resolve(38,a,32,a)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -(x <= y) | x < y.  [resolve(38,a,33,c)].
39 -INCH(x,y) | EqDim(f11(x,y),y).  [clausify(16)].
Derived: -INCH(x,y) | -(f11(x,y) < y).  [resolve(39,b,29,a)].
Derived: -INCH(x,y) | -(y < f11(x,y)).  [resolve(39,b,31,a)].
Derived: -INCH(x,y) | f11(x,y) <= y.  [resolve(39,b,34,b)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | P(f9(f11(x,y),y),f11(x,y)).  [resolve(39,b,35,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | Cont(f9(f11(x,y),y),f8(f11(x,y),y)).  [resolve(39,b,36,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | P(f10(f11(x,y),y),f8(f11(x,y),y)).  [resolve(39,b,37,a)].
Derived: -INCH(x,y) | ZEX(f11(x,y)) | Cont(f10(f11(x,y),y),y).  [resolve(39,b,38,a)].
40 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(16)].
Derived: INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -Cont(z,y) | z < y.  [resolve(40,d,30,c)].
Derived: INCH(x,y) | -Cont(f11(z,y),x) | -Cont(f11(z,y),y) | -INCH(z,y).  [resolve(40,d,39,b)].
41 -P(x,y) | EqDim(x,y).  [clausify(26)].
Derived: -P(x,y) | -(x < y).  [resolve(41,b,29,a)].
Derived: -P(x,y) | -(y < x).  [resolve(41,b,31,a)].
Derived: -P(x,y) | x <= y.  [resolve(41,b,34,b)].
Derived: -P(x,y) | ZEX(x) | P(f9(x,y),x).  [resolve(41,b,35,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [resolve(41,b,36,a)].
Derived: -P(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [resolve(41,b,37,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f10(x,y),y).  [resolve(41,b,38,a)].
Derived: -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(41,b,40,d)].
42 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(26)].
Derived: P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(42,c,30,c)].
Derived: P(f11(x,y),y) | -Cont(f11(x,y),y) | -INCH(x,y).  [resolve(42,c,39,b)].
43 EqDim(c3,c4).  [deny(28)].
Derived: -(c3 < c4).  [resolve(43,a,29,a)].
Derived: -(c4 < c3).  [resolve(43,a,31,a)].
Derived: c3 <= c4.  [resolve(43,a,34,b)].
Derived: ZEX(c3) | P(f9(c3,c4),c3).  [resolve(43,a,35,a)].
Derived: ZEX(c3) | Cont(f9(c3,c4),f8(c3,c4)).  [resolve(43,a,36,a)].
Derived: ZEX(c3) | P(f10(c3,c4),f8(c3,c4)).  [resolve(43,a,37,a)].
Derived: ZEX(c3) | Cont(f10(c3,c4),c4).  [resolve(43,a,38,a)].
Derived: INCH(x,c4) | -Cont(c3,x) | -Cont(c3,c4).  [resolve(43,a,40,d)].
Derived: P(c3,c4) | -Cont(c3,c4).  [resolve(43,a,42,c)].

Eliminating MinDim/1
44 -MinDim(x) | -ZEX(x).  [clausify(11)].
45 MinDim(c1).  [clausify(8)].
Derived: -ZEX(c1).  [resolve(44,a,45,a)].
46 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(11)].
Derived: -(x < c1) | ZEX(x).  [resolve(46,a,45,a)].
47 MinDim(x) | ZEX(x) | f1(x) < x.  [clausify(11)].
Derived: ZEX(x) | f1(x) < x | -(y < x) | ZEX(y).  [resolve(47,a,46,a)].
48 MinDim(x) | ZEX(x) | -ZEX(f1(x)).  [clausify(11)].
Derived: ZEX(x) | -ZEX(f1(x)) | -(y < x) | ZEX(y).  [resolve(48,a,46,a)].

Eliminating ZEXI/1
49 GED(x,y) | -ZEXI(y).  [clausify(18)].
50 -GED(x,y) | ZEXI(y) | INCH(x,f12(x,y)).  [clausify(18)].
51 -GED(x,y) | ZEXI(y) | INCH(f12(x,y),y).  [clausify(18)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f12(z,y)).  [resolve(49,b,50,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f12(z,y),y).  [resolve(49,b,51,b)].
52 -ZEX(x) | ZEXI(x).  [clausify(19)].
Derived: -ZEX(x) | GED(y,x).  [resolve(52,b,49,b)].
53 ZEX(x) | -ZEXI(x).  [clausify(19)].
Derived: ZEX(x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(53,b,50,b)].
Derived: ZEX(x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(53,b,51,b)].
54 -ZEXI(x) | -INCH(x,x).  [clausify(27)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(y,f12(y,x)).  [resolve(54,a,50,b)].
Derived: -INCH(x,x) | -GED(y,x) | INCH(f12(y,x),x).  [resolve(54,a,51,b)].
Derived: -INCH(x,x) | -ZEX(x).  [resolve(54,a,52,b)].
55 ZEXI(x) | INCH(x,x).  [clausify(27)].
Derived: INCH(x,x) | GED(y,x).  [resolve(55,a,49,b)].
Derived: INCH(x,x) | ZEX(x).  [resolve(55,a,53,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Cont, <, P, INCH, <=, GED, ED ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 5.
% Maximum clause weight is 9.000.
% Given clauses 118.

9 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
10 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
17 (all x all y (ED(x,y) <-> GED(x,y) & GED(y,x))) # label(non_clause).  [assumption].
20 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
28 (all x all y (EqDim(x,y) -> ED(x,y))) # label(non_clause) # label(goal).  [goal].
29 -EqDim(x,y) | -(x < y).  [clausify(9)].
31 -EqDim(x,y) | -(y < x).  [clausify(9)].
32 EqDim(x,y) | x < y | y < x.  [clausify(9)].
34 x <= y | -EqDim(x,y).  [clausify(10)].
43 EqDim(c3,c4).  [deny(28)].
76 ED(x,y) | -GED(x,y) | -GED(y,x).  [clausify(17)].
79 GED(x,y) | -(y <= x).  [clausify(20)].
87 -ED(c3,c4).  [deny(28)].
91 x <= y | x < y | y < x.  [resolve(34,b,32,a)].
125 -(c3 < c4).  [resolve(43,a,29,a)].
126 -(c4 < c3).  [resolve(43,a,31,a)].
127 c3 <= c4.  [resolve(43,a,34,b)].
163 x < y | y < x | GED(y,x).  [resolve(91,a,79,b)].
242 GED(c4,c3).  [resolve(127,a,79,b)].
374 -GED(c3,c4).  [resolve(242,a,76,c),unit_del(a,87)].
394 $F.  [resolve(374,a,163,c),unit_del(a,126),unit_del(b,125)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=118. Generated=581. Kept=336. proofs=1.
Usable=117. Sos=207. Demods=0. Limbo=0, Disabled=130. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=244. Back_subsumed=11.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=1.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=817. Nonunit_bsub_feature_tests=648.
Megabytes=0.81.
User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22331 exit (max_proofs) Mon May 28 17:06:56 2012
