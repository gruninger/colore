============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22721 was started by torsten on stl-ws2,
Mon May 28 17:13:45 2012
The command was "prover9 -t 600 -f codi/conversions/codi_down.p9 codi/conversions/C-E4.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_cs.p9 inch/definitions/input/inch_I-M2.p9 inch/definitions/input/inch_I-M3.p9 codi/conversions/codi_int.p9 codi/definitions/input/ep.p9 codi/conversions/codi_linear.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_C-E4_I-M7_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file codi/conversions/C-E4.p9


formulas(sos).
(all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_cs.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M2.p9


formulas(sos).
(all x (ZEX(x) <-> ZEXI(x))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M3.p9


formulas(sos).
(all x all y (GED(y,x) <-> x <= y)).
end_of_list.

% Reading from file codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) -> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_C-E4_I-M7_1.p9


formulas(goals).
(all x all y (ZEX(x) -> CS(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
2 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
3 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
4 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
7 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
8 (all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
10 (exists x ZEX(x)) # label(non_clause).  [assumption].
11 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
13 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
14 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
15 (all x all y (-C(x,y) -> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
16 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
17 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
19 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
21 (all x -(x < x)) # label(non_clause).  [assumption].
22 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
23 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
26 (exists x MinDim(x)) # label(non_clause).  [assumption].
27 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
28 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
29 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
30 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
31 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
32 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
33 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
34 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
35 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
36 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
37 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
38 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
39 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
40 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
41 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
42 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
43 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
44 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y (ZEX(x) -> CS(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating ZEXI/1
46 ZEX(x) | -ZEXI(x).  [clausify(13)].
47 -ZEX(x) | ZEXI(x).  [clausify(13)].

Eliminating GED/2
48 GED(x,y) | -(y <= x).  [clausify(14)].
49 -GED(x,y) | y <= x.  [clausify(14)].

Eliminating C/2
50 -C(x,y) | Cont(f22(x,y),x).  [clausify(38)].
51 C(x,y) | ZEX(intersection(x,y)).  [clausify(15)].
Derived: Cont(f22(x,y),x) | ZEX(intersection(x,y)).  [resolve(50,a,51,a)].
52 -C(x,y) | Cont(f22(x,y),y).  [clausify(38)].
Derived: Cont(f22(x,y),y) | ZEX(intersection(x,y)).  [resolve(52,a,51,a)].
53 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(38)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f22(y,z),y).  [resolve(53,a,50,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f22(y,z),z).  [resolve(53,a,52,a)].

Eliminating MinDim/1
54 -MinDim(x) | -ZEX(x).  [clausify(30)].
55 MinDim(c2).  [clausify(26)].
Derived: -ZEX(c2).  [resolve(54,a,55,a)].
56 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(30)].
Derived: -(x < c2) | ZEX(x).  [resolve(56,a,55,a)].
57 MinDim(x) | ZEX(x) | f13(x) < x.  [clausify(30)].
Derived: ZEX(x) | f13(x) < x | -(y < x) | ZEX(y).  [resolve(57,a,56,a)].
58 MinDim(x) | ZEX(x) | -ZEX(f13(x)).  [clausify(30)].
Derived: ZEX(x) | -ZEX(f13(x)) | -(y < x) | ZEX(y).  [resolve(58,a,56,a)].

Eliminating MaxDim/1
59 MaxDim(x) | -(f12(x) <= x).  [clausify(29)].
60 -MaxDim(x) | y <= x.  [clausify(29)].
Derived: -(f12(x) <= x) | y <= x.  [resolve(59,a,60,a)].

Eliminating Covers/2
61 Covers(x,y) | -(y < x) | y < f14(x,y).  [clausify(31)].
62 -Covers(x,y) | y < x.  [clausify(31)].
63 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(31)].
Derived: -(x < y) | x < f14(y,x) | -(x < z) | -(z < y).  [resolve(61,a,63,a)].
64 Covers(x,y) | -(y < x) | f14(x,y) < x.  [clausify(31)].
Derived: -(x < y) | f14(y,x) < y | -(x < z) | -(z < y).  [resolve(64,a,63,a)].

Eliminating PP/2
65 PP(x,y) | -P(x,y) | y = x.  [clausify(32)].
66 -PP(x,y) | P(x,y).  [clausify(32)].
67 -PP(x,y) | y != x.  [clausify(32)].
68 -Max(x) | -PP(x,y).  [clausify(36)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(68,b,65,a)].
69 Max(x) | ZEX(x) | PP(x,f20(x)).  [clausify(36)].
Derived: Max(x) | ZEX(x) | P(x,f20(x)).  [resolve(69,c,66,a)].
Derived: Max(x) | ZEX(x) | f20(x) != x.  [resolve(69,c,67,a)].
70 -Min(x) | -PP(y,x).  [clausify(37)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(70,b,65,a)].
Derived: -Min(f20(x)) | Max(x) | ZEX(x).  [resolve(70,b,69,c)].
71 Min(x) | ZEX(x) | PP(f21(x),x).  [clausify(37)].
Derived: Min(x) | ZEX(x) | P(f21(x),x).  [resolve(71,c,66,a)].
Derived: Min(x) | ZEX(x) | x != f21(x).  [resolve(71,c,67,a)].
Derived: Min(x) | ZEX(x) | -Max(f21(x)).  [resolve(71,c,68,b)].

Eliminating PO/2
72 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(33)].
73 -PO(x,y) | P(f15(x,y),x).  [clausify(33)].
74 -PO(x,y) | P(f15(x,y),y).  [clausify(33)].
Derived: -P(x,y) | -P(x,z) | P(f15(y,z),y).  [resolve(72,a,73,a)].
Derived: -P(x,y) | -P(x,z) | P(f15(y,z),z).  [resolve(72,a,74,a)].

Eliminating Inc/2
75 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(34)].
76 -Inc(x,y) | f16(x,y) < x | f17(x,y) < y.  [clausify(34)].
77 -Inc(x,y) | f16(x,y) < x | Cont(f17(x,y),y).  [clausify(34)].
78 -Inc(x,y) | f16(x,y) < x | P(f17(x,y),x).  [clausify(34)].
79 -Inc(x,y) | Cont(f16(x,y),x) | f17(x,y) < y.  [clausify(34)].
80 -Inc(x,y) | Cont(f16(x,y),x) | Cont(f17(x,y),y).  [clausify(34)].
81 -Inc(x,y) | Cont(f16(x,y),x) | P(f17(x,y),x).  [clausify(34)].
82 -Inc(x,y) | P(f16(x,y),y) | f17(x,y) < y.  [clausify(34)].
83 -Inc(x,y) | P(f16(x,y),y) | Cont(f17(x,y),y).  [clausify(34)].
84 -Inc(x,y) | P(f16(x,y),y) | P(f17(x,y),x).  [clausify(34)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(y,z) < y | f17(y,z) < z.  [resolve(75,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(y,z) < y | Cont(f17(y,z),z).  [resolve(75,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(y,z) < y | P(f17(y,z),y).  [resolve(75,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(y,z),y) | f17(y,z) < z.  [resolve(75,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(y,z),y) | Cont(f17(y,z),z).  [resolve(75,a,80,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(y,z),y) | P(f17(y,z),y).  [resolve(75,a,81,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(y,z),z) | f17(y,z) < z.  [resolve(75,a,82,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(y,z),z) | Cont(f17(y,z),z).  [resolve(75,a,83,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(y,z),z) | P(f17(y,z),y).  [resolve(75,a,84,a)].
85 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(34)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(z,y) < z | f17(z,y) < y.  [resolve(85,a,76,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(z,y) < z | Cont(f17(z,y),y).  [resolve(85,a,77,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f16(z,y) < z | P(f17(z,y),z).  [resolve(85,a,78,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(z,y),z) | f17(z,y) < y.  [resolve(85,a,79,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(z,y),z) | Cont(f17(z,y),y).  [resolve(85,a,80,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f16(z,y),z) | P(f17(z,y),z).  [resolve(85,a,81,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(z,y),y) | f17(z,y) < y.  [resolve(85,a,82,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(z,y),y) | Cont(f17(z,y),y).  [resolve(85,a,83,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f16(z,y),y) | P(f17(z,y),z).  [resolve(85,a,84,a)].

Eliminating SC/2
86 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f19(x,y),x).  [clausify(35)].
87 -SC(x,y) | Cont(f18(x,y),x).  [clausify(35)].
88 -SC(x,y) | Cont(f18(x,y),y).  [clausify(35)].
89 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(35)].
90 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(35)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),y) | Cont(f18(y,z),y).  [resolve(86,a,87,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),y) | Cont(f18(y,z),z).  [resolve(86,a,88,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(86,a,89,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(86,a,90,a)].
91 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f19(x,y),y).  [clausify(35)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),z) | Cont(f18(y,z),y).  [resolve(91,a,87,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),z) | Cont(f18(y,z),z).  [resolve(91,a,88,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(91,a,89,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f19(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(91,a,90,a)].
92 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f19(x,y) < x) | -(f19(x,y) < y).  [clausify(35)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f19(y,z) < y) | -(f19(y,z) < z) | Cont(f18(y,z),y).  [resolve(92,a,87,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f19(y,z) < y) | -(f19(y,z) < z) | Cont(f18(y,z),z).  [resolve(92,a,88,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f19(y,z) < y) | -(f19(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(92,a,89,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f19(y,z) < y) | -(f19(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(92,a,90,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Max, Min, Cont, <, P, <=, EqDim, INCH, CS ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, intersection, difference, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f14, f15, f16, f17, f18, f19, f22, f23, f12, f13, f20, f21 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.08 (+ 0.00) seconds.
% Length of proof is 19.
% Level of proof is 6.
% Maximum clause weight is 8.000.
% Given clauses 210.

10 (exists x ZEX(x)) # label(non_clause).  [assumption].
11 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
43 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
45 (all x all y (ZEX(x) -> CS(x,y))) # label(non_clause) # label(goal).  [goal].
113 ZEX(c1).  [clausify(10)].
114 -INCH(x,y) | Cont(f10(x,y),x).  [clausify(11)].
119 CS(x,y) | INCH(x,f11(x,y)).  [clausify(12)].
134 -ZEX(x) | -ZEX(y) | y = x.  [clausify(24)].
150 -ZEX(x) | -Cont(y,x).  [clausify(43)].
152 ZEX(c3).  [deny(45)].
153 -CS(c3,c4).  [deny(45)].
237 -ZEX(x) | c1 = x.  [resolve(134,a,113,a),flip(b)].
292 INCH(c3,f11(c3,c4)).  [resolve(153,a,119,a)].
545 c3 = c1.  [resolve(237,a,152,a),flip(a)].
546 INCH(c1,f11(c1,c4)).  [back_rewrite(292),rewrite([545(1),545(2)])].
592 Cont(f10(c1,f11(c1,c4)),c1).  [resolve(546,a,114,a)].
1412 $F.  [resolve(592,a,150,b),unit_del(a,113)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=210. Generated=1717. Kept=1318. proofs=1.
Usable=198. Sos=991. Demods=17. Limbo=30, Disabled=259. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=398. Back_subsumed=32.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=18 (0 lex), Back_demodulated=55. Back_unit_deleted=12.
Demod_attempts=10876. Demod_rewrites=194.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=6115. Nonunit_bsub_feature_tests=6841.
Megabytes=3.16.
User_CPU=0.08, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22721 exit (max_proofs) Mon May 28 17:13:45 2012
