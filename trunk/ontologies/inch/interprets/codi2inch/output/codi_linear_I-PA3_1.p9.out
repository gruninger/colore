============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 17765 was started by torsten on stl-ws2,
Mon May 28 14:07:31 2012
The command was "prover9 -t 600 -f codi/conversions/codi_linear.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 dim/conversions/dim_prime_linear.p9 cont/conversions/cont_c_ext.p9 codi/definitions/input/ep.p9 codi/definitions/input/epp.p9 codi/definitions/input/po.p9 codi/definitions/input/inc.p9 codi/definitions/input/sc.p9 codi/definitions/input/min_max_in_dim.p9 cont/conversions/cont_c.p9 cont/conversions/cont_ext.p9 cont/conversions/cont_basic.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_I-PA3_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x <= y)).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file dim/conversions/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file cont/conversions/cont_c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_I-PA3_1.p9


formulas(goals).
(all x all y (INCH(x,y) -> INCH(x,x))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x <= y)) # label(non_clause).  [assumption].
2 (exists x ZEX(x)) # label(non_clause).  [assumption].
3 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
4 (all x -(x < x)) # label(non_clause).  [assumption].
5 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
6 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
8 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
9 (exists x MinDim(x)) # label(non_clause).  [assumption].
10 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
11 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
12 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
13 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
14 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
15 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
16 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
17 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
18 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
19 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
20 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
21 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
22 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
23 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
24 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
25 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
26 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
28 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
29 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
30 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(3)].
31 -INCH(x,y) | EqDim(f1(x,y),y).  [clausify(3)].
Derived: INCH(x,y) | -Cont(f1(z,y),x) | -Cont(f1(z,y),y) | -INCH(z,y).  [resolve(30,d,31,b)].
32 -EqDim(x,y) | -(x < y).  [clausify(10)].
Derived: -(f1(x,y) < y) | -INCH(x,y).  [resolve(32,a,31,b)].
33 -EqDim(x,y) | -(y < x).  [clausify(10)].
Derived: -(x < f1(y,x)) | -INCH(y,x).  [resolve(33,a,31,b)].
34 EqDim(x,y) | x < y | y < x.  [clausify(10)].
Derived: x < y | y < x | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(34,a,30,d)].
35 -(x <= y) | x < y | EqDim(x,y).  [clausify(11)].
Derived: -(x <= y) | x < y | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(35,c,30,d)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(35,c,33,a)].
36 x <= y | -EqDim(x,y).  [clausify(11)].
Derived: f1(x,y) <= y | -INCH(x,y).  [resolve(36,b,31,b)].
Derived: x <= y | x < y | y < x.  [resolve(36,b,34,a)].
37 -P(x,y) | EqDim(x,y).  [clausify(15)].
Derived: -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(37,b,30,d)].
Derived: -P(x,y) | -(x < y).  [resolve(37,b,32,a)].
Derived: -P(x,y) | -(y < x).  [resolve(37,b,33,a)].
Derived: -P(x,y) | x <= y.  [resolve(37,b,36,b)].
38 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(15)].
Derived: P(f1(x,y),y) | -Cont(f1(x,y),y) | -INCH(x,y).  [resolve(38,c,31,b)].
Derived: P(x,y) | -Cont(x,y) | x < y | y < x.  [resolve(38,c,34,a)].
Derived: P(x,y) | -Cont(x,y) | -(x <= y) | x < y.  [resolve(38,c,35,c)].

Eliminating MinDim/1
39 -MinDim(x) | -ZEX(x).  [clausify(13)].
40 MinDim(c2).  [clausify(9)].
Derived: -ZEX(c2).  [resolve(39,a,40,a)].
41 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(13)].
Derived: -(x < c2) | ZEX(x).  [resolve(41,a,40,a)].
42 MinDim(x) | ZEX(x) | f3(x) < x.  [clausify(13)].
Derived: ZEX(x) | f3(x) < x | -(y < x) | ZEX(y).  [resolve(42,a,41,a)].
43 MinDim(x) | ZEX(x) | -ZEX(f3(x)).  [clausify(13)].
Derived: ZEX(x) | -ZEX(f3(x)) | -(y < x) | ZEX(y).  [resolve(43,a,41,a)].

Eliminating MaxDim/1
44 MaxDim(x) | -(f2(x) <= x).  [clausify(12)].
45 -MaxDim(x) | y <= x.  [clausify(12)].
Derived: -(f2(x) <= x) | y <= x.  [resolve(44,a,45,a)].

Eliminating Covers/2
46 Covers(x,y) | -(y < x) | y < f4(x,y).  [clausify(14)].
47 -Covers(x,y) | y < x.  [clausify(14)].
48 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(14)].
Derived: -(x < y) | x < f4(y,x) | -(x < z) | -(z < y).  [resolve(46,a,48,a)].
49 Covers(x,y) | -(y < x) | f4(x,y) < x.  [clausify(14)].
Derived: -(x < y) | f4(y,x) < y | -(x < z) | -(z < y).  [resolve(49,a,48,a)].

Eliminating PP/2
50 PP(x,y) | -P(x,y) | y = x.  [clausify(16)].
51 -PP(x,y) | P(x,y).  [clausify(16)].
52 -PP(x,y) | y != x.  [clausify(16)].
53 -Max(x) | -PP(x,y).  [clausify(20)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(53,b,50,a)].
54 Max(x) | ZEX(x) | PP(x,f10(x)).  [clausify(20)].
Derived: Max(x) | ZEX(x) | P(x,f10(x)).  [resolve(54,c,51,a)].
Derived: Max(x) | ZEX(x) | f10(x) != x.  [resolve(54,c,52,a)].
55 -Min(x) | -PP(y,x).  [clausify(21)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(55,b,50,a)].
Derived: -Min(f10(x)) | Max(x) | ZEX(x).  [resolve(55,b,54,c)].
56 Min(x) | ZEX(x) | PP(f11(x),x).  [clausify(21)].
Derived: Min(x) | ZEX(x) | P(f11(x),x).  [resolve(56,c,51,a)].
Derived: Min(x) | ZEX(x) | x != f11(x).  [resolve(56,c,52,a)].
Derived: Min(x) | ZEX(x) | -Max(f11(x)).  [resolve(56,c,53,b)].

Eliminating PO/2
57 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(17)].
58 -PO(x,y) | P(f5(x,y),x).  [clausify(17)].
59 -PO(x,y) | P(f5(x,y),y).  [clausify(17)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),y).  [resolve(57,a,58,a)].
Derived: -P(x,y) | -P(x,z) | P(f5(y,z),z).  [resolve(57,a,59,a)].

Eliminating Inc/2
60 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(18)].
61 -Inc(x,y) | f6(x,y) < x | f7(x,y) < y.  [clausify(18)].
62 -Inc(x,y) | f6(x,y) < x | Cont(f7(x,y),y).  [clausify(18)].
63 -Inc(x,y) | f6(x,y) < x | P(f7(x,y),x).  [clausify(18)].
64 -Inc(x,y) | Cont(f6(x,y),x) | f7(x,y) < y.  [clausify(18)].
65 -Inc(x,y) | Cont(f6(x,y),x) | Cont(f7(x,y),y).  [clausify(18)].
66 -Inc(x,y) | Cont(f6(x,y),x) | P(f7(x,y),x).  [clausify(18)].
67 -Inc(x,y) | P(f6(x,y),y) | f7(x,y) < y.  [clausify(18)].
68 -Inc(x,y) | P(f6(x,y),y) | Cont(f7(x,y),y).  [clausify(18)].
69 -Inc(x,y) | P(f6(x,y),y) | P(f7(x,y),x).  [clausify(18)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | f7(y,z) < z.  [resolve(60,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | Cont(f7(y,z),z).  [resolve(60,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(y,z) < y | P(f7(y,z),y).  [resolve(60,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | f7(y,z) < z.  [resolve(60,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | Cont(f7(y,z),z).  [resolve(60,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(y,z),y) | P(f7(y,z),y).  [resolve(60,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | f7(y,z) < z.  [resolve(60,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | Cont(f7(y,z),z).  [resolve(60,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(y,z),z) | P(f7(y,z),y).  [resolve(60,a,69,a)].
70 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(18)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | f7(z,y) < y.  [resolve(70,a,61,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | Cont(f7(z,y),y).  [resolve(70,a,62,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f6(z,y) < z | P(f7(z,y),z).  [resolve(70,a,63,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | f7(z,y) < y.  [resolve(70,a,64,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | Cont(f7(z,y),y).  [resolve(70,a,65,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f6(z,y),z) | P(f7(z,y),z).  [resolve(70,a,66,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | f7(z,y) < y.  [resolve(70,a,67,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | Cont(f7(z,y),y).  [resolve(70,a,68,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f6(z,y),y) | P(f7(z,y),z).  [resolve(70,a,69,a)].

Eliminating SC/2
71 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),x).  [clausify(19)].
72 -SC(x,y) | Cont(f8(x,y),x).  [clausify(19)].
73 -SC(x,y) | Cont(f8(x,y),y).  [clausify(19)].
74 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(19)].
75 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(19)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),y).  [resolve(71,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | Cont(f8(y,z),z).  [resolve(71,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(71,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),y) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(71,a,75,a)].
76 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f9(x,y),y).  [clausify(19)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),y).  [resolve(76,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | Cont(f8(y,z),z).  [resolve(76,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(76,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f9(y,z),z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(76,a,75,a)].
77 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f9(x,y) < x) | -(f9(x,y) < y).  [clausify(19)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),y).  [resolve(77,a,72,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | Cont(f8(y,z),z).  [resolve(77,a,73,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < y.  [resolve(77,a,74,a)].
Derived: -Cont(x,y) | -Cont(x,z) | -(f9(y,z) < y) | -(f9(y,z) < z) | -Cont(u,y) | -Cont(u,z) | u < z.  [resolve(77,a,75,a)].

Eliminating C/2
78 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(22)].
79 -C(x,y) | Cont(f12(x,y),x).  [clausify(22)].
80 -C(x,y) | Cont(f12(x,y),y).  [clausify(22)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),y).  [resolve(78,a,79,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f12(y,z),z).  [resolve(78,a,80,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, Max, Min, Cont, <, P, <=, INCH ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f1, f4, f5, f6, f7, f8, f9, f12, f13, f2, f3, f10, f11 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.01) seconds.
% Length of proof is 20.
% Level of proof is 5.
% Maximum clause weight is 15.000.
% Given clauses 113.

3 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
4 (all x -(x < x)) # label(non_clause).  [assumption].
10 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
24 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
27 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
29 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause) # label(goal).  [goal].
30 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(3)].
34 EqDim(x,y) | x < y | y < x.  [clausify(10)].
83 -INCH(x,y) | Cont(f1(x,y),x).  [clausify(3)].
85 -(x < x).  [clausify(4)].
96 ZEX(x) | Cont(x,x).  [clausify(24)].
100 -ZEX(x) | -Cont(y,x).  [clausify(27)].
102 INCH(c3,c4).  [deny(29)].
103 -INCH(c3,c3).  [deny(29)].
107 x < y | y < x | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(34,a,30,d)].
171 x < y | y < x | INCH(y,y) | -Cont(x,y).  [factor(107,d,e)].
212 Cont(f1(c3,c4),c3).  [resolve(102,a,83,a)].
327 -Cont(c3,c3).  [ur(171,a,85,a,b,85,a,c,103,a)].
428 -ZEX(c3).  [resolve(212,a,100,b)].
441 $F.  [resolve(327,a,96,b),unit_del(a,428)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=113. Generated=539. Kept=359. proofs=1.
Usable=113. Sos=221. Demods=0. Limbo=0, Disabled=164. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=179. Back_subsumed=23.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=2.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1337. Nonunit_bsub_feature_tests=1382.
Megabytes=0.80.
User_CPU=0.03, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 17765 exit (max_proofs) Mon May 28 14:07:31 2012
