============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22548 was started by torsten on stl-ws2,
Mon May 28 17:09:00 2012
The command was "prover9 -t 600 -f codi/conversions/codi_linear_nodefs.p9 codi/conversions/C-E4.p9 codi/definitions/input/po.p9 zex/input/zex.p9 inch/mappings/conversions/codi2inch.p9 inch/definitions/input/inch_ov.p9 inch/definitions/input/inch_ged.p9 inch/definitions/input/inch_I-M2.p9 inch/definitions/input/inch_I-M3.p9 cont/conversions/cont_basic.p9 codi/definitions/input/ep.p9 inch/definitions/input/inch_zex.p9 inch/theorems/input/options.txt inch/theorems/input/codi_linear_C-E4_I-M6_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi/conversions/codi_linear_nodefs.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
(exists x MinDim(x)).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file codi/conversions/C-E4.p9


formulas(sos).
(all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
(all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))).
end_of_list.

% Reading from file codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file inch/mappings/conversions/codi2inch.p9


formulas(sos).
(all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_ov.p9


formulas(sos).
(all x all y (OV(x,y) <-> INCH(x,y) & INCH(y,x))).
end_of_list.

% Reading from file inch/definitions/input/inch_ged.p9


formulas(sos).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M2.p9


formulas(sos).
(all x (ZEX(x) <-> ZEXI(x))).
end_of_list.

% Reading from file inch/definitions/input/inch_I-M3.p9


formulas(sos).
(all x all y (GED(y,x) <-> x <= y)).
end_of_list.

% Reading from file cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file inch/definitions/input/inch_zex.p9


formulas(sos).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/codi_linear_C-E4_I-M6_1.p9


formulas(goals).
(all x all y (OV(x,y) -> PO(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x -(x < x)) # label(non_clause).  [assumption].
3 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
4 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
5 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
6 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
7 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
8 (exists x MinDim(x)) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
10 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
11 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
12 (all x all y (x <= y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
13 (all x all y (x < y -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
14 (all x all y (EqDim(x,y) -> ZEX(x) | (exists z exists v exists w (P(v,x) & Cont(v,z) & P(w,z) & Cont(w,y))))) # label(non_clause).  [assumption].
15 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
16 (exists x ZEX(x)) # label(non_clause).  [assumption].
17 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
18 (all x all y (OV(x,y) <-> INCH(x,y) & INCH(y,x))) # label(non_clause).  [assumption].
19 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
20 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
21 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
22 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
23 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
24 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
26 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
27 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
28 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
29 (all x all y (OV(x,y) -> PO(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating EqDim/2
30 -EqDim(x,y) | -(x < y).  [clausify(9)].
31 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
32 -EqDim(x,y) | -(y < x).  [clausify(9)].
Derived: -(x < y) | -Cont(y,x) | y < x.  [resolve(32,a,31,c)].
33 EqDim(x,y) | x < y | y < x.  [clausify(9)].
34 -(x <= y) | x < y | EqDim(x,y).  [clausify(10)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(34,c,32,a)].
35 x <= y | -EqDim(x,y).  [clausify(10)].
Derived: x <= y | -Cont(x,y) | x < y.  [resolve(35,b,31,c)].
Derived: x <= y | x < y | y < x.  [resolve(35,b,33,a)].
36 -EqDim(x,y) | ZEX(x) | P(f9(x,y),x).  [clausify(14)].
Derived: ZEX(x) | P(f9(x,y),x) | -Cont(x,y) | x < y.  [resolve(36,a,31,c)].
Derived: ZEX(x) | P(f9(x,y),x) | x < y | y < x.  [resolve(36,a,33,a)].
Derived: ZEX(x) | P(f9(x,y),x) | -(x <= y) | x < y.  [resolve(36,a,34,c)].
37 -EqDim(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(37,a,31,c)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | x < y | y < x.  [resolve(37,a,33,a)].
Derived: ZEX(x) | Cont(f9(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(37,a,34,c)].
38 -EqDim(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [clausify(14)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -Cont(x,y) | x < y.  [resolve(38,a,31,c)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | x < y | y < x.  [resolve(38,a,33,a)].
Derived: ZEX(x) | P(f10(x,y),f8(x,y)) | -(x <= y) | x < y.  [resolve(38,a,34,c)].
39 -EqDim(x,y) | ZEX(x) | Cont(f10(x,y),y).  [clausify(14)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -Cont(x,y) | x < y.  [resolve(39,a,31,c)].
Derived: ZEX(x) | Cont(f10(x,y),y) | x < y | y < x.  [resolve(39,a,33,a)].
Derived: ZEX(x) | Cont(f10(x,y),y) | -(x <= y) | x < y.  [resolve(39,a,34,c)].
40 -INCH(x,y) | EqDim(f12(x,y),y).  [clausify(17)].
Derived: -INCH(x,y) | -(f12(x,y) < y).  [resolve(40,b,30,a)].
Derived: -INCH(x,y) | -(y < f12(x,y)).  [resolve(40,b,32,a)].
Derived: -INCH(x,y) | f12(x,y) <= y.  [resolve(40,b,35,b)].
Derived: -INCH(x,y) | ZEX(f12(x,y)) | P(f9(f12(x,y),y),f12(x,y)).  [resolve(40,b,36,a)].
Derived: -INCH(x,y) | ZEX(f12(x,y)) | Cont(f9(f12(x,y),y),f8(f12(x,y),y)).  [resolve(40,b,37,a)].
Derived: -INCH(x,y) | ZEX(f12(x,y)) | P(f10(f12(x,y),y),f8(f12(x,y),y)).  [resolve(40,b,38,a)].
Derived: -INCH(x,y) | ZEX(f12(x,y)) | Cont(f10(f12(x,y),y),y).  [resolve(40,b,39,a)].
41 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(17)].
Derived: INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -Cont(z,y) | z < y.  [resolve(41,d,31,c)].
Derived: INCH(x,y) | -Cont(f12(z,y),x) | -Cont(f12(z,y),y) | -INCH(z,y).  [resolve(41,d,40,b)].
42 -P(x,y) | EqDim(x,y).  [clausify(27)].
Derived: -P(x,y) | -(x < y).  [resolve(42,b,30,a)].
Derived: -P(x,y) | -(y < x).  [resolve(42,b,32,a)].
Derived: -P(x,y) | x <= y.  [resolve(42,b,35,b)].
Derived: -P(x,y) | ZEX(x) | P(f9(x,y),x).  [resolve(42,b,36,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f9(x,y),f8(x,y)).  [resolve(42,b,37,a)].
Derived: -P(x,y) | ZEX(x) | P(f10(x,y),f8(x,y)).  [resolve(42,b,38,a)].
Derived: -P(x,y) | ZEX(x) | Cont(f10(x,y),y).  [resolve(42,b,39,a)].
Derived: -P(x,y) | INCH(z,y) | -Cont(x,z) | -Cont(x,y).  [resolve(42,b,41,d)].
43 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(27)].
Derived: P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(43,c,31,c)].
Derived: P(f12(x,y),y) | -Cont(f12(x,y),y) | -INCH(x,y).  [resolve(43,c,40,b)].

Eliminating MinDim/1
44 -MinDim(x) | -ZEX(x).  [clausify(11)].
45 MinDim(c1).  [clausify(8)].
Derived: -ZEX(c1).  [resolve(44,a,45,a)].
46 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(11)].
Derived: -(x < c1) | ZEX(x).  [resolve(46,a,45,a)].
47 MinDim(x) | ZEX(x) | f1(x) < x.  [clausify(11)].
Derived: ZEX(x) | f1(x) < x | -(y < x) | ZEX(y).  [resolve(47,a,46,a)].
48 MinDim(x) | ZEX(x) | -ZEX(f1(x)).  [clausify(11)].
Derived: ZEX(x) | -ZEX(f1(x)) | -(y < x) | ZEX(y).  [resolve(48,a,46,a)].

Eliminating OV/2
49 OV(x,y) | -INCH(x,y) | -INCH(y,x).  [clausify(18)].
50 -OV(x,y) | INCH(x,y).  [clausify(18)].
51 -OV(x,y) | INCH(y,x).  [clausify(18)].
52 OV(c3,c4).  [deny(29)].
Derived: INCH(c3,c4).  [resolve(52,a,50,a)].
Derived: INCH(c4,c3).  [resolve(52,a,51,a)].

Eliminating GED/2
53 GED(x,y) | -ZEXI(y).  [clausify(19)].
54 -GED(x,y) | ZEXI(y) | INCH(x,f13(x,y)).  [clausify(19)].
55 -GED(x,y) | ZEXI(y) | INCH(f13(x,y),y).  [clausify(19)].
56 GED(x,y) | -INCH(x,z) | -INCH(z,y).  [clausify(19)].
Derived: -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(x,f13(x,z)).  [resolve(56,a,54,a)].
Derived: -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(f13(x,z),z).  [resolve(56,a,55,a)].
57 -GED(x,y) | y <= x.  [clausify(21)].
Derived: x <= y | -ZEXI(x).  [resolve(57,a,53,a)].
Derived: x <= y | -INCH(y,z) | -INCH(z,x).  [resolve(57,a,56,a)].
58 GED(x,y) | -(y <= x).  [clausify(21)].
Derived: -(x <= y) | ZEXI(x) | INCH(y,f13(y,x)).  [resolve(58,a,54,a)].
Derived: -(x <= y) | ZEXI(x) | INCH(f13(y,x),x).  [resolve(58,a,55,a)].

Eliminating ZEXI/1
59 ZEX(x) | -ZEXI(x).  [clausify(20)].
60 -ZEX(x) | ZEXI(x).  [clausify(20)].
61 -ZEXI(x) | -INCH(x,x).  [clausify(28)].
Derived: -INCH(x,x) | -ZEX(x).  [resolve(61,a,60,b)].
62 ZEXI(x) | INCH(x,x).  [clausify(28)].
Derived: INCH(x,x) | ZEX(x).  [resolve(62,a,59,b)].
63 -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(x,f13(x,z)).  [resolve(56,a,54,a)].
Derived: -INCH(x,y) | -INCH(y,z) | INCH(x,f13(x,z)) | ZEX(z).  [resolve(63,c,59,b)].
Derived: -INCH(x,y) | -INCH(y,z) | INCH(x,f13(x,z)) | -INCH(z,z).  [resolve(63,c,61,a)].
64 -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(f13(x,z),z).  [resolve(56,a,55,a)].
Derived: -INCH(x,y) | -INCH(y,z) | INCH(f13(x,z),z) | ZEX(z).  [resolve(64,c,59,b)].
Derived: -INCH(x,y) | -INCH(y,z) | INCH(f13(x,z),z) | -INCH(z,z).  [resolve(64,c,61,a)].
65 x <= y | -ZEXI(x).  [resolve(57,a,53,a)].
Derived: x <= y | -ZEX(x).  [resolve(65,b,60,b)].
Derived: x <= y | INCH(x,x).  [resolve(65,b,62,a)].
Derived: x <= y | -INCH(z,u) | -INCH(u,x) | INCH(z,f13(z,x)).  [resolve(65,b,63,c)].
Derived: x <= y | -INCH(z,u) | -INCH(u,x) | INCH(f13(z,x),x).  [resolve(65,b,64,c)].
66 -(x <= y) | ZEXI(x) | INCH(y,f13(y,x)).  [resolve(58,a,54,a)].
Derived: -(x <= y) | INCH(y,f13(y,x)) | ZEX(x).  [resolve(66,b,59,b)].
Derived: -(x <= y) | INCH(y,f13(y,x)) | -INCH(x,x).  [resolve(66,b,61,a)].
Derived: -(x <= y) | INCH(y,f13(y,x)) | x <= z.  [resolve(66,b,65,b)].
67 -(x <= y) | ZEXI(x) | INCH(f13(y,x),x).  [resolve(58,a,55,a)].
Derived: -(x <= y) | INCH(f13(y,x),x) | ZEX(x).  [resolve(67,b,59,b)].
Derived: -(x <= y) | INCH(f13(y,x),x) | -INCH(x,x).  [resolve(67,b,61,a)].
Derived: -(x <= y) | INCH(f13(y,x),x) | x <= z.  [resolve(67,b,65,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, INCH, Cont, <, <=, P, PO ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f1 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.06 (+ 0.00) seconds.
% Length of proof is 59.
% Level of proof is 8.
% Maximum clause weight is 16.000.
% Given clauses 193.

1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
4 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
9 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
15 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
17 (all x all y (INCH(x,y) <-> (exists z (Cont(z,x) & Cont(z,y) & EqDim(z,y))))) # label(non_clause).  [assumption].
18 (all x all y (OV(x,y) <-> INCH(x,y) & INCH(y,x))) # label(non_clause).  [assumption].
19 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
21 (all x all y (GED(y,x) <-> x <= y)) # label(non_clause).  [assumption].
27 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
28 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
29 (all x all y (OV(x,y) -> PO(x,y))) # label(non_clause) # label(goal).  [goal].
30 -EqDim(x,y) | -(x < y).  [clausify(9)].
31 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
40 -INCH(x,y) | EqDim(f12(x,y),y).  [clausify(17)].
41 INCH(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(17)].
43 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(27)].
50 -OV(x,y) | INCH(x,y).  [clausify(18)].
51 -OV(x,y) | INCH(y,x).  [clausify(18)].
52 OV(c3,c4).  [deny(29)].
54 -GED(x,y) | ZEXI(y) | INCH(x,f13(x,y)).  [clausify(19)].
55 -GED(x,y) | ZEXI(y) | INCH(f13(x,y),y).  [clausify(19)].
56 GED(x,y) | -INCH(x,z) | -INCH(z,y).  [clausify(19)].
57 -GED(x,y) | y <= x.  [clausify(21)].
61 -ZEXI(x) | -INCH(x,x).  [clausify(28)].
63 -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(x,f13(x,z)).  [resolve(56,a,54,a)].
64 -INCH(x,y) | -INCH(y,z) | ZEXI(z) | INCH(f13(x,z),z).  [resolve(56,a,55,a)].
70 -(x < y) | -(y <= z) | x < z.  [clausify(4)].
85 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(15)].
87 -INCH(x,y) | Cont(f12(x,y),x).  [clausify(17)].
88 -INCH(x,y) | Cont(f12(x,y),y).  [clausify(17)].
96 -PO(c3,c4).  [deny(29)].
113 -INCH(x,y) | -(f12(x,y) < y).  [resolve(40,b,30,a)].
122 INCH(x,y) | -Cont(f12(z,y),x) | -Cont(f12(z,y),y) | -INCH(z,y).  [resolve(41,d,40,b)].
131 P(x,y) | -Cont(x,y) | -Cont(x,y) | x < y.  [resolve(43,c,31,c)].
132 P(x,y) | -Cont(x,y) | x < y.  [copy(131),merge(c)].
133 P(f12(x,y),y) | -Cont(f12(x,y),y) | -INCH(x,y).  [resolve(43,c,40,b)].
138 INCH(c3,c4).  [resolve(52,a,50,a)].
139 INCH(c4,c3).  [resolve(52,a,51,a)].
140 x <= y | -INCH(y,z) | -INCH(z,x).  [resolve(57,a,56,a)].
144 -INCH(x,y) | -INCH(y,z) | INCH(x,f13(x,z)) | -INCH(z,z).  [resolve(63,c,61,a)].
146 -INCH(x,y) | -INCH(y,z) | INCH(f13(x,z),z) | -INCH(z,z).  [resolve(64,c,61,a)].
164 INCH(x,x) | -Cont(f12(y,x),x) | -INCH(y,x).  [factor(122,b,c)].
280 Cont(f12(c3,c4),c4).  [resolve(138,a,88,a)].
281 Cont(f12(c3,c4),c3).  [resolve(138,a,87,a)].
283 -(f12(c3,c4) < c4).  [ur(113,a,138,a)].
289 Cont(f12(c4,c3),c3).  [resolve(139,a,88,a)].
312 -INCH(c3,x) | INCH(c4,f13(c4,x)) | -INCH(x,x).  [resolve(144,a,139,a)].
316 -INCH(c3,c3) | INCH(c4,f13(c4,c3)).  [factor(312,a,c)].
324 -INCH(c3,x) | INCH(f13(c4,x),x) | -INCH(x,x).  [resolve(146,a,139,a)].
328 -INCH(c3,c3) | INCH(f13(c4,c3),c3).  [factor(324,a,c)].
457 P(f12(c3,c4),c4).  [resolve(280,a,133,b),unit_del(b,138)].
527 P(f12(c3,c4),c3) | f12(c3,c4) < c3.  [resolve(281,a,132,b)].
554 INCH(c3,c3).  [resolve(289,a,164,b),unit_del(b,139)].
562 INCH(f13(c4,c3),c3).  [back_unit_del(328),unit_del(a,554)].
563 INCH(c4,f13(c4,c3)).  [back_unit_del(316),unit_del(a,554)].
771 -P(f12(c3,c4),c3).  [ur(85,a,96,a,c,457,a)].
772 f12(c3,c4) < c3.  [back_unit_del(527),unit_del(a,771)].
1131 -(c3 <= c4).  [ur(70,a,772,a,c,283,a)].
1178 $F.  [ur(140,a,1131,a,c,562,a),unit_del(a,563)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=193. Generated=2237. Kept=1108. proofs=1.
Usable=193. Sos=783. Demods=0. Limbo=5, Disabled=253. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=1128. Back_subsumed=71.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=56.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=4113. Nonunit_bsub_feature_tests=2243.
Megabytes=2.01.
User_CPU=0.06, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22548 exit (max_proofs) Mon May 28 17:09:00 2012
