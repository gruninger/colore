============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 17563 was started by torsten on stl-ws2,
Mon May 28 13:57:54 2012
The command was "prover9 -t 600 -f inch/mappings/conversions/inch2codi.p9 inch/conversions/inch_weak_I-E1.p9 inch/definitions/input/dim_prime_defs.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_weak_I-E1_D-A6_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/mappings/conversions/inch2codi.p9


formulas(sos).
(all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))).
(all x (ZEX(x) <-> ZEXI(x))).
(all x all y (x < y <-> GED(y,x) & -GED(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak_I-E1.p9


formulas(sos).
(exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))).
end_of_list.

% Reading from file inch/definitions/input/dim_prime_defs.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_weak_I-E1_D-A6_1.p9


formulas(goals).
(exists x MinDim(x)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))) # label(non_clause).  [assumption].
2 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
3 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
4 (exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))) # label(non_clause).  [assumption].
5 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
6 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
7 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
8 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
9 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
10 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
11 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
12 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
13 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
14 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
15 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
16 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
17 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
18 (exists x MinDim(x)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Cont/2
19 Cont(x,y) | -CS(x,y) | ZEXI(x).  [clausify(1)].
20 -Cont(x,y) | CS(x,y).  [clausify(1)].
21 -Cont(x,y) | -ZEXI(x).  [clausify(1)].

Eliminating ZEXI/1
22 ZEX(x) | -ZEXI(x).  [clausify(2)].
23 -ZEX(x) | ZEXI(x).  [clausify(2)].
24 -ZEXI(x) | -INCH(x,x).  [clausify(11)].
Derived: -INCH(x,x) | -ZEX(x).  [resolve(24,a,23,b)].
25 ZEXI(x) | INCH(x,x).  [clausify(11)].
Derived: INCH(x,x) | ZEX(x).  [resolve(25,a,22,b)].
26 -GED(x,y) | ZEXI(y) | INCH(x,f5(x,y)).  [clausify(12)].
Derived: -GED(x,y) | INCH(x,f5(x,y)) | ZEX(y).  [resolve(26,b,22,b)].
Derived: -GED(x,y) | INCH(x,f5(x,y)) | -INCH(y,y).  [resolve(26,b,24,a)].
27 -GED(x,y) | ZEXI(y) | INCH(f5(x,y),y).  [clausify(12)].
Derived: -GED(x,y) | INCH(f5(x,y),y) | ZEX(y).  [resolve(27,b,22,b)].
Derived: -GED(x,y) | INCH(f5(x,y),y) | -INCH(y,y).  [resolve(27,b,24,a)].
28 GED(x,y) | -ZEXI(y).  [clausify(12)].
Derived: GED(x,y) | -ZEX(y).  [resolve(28,b,23,b)].
Derived: GED(x,y) | INCH(y,y).  [resolve(28,b,25,a)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f5(z,y)).  [resolve(28,b,26,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f5(z,y),y).  [resolve(28,b,27,b)].

Eliminating EqDim/2
29 EqDim(x,y) | x < y | y < x.  [clausify(5)].
30 -EqDim(x,y) | -(x < y).  [clausify(5)].
31 -EqDim(x,y) | -(y < x).  [clausify(5)].
32 -(x <= y) | x < y | EqDim(x,y).  [clausify(6)].
Derived: -(x <= y) | x < y | -(y < x).  [resolve(32,c,31,a)].
33 x <= y | -EqDim(x,y).  [clausify(6)].
Derived: x <= y | x < y | y < x.  [resolve(33,b,29,a)].

Eliminating MaxDim/1
34 MaxDim(x) | -(f1(x) <= x).  [clausify(7)].
35 -MaxDim(x) | y <= x.  [clausify(7)].
Derived: -(f1(x) <= x) | y <= x.  [resolve(34,a,35,a)].

Eliminating MinDim/1
36 MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(8)].
37 -MinDim(x) | -ZEX(x).  [clausify(8)].
38 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(8)].
Derived: ZEX(x) | f2(x) < x | -(y < x) | ZEX(y).  [resolve(36,a,38,a)].
39 MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(8)].
Derived: ZEX(x) | -ZEX(f2(x)) | -(y < x) | ZEX(y).  [resolve(39,a,38,a)].
40 -MinDim(x).  [deny(18)].
Derived: ZEX(x) | f2(x) < x.  [resolve(40,a,36,a)].
Derived: ZEX(x) | -ZEX(f2(x)).  [resolve(40,a,39,a)].

Eliminating CS/2
41 CS(x,y) | INCH(x,f3(x,y)).  [clausify(9)].
42 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(9)].
Derived: INCH(x,f3(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(41,a,42,a)].
43 CS(x,y) | -INCH(y,f3(x,y)).  [clausify(9)].
Derived: -INCH(x,f3(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(43,a,42,a)].

Eliminating CH/2
44 CH(x,y) | -INCH(x,y) | INCH(x,f4(x,y)).  [clausify(10)].
45 -CH(x,y) | INCH(x,y).  [clausify(10)].
46 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [clausify(10)].
47 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [clausify(10)].
Derived: -INCH(x,y) | INCH(x,f4(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(44,a,46,a)].
Derived: -INCH(x,y) | INCH(x,f4(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(44,a,47,a)].
48 CH(x,y) | -INCH(x,y) | INCH(f4(x,y),x).  [clausify(10)].
Derived: -INCH(x,y) | INCH(f4(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(48,a,46,a)].
Derived: -INCH(x,y) | INCH(f4(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(48,a,47,a)].
49 CH(x,y) | -INCH(x,y) | -INCH(y,f4(x,y)) | -INCH(f4(x,y),y).  [clausify(10)].
Derived: -INCH(x,y) | -INCH(y,f4(x,y)) | -INCH(f4(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(49,a,46,a)].
Derived: -INCH(x,y) | -INCH(y,f4(x,y)) | -INCH(f4(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(49,a,47,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, INCH, GED, <, <= ]).
Function symbol precedence:  function_order([ c1, f3, f4, f5, f6, f7, f1, f2 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.02 seconds.

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 15.
% Level of proof is 4.
% Maximum clause weight is 6.000.
% Given clauses 54.

3 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
4 (exists x (-ZEX(x) & (all y (-ZEX(y) -> GED(y,x))))) # label(non_clause).  [assumption].
8 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
18 (exists x MinDim(x)) # label(non_clause) # label(goal).  [goal].
36 MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(8)].
39 MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(8)].
40 -MinDim(x).  [deny(18)].
51 -(x < y) | -GED(x,y).  [clausify(3)].
53 -ZEX(c1).  [clausify(4)].
54 ZEX(x) | GED(x,c1).  [clausify(4)].
83 ZEX(x) | f2(x) < x.  [resolve(40,a,36,a)].
84 ZEX(x) | -ZEX(f2(x)).  [resolve(40,a,39,a)].
149 ZEX(x) | -GED(f2(x),x).  [resolve(83,b,51,a)].
151 -ZEX(f2(c1)).  [ur(84,a,53,a)].
268 $F.  [resolve(149,b,54,b),unit_del(a,53),unit_del(b,151)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=54. Generated=393. Kept=218. proofs=1.
Usable=53. Sos=159. Demods=0. Limbo=0, Disabled=80. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=174. Back_subsumed=5.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=1.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1374. Nonunit_bsub_feature_tests=1174.
Megabytes=0.41.
User_CPU=0.03, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 17563 exit (max_proofs) Mon May 28 13:57:54 2012
