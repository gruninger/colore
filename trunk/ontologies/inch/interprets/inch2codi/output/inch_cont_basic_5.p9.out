============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22743 was started by torsten on scotus.mie.utoronto.ca,
Tue May 22 10:48:20 2012
The command was "prover9 -t 600 -f inch/mappings/conversions/inch2codi.p9 inch/conversions/inch_weak.p9 inch/theorems/input/options.txt inch/theorems/input/inch_cont_basic_5.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/mappings/conversions/inch2codi.p9


formulas(sos).
(all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))).
(all x (ZEX(x) <-> ZEXI(x))).
(all x all y (x < y <-> GED(y,x) & -GED(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_cont_basic_5.p9


formulas(goals).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))) # label(non_clause).  [assumption].
2 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
3 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
4 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
5 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
6 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
7 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
9 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
11 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
12 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
13 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Cont/2
14 Cont(x,y) | -CS(x,y) | ZEXI(x).  [clausify(1)].
15 -Cont(x,y) | CS(x,y).  [clausify(1)].
16 -Cont(x,y) | -ZEXI(x).  [clausify(1)].

Eliminating ZEX/1
17 ZEX(x) | -ZEXI(x).  [clausify(2)].
18 -ZEX(x) | ZEXI(x).  [clausify(2)].
19 ZEX(c1).  [deny(13)].
Derived: ZEXI(c1).  [resolve(19,a,18,a)].
20 ZEX(c2).  [deny(13)].
Derived: ZEXI(c2).  [resolve(20,a,18,a)].

Eliminating </2
21 x < y | -GED(y,x) | GED(x,y).  [clausify(3)].
22 -(x < y) | GED(y,x).  [clausify(3)].
23 -(x < y) | -GED(x,y).  [clausify(3)].

Eliminating CS/2
24 CS(x,y) | INCH(x,f1(x,y)).  [clausify(4)].
25 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(4)].
Derived: INCH(x,f1(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(24,a,25,a)].
26 CS(x,y) | -INCH(y,f1(x,y)).  [clausify(4)].
Derived: -INCH(x,f1(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(26,a,25,a)].

Eliminating CH/2
27 CH(x,y) | -INCH(x,y) | INCH(x,f2(x,y)).  [clausify(5)].
28 -CH(x,y) | INCH(x,y).  [clausify(5)].
29 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [clausify(5)].
30 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [clausify(5)].
Derived: -INCH(x,y) | INCH(x,f2(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(27,a,29,a)].
Derived: -INCH(x,y) | INCH(x,f2(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(27,a,30,a)].
31 CH(x,y) | -INCH(x,y) | INCH(f2(x,y),x).  [clausify(5)].
Derived: -INCH(x,y) | INCH(f2(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(31,a,29,a)].
Derived: -INCH(x,y) | INCH(f2(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(31,a,30,a)].
32 CH(x,y) | -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y).  [clausify(5)].
Derived: -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(32,a,29,a)].
Derived: -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(32,a,30,a)].

Eliminating ZEXI/1
33 ZEXI(x) | INCH(x,x).  [clausify(6)].
34 -ZEXI(x) | -INCH(x,x).  [clausify(6)].
35 -GED(x,y) | ZEXI(y) | INCH(x,f3(x,y)).  [clausify(7)].
Derived: -GED(x,y) | INCH(x,f3(x,y)) | -INCH(y,y).  [resolve(35,b,34,a)].
36 -GED(x,y) | ZEXI(y) | INCH(f3(x,y),y).  [clausify(7)].
Derived: -GED(x,y) | INCH(f3(x,y),y) | -INCH(y,y).  [resolve(36,b,34,a)].
37 GED(x,y) | -ZEXI(y).  [clausify(7)].
Derived: GED(x,y) | INCH(y,y).  [resolve(37,b,33,a)].
Derived: GED(x,y) | -GED(z,y) | INCH(z,f3(z,y)).  [resolve(37,b,35,b)].
Derived: GED(x,y) | -GED(z,y) | INCH(f3(z,y),y).  [resolve(37,b,36,b)].
38 ZEXI(c1).  [resolve(19,a,18,a)].
Derived: -INCH(c1,c1).  [resolve(38,a,34,a)].
Derived: GED(x,c1).  [resolve(38,a,37,b)].
39 ZEXI(c2).  [resolve(20,a,18,a)].
Derived: -INCH(c2,c2).  [resolve(39,a,34,a)].
Derived: GED(x,c2).  [resolve(39,a,37,b)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, INCH, GED ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f5 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 21.
% Level of proof is 5.
% Maximum clause weight is 16.000.
% Given clauses 37.

2 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
6 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
8 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
10 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
13 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause) # label(goal).  [goal].
18 -ZEX(x) | ZEXI(x).  [clausify(2)].
19 ZEX(c1).  [deny(13)].
20 ZEX(c2).  [deny(13)].
34 -ZEXI(x) | -INCH(x,x).  [clausify(6)].
38 ZEXI(c1).  [resolve(19,a,18,a)].
39 ZEXI(c2).  [resolve(20,a,18,a)].
42 x != y | INCH(y,z) | -INCH(x,z).  [clausify(8)].
43 x = y | INCH(y,f4(y,x)) | INCH(x,f4(y,x)).  [clausify(8)].
49 -INCH(x,y) | INCH(x,x).  [clausify(10)].
52 c2 != c1.  [deny(13)].
66 -INCH(c1,c1).  [resolve(38,a,34,a)].
68 -INCH(c2,c2).  [resolve(39,a,34,a)].
75 x = y | INCH(x,f4(y,x)) | y != z | INCH(z,f4(y,x)).  [resolve(43,b,42,c)].
209 -INCH(c1,x).  [ur(49,b,66,a)].
211 -INCH(c2,x).  [ur(49,b,68,a)].
221 $F.  [ur(75,a,52,a(flip),b,209,a,d,211,a),xx(a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=37. Generated=346. Kept=181. proofs=1.
Usable=35. Sos=141. Demods=0. Limbo=2, Disabled=59. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=164. Back_subsumed=3.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1292. Nonunit_bsub_feature_tests=1081.
Megabytes=0.33.
User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22743 exit (max_proofs) Tue May 22 10:48:20 2012
