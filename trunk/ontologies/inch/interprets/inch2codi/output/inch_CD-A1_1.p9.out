============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23252 was started by torsten on scotus.mie.utoronto.ca,
Tue May 22 11:05:36 2012
The command was "prover9 -t 600 -f inch/mappings/conversions/inch2codi.p9 inch/conversions/inch_weak.p9 inch/definitions/input/dim_prime_defs.p9 inch/theorems/input/options.txt inch/theorems/input/inch_CD-A1_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file inch/mappings/conversions/inch2codi.p9


formulas(sos).
(all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))).
(all x (ZEX(x) <-> ZEXI(x))).
(all x all y (x < y <-> GED(y,x) & -GED(x,y))).
end_of_list.

% Reading from file inch/conversions/inch_weak.p9


formulas(sos).
(all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))).
(all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))).
(all x all y (ZEXI(x) <-> -INCH(x,x))).
(all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))).
(all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))).
(all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))).
(all x all y (INCH(x,y) -> INCH(x,x))).
(all x all y (GED(x,y) | GED(y,x))).
(all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))).
end_of_list.

% Reading from file inch/definitions/input/dim_prime_defs.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file inch/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file inch/theorems/input/inch_CD-A1_1.p9


formulas(goals).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))) # label(non_clause).  [assumption].
2 (all x (ZEX(x) <-> ZEXI(x))) # label(non_clause).  [assumption].
3 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
4 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
5 (all x all y (CH(x,y) <-> INCH(x,y) & (all z (INCH(x,z) & INCH(z,x) -> INCH(y,z) & INCH(z,y))))) # label(non_clause).  [assumption].
6 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
7 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (x = y <-> (all z (INCH(x,z) <-> INCH(y,z))))) # label(non_clause).  [assumption].
9 (all x all y (x = y <-> (all z (INCH(z,x) <-> INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
11 (all x all y (GED(x,y) | GED(y,x))) # label(non_clause).  [assumption].
12 (all x all y all z (GED(x,y) & GED(y,z) -> GED(x,z))) # label(non_clause).  [assumption].
13 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
14 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
15 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
16 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
17 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating Cont/2
18 Cont(x,y) | -CS(x,y) | ZEXI(x).  [clausify(1)].
19 -Cont(x,y) | CS(x,y).  [clausify(1)].
20 -Cont(x,y) | -ZEXI(x).  [clausify(1)].
21 Cont(c1,c2).  [deny(17)].
Derived: CS(c1,c2).  [resolve(21,a,19,a)].
Derived: -ZEXI(c1).  [resolve(21,a,20,a)].

Eliminating CS/2
22 CS(x,y) | INCH(x,f1(x,y)).  [clausify(4)].
23 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(4)].
Derived: INCH(x,f1(x,y)) | -INCH(x,z) | INCH(y,z).  [resolve(22,a,23,a)].
24 CS(x,y) | -INCH(y,f1(x,y)).  [clausify(4)].
Derived: -INCH(x,f1(y,x)) | -INCH(y,z) | INCH(x,z).  [resolve(24,a,23,a)].
25 CS(c1,c2).  [resolve(21,a,19,a)].
Derived: -INCH(c1,x) | INCH(c2,x).  [resolve(25,a,23,a)].

Eliminating CH/2
26 CH(x,y) | -INCH(x,y) | INCH(x,f2(x,y)).  [clausify(5)].
27 -CH(x,y) | INCH(x,y).  [clausify(5)].
28 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [clausify(5)].
29 -CH(x,y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [clausify(5)].
Derived: -INCH(x,y) | INCH(x,f2(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(26,a,28,a)].
Derived: -INCH(x,y) | INCH(x,f2(x,y)) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(26,a,29,a)].
30 CH(x,y) | -INCH(x,y) | INCH(f2(x,y),x).  [clausify(5)].
Derived: -INCH(x,y) | INCH(f2(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(30,a,28,a)].
Derived: -INCH(x,y) | INCH(f2(x,y),x) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(30,a,29,a)].
31 CH(x,y) | -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y).  [clausify(5)].
Derived: -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(y,z).  [resolve(31,a,28,a)].
Derived: -INCH(x,y) | -INCH(y,f2(x,y)) | -INCH(f2(x,y),y) | -INCH(x,z) | -INCH(z,x) | INCH(z,y).  [resolve(31,a,29,a)].

Eliminating MaxDim/1
32 MaxDim(x) | -(f6(x) <= x).  [clausify(15)].
33 -MaxDim(x) | y <= x.  [clausify(15)].
Derived: -(f6(x) <= x) | y <= x.  [resolve(32,a,33,a)].

Eliminating MinDim/1
34 MinDim(x) | ZEX(x) | f7(x) < x.  [clausify(16)].
35 -MinDim(x) | -ZEX(x).  [clausify(16)].
36 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(16)].
Derived: ZEX(x) | f7(x) < x | -(y < x) | ZEX(y).  [resolve(34,a,36,a)].
37 MinDim(x) | ZEX(x) | -ZEX(f7(x)).  [clausify(16)].
Derived: ZEX(x) | -ZEX(f7(x)) | -(y < x) | ZEX(y).  [resolve(37,a,36,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, ZEX, ZEXI, INCH, GED, <, <=, EqDim ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f5, f6, f7 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 30.
% Level of proof is 6.
% Maximum clause weight is 9.000.
% Given clauses 55.

1 (all x all y (Cont(x,y) <-> CS(x,y) & -ZEXI(x))) # label(non_clause).  [assumption].
3 (all x all y (x < y <-> GED(y,x) & -GED(x,y))) # label(non_clause).  [assumption].
4 (all x all y (CS(x,y) <-> (all z (INCH(x,z) -> INCH(y,z))))) # label(non_clause).  [assumption].
6 (all x all y (ZEXI(x) <-> -INCH(x,x))) # label(non_clause).  [assumption].
7 (all x all y (GED(x,y) <-> ZEXI(y) | (exists z (INCH(x,z) & INCH(z,y))))) # label(non_clause).  [assumption].
10 (all x all y (INCH(x,y) -> INCH(x,x))) # label(non_clause).  [assumption].
13 (all x all y (EqDim(x,y) <-> -(x < y) & -(y < x))) # label(non_clause).  [assumption].
17 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause) # label(goal).  [goal].
19 -Cont(x,y) | CS(x,y).  [clausify(1)].
20 -Cont(x,y) | -ZEXI(x).  [clausify(1)].
21 Cont(c1,c2).  [deny(17)].
23 -CS(x,y) | -INCH(x,z) | INCH(y,z).  [clausify(4)].
25 CS(c1,c2).  [resolve(21,a,19,a)].
41 -(x < y) | -GED(x,y).  [clausify(3)].
43 -ZEXI(x) | -INCH(x,x).  [clausify(6)].
44 ZEXI(x) | INCH(x,x).  [clausify(6)].
48 GED(x,y) | -INCH(x,z) | -INCH(z,y).  [clausify(7)].
57 -INCH(x,y) | INCH(x,x).  [clausify(10)].
62 EqDim(x,y) | x < y | y < x.  [clausify(13)].
66 -(c1 < c2).  [deny(17)].
67 -EqDim(c1,c2).  [deny(17)].
68 -ZEXI(c1).  [resolve(21,a,20,a)].
71 -INCH(c1,x) | INCH(c2,x).  [resolve(25,a,23,a)].
89 GED(x,y) | -INCH(x,y) | ZEXI(x).  [resolve(48,b,44,b)].
129 c2 < c1.  [resolve(67,a,62,a),unit_del(a,66)].
148 INCH(c2,c1).  [resolve(71,a,44,b),unit_del(b,68)].
256 -GED(c2,c1).  [resolve(129,a,41,a)].
259 ZEXI(c2).  [resolve(148,a,89,b),unit_del(a,256)].
277 INCH(c2,c2).  [resolve(148,a,57,a)].
286 $F.  [ur(43,a,259,a),unit_del(a,277)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=55. Generated=414. Kept=248. proofs=1.
Usable=54. Sos=184. Demods=0. Limbo=2, Disabled=71. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=165. Back_subsumed=4.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=4.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1383. Nonunit_bsub_feature_tests=1206.
Megabytes=0.45.
User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23252 exit (max_proofs) Tue May 22 11:05:36 2012
