/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/

(cl-text http://colore.oor.net/psl_complex/complex.clif

(cl-imports http://colore.oor.net/psl_atomic/atomic.clif)

(cl-comment "Occurrences in the activity tree for an activity correspond to atomic subactivity
occurrences of the activity.")

(forall (a s1 s2)
	(if	(min_precedes s1 s2 a)
		(exists (a1 a2)
			(and	(subactivity a1 a)
				(subactivity a2 a)
				(atocc s1 a1)
				(atocc s2 a2)))))

(cl-comment "Root occurrences in the activity tree correspond to atomic subactivity
occurrences of the activity.")

(forall (a s)
	(if	(root s a)
		(exists (a1)
			(and	(subactivity a1 a)
				(atocc s a1)))))

(cl-comment "All activity trees have a root subactivity occurrence.")

(forall (s1 s2 a)
	(if	(min_precedes s1 s2 a)
		(exists (s3)
			(and	(root s3 a)
				(min_precedes s3 s2 a)))))

(cl-comment "No subactivity occurrences in an activity tree occur earlier than 
the root subactivity occurrence.")

(forall (s1 s2 a)
	(if	(min_precedes s1 s2 a)
		(not (root s2 a))))

(cl-comment "Activity trees are subtrees of the occurrence tree.")

(forall (s1 s2 a)
	(if	(min_precedes s1 s2 a)
		(precedes s1 s2)))

(cl-comment "Root occurrences are elements of the occurrence tree.")

(forall (s a)
	(if	(root s a)
		(legal s)))

(cl-comment "Every legal atomic activity occurrence is an activity tree containing only
one occurrence.")

(forall (s a)
        (if	(and    (atocc s a)
                        (legal s))
		(root s a)))

(cl-comment "Activity trees are discrete.")

(forall (s1 s2 a)
	(if	(min_precedes s1 s2 a)
		(exists (s3)
			(and	(next_subocc s1 s3 a)
				(or	(min_precedes s3 s2 a)
					(= s3 s2))))))

(cl-comment "Subactivity occurrences on the same branch of the occurrence tree are
on the same branch of the activity tree.")


(forall (a s1 s2 s3)
	(if	(and	(min_precedes s1 s2 a)
			(min_precedes s1 s3 a)
			(precedes s2 s3))
		(min_precedes s2 s3 a)))

(cl-comment "The activity tree for a complex subactivity occurrence
is a subtree of the activity tree for the activity occurrence.")

(forall (a1 a2 s1 s2 s3)
	(if	(and	(subactivity a1 a2)
			(subtree s1 a1 s2 a2)
			(min_precedes s1 s3 a1))
		(min_precedes s1 s3 a2)))

(cl-comment "Only complex activities can be arguments to the min_precedes relation.")

(forall (s1 s2 a)
        (if	(min_precedes s1 s2 a)
                (not (atomic a))))

(cl-comment "Subactivity occurrences on the same branch of the activity tree are
linearly ordered by the min_precedes relation.")

(forall (a s1 s2 s3)
	(if	(and	(min_precedes s2 s1 a)
			(min_precedes s3 s1 a)
			(precedes s2 s3))
		(min_precedes s2 s3 a)))

(cl-comment "An occurrence is the leaf of an activity tree if and only if there exists an earlier
atomic subactivity occurrence but there does not exist a later atomic 
subactivity occurrence.")

(forall (s a) (iff (leaf s a)
    (and    (or    (root s a)
            (exists (s1) (min_precedes s1 s a)))
        (not (exists (s2)
            (min_precedes s s2 a))))))

(cl-comment "The do relation specifies the initial and final atomic subactivity occurrences
of an occurrence of an activity.")

(forall (a s1 s2) (iff (do a s1 s2)
(and	(root s1 a)
	(leaf s2 a)
	(or	(min_precedes s1 s2 a)
		(= s1 s2)))))

(cl-comment "An activity occurrence s2 is the next subactivity occurrence after s1
in an activity tree for a if and only of s1 precedes s2
in the tree and there does not exist a subactivity occurrence that is between
them in the tree.")

(forall (s1 s2 a) (iff (next_subocc s1 s2 a)
(and    (min_precedes s1 s2 a)
        (not (exists (s3)
                (and    (activity_occurrence s3)
			(min_precedes s1 s3 a)
                        (min_precedes s3 s2 a)))))))

(cl-comment "The activity tree for a1 with root occurrence s1
contains an activity tree for a2 as a subtree if and only if
every atomic subactivity occurrence in the activity tree for a2
is an element of the activity tree for a1, and there is an atomic subactivity
occurrence in the activity tree for a1 that is not in the  activity tree for a2.")

(forall (s1 s2 a1 a2) (iff (subtree s1 a1 s2 a2)
(and	(root s1 a1)
	(root s2 a2)
	(or	(min_precedes s1 s2 a1) (= s1 s2))
	(forall (s3)
		(if	(min_precedes s1 s3 a1)
			(min_precedes s2 s3 a2))))))

(cl-comment "The atomic subactivity occurrences s1 and s2 are siblings
in an activity tree for a iff they either have a common
predecessor in the activity tree or they are both roots of
activity trees that have a common predecessor in the occurrence
tree.")

(forall (s1 s2 a) (iff (sibling s1 s2 a)
(or	(exists (s3)
		(and	(next_subocc s3 s1 a)
			(next_subocc s3 s2 a)))
	(and	(root s1 a)
		(root s2 a)
		(or	(and	(initial s1)
				(initial s2))
			(exists (s4 a1 a2)
				(and	(= s1 (successor a1 s4))
					(= s2 (successor a2 s4)))))))))

)
