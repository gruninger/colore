============================== Prover9 ===============================
Prover9 (32) version Oct-2007, Oct 2007.
Process 7844 was started by torsten on torsten-laptop,
Thu Apr 30 19:40:30 2015
The command was "/cygdrive/c/Reasoning/prover9-bin/prover9 -t600 -f E:\COLORE\multidim_space_voids\conversions\voids_extended.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file E:\COLORE\multidim_space_voids\conversions\voids_extended.p9


formulas(sos).
(all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))).
(all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))).
(all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))).
(all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))).
(all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))).
(all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))).
(all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))).
(all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))).
(all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))).
(all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))).
(all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))).
(all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))).
(all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))).
(all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))).
(all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))).
(all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))).
(all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))).
(all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))).
(all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))).
(all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))).
(all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))) # label(non_clause).  [assumption].
2 (all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))) # label(non_clause).  [assumption].
3 (all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))) # label(non_clause).  [assumption].
4 (all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))) # label(non_clause).  [assumption].
5 (all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))) # label(non_clause).  [assumption].
6 (all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))) # label(non_clause).  [assumption].
7 (all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))) # label(non_clause).  [assumption].
8 (all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))) # label(non_clause).  [assumption].
9 (all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))) # label(non_clause).  [assumption].
10 (all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))) # label(non_clause).  [assumption].
11 (all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))) # label(non_clause).  [assumption].
12 (all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))) # label(non_clause).  [assumption].
13 (all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))) # label(non_clause).  [assumption].
14 (all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))) # label(non_clause).  [assumption].
15 (all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))) # label(non_clause).  [assumption].
16 (all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))) # label(non_clause).  [assumption].
17 (all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))) # label(non_clause).  [assumption].
18 (all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))) # label(non_clause).  [assumption].
19 (all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))) # label(non_clause).  [assumption].
20 (all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))) # label(non_clause).  [assumption].
21 (all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-hostsh(x,y) | hostsv(x,y).  [clausify(1)].
-hostsh(x,y) | icon(r(x)).  [clausify(1)].
hostsh(x,y) | -hostsv(x,y) | -icon(r(x)).  [clausify(1)].
-hostsg(x,y) | hostsv(x,y).  [clausify(2)].
-hostsg(x,y) | -icon(r(x)).  [clausify(2)].
hostsg(x,y) | -hostsv(x,y) | icon(r(x)).  [clausify(2)].
-hole(x) | hostsh(f1(x),x).  [clausify(3)].
hole(x) | -hostsh(y,x).  [clausify(3)].
-gap(x) | hostsg(f2(x),x).  [clausify(4)].
gap(x) | -hostsg(y,x).  [clausify(4)].
-hostsv(x,y) | intersection(r(y),difference(cuni,sum(r(x),r(y)))) = op(x,y).  [clausify(5)].
-hostscavity(x,y) | hostsv(x,y).  [clausify(6)].
-hostscavity(x,y) | -covers(r(x),op(x,y)).  [clausify(6)].
hostscavity(x,y) | -hostsv(x,y) | covers(r(x),op(x,y)).  [clausify(6)].
-cavity(x) | hostscavity(f3(x),x).  [clausify(7)].
cavity(x) | -hostscavity(y,x).  [clausify(7)].
-hostscavityi(x,y) | hostscavity(x,y).  [clausify(8)].
-hostscavityi(x,y) | zex(op(x,y)).  [clausify(8)].
hostscavityi(x,y) | -hostscavity(x,y) | -zex(op(x,y)).  [clausify(8)].
-hostscavityt(x,y) | hostscavity(x,y).  [clausify(9)].
-hostscavityt(x,y) | -zex(op(x,y)).  [clausify(9)].
hostscavityt(x,y) | -hostscavity(x,y) | zex(op(x,y)).  [clausify(9)].
-hostshollow(x,y) | hostsv(x,y).  [clausify(10)].
-hostshollow(x,y) | covers(r(x),op(x,y)).  [clausify(10)].
-hostshollow(x,y) | icon(op(x,y)).  [clausify(10)].
hostshollow(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)).  [clausify(10)].
-hol(x) | hostshollow(f4(x),x).  [clausify(11)].
hol(x) | -hostshollow(y,x).  [clausify(11)].
-hoststunnel(x,y) | hostsv(x,y).  [clausify(12)].
-hoststunnel(x,y) | covers(r(x),op(x,y)).  [clausify(12)].
-hoststunnel(x,y) | -icon(op(x,y)).  [clausify(12)].
hoststunnel(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)).  [clausify(12)].
-tun(x) | hoststunnel(f5(x),x).  [clausify(13)].
tun(x) | -hoststunnel(y,x).  [clausify(13)].
-hostsve(x,y) | hostsv(x,y).  [clausify(14)].
-hostsve(x,y) | p(f6(x,y),op(x,y)).  [clausify(14)].
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)).  [clausify(14)].
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)).  [clausify(14)].
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [clausify(14)].
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).  [clausify(14)].
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [clausify(14)].
-hostsvi(x,y) | hostsv(x,y).  [clausify(15)].
-hostsvi(x,y) | -hostsve(x,y).  [clausify(15)].
hostsvi(x,y) | -hostsv(x,y) | hostsve(x,y).  [clausify(15)].
-po(x,porespace(y)) | dk1(f8(x,y),y).  [clausify(16)].
-po(x,porespace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(16)].
-po(x,porespace(y)) | hostsv(f8(x,y),f9(x,y)).  [clausify(16)].
-po(x,porespace(y)) | po(x,r(f9(x,y))).  [clausify(16)].
po(x,porespace(y)) | -dk1(z,y) | hostsv(y,f10(x,y,z)) | -hostsv(z,u) | -po(x,r(u)).  [clausify(16)].
po(x,porespace(y)) | -dk1(z,y) | po(x,r(f10(x,y,z))) | -hostsv(z,u) | -po(x,r(u)).  [clausify(16)].
-po(x,voidspace(y)) | po(x,porespace(y)) | hostsv(y,f11(x,y)).  [clausify(17)].
-po(x,voidspace(y)) | po(x,porespace(y)) | po(x,r(f11(x,y))).  [clausify(17)].
po(x,voidspace(y)) | -po(x,porespace(y)).  [clausify(17)].
po(x,voidspace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(17)].
zex(porespace(x)) | porespace(x) = r(f12(x)).  [clausify(18)].
zex(porespace(x)) | hostsv(f13(x),f12(x)).  [clausify(18)].
zex(porespace(x)) | dk1(f13(x),x).  [clausify(18)].
zex(voidspace(x)) | voidspace(x) = r(f14(x)).  [clausify(19)].
zex(voidspace(x)) | hostsv(f15(x),f14(x)).  [clausify(19)].
zex(voidspace(x)) | dk1(f15(x),x).  [clausify(19)].
-po(x,convoidspace(y)) | po(x,f16(x,y)).  [clausify(20)].
-po(x,convoidspace(y)) | icon(f16(x,y)).  [clausify(20)].
-po(x,convoidspace(y)) | cont(f16(x,y),voidspace(y)).  [clausify(20)].
-po(x,convoidspace(y)) | strongc(f16(x,y),difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].
po(x,convoidspace(y)) | -po(x,z) | -icon(z) | -cont(z,voidspace(y)) | -strongc(z,difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].
-po(x,conporespace(y)) | po(x,f17(x,y)).  [clausify(21)].
-po(x,conporespace(y)) | icon(f17(x,y)).  [clausify(21)].
-po(x,conporespace(y)) | cont(f17(x,y),porespace(y)).  [clausify(21)].
-po(x,conporespace(y)) | strongc(f17(x,y),difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].
po(x,conporespace(y)) | -po(x,z) | -icon(z) | -cont(z,porespace(y)) | -strongc(z,difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating hostsh/2
22 hostsh(x,y) | -hostsv(x,y) | -icon(r(x)).  [clausify(1)].
23 -hostsh(x,y) | hostsv(x,y).  [clausify(1)].
24 -hostsh(x,y) | icon(r(x)).  [clausify(1)].
25 -hole(x) | hostsh(f1(x),x).  [clausify(3)].
Derived: -hole(x) | hostsv(f1(x),x).  [resolve(25,b,23,a)].
Derived: -hole(x) | icon(r(f1(x))).  [resolve(25,b,24,a)].
26 hole(x) | -hostsh(y,x).  [clausify(3)].
Derived: hole(x) | -hostsv(y,x) | -icon(r(y)).  [resolve(26,b,22,a)].

Eliminating hostsg/2
27 hostsg(x,y) | -hostsv(x,y) | icon(r(x)).  [clausify(2)].
28 -hostsg(x,y) | hostsv(x,y).  [clausify(2)].
29 -hostsg(x,y) | -icon(r(x)).  [clausify(2)].
30 -gap(x) | hostsg(f2(x),x).  [clausify(4)].
Derived: -gap(x) | hostsv(f2(x),x).  [resolve(30,b,28,a)].
Derived: -gap(x) | -icon(r(f2(x))).  [resolve(30,b,29,a)].
31 gap(x) | -hostsg(y,x).  [clausify(4)].
Derived: gap(x) | -hostsv(y,x) | icon(r(y)).  [resolve(31,b,27,a)].

Eliminating hostscavity/2
32 hostscavity(x,y) | -hostsv(x,y) | covers(r(x),op(x,y)).  [clausify(6)].
33 -hostscavity(x,y) | hostsv(x,y).  [clausify(6)].
34 -hostscavity(x,y) | -covers(r(x),op(x,y)).  [clausify(6)].
35 -cavity(x) | hostscavity(f3(x),x).  [clausify(7)].
Derived: -cavity(x) | hostsv(f3(x),x).  [resolve(35,b,33,a)].
Derived: -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(35,b,34,a)].
36 cavity(x) | -hostscavity(y,x).  [clausify(7)].
Derived: cavity(x) | -hostsv(y,x) | covers(r(y),op(y,x)).  [resolve(36,b,32,a)].
37 -hostscavityi(x,y) | hostscavity(x,y).  [clausify(8)].
Derived: -hostscavityi(x,y) | hostsv(x,y).  [resolve(37,b,33,a)].
Derived: -hostscavityi(x,y) | -covers(r(x),op(x,y)).  [resolve(37,b,34,a)].
Derived: -hostscavityi(x,y) | cavity(y).  [resolve(37,b,36,b)].
38 hostscavityi(x,y) | -hostscavity(x,y) | -zex(op(x,y)).  [clausify(8)].
Derived: hostscavityi(x,y) | -zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)).  [resolve(38,b,32,a)].
Derived: hostscavityi(f3(x),x) | -zex(op(f3(x),x)) | -cavity(x).  [resolve(38,b,35,b)].
39 -hostscavityt(x,y) | hostscavity(x,y).  [clausify(9)].
Derived: -hostscavityt(x,y) | hostsv(x,y).  [resolve(39,b,33,a)].
Derived: -hostscavityt(x,y) | -covers(r(x),op(x,y)).  [resolve(39,b,34,a)].
Derived: -hostscavityt(x,y) | cavity(y).  [resolve(39,b,36,b)].
40 hostscavityt(x,y) | -hostscavity(x,y) | zex(op(x,y)).  [clausify(9)].
Derived: hostscavityt(x,y) | zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)).  [resolve(40,b,32,a)].
Derived: hostscavityt(f3(x),x) | zex(op(f3(x),x)) | -cavity(x).  [resolve(40,b,35,b)].
Derived: hostscavityt(x,y) | zex(op(x,y)) | -hostscavityi(x,y).  [resolve(40,b,37,b)].

Eliminating hostscavityi/2
41 hostscavityi(x,y) | -zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)).  [resolve(38,b,32,a)].
42 -hostscavityi(x,y) | zex(op(x,y)).  [clausify(8)].
43 -hostscavityi(x,y) | hostsv(x,y).  [resolve(37,b,33,a)].
44 -hostscavityi(x,y) | -covers(r(x),op(x,y)).  [resolve(37,b,34,a)].
45 -hostscavityi(x,y) | cavity(y).  [resolve(37,b,36,b)].
Derived: -zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)) | cavity(y).  [resolve(41,a,45,a)].
46 hostscavityi(f3(x),x) | -zex(op(f3(x),x)) | -cavity(x).  [resolve(38,b,35,b)].
Derived: -zex(op(f3(x),x)) | -cavity(x) | hostsv(f3(x),x).  [resolve(46,a,43,a)].
Derived: -zex(op(f3(x),x)) | -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(46,a,44,a)].
47 hostscavityt(x,y) | zex(op(x,y)) | -hostscavityi(x,y).  [resolve(40,b,37,b)].

Eliminating hostscavityt/2
48 hostscavityt(x,y) | zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)).  [resolve(40,b,32,a)].
49 -hostscavityt(x,y) | -zex(op(x,y)).  [clausify(9)].
50 -hostscavityt(x,y) | hostsv(x,y).  [resolve(39,b,33,a)].
51 -hostscavityt(x,y) | -covers(r(x),op(x,y)).  [resolve(39,b,34,a)].
52 -hostscavityt(x,y) | cavity(y).  [resolve(39,b,36,b)].
Derived: zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)) | cavity(y).  [resolve(48,a,52,a)].
53 hostscavityt(f3(x),x) | zex(op(f3(x),x)) | -cavity(x).  [resolve(40,b,35,b)].
Derived: zex(op(f3(x),x)) | -cavity(x) | hostsv(f3(x),x).  [resolve(53,a,50,a)].
Derived: zex(op(f3(x),x)) | -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(53,a,51,a)].

Eliminating hostshollow/2
54 hostshollow(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)).  [clausify(10)].
55 -hostshollow(x,y) | hostsv(x,y).  [clausify(10)].
56 -hostshollow(x,y) | covers(r(x),op(x,y)).  [clausify(10)].
57 -hostshollow(x,y) | icon(op(x,y)).  [clausify(10)].
58 -hol(x) | hostshollow(f4(x),x).  [clausify(11)].
Derived: -hol(x) | hostsv(f4(x),x).  [resolve(58,b,55,a)].
Derived: -hol(x) | covers(r(f4(x)),op(f4(x),x)).  [resolve(58,b,56,a)].
Derived: -hol(x) | icon(op(f4(x),x)).  [resolve(58,b,57,a)].
59 hol(x) | -hostshollow(y,x).  [clausify(11)].
Derived: hol(x) | -hostsv(y,x) | -covers(r(y),op(y,x)) | -icon(op(y,x)).  [resolve(59,b,54,a)].

Eliminating hoststunnel/2
60 hoststunnel(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)).  [clausify(12)].
61 -hoststunnel(x,y) | hostsv(x,y).  [clausify(12)].
62 -hoststunnel(x,y) | covers(r(x),op(x,y)).  [clausify(12)].
63 -hoststunnel(x,y) | -icon(op(x,y)).  [clausify(12)].
64 -tun(x) | hoststunnel(f5(x),x).  [clausify(13)].
Derived: -tun(x) | hostsv(f5(x),x).  [resolve(64,b,61,a)].
Derived: -tun(x) | covers(r(f5(x)),op(f5(x),x)).  [resolve(64,b,62,a)].
Derived: -tun(x) | -icon(op(f5(x),x)).  [resolve(64,b,63,a)].
65 tun(x) | -hoststunnel(y,x).  [clausify(13)].
Derived: tun(x) | -hostsv(y,x) | -covers(r(y),op(y,x)) | icon(op(y,x)).  [resolve(65,b,60,a)].

Eliminating hostsve/2
66 hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [clausify(14)].
67 -hostsve(x,y) | hostsv(x,y).  [clausify(14)].
68 -hostsve(x,y) | p(f6(x,y),op(x,y)).  [clausify(14)].
69 -hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)).  [clausify(14)].
70 -hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)).  [clausify(14)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | p(f6(x,y),op(x,y)).  [resolve(66,a,68,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(66,a,69,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(66,a,70,a)].
71 hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).  [clausify(14)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | p(f6(x,y),op(x,y)).  [resolve(71,a,68,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(71,a,69,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(71,a,70,a)].
72 hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [clausify(14)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | p(f6(x,y),op(x,y)).  [resolve(72,a,68,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(72,a,69,a)].
Derived: -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(72,a,70,a)].
73 -hostsvi(x,y) | -hostsve(x,y).  [clausify(15)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(73,b,66,a)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).  [resolve(73,b,71,a)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(73,b,72,a)].
74 hostsvi(x,y) | -hostsv(x,y) | hostsve(x,y).  [clausify(15)].
Derived: hostsvi(x,y) | -hostsv(x,y) | p(f6(x,y),op(x,y)).  [resolve(74,c,68,a)].
Derived: hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)).  [resolve(74,c,69,a)].
Derived: hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)).  [resolve(74,c,70,a)].

Eliminating hostsvi/2
75 hostsvi(x,y) | -hostsv(x,y) | p(f6(x,y),op(x,y)).  [resolve(74,c,68,a)].
76 -hostsvi(x,y) | hostsv(x,y).  [clausify(15)].
77 -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(73,b,66,a)].
78 -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).  [resolve(73,b,71,a)].
79 -hostsvi(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(73,b,72,a)].
Derived: -hostsv(x,y) | p(f6(x,y),op(x,y)) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(75,a,77,a)].
Derived: -hostsv(x,y) | p(f6(x,y),op(x,y)) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).  [resolve(75,a,78,a)].
Derived: -hostsv(x,y) | p(f6(x,y),op(x,y)) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(75,a,79,a)].
80 hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)).  [resolve(74,c,69,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)) | -hostsv(x,y) | -p(u,op(x,y)) | hostsv(x,f7(x,y,u)).  [resolve(80,a,77,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)) | -hostsv(x,y) | -p(u,op(x,y)) | eqdim(intersection(u,r(f7(x,y,u))),u).  [resolve(80,a,78,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)) | -hostsv(x,y) | -p(u,op(x,y)) | -po(r(y),r(f7(x,y,u))) | -cont(intersection(u,r(f7(x,y,u))),op(x,f7(x,y,u))).  [resolve(80,a,79,a)].
81 hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)).  [resolve(74,c,70,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -p(u,op(x,y)) | hostsv(x,f7(x,y,u)).  [resolve(81,a,77,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -p(u,op(x,y)) | eqdim(intersection(u,r(f7(x,y,u))),u).  [resolve(81,a,78,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -p(u,op(x,y)) | -po(r(y),r(f7(x,y,u))) | -cont(intersection(u,r(f7(x,y,u))),op(x,f7(x,y,u))).  [resolve(81,a,79,a)].

Eliminating dk1/2
82 po(x,porespace(y)) | -dk1(z,y) | hostsv(y,f10(x,y,z)) | -hostsv(z,u) | -po(x,r(u)).  [clausify(16)].
83 -po(x,porespace(y)) | dk1(f8(x,y),y).  [clausify(16)].
Derived: po(x,porespace(y)) | hostsv(y,f10(x,y,f8(z,y))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(82,b,83,b)].
84 po(x,porespace(y)) | -dk1(z,y) | po(x,r(f10(x,y,z))) | -hostsv(z,u) | -po(x,r(u)).  [clausify(16)].
Derived: po(x,porespace(y)) | po(x,r(f10(x,y,f8(z,y)))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(84,b,83,b)].
85 zex(porespace(x)) | dk1(f13(x),x).  [clausify(18)].
Derived: zex(porespace(x)) | po(y,porespace(x)) | hostsv(x,f10(y,x,f13(x))) | -hostsv(f13(x),z) | -po(y,r(z)).  [resolve(85,b,82,b)].
Derived: zex(porespace(x)) | po(y,porespace(x)) | po(y,r(f10(y,x,f13(x)))) | -hostsv(f13(x),z) | -po(y,r(z)).  [resolve(85,b,84,b)].
86 zex(voidspace(x)) | dk1(f15(x),x).  [clausify(19)].
Derived: zex(voidspace(x)) | po(y,porespace(x)) | hostsv(x,f10(y,x,f15(x))) | -hostsv(f15(x),z) | -po(y,r(z)).  [resolve(86,b,82,b)].
Derived: zex(voidspace(x)) | po(y,porespace(x)) | po(y,r(f10(y,x,f15(x)))) | -hostsv(f15(x),z) | -po(y,r(z)).  [resolve(86,b,84,b)].

Eliminating hole/1
87 hole(x) | -hostsv(y,x) | -icon(r(y)).  [resolve(26,b,22,a)].
88 -hole(x) | hostsv(f1(x),x).  [resolve(25,b,23,a)].
89 -hole(x) | icon(r(f1(x))).  [resolve(25,b,24,a)].
Derived: -hostsv(x,y) | -icon(r(x)) | hostsv(f1(y),y).  [resolve(87,a,88,a)].
Derived: -hostsv(x,y) | -icon(r(x)) | icon(r(f1(y))).  [resolve(87,a,89,a)].

Eliminating gap/1
90 gap(x) | -hostsv(y,x) | icon(r(y)).  [resolve(31,b,27,a)].
91 -gap(x) | hostsv(f2(x),x).  [resolve(30,b,28,a)].
92 -gap(x) | -icon(r(f2(x))).  [resolve(30,b,29,a)].
Derived: -hostsv(x,y) | icon(r(x)) | hostsv(f2(y),y).  [resolve(90,a,91,a)].
Derived: -hostsv(x,y) | icon(r(x)) | -icon(r(f2(y))).  [resolve(90,a,92,a)].

Eliminating cavity/1
93 cavity(x) | -hostsv(y,x) | covers(r(y),op(y,x)).  [resolve(36,b,32,a)].
94 -cavity(x) | hostsv(f3(x),x).  [resolve(35,b,33,a)].
95 -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(35,b,34,a)].
Derived: -hostsv(x,y) | covers(r(x),op(x,y)) | hostsv(f3(y),y).  [resolve(93,a,94,a)].
Derived: -hostsv(x,y) | covers(r(x),op(x,y)) | -covers(r(f3(y)),op(f3(y),y)).  [resolve(93,a,95,a)].
96 -zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)) | cavity(y).  [resolve(41,a,45,a)].
97 -zex(op(f3(x),x)) | -cavity(x) | hostsv(f3(x),x).  [resolve(46,a,43,a)].
98 -zex(op(f3(x),x)) | -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(46,a,44,a)].
99 zex(op(x,y)) | -hostsv(x,y) | covers(r(x),op(x,y)) | cavity(y).  [resolve(48,a,52,a)].
100 zex(op(f3(x),x)) | -cavity(x) | hostsv(f3(x),x).  [resolve(53,a,50,a)].
101 zex(op(f3(x),x)) | -cavity(x) | -covers(r(f3(x)),op(f3(x),x)).  [resolve(53,a,51,a)].

Eliminating zex/1

Eliminating hol/1
102 hol(x) | -hostsv(y,x) | -covers(r(y),op(y,x)) | -icon(op(y,x)).  [resolve(59,b,54,a)].
103 -hol(x) | hostsv(f4(x),x).  [resolve(58,b,55,a)].
104 -hol(x) | covers(r(f4(x)),op(f4(x),x)).  [resolve(58,b,56,a)].
105 -hol(x) | icon(op(f4(x),x)).  [resolve(58,b,57,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | hostsv(f4(y),y).  [resolve(102,a,103,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | covers(r(f4(y)),op(f4(y),y)).  [resolve(102,a,104,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | icon(op(f4(y),y)).  [resolve(102,a,105,a)].

Eliminating tun/1
106 tun(x) | -hostsv(y,x) | -covers(r(y),op(y,x)) | icon(op(y,x)).  [resolve(65,b,60,a)].
107 -tun(x) | hostsv(f5(x),x).  [resolve(64,b,61,a)].
108 -tun(x) | covers(r(f5(x)),op(f5(x),x)).  [resolve(64,b,62,a)].
109 -tun(x) | -icon(op(f5(x),x)).  [resolve(64,b,63,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | hostsv(f5(y),y).  [resolve(106,a,107,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | covers(r(f5(y)),op(f5(y),y)).  [resolve(106,a,108,a)].
Derived: -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | -icon(op(f5(y),y)).  [resolve(106,a,109,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, icon, hostsv, po, p, eqdim, cont, covers, strongc ]).
Function symbol precedence:  function_order([ cuni, op, intersection, difference, sum, f6, f8, f9, f11, f16, f17, r, porespace, voidspace, conporespace, convoidspace, f1, f2, f3, f4, f5, f7, f10 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).
  % set(binary_resolution).  % (non-Horn)
  % set(positive_inference). % (non-Horn)
    % set(positive_inference) -> assign(literal_selection, max_negative).
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(back_unit_deletion).  % (non-Horn)
    % set(back_unit_deletion) -> set(unit_deletion).

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
110 -hostsv(x,y) | intersection(r(y),difference(cuni,sum(r(x),r(y)))) = op(x,y).  [clausify(5)].
111 -po(x,porespace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(16)].
112 -po(x,porespace(y)) | hostsv(f8(x,y),f9(x,y)).  [clausify(16)].
113 -po(x,porespace(y)) | po(x,r(f9(x,y))).  [clausify(16)].
114 -po(x,voidspace(y)) | po(x,porespace(y)) | hostsv(y,f11(x,y)).  [clausify(17)].
115 -po(x,voidspace(y)) | po(x,porespace(y)) | po(x,r(f11(x,y))).  [clausify(17)].
116 po(x,voidspace(y)) | -po(x,porespace(y)).  [clausify(17)].
117 po(x,voidspace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(17)].
118 -po(x,convoidspace(y)) | po(x,f16(x,y)).  [clausify(20)].
119 -po(x,convoidspace(y)) | icon(f16(x,y)).  [clausify(20)].
120 -po(x,convoidspace(y)) | cont(f16(x,y),voidspace(y)).  [clausify(20)].
121 -po(x,convoidspace(y)) | strongc(f16(x,y),difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].
122 po(x,convoidspace(y)) | -po(x,z) | -icon(z) | -cont(z,voidspace(y)) | -strongc(z,difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].
123 -po(x,conporespace(y)) | po(x,f17(x,y)).  [clausify(21)].
124 -po(x,conporespace(y)) | icon(f17(x,y)).  [clausify(21)].
125 -po(x,conporespace(y)) | cont(f17(x,y),porespace(y)).  [clausify(21)].
126 -po(x,conporespace(y)) | strongc(f17(x,y),difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].
127 po(x,conporespace(y)) | -po(x,z) | -icon(z) | -cont(z,porespace(y)) | -strongc(z,difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].
128 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | p(f6(x,y),op(x,y)).  [resolve(66,a,68,a)].
129 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(66,a,69,a)].
130 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(66,a,70,a)].
131 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | p(f6(x,y),op(x,y)).  [resolve(71,a,68,a)].
132 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(71,a,69,a)].
133 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(71,a,70,a)].
134 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | p(f6(x,y),op(x,y)).  [resolve(72,a,68,a)].
135 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(72,a,69,a)].
136 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(72,a,70,a)].
146 po(x,porespace(y)) | hostsv(y,f10(x,y,f8(z,y))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(82,b,83,b)].
147 po(x,porespace(y)) | po(x,r(f10(x,y,f8(z,y)))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(84,b,83,b)].
148 -hostsv(x,y) | -icon(r(x)) | hostsv(f1(y),y).  [resolve(87,a,88,a)].
149 -hostsv(x,y) | -icon(r(x)) | icon(r(f1(y))).  [resolve(87,a,89,a)].
150 -hostsv(x,y) | icon(r(x)) | hostsv(f2(y),y).  [resolve(90,a,91,a)].
151 -hostsv(x,y) | icon(r(x)) | -icon(r(f2(y))).  [resolve(90,a,92,a)].
152 -hostsv(x,y) | covers(r(x),op(x,y)) | hostsv(f3(y),y).  [resolve(93,a,94,a)].
153 -hostsv(x,y) | covers(r(x),op(x,y)) | -covers(r(f3(y)),op(f3(y),y)).  [resolve(93,a,95,a)].
154 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | hostsv(f4(y),y).  [resolve(102,a,103,a)].
155 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | covers(r(f4(y)),op(f4(y),y)).  [resolve(102,a,104,a)].
156 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | icon(op(f4(y),y)).  [resolve(102,a,105,a)].
157 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | hostsv(f5(y),y).  [resolve(106,a,107,a)].
158 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | covers(r(f5(y)),op(f5(y),y)).  [resolve(106,a,108,a)].
159 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | -icon(op(f5(y),y)).  [resolve(106,a,109,a)].
160 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(129,a,d)].
161 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(130,a,d)].
162 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(132,a,d)].
163 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(133,a,d)].
164 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(135,a,e)].
165 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(136,a,e)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.00 seconds.

given #1 (I,wt=17): 110 -hostsv(x,y) | intersection(r(y),difference(cuni,sum(r(x),r(y)))) = op(x,y).  [clausify(5)].

given #2 (I,wt=11): 111 -po(x,porespace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(16)].

given #3 (I,wt=11): 112 -po(x,porespace(y)) | hostsv(f8(x,y),f9(x,y)).  [clausify(16)].

given #4 (I,wt=10): 113 -po(x,porespace(y)) | po(x,r(f9(x,y))).  [clausify(16)].

given #5 (I,wt=13): 114 -po(x,voidspace(y)) | po(x,porespace(y)) | hostsv(y,f11(x,y)).  [clausify(17)].

given #6 (I,wt=14): 115 -po(x,voidspace(y)) | po(x,porespace(y)) | po(x,r(f11(x,y))).  [clausify(17)].

given #7 (I,wt=8): 116 po(x,voidspace(y)) | -po(x,porespace(y)).  [clausify(17)].

given #8 (I,wt=11): 117 po(x,voidspace(y)) | -hostsv(y,z) | -po(x,r(z)).  [clausify(17)].

given #9 (I,wt=9): 118 -po(x,convoidspace(y)) | po(x,f16(x,y)).  [clausify(20)].

given #10 (I,wt=8): 119 -po(x,convoidspace(y)) | icon(f16(x,y)).  [clausify(20)].

given #11 (I,wt=10): 120 -po(x,convoidspace(y)) | cont(f16(x,y),voidspace(y)).  [clausify(20)].

given #12 (I,wt=15): 121 -po(x,convoidspace(y)) | strongc(f16(x,y),difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].

given #13 (I,wt=22): 122 po(x,convoidspace(y)) | -po(x,z) | -icon(z) | -cont(z,voidspace(y)) | -strongc(z,difference(cuni,sum(r(y),voidspace(y)))).  [clausify(20)].

given #14 (I,wt=9): 123 -po(x,conporespace(y)) | po(x,f17(x,y)).  [clausify(21)].

given #15 (I,wt=8): 124 -po(x,conporespace(y)) | icon(f17(x,y)).  [clausify(21)].

given #16 (I,wt=10): 125 -po(x,conporespace(y)) | cont(f17(x,y),porespace(y)).  [clausify(21)].

given #17 (I,wt=15): 126 -po(x,conporespace(y)) | strongc(f17(x,y),difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].

given #18 (I,wt=22): 127 po(x,conporespace(y)) | -po(x,z) | -icon(z) | -cont(z,porespace(y)) | -strongc(z,difference(cuni,sum(r(y),porespace(y)))).  [clausify(21)].

given #19 (I,wt=21): 128 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | p(f6(x,y),op(x,y)).  [resolve(66,a,68,a)].

given #20 (I,wt=32): 129 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(66,a,69,a)].

given #21 (I,wt=37): 130 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(66,a,70,a)].

given #22 (I,wt=24): 131 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | p(f6(x,y),op(x,y)).  [resolve(71,a,68,a)].

given #23 (I,wt=35): 132 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(71,a,69,a)].

given #24 (I,wt=40): 133 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(71,a,70,a)].

given #25 (I,wt=37): 134 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | p(f6(x,y),op(x,y)).  [resolve(72,a,68,a)].

given #26 (I,wt=48): 135 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | po(r(y),r(u)).  [resolve(72,a,69,a)].

given #27 (I,wt=53): 136 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -eqdim(intersection(f6(x,y),r(u)),f6(x,y)) | cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(72,a,70,a)].

given #28 (I,wt=25): 146 po(x,porespace(y)) | hostsv(y,f10(x,y,f8(z,y))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(82,b,83,b)].

given #29 (I,wt=26): 147 po(x,porespace(y)) | po(x,r(f10(x,y,f8(z,y)))) | -hostsv(f8(z,y),u) | -po(x,r(u)) | -po(z,porespace(y)).  [resolve(84,b,83,b)].

given #30 (I,wt=10): 148 -hostsv(x,y) | -icon(r(x)) | hostsv(f1(y),y).  [resolve(87,a,88,a)].

given #31 (I,wt=10): 149 -hostsv(x,y) | -icon(r(x)) | icon(r(f1(y))).  [resolve(87,a,89,a)].

given #32 (I,wt=10): 150 -hostsv(x,y) | icon(r(x)) | hostsv(f2(y),y).  [resolve(90,a,91,a)].

given #33 (I,wt=10): 151 -hostsv(x,y) | icon(r(x)) | -icon(r(f2(y))).  [resolve(90,a,92,a)].

given #34 (I,wt=13): 152 -hostsv(x,y) | covers(r(x),op(x,y)) | hostsv(f3(y),y).  [resolve(93,a,94,a)].

given #35 (I,wt=17): 153 -hostsv(x,y) | covers(r(x),op(x,y)) | -covers(r(f3(y)),op(f3(y),y)).  [resolve(93,a,95,a)].

given #36 (I,wt=17): 154 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | hostsv(f4(y),y).  [resolve(102,a,103,a)].

given #37 (I,wt=21): 155 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | covers(r(f4(y)),op(f4(y),y)).  [resolve(102,a,104,a)].

given #38 (I,wt=18): 156 -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)) | icon(op(f4(y),y)).  [resolve(102,a,105,a)].

given #39 (I,wt=17): 157 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | hostsv(f5(y),y).  [resolve(106,a,107,a)].

given #40 (I,wt=21): 158 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | covers(r(f5(y)),op(f5(y),y)).  [resolve(106,a,108,a)].

given #41 (I,wt=18): 159 -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)) | -icon(op(f5(y),y)).  [resolve(106,a,109,a)].

given #42 (I,wt=29): 160 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(129,a,d)].

given #43 (I,wt=34): 161 -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(130,a,d)].

given #44 (I,wt=32): 162 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(132,a,d)].

given #45 (I,wt=37): 163 -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(133,a,d)].

given #46 (I,wt=45): 164 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | po(r(y),r(y)).  [factor(135,a,e)].

given #47 (I,wt=50): 165 -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -eqdim(intersection(f6(x,y),r(y)),f6(x,y)) | cont(intersection(f6(x,y),r(y)),op(x,y)).  [factor(136,a,e)].

============================== STATISTICS ============================

Given=47. Generated=56. Kept=47. proofs=0.
Usable=47. Sos=0. Demods=0. Limbo=0, Disabled=146. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=9. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=11. Nonunit_bsub_feature_tests=55.
Megabytes=0.23.
User_CPU=0.00, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

SEARCH FAILED

SEARCH FAILED

Exiting with failure.

------ process 7844 exit (sos_empty) ------

Process 7844 exit (sos_empty) Thu Apr 30 19:40:30 2015
============================= C:\Reasoning\prover9-bin\prover9 ================================
execution finished: Thu Apr 30 19:40:31 2015
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\prover9 -t600 -f E:\COLORE\multidim_space_voids\conversions\voids_extended.p9"
Input read from 
============================ end of footer ===========================
