============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 1624 was started by torsten on torsten-laptop,
Fri Aug 29 13:51:10 2014
The command was "/cygdrive/c/Reasoning/prover9-bin/mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_spch\conversions\spch.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_voids\conversions\voids.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_voids\conversions\voids_extended.p9 E:\COLORE-local-testbed\multidim_space_space\conversions\space.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\connected.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\icon.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_updown.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_ped\conversions\ped.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_down.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9


formulas(sos).
(all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))).
(all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9


formulas(sos).
(all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_spch\conversions\spch.p9


formulas(sos).
(all x11 s(ch(x11))).
(all x21 ch(x21) = ch(r(x21))).
(all x31 (-zex(x31) -> icon(ch(x31)))).
(all x41 ch(x41) = ch(ch(x41))).
(all x51 (-zex(x51) -> cont(r(x51),ch(x51)))).
(all x61 (-zex(x61) & -closed(r(x61)) -> tcont(r(x61),ch(x61)))).
(all x72 all x71 (cont(r(x72),r(x71)) -> cont(ch(x72),ch(x71)))).
(all x82 all x81 (ch(x82) = ch(x81) & -zex(x82) -> c(r(x82),r(x81)))).
(all x92 all x91 (maxdim(r(x92)) & maxdim(r(x91)) & r(x92) = ch(x92) & r(x91) = ch(x91) -> intersection(ch(x92),ch(x91)) = ch(intersection(ch(x92),ch(x91))))).
(all x102 all x101 (icont(r(x102),r(x101)) & -closed(difference(r(x101),r(x102))) -> difference(r(x101),r(x102)) != ch(difference(r(x101),r(x102))))).
(all x112 all x111 (icont(r(x112),r(x111)) & maxdim(r(x112)) & maxdim(r(x111)) -> cont(r(x112),ch(difference(r(x111),r(x112)))))).
(all x122 all x121 (-zex(x122) | -zex(x121) -> (exists x123 exists x124 (tsum(r(x122),r(x121),r(x123)) & tsum(ch(x122),ch(x121),r(x124)) & cont(x124,ch(x123)))))).
(all x132 all x131 all x133 all x135 all x134 (eqdim(x132,x131) & eqdim(x131,x133) & sc(x132,x131) & sc(x131,x133) & -c(x132,x133) & tsum(x132,x131,x135) & tsum(x131,x133,x134) & x135 = ch(x135) & x134 = ch(x134) -> x131 = ch(x131))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))).
(all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))).
(all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9


formulas(sos).
(all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_voids\conversions\voids.p9


formulas(sos).
(all x12 all x11 (vs(x12,x11) <-> ped(x12) & s(x11) & cont(x11,ch(x12)) & -po(x11,r(x12)))).
(all x22 all x21 (simplev(x21) <-> icon(r(x21)) & (exists x22 hostsv(x22,x21)))).
(all x32 all x31 (complexv(x31) <-> -icon(r(x31)) & (exists x32 hostsv(x32,x31)))).
(all x41 (v(x41) <-> simplev(x41) | complexv(x41))).
(all x52 all x51 (hostsv(x52,x51) -> hosts(x52,x51) & vs(x52,r(x51)) & strongc(r(x52),r(x51)))).
(all x62 all x61 all x63 (hostsv(x62,x61) & complexv(x61) & po(r(x63),r(x61)) -> (exists x64 (hostsv(x62,x64) & simplev(x64) & po(r(x63),r(x64)))))).
(all x72 all x71 (hosts(x72,x71) & v(x71) -> -v(x72))).
(all x82 all x81 (hostsv(x82,x81) & rpf(x82) -> (exists x83 (hosts(x83,x82) & -f(x83) & hostsv(x83,x81))))).
(all x92 all x91 (hostsv(x92,x91) & -f(x92) -> (exists x93 (hosts(x92,x93) & rpf(x93) & hostsv(x93,x91))))).
(all x102 all x101 all x103 (hostsv(x102,x101) & hostsv(x102,x103) & po(r(x101),r(x103)) -> cont(r(x101),r(x103)) | cont(r(x103),r(x101)))).
(all x112 all x111 all x114 (hostsv(x112,x111) & p(r(x112),r(x111)) & ped(x111) & -dpf(x111) & -cont(r(x114),r(x111)) -> (exists x113 (cont(difference(r(x114),r(x111)),r(x113)) & hostsv(x111,x113))))).
(all x122 all x121 all x124 (hostsv(x122,x124) & p(r(x121),r(x122)) & ped(x121) & -dpf(x121) & po(r(x124),ch(x121)) -> (exists x123 (r(x123) = intersection(r(x124),ch(x121)) & hostsv(x121,x123))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9


formulas(sos).
(all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_voids\conversions\voids_extended.p9


formulas(sos).
(all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))).
(all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))).
(all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))).
(all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))).
(all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))).
(all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))).
(all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))).
(all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))).
(all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))).
(all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))).
(all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))).
(all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))).
(all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))).
(all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))).
(all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))).
(all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))).
(all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))).
(all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))).
(all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))).
(all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))).
(all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_space\conversions\space.p9


formulas(sos).
(all x11 (-ped(x11) | -s(x11))).
(all x21 s(r(x21))).
(all x31 (s(x31) <-> x31 = r(x31))).
(all x42 all x41 (cont(x42,x41) -> s(x42) & s(x41))).
(all x52 all x51 (lt(x52,x51) -> s(x52) & s(x51))).
(all x61 (zex(x61) -> s(x61))).
(all x72 all x71 (bcont(x72,x71) -> s(x72) & s(x71))).
(all x81 (ped(x81) -> maxdim(r(x81)))).
(all x92 all x91 (dk1(x92,x91) -> p(r(x92),r(x91)))).
(all x102 all x101 (hosts(x102,x101) -> (rpf(x101) <-> p(r(x102),r(x101))))).
(all x112 all x111 all x113 all x114 (hosts(x112,x111) & rpf(x111) & dk1(x113,x112) & dk1(x114,x111) -> p(r(x114),r(x113)))).
(all x122 all x121 (hosts(x122,x121) -> (dpf(x121) <-> -po(r(x122),r(x121))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9


formulas(sos).
(all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x12 all x11 (leq(x12,x11) -> s(x12))).
(all x22 all x21 (leq(x22,x21) -> s(x21))).
(all x31 (zex(x31) -> s(x31))).
(all x41 (s(x41) -> leq(x41,x41))).
(all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))).
(all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)).
(all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\connected.p9


formulas(sos).
(all x12 (con(x12) <-> s(x12) & (all x11 (pp(x11,x12) -> sc(x11,difference(x12,x11)))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9


formulas(sos).
(all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9


formulas(sos).
(all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9


formulas(sos).
(all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> s(x12) & -(exists x11 (s(x11) & lt(x12,x11))))).
(all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & lt(x21,x22) -> zex(x21))))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\icon.p9


formulas(sos).
(all x12 (icon(x12) <-> con(x12) & (all x11 (pp(x11,x12) -> covers(x12,intersection(x11,difference(x12,x11))))))).
(all x22 (ucon(x22) <-> con(x22) & (all x21 all x23 (pp(x21,x22) & cont(x23,x21) & cont(x23,difference(x22,x21)) -> cont(x23,intersection(x21,difference(x22,x21))))))).
(all x32 all x31 (strongc(x32,x31) <-> sc(x32,x31) & eqdim(x32,x31) & covers(x32,intersection(x32,x31)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_updown.p9


formulas(sos).
(all x12 all x11 all x13 all x14 (tsum(x12,x11,x13) & tsum(x12,x11,x14) -> s(x12) & s(x11) & s(x13) & x14 = x13)).
(all x22 all x21 all x23 (tsum(x22,x21,x23) -> tsum(x21,x22,x23))).
(all x32 all x31 (lt(x32,x31) -> tsum(x32,x31,x31))).
(all x42 all x41 all x43 all x44 (tsum(x42,x41,x43) & leq(x42,x41) & cont(x44,x41) -> cont(x44,x43))).
(all x52 all x51 all x53 all x54 (tsum(x52,x51,x53) & cont(x54,x53) & -cont(x54,x52) -> cont(difference(x54,x52),x51))).
(all x62 all x61 all x63 (s(x63) & eqdim(x62,x61) & (all x64 (po(x64,x63) <-> po(x64,x62) | po(x64,x61))) -> tsum(x62,x61,x63))).
(all x72 all x71 (eqdim(x72,x71) & (all x73 (cont(x73,x72) & cont(x73,x71) & min(x73) -> (exists x74 exists x75 (p(x74,x72) & p(x75,x71) & bcont(x73,x74) & bcont(x73,x75))))) -> (exists x73 tsum(x72,x71,x73)))).
(all x81 (s(x81) & -zex(x81) -> cont(x81,cuni))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9


formulas(sos).
(all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_ped\conversions\ped.p9


formulas(sos).
(all x11 (ped(x11) -> pob(x11) | m(x11) | f(x11))).
(all x21 (pob(x21) -> ped(x21))).
(all x31 (m(x31) -> ped(x31))).
(all x41 (f(x41) -> ped(x41))).
(all x51 (pob(x51) -> -m(x51))).
(all x61 (pob(x61) -> -f(x61))).
(all x71 (m(x71) -> -f(x71))).
(all x81 (napo(x81) -> pob(x81))).
(all x92 all x91 (hosts(x92,x91) -> ped(x92) & f(x91))).
(all x102 (f(x102) <-> (exists x101 hosts(x101,x102)))).
(all x112 all x111 (hosts(x112,x111) -> -hosts(x111,x112))).
(all x121 (f(x121) <-> rpf(x121) | dpf(x121))).
(all x131 (-rpf(x131) | -dpf(x131))).
(all x142 all x141 (dk1(x142,x141) -> m(x142))).
(all x152 all x151 (dk1(x152,x151) -> pob(x151) | rpf(x151))).
(all x162 all x161 all x163 (dk1(x162,x161) & dk1(x163,x161) -> x162 = x163)).
(all x171 (pob(x171) | rpf(x171) -> (exists x172 dk1(x172,x171)))).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9


formulas(sos).
(all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))).
(all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)).
(all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))).
(all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))).
(all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)).
end_of_list.

% Reading from file E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_down.p9


formulas(sos).
(all x12 all x11 (s(x12) & s(x11) & -c(x12,x11) <-> zex(intersection(x12,x11)))).
(all x22 all x21 (s(x22) & s(x21) & -zex(intersection(x22,x21)) -> cont(intersection(x22,x21),x22))).
(all x32 all x31 all x33 (cont(x33,x32) & cont(x33,x31) -> leq(x33,intersection(x32,x31)))).
(all x42 all x41 all x43 (cont(x43,x42) & cont(x43,x41) & eqdim(x43,intersection(x42,x41)) <-> p(x43,intersection(x42,x41)))).
(all x52 all x51 (s(x52) & s(x51) & -zex(difference(x52,x51)) -> eqdim(x52,difference(x52,x51)))).
(all x62 all x61 (lt(x61,x62) -> x62 = difference(x62,x61))).
(all x72 all x71 all x73 (leq(x72,x71) & cont(x73,x72) & lt(intersection(x73,x71),x73) -> cont(x73,difference(x72,x71)))).
(all x82 all x81 all x83 (leq(x82,x81) & cont(x83,difference(x82,x81)) -> cont(x83,x82))).
(all x92 all x91 all x93 (leq(x92,x91) & p(x93,difference(x92,x91)) -> lt(intersection(x93,x91),x93))).
(all x102 all x101 (zex(difference(x102,x101)) <-> zex(x102) | cont(x102,x101))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 (max(x12) <-> s(x12) & -zex(x12) & (all x11 -pp(x12,x11)))) # label(non_clause).  [assumption].
2 (all x22 (min(x22) <-> s(x22) & -zex(x22) & (all x21 -pp(x21,x22)))) # label(non_clause).  [assumption].
3 (all x12 all x11 (covers(x12,x11) <-> lt(x11,x12) & (all x13 (s(x13) -> -(lt(x11,x13) & lt(x13,x12)))))) # label(non_clause).  [assumption].
4 (all x11 s(ch(x11))) # label(non_clause).  [assumption].
5 (all x21 ch(x21) = ch(r(x21))) # label(non_clause).  [assumption].
6 (all x31 (-zex(x31) -> icon(ch(x31)))) # label(non_clause).  [assumption].
7 (all x41 ch(x41) = ch(ch(x41))) # label(non_clause).  [assumption].
8 (all x51 (-zex(x51) -> cont(r(x51),ch(x51)))) # label(non_clause).  [assumption].
9 (all x61 (-zex(x61) & -closed(r(x61)) -> tcont(r(x61),ch(x61)))) # label(non_clause).  [assumption].
10 (all x72 all x71 (cont(r(x72),r(x71)) -> cont(ch(x72),ch(x71)))) # label(non_clause).  [assumption].
11 (all x82 all x81 (ch(x82) = ch(x81) & -zex(x82) -> c(r(x82),r(x81)))) # label(non_clause).  [assumption].
12 (all x92 all x91 (maxdim(r(x92)) & maxdim(r(x91)) & r(x92) = ch(x92) & r(x91) = ch(x91) -> intersection(ch(x92),ch(x91)) = ch(intersection(ch(x92),ch(x91))))) # label(non_clause).  [assumption].
13 (all x102 all x101 (icont(r(x102),r(x101)) & -closed(difference(r(x101),r(x102))) -> difference(r(x101),r(x102)) != ch(difference(r(x101),r(x102))))) # label(non_clause).  [assumption].
14 (all x112 all x111 (icont(r(x112),r(x111)) & maxdim(r(x112)) & maxdim(r(x111)) -> cont(r(x112),ch(difference(r(x111),r(x112)))))) # label(non_clause).  [assumption].
15 (all x122 all x121 (-zex(x122) | -zex(x121) -> (exists x123 exists x124 (tsum(r(x122),r(x121),r(x123)) & tsum(ch(x122),ch(x121),r(x124)) & cont(x124,ch(x123)))))) # label(non_clause).  [assumption].
16 (all x132 all x131 all x133 all x135 all x134 (eqdim(x132,x131) & eqdim(x131,x133) & sc(x132,x131) & sc(x131,x133) & -c(x132,x133) & tsum(x132,x131,x135) & tsum(x131,x133,x134) & x135 = ch(x135) & x134 = ch(x134) -> x131 = ch(x131))) # label(non_clause).  [assumption].
17 (all x12 all x11 (gt(x12,x11) <-> lt(x11,x12))) # label(non_clause).  [assumption].
18 (all x22 all x21 (geq(x22,x21) <-> leq(x21,x22))) # label(non_clause).  [assumption].
19 (all x32 all x31 (lt(x32,x31) <-> leq(x32,x31) & -eqdim(x32,x31))) # label(non_clause).  [assumption].
20 (all x12 all x11 (pp(x12,x11) <-> p(x12,x11) & x12 != x11)) # label(non_clause).  [assumption].
21 (all x12 all x11 (vs(x12,x11) <-> ped(x12) & s(x11) & cont(x11,ch(x12)) & -po(x11,r(x12)))) # label(non_clause).  [assumption].
22 (all x22 all x21 (simplev(x21) <-> icon(r(x21)) & (exists x22 hostsv(x22,x21)))) # label(non_clause).  [assumption].
23 (all x32 all x31 (complexv(x31) <-> -icon(r(x31)) & (exists x32 hostsv(x32,x31)))) # label(non_clause).  [assumption].
24 (all x41 (v(x41) <-> simplev(x41) | complexv(x41))) # label(non_clause).  [assumption].
25 (all x52 all x51 (hostsv(x52,x51) -> hosts(x52,x51) & vs(x52,r(x51)) & strongc(r(x52),r(x51)))) # label(non_clause).  [assumption].
26 (all x62 all x61 all x63 (hostsv(x62,x61) & complexv(x61) & po(r(x63),r(x61)) -> (exists x64 (hostsv(x62,x64) & simplev(x64) & po(r(x63),r(x64)))))) # label(non_clause).  [assumption].
27 (all x72 all x71 (hosts(x72,x71) & v(x71) -> -v(x72))) # label(non_clause).  [assumption].
28 (all x82 all x81 (hostsv(x82,x81) & rpf(x82) -> (exists x83 (hosts(x83,x82) & -f(x83) & hostsv(x83,x81))))) # label(non_clause).  [assumption].
29 (all x92 all x91 (hostsv(x92,x91) & -f(x92) -> (exists x93 (hosts(x92,x93) & rpf(x93) & hostsv(x93,x91))))) # label(non_clause).  [assumption].
30 (all x102 all x101 all x103 (hostsv(x102,x101) & hostsv(x102,x103) & po(r(x101),r(x103)) -> cont(r(x101),r(x103)) | cont(r(x103),r(x101)))) # label(non_clause).  [assumption].
31 (all x112 all x111 all x114 (hostsv(x112,x111) & p(r(x112),r(x111)) & ped(x111) & -dpf(x111) & -cont(r(x114),r(x111)) -> (exists x113 (cont(difference(r(x114),r(x111)),r(x113)) & hostsv(x111,x113))))) # label(non_clause).  [assumption].
32 (all x122 all x121 all x124 (hostsv(x122,x124) & p(r(x121),r(x122)) & ped(x121) & -dpf(x121) & po(r(x124),ch(x121)) -> (exists x123 (r(x123) = intersection(r(x124),ch(x121)) & hostsv(x121,x123))))) # label(non_clause).  [assumption].
33 (all x12 all x11 (cont(x12,x11) -> lt(x12,x11) | eqdim(x12,x11))) # label(non_clause).  [assumption].
34 (all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))) # label(non_clause).  [assumption].
35 (all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))) # label(non_clause).  [assumption].
36 (all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))) # label(non_clause).  [assumption].
37 (all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))) # label(non_clause).  [assumption].
38 (all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))) # label(non_clause).  [assumption].
39 (all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))) # label(non_clause).  [assumption].
40 (all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))) # label(non_clause).  [assumption].
41 (all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))) # label(non_clause).  [assumption].
42 (all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))) # label(non_clause).  [assumption].
43 (all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))) # label(non_clause).  [assumption].
44 (all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))) # label(non_clause).  [assumption].
45 (all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))) # label(non_clause).  [assumption].
46 (all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))) # label(non_clause).  [assumption].
47 (all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))) # label(non_clause).  [assumption].
48 (all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))) # label(non_clause).  [assumption].
49 (all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))) # label(non_clause).  [assumption].
50 (all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))) # label(non_clause).  [assumption].
51 (all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))) # label(non_clause).  [assumption].
52 (all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))) # label(non_clause).  [assumption].
53 (all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))) # label(non_clause).  [assumption].
54 (all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))) # label(non_clause).  [assumption].
55 (all x11 (-ped(x11) | -s(x11))) # label(non_clause).  [assumption].
56 (all x21 s(r(x21))) # label(non_clause).  [assumption].
57 (all x31 (s(x31) <-> x31 = r(x31))) # label(non_clause).  [assumption].
58 (all x42 all x41 (cont(x42,x41) -> s(x42) & s(x41))) # label(non_clause).  [assumption].
59 (all x52 all x51 (lt(x52,x51) -> s(x52) & s(x51))) # label(non_clause).  [assumption].
60 (all x61 (zex(x61) -> s(x61))) # label(non_clause).  [assumption].
61 (all x72 all x71 (bcont(x72,x71) -> s(x72) & s(x71))) # label(non_clause).  [assumption].
62 (all x81 (ped(x81) -> maxdim(r(x81)))) # label(non_clause).  [assumption].
63 (all x92 all x91 (dk1(x92,x91) -> p(r(x92),r(x91)))) # label(non_clause).  [assumption].
64 (all x102 all x101 (hosts(x102,x101) -> (rpf(x101) <-> p(r(x102),r(x101))))) # label(non_clause).  [assumption].
65 (all x112 all x111 all x113 all x114 (hosts(x112,x111) & rpf(x111) & dk1(x113,x112) & dk1(x114,x111) -> p(r(x114),r(x113)))) # label(non_clause).  [assumption].
66 (all x122 all x121 (hosts(x122,x121) -> (dpf(x121) <-> -po(r(x122),r(x121))))) # label(non_clause).  [assumption].
67 (all x12 all x11 (po(x12,x11) <-> (exists x13 (p(x13,x12) & p(x13,x11))))) # label(non_clause).  [assumption].
68 (all x12 all x11 (leq(x12,x11) -> s(x12))) # label(non_clause).  [assumption].
69 (all x22 all x21 (leq(x22,x21) -> s(x21))) # label(non_clause).  [assumption].
70 (all x31 (zex(x31) -> s(x31))) # label(non_clause).  [assumption].
71 (all x41 (s(x41) -> leq(x41,x41))) # label(non_clause).  [assumption].
72 (all x52 all x51 all x53 (leq(x52,x51) & leq(x51,x53) -> leq(x52,x53))) # label(non_clause).  [assumption].
73 (all x62 all x61 (zex(x62) & zex(x61) -> x62 = x61)) # label(non_clause).  [assumption].
74 (all x72 all x71 (zex(x72) & s(x71) -> leq(x72,x71))) # label(non_clause).  [assumption].
75 (all x12 (con(x12) <-> s(x12) & (all x11 (pp(x11,x12) -> sc(x11,difference(x12,x11)))))) # label(non_clause).  [assumption].
76 (all x12 all x11 (c(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))))) # label(non_clause).  [assumption].
77 (all x12 all x11 (sc(x12,x11) <-> (exists x13 (cont(x13,x12) & cont(x13,x11))) & (all x13 (cont(x13,x12) & cont(x13,x11) -> lt(x13,x12) & lt(x13,x11))))) # label(non_clause).  [assumption].
78 (all x12 all x11 (inc(x12,x11) <-> (exists x13 (lt(x13,x12) & cont(x13,x12) & p(x13,x11))) | (exists x13 (lt(x13,x11) & cont(x13,x11) & p(x13,x12))))) # label(non_clause).  [assumption].
79 (all x12 (maxdim(x12) <-> s(x12) & -(exists x11 (s(x11) & lt(x12,x11))))) # label(non_clause).  [assumption].
80 (all x22 (mindim(x22) <-> s(x22) & -zex(x22) & (all x21 (s(x21) & lt(x21,x22) -> zex(x21))))) # label(non_clause).  [assumption].
81 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
82 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
83 (all x12 (icon(x12) <-> con(x12) & (all x11 (pp(x11,x12) -> covers(x12,intersection(x11,difference(x12,x11))))))) # label(non_clause).  [assumption].
84 (all x22 (ucon(x22) <-> con(x22) & (all x21 all x23 (pp(x21,x22) & cont(x23,x21) & cont(x23,difference(x22,x21)) -> cont(x23,intersection(x21,difference(x22,x21))))))) # label(non_clause).  [assumption].
85 (all x32 all x31 (strongc(x32,x31) <-> sc(x32,x31) & eqdim(x32,x31) & covers(x32,intersection(x32,x31)))) # label(non_clause).  [assumption].
86 (all x12 all x11 all x13 all x14 (tsum(x12,x11,x13) & tsum(x12,x11,x14) -> s(x12) & s(x11) & s(x13) & x14 = x13)) # label(non_clause).  [assumption].
87 (all x22 all x21 all x23 (tsum(x22,x21,x23) -> tsum(x21,x22,x23))) # label(non_clause).  [assumption].
88 (all x32 all x31 (lt(x32,x31) -> tsum(x32,x31,x31))) # label(non_clause).  [assumption].
89 (all x42 all x41 all x43 all x44 (tsum(x42,x41,x43) & leq(x42,x41) & cont(x44,x41) -> cont(x44,x43))) # label(non_clause).  [assumption].
90 (all x52 all x51 all x53 all x54 (tsum(x52,x51,x53) & cont(x54,x53) & -cont(x54,x52) -> cont(difference(x54,x52),x51))) # label(non_clause).  [assumption].
91 (all x62 all x61 all x63 (s(x63) & eqdim(x62,x61) & (all x64 (po(x64,x63) <-> po(x64,x62) | po(x64,x61))) -> tsum(x62,x61,x63))) # label(non_clause).  [assumption].
92 (all x72 all x71 (eqdim(x72,x71) & (all x73 (cont(x73,x72) & cont(x73,x71) & min(x73) -> (exists x74 exists x75 (p(x74,x72) & p(x75,x71) & bcont(x73,x74) & bcont(x73,x75))))) -> (exists x73 tsum(x72,x71,x73)))) # label(non_clause).  [assumption].
93 (all x81 (s(x81) & -zex(x81) -> cont(x81,cuni))) # label(non_clause).  [assumption].
94 (all x12 all x11 (p(x12,x11) <-> cont(x12,x11) & eqdim(x12,x11))) # label(non_clause).  [assumption].
95 (all x11 (ped(x11) -> pob(x11) | m(x11) | f(x11))) # label(non_clause).  [assumption].
96 (all x21 (pob(x21) -> ped(x21))) # label(non_clause).  [assumption].
97 (all x31 (m(x31) -> ped(x31))) # label(non_clause).  [assumption].
98 (all x41 (f(x41) -> ped(x41))) # label(non_clause).  [assumption].
99 (all x51 (pob(x51) -> -m(x51))) # label(non_clause).  [assumption].
100 (all x61 (pob(x61) -> -f(x61))) # label(non_clause).  [assumption].
101 (all x71 (m(x71) -> -f(x71))) # label(non_clause).  [assumption].
102 (all x81 (napo(x81) -> pob(x81))) # label(non_clause).  [assumption].
103 (all x92 all x91 (hosts(x92,x91) -> ped(x92) & f(x91))) # label(non_clause).  [assumption].
104 (all x102 (f(x102) <-> (exists x101 hosts(x101,x102)))) # label(non_clause).  [assumption].
105 (all x112 all x111 (hosts(x112,x111) -> -hosts(x111,x112))) # label(non_clause).  [assumption].
106 (all x121 (f(x121) <-> rpf(x121) | dpf(x121))) # label(non_clause).  [assumption].
107 (all x131 (-rpf(x131) | -dpf(x131))) # label(non_clause).  [assumption].
108 (all x142 all x141 (dk1(x142,x141) -> m(x142))) # label(non_clause).  [assumption].
109 (all x152 all x151 (dk1(x152,x151) -> pob(x151) | rpf(x151))) # label(non_clause).  [assumption].
110 (all x162 all x161 all x163 (dk1(x162,x161) & dk1(x163,x161) -> x162 = x163)) # label(non_clause).  [assumption].
111 (all x171 (pob(x171) | rpf(x171) -> (exists x172 dk1(x172,x171)))) # label(non_clause).  [assumption].
112 (all x11 (s(x11) & -zex(x11) <-> cont(x11,x11))) # label(non_clause).  [assumption].
113 (all x22 all x21 (cont(x22,x21) & cont(x21,x22) -> x22 = x21)) # label(non_clause).  [assumption].
114 (all x32 all x31 all x33 (cont(x32,x31) & cont(x31,x33) -> cont(x32,x33))) # label(non_clause).  [assumption].
115 (all x42 all x41 (zex(x42) -> s(x42) & -cont(x41,x42) & -cont(x42,x41))) # label(non_clause).  [assumption].
116 (all x52 all x51 (zex(x52) & zex(x51) -> x52 = x51)) # label(non_clause).  [assumption].
117 (all x12 all x11 (s(x12) & s(x11) & -c(x12,x11) <-> zex(intersection(x12,x11)))) # label(non_clause).  [assumption].
118 (all x22 all x21 (s(x22) & s(x21) & -zex(intersection(x22,x21)) -> cont(intersection(x22,x21),x22))) # label(non_clause).  [assumption].
119 (all x32 all x31 all x33 (cont(x33,x32) & cont(x33,x31) -> leq(x33,intersection(x32,x31)))) # label(non_clause).  [assumption].
120 (all x42 all x41 all x43 (cont(x43,x42) & cont(x43,x41) & eqdim(x43,intersection(x42,x41)) <-> p(x43,intersection(x42,x41)))) # label(non_clause).  [assumption].
121 (all x52 all x51 (s(x52) & s(x51) & -zex(difference(x52,x51)) -> eqdim(x52,difference(x52,x51)))) # label(non_clause).  [assumption].
122 (all x62 all x61 (lt(x61,x62) -> x62 = difference(x62,x61))) # label(non_clause).  [assumption].
123 (all x72 all x71 all x73 (leq(x72,x71) & cont(x73,x72) & lt(intersection(x73,x71),x73) -> cont(x73,difference(x72,x71)))) # label(non_clause).  [assumption].
124 (all x82 all x81 all x83 (leq(x82,x81) & cont(x83,difference(x82,x81)) -> cont(x83,x82))) # label(non_clause).  [assumption].
125 (all x92 all x91 all x93 (leq(x92,x91) & p(x93,difference(x92,x91)) -> lt(intersection(x93,x91),x93))) # label(non_clause).  [assumption].
126 (all x102 all x101 (zex(difference(x102,x101)) <-> zex(x102) | cont(x102,x101))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-max(x) | s(x).
-max(x) | -zex(x).
-max(x) | -pp(x,y).
max(x) | -s(x) | zex(x) | pp(x,f1(x)).
-min(x) | s(x).
-min(x) | -zex(x).
-min(x) | -pp(y,x).
min(x) | -s(x) | zex(x) | pp(f2(x),x).
-covers(x,y) | lt(y,x).
-covers(x,y) | -s(z) | -lt(y,z) | -lt(z,x).
covers(x,y) | -lt(y,x) | s(f3(x,y)).
covers(x,y) | -lt(y,x) | lt(y,f3(x,y)).
covers(x,y) | -lt(y,x) | lt(f3(x,y),x).
s(ch(x)).
ch(r(x)) = ch(x).
zex(x) | icon(ch(x)).
ch(ch(x)) = ch(x).
zex(x) | cont(r(x),ch(x)).
zex(x) | closed(r(x)) | tcont(r(x),ch(x)).
-cont(r(x),r(y)) | cont(ch(x),ch(y)).
ch(x) != ch(y) | zex(y) | c(r(y),r(x)).
-maxdim(r(x)) | -maxdim(r(y)) | r(x) != ch(x) | r(y) != ch(y) | intersection(ch(x),ch(y)) = ch(intersection(ch(x),ch(y))).
-icont(r(x),r(y)) | closed(difference(r(y),r(x))) | difference(r(y),r(x)) != ch(difference(r(y),r(x))).
-icont(r(x),r(y)) | -maxdim(r(x)) | -maxdim(r(y)) | cont(r(x),ch(difference(r(y),r(x)))).
zex(x) | tsum(r(x),r(y),r(f4(x,y))).
zex(x) | tsum(ch(x),ch(y),r(f5(x,y))).
zex(x) | cont(f5(x,y),ch(f4(x,y))).
zex(x) | tsum(r(y),r(x),r(f4(y,x))).
zex(x) | tsum(ch(y),ch(x),r(f5(y,x))).
zex(x) | cont(f5(y,x),ch(f4(y,x))).
-eqdim(x,y) | -eqdim(y,z) | -sc(x,y) | -sc(y,z) | c(x,z) | -tsum(x,y,u) | -tsum(y,z,w) | ch(u) != u | ch(w) != w | ch(y) = y.
-gt(x,y) | lt(y,x).
gt(x,y) | -lt(y,x).
-geq(x,y) | leq(y,x).
geq(x,y) | -leq(y,x).
-lt(x,y) | leq(x,y).
-lt(x,y) | -eqdim(x,y).
lt(x,y) | -leq(x,y) | eqdim(x,y).
-pp(x,y) | p(x,y).
-pp(x,y) | y != x.
pp(x,y) | -p(x,y) | y = x.
-vs(x,y) | ped(x).
-vs(x,y) | s(y).
-vs(x,y) | cont(y,ch(x)).
-vs(x,y) | -po(y,r(x)).
vs(x,y) | -ped(x) | -s(y) | -cont(y,ch(x)) | po(y,r(x)).
-simplev(x) | icon(r(x)).
-simplev(x) | hostsv(f6(y,x),x).
simplev(x) | -icon(r(x)) | -hostsv(y,x).
-complexv(x) | -icon(r(x)).
-complexv(x) | hostsv(f7(y,x),x).
complexv(x) | icon(r(x)) | -hostsv(y,x).
-v(x) | simplev(x) | complexv(x).
v(x) | -simplev(x).
v(x) | -complexv(x).
-hostsv(x,y) | hosts(x,y).
-hostsv(x,y) | vs(x,r(y)).
-hostsv(x,y) | strongc(r(x),r(y)).
-hostsv(x,y) | -complexv(y) | -po(r(z),r(y)) | hostsv(x,f8(x,y,z)).
-hostsv(x,y) | -complexv(y) | -po(r(z),r(y)) | simplev(f8(x,y,z)).
-hostsv(x,y) | -complexv(y) | -po(r(z),r(y)) | po(r(z),r(f8(x,y,z))).
-hosts(x,y) | -v(y) | -v(x).
-hostsv(x,y) | -rpf(x) | hosts(f9(x,y),x).
-hostsv(x,y) | -rpf(x) | -f(f9(x,y)).
-hostsv(x,y) | -rpf(x) | hostsv(f9(x,y),y).
-hostsv(x,y) | f(x) | hosts(x,f10(x,y)).
-hostsv(x,y) | f(x) | rpf(f10(x,y)).
-hostsv(x,y) | f(x) | hostsv(f10(x,y),y).
-hostsv(x,y) | -hostsv(x,z) | -po(r(y),r(z)) | cont(r(y),r(z)) | cont(r(z),r(y)).
-hostsv(x,y) | -p(r(x),r(y)) | -ped(y) | dpf(y) | cont(r(z),r(y)) | cont(difference(r(z),r(y)),r(f11(x,y,z))).
-hostsv(x,y) | -p(r(x),r(y)) | -ped(y) | dpf(y) | cont(r(z),r(y)) | hostsv(y,f11(x,y,z)).
-hostsv(x,y) | -p(r(z),r(x)) | -ped(z) | dpf(z) | -po(r(y),ch(z)) | intersection(r(y),ch(z)) = r(f12(x,z,y)).
-hostsv(x,y) | -p(r(z),r(x)) | -ped(z) | dpf(z) | -po(r(y),ch(z)) | hostsv(z,f12(x,z,y)).
-cont(x,y) | lt(x,y) | eqdim(x,y).
-hostsh(x,y) | hostsv(x,y).
-hostsh(x,y) | icon(r(x)).
hostsh(x,y) | -hostsv(x,y) | -icon(r(x)).
-hostsg(x,y) | hostsv(x,y).
-hostsg(x,y) | -icon(r(x)).
hostsg(x,y) | -hostsv(x,y) | icon(r(x)).
-hole(x) | hostsh(f13(x),x).
hole(x) | -hostsh(y,x).
-gap(x) | hostsg(f14(x),x).
gap(x) | -hostsg(y,x).
-hostsv(x,y) | op(x,y) = intersection(r(y),difference(cuni,sum(r(x),r(y)))).
-hostscavity(x,y) | hostsv(x,y).
-hostscavity(x,y) | -covers(r(x),op(x,y)).
hostscavity(x,y) | -hostsv(x,y) | covers(r(x),op(x,y)).
-cavity(x) | hostscavity(f15(x),x).
cavity(x) | -hostscavity(y,x).
-hostscavityi(x,y) | hostscavity(x,y).
-hostscavityi(x,y) | zex(op(x,y)).
hostscavityi(x,y) | -hostscavity(x,y) | -zex(op(x,y)).
-hostscavityt(x,y) | hostscavity(x,y).
-hostscavityt(x,y) | -zex(op(x,y)).
hostscavityt(x,y) | -hostscavity(x,y) | zex(op(x,y)).
-hostshollow(x,y) | hostsv(x,y).
-hostshollow(x,y) | covers(r(x),op(x,y)).
-hostshollow(x,y) | icon(op(x,y)).
hostshollow(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)).
-hol(x) | hostshollow(f16(x),x).
hol(x) | -hostshollow(y,x).
-hoststunnel(x,y) | hostsv(x,y).
-hoststunnel(x,y) | covers(r(x),op(x,y)).
-hoststunnel(x,y) | -icon(op(x,y)).
hoststunnel(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)).
-tun(x) | hoststunnel(f17(x),x).
tun(x) | -hoststunnel(y,x).
-hostsve(x,y) | hostsv(x,y).
-hostsve(x,y) | p(f18(x,y),op(x,y)).
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f18(x,y),r(z)),f18(x,y)) | po(r(y),r(z)).
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f18(x,y),r(z)),f18(x,y)) | cont(intersection(f18(x,y),r(z)),op(x,z)).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f19(x,y,z)).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f19(x,y,z))),z).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f19(x,y,z))) | -cont(intersection(z,r(f19(x,y,z))),op(x,f19(x,y,z))).
-hostsvi(x,y) | hostsv(x,y).
-hostsvi(x,y) | -hostsve(x,y).
hostsvi(x,y) | -hostsv(x,y) | hostsve(x,y).
-po(x,porespace(y)) | dk1(f20(x,y),y).
-po(x,porespace(y)) | -hostsv(y,z) | -po(x,r(z)).
-po(x,porespace(y)) | hostsv(f20(x,y),f21(x,y)).
-po(x,porespace(y)) | po(x,r(f21(x,y))).
po(x,porespace(y)) | -dk1(z,y) | hostsv(y,f22(x,y,z)) | -hostsv(z,u) | -po(x,r(u)).
po(x,porespace(y)) | -dk1(z,y) | po(x,r(f22(x,y,z))) | -hostsv(z,u) | -po(x,r(u)).
-po(x,voidspace(y)) | po(x,porespace(y)) | hostsv(y,f23(x,y)).
-po(x,voidspace(y)) | po(x,porespace(y)) | po(x,r(f23(x,y))).
po(x,voidspace(y)) | -po(x,porespace(y)).
po(x,voidspace(y)) | -hostsv(y,z) | -po(x,r(z)).
zex(porespace(x)) | porespace(x) = r(f24(x)).
zex(porespace(x)) | hostsv(f25(x),f24(x)).
zex(porespace(x)) | dk1(f25(x),x).
zex(voidspace(x)) | voidspace(x) = r(f26(x)).
zex(voidspace(x)) | hostsv(f27(x),f26(x)).
zex(voidspace(x)) | dk1(f27(x),x).
-po(x,convoidspace(y)) | po(x,f28(x,y)).
-po(x,convoidspace(y)) | icon(f28(x,y)).
-po(x,convoidspace(y)) | cont(f28(x,y),voidspace(y)).
-po(x,convoidspace(y)) | strongc(f28(x,y),difference(cuni,sum(r(y),voidspace(y)))).
po(x,convoidspace(y)) | -po(x,z) | -icon(z) | -cont(z,voidspace(y)) | -strongc(z,difference(cuni,sum(r(y),voidspace(y)))).
-po(x,conporespace(y)) | po(x,f29(x,y)).
-po(x,conporespace(y)) | icon(f29(x,y)).
-po(x,conporespace(y)) | cont(f29(x,y),porespace(y)).
-po(x,conporespace(y)) | strongc(f29(x,y),difference(cuni,sum(r(y),porespace(y)))).
po(x,conporespace(y)) | -po(x,z) | -icon(z) | -cont(z,porespace(y)) | -strongc(z,difference(cuni,sum(r(y),porespace(y)))).
-ped(x) | -s(x).
s(r(x)).
-s(x) | r(x) = x.
s(x) | r(x) != x.
-cont(x,y) | s(x).
-cont(x,y) | s(y).
-lt(x,y) | s(x).
-lt(x,y) | s(y).
-zex(x) | s(x).
-bcont(x,y) | s(x).
-bcont(x,y) | s(y).
-ped(x) | maxdim(r(x)).
-dk1(x,y) | p(r(x),r(y)).
-hosts(x,y) | -rpf(y) | p(r(x),r(y)).
-hosts(x,y) | rpf(y) | -p(r(x),r(y)).
-hosts(x,y) | -rpf(y) | -dk1(z,x) | -dk1(u,y) | p(r(u),r(z)).
-hosts(x,y) | -dpf(y) | -po(r(x),r(y)).
-hosts(x,y) | dpf(y) | po(r(x),r(y)).
-po(x,y) | p(f30(x,y),x).
-po(x,y) | p(f30(x,y),y).
po(x,y) | -p(z,x) | -p(z,y).
-leq(x,y) | s(x).
-leq(x,y) | s(y).
-zex(x) | s(x).
-s(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-zex(x) | -zex(y) | x = y.
-zex(x) | -s(y) | leq(x,y).
-con(x) | s(x).
-con(x) | -pp(y,x) | sc(y,difference(x,y)).
con(x) | -s(x) | pp(f31(x),x).
con(x) | -s(x) | -sc(f31(x),difference(x,f31(x))).
-c(x,y) | cont(f32(x,y),x).
-c(x,y) | cont(f32(x,y),y).
c(x,y) | -cont(z,x) | -cont(z,y).
-sc(x,y) | cont(f33(x,y),x).
-sc(x,y) | cont(f33(x,y),y).
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,x).
-sc(x,y) | -cont(z,x) | -cont(z,y) | lt(z,y).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f34(x,y),x).
sc(x,y) | -cont(z,x) | -cont(z,y) | cont(f34(x,y),y).
sc(x,y) | -cont(z,x) | -cont(z,y) | -lt(f34(x,y),x) | -lt(f34(x,y),y).
-inc(x,y) | lt(f35(x,y),x) | lt(f36(x,y),y).
-inc(x,y) | lt(f35(x,y),x) | cont(f36(x,y),y).
-inc(x,y) | lt(f35(x,y),x) | p(f36(x,y),x).
-inc(x,y) | cont(f35(x,y),x) | lt(f36(x,y),y).
-inc(x,y) | cont(f35(x,y),x) | cont(f36(x,y),y).
-inc(x,y) | cont(f35(x,y),x) | p(f36(x,y),x).
-inc(x,y) | p(f35(x,y),y) | lt(f36(x,y),y).
-inc(x,y) | p(f35(x,y),y) | cont(f36(x,y),y).
-inc(x,y) | p(f35(x,y),y) | p(f36(x,y),x).
inc(x,y) | -lt(z,x) | -cont(z,x) | -p(z,y).
inc(x,y) | -lt(z,y) | -cont(z,y) | -p(z,x).
-maxdim(x) | s(x).
-maxdim(x) | -s(y) | -lt(x,y).
maxdim(x) | -s(x) | s(f37(x)).
maxdim(x) | -s(x) | lt(x,f37(x)).
-mindim(x) | s(x).
-mindim(x) | -zex(x).
-mindim(x) | -s(y) | -lt(y,x) | zex(y).
mindim(x) | -s(x) | zex(x) | s(f38(x)).
mindim(x) | -s(x) | zex(x) | lt(f38(x),x).
mindim(x) | -s(x) | zex(x) | -zex(f38(x)).
mindim(c1).
-eqdim(x,y) | leq(x,y).
-eqdim(x,y) | leq(y,x).
eqdim(x,y) | -leq(x,y) | -leq(y,x).
-icon(x) | con(x).
-icon(x) | -pp(y,x) | covers(x,intersection(y,difference(x,y))).
icon(x) | -con(x) | pp(f39(x),x).
icon(x) | -con(x) | -covers(x,intersection(f39(x),difference(x,f39(x)))).
-ucon(x) | con(x).
-ucon(x) | -pp(y,x) | -cont(z,y) | -cont(z,difference(x,y)) | cont(z,intersection(y,difference(x,y))).
ucon(x) | -con(x) | pp(f40(x),x).
ucon(x) | -con(x) | cont(f41(x),f40(x)).
ucon(x) | -con(x) | cont(f41(x),difference(x,f40(x))).
ucon(x) | -con(x) | -cont(f41(x),intersection(f40(x),difference(x,f40(x)))).
-strongc(x,y) | sc(x,y).
-strongc(x,y) | eqdim(x,y).
-strongc(x,y) | covers(x,intersection(x,y)).
strongc(x,y) | -sc(x,y) | -eqdim(x,y) | -covers(x,intersection(x,y)).
-tsum(x,y,z) | -tsum(x,y,u) | s(x).
-tsum(x,y,z) | -tsum(x,y,u) | s(y).
-tsum(x,y,z) | -tsum(x,y,u) | s(z).
-tsum(x,y,z) | -tsum(x,y,u) | u = z.
-tsum(x,y,z) | tsum(y,x,z).
-lt(x,y) | tsum(x,y,y).
-tsum(x,y,z) | -leq(x,y) | -cont(u,y) | cont(u,z).
-tsum(x,y,z) | -cont(u,z) | cont(u,x) | cont(difference(u,x),y).
-s(x) | -eqdim(y,z) | po(f42(y,z,x),x) | po(f42(y,z,x),y) | po(f42(y,z,x),z) | tsum(y,z,x).
-s(x) | -eqdim(y,z) | -po(f42(y,z,x),x) | -po(f42(y,z,x),y) | tsum(y,z,x).
-s(x) | -eqdim(y,z) | -po(f42(y,z,x),x) | -po(f42(y,z,x),z) | tsum(y,z,x).
-eqdim(x,y) | cont(f43(x,y),x) | tsum(x,y,f44(x,y)).
-eqdim(x,y) | cont(f43(x,y),y) | tsum(x,y,f44(x,y)).
-eqdim(x,y) | min(f43(x,y)) | tsum(x,y,f44(x,y)).
-eqdim(x,y) | -p(z,x) | -p(u,y) | -bcont(f43(x,y),z) | -bcont(f43(x,y),u) | tsum(x,y,f44(x,y)).
-s(x) | zex(x) | cont(x,cuni).
-p(x,y) | cont(x,y).
-p(x,y) | eqdim(x,y).
p(x,y) | -cont(x,y) | -eqdim(x,y).
-ped(x) | pob(x) | m(x) | f(x).
-pob(x) | ped(x).
-m(x) | ped(x).
-f(x) | ped(x).
-pob(x) | -m(x).
-pob(x) | -f(x).
-m(x) | -f(x).
-napo(x) | pob(x).
-hosts(x,y) | ped(x).
-hosts(x,y) | f(y).
-f(x) | hosts(f45(x),x).
f(x) | -hosts(y,x).
-hosts(x,y) | -hosts(y,x).
-f(x) | rpf(x) | dpf(x).
f(x) | -rpf(x).
f(x) | -dpf(x).
-rpf(x) | -dpf(x).
-dk1(x,y) | m(x).
-dk1(x,y) | pob(y) | rpf(y).
-dk1(x,y) | -dk1(z,y) | x = z.
-pob(x) | dk1(f46(x),x).
-rpf(x) | dk1(f46(x),x).
-s(x) | zex(x) | cont(x,x).
s(x) | -cont(x,x).
-zex(x) | -cont(x,x).
-cont(x,y) | -cont(y,x) | y = x.
-cont(x,y) | -cont(y,z) | cont(x,z).
-zex(x) | s(x).
-zex(x) | -cont(y,x).
-zex(x) | -cont(x,y).
-zex(x) | -zex(y) | x = y.
-s(x) | -s(y) | c(x,y) | zex(intersection(x,y)).
s(x) | -zex(intersection(x,y)).
s(x) | -zex(intersection(y,x)).
-c(x,y) | -zex(intersection(x,y)).
-s(x) | -s(y) | zex(intersection(x,y)) | cont(intersection(x,y),x).
-cont(x,y) | -cont(x,z) | leq(x,intersection(y,z)).
-cont(x,y) | -cont(x,z) | -eqdim(x,intersection(y,z)) | p(x,intersection(y,z)).
cont(x,y) | -p(x,intersection(y,z)).
cont(x,y) | -p(x,intersection(z,y)).
eqdim(x,intersection(y,z)) | -p(x,intersection(y,z)).
-s(x) | -s(y) | zex(difference(x,y)) | eqdim(x,difference(x,y)).
-lt(x,y) | difference(y,x) = y.
-leq(x,y) | -cont(z,x) | -lt(intersection(z,y),z) | cont(z,difference(x,y)).
-leq(x,y) | -cont(z,difference(x,y)) | cont(z,x).
-leq(x,y) | -p(z,difference(x,y)) | lt(intersection(z,y),z).
-zex(difference(x,y)) | zex(x) | cont(x,y).
zex(difference(x,y)) | -zex(x).
zex(difference(x,y)) | -cont(x,y).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(cuni, [ 0 ]),

        function(c1, [ 0 ]),

        function(ch(_), [ 0, 1 ]),

        function(conporespace(_), [ 1, 1 ]),

        function(convoidspace(_), [ 1, 1 ]),

        function(porespace(_), [ 1, 1 ]),

        function(r(_), [ 0, 1 ]),

        function(voidspace(_), [ 1, 1 ]),

        function(f1(_), [ 0, 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(f13(_), [ 0, 0 ]),

        function(f14(_), [ 0, 0 ]),

        function(f15(_), [ 0, 0 ]),

        function(f16(_), [ 0, 0 ]),

        function(f17(_), [ 0, 0 ]),

        function(f24(_), [ 0, 0 ]),

        function(f25(_), [ 0, 0 ]),

        function(f26(_), [ 0, 0 ]),

        function(f27(_), [ 0, 0 ]),

        function(f31(_), [ 0, 0 ]),

        function(f37(_), [ 0, 0 ]),

        function(f38(_), [ 0, 0 ]),

        function(f39(_), [ 0, 0 ]),

        function(f40(_), [ 0, 0 ]),

        function(f41(_), [ 0, 0 ]),

        function(f45(_), [ 0, 0 ]),

        function(f46(_), [ 0, 0 ]),

        function(difference(_,_), [
			   1, 0,
			   1, 1 ]),

        function(intersection(_,_), [
			   0, 1,
			   1, 1 ]),

        function(op(_,_), [
			   0, 0,
			   0, 0 ]),

        function(sum(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f3(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f4(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f5(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f6(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f7(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f9(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f10(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f18(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f20(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f21(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f23(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f28(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f29(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f30(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f32(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f33(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f34(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f35(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f36(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f43(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f44(_,_), [
			   0, 0,
			   0, 1 ]),

        function(f8(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f11(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f12(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f19(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f22(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f42(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        relation(cavity(_), [ 0, 0 ]),

        relation(closed(_), [ 0, 0 ]),

        relation(complexv(_), [ 0, 0 ]),

        relation(con(_), [ 1, 1 ]),

        relation(dpf(_), [ 0, 0 ]),

        relation(f(_), [ 0, 0 ]),

        relation(gap(_), [ 0, 0 ]),

        relation(hol(_), [ 0, 0 ]),

        relation(hole(_), [ 0, 0 ]),

        relation(icon(_), [ 1, 1 ]),

        relation(m(_), [ 0, 0 ]),

        relation(max(_), [ 1, 0 ]),

        relation(maxdim(_), [ 1, 0 ]),

        relation(min(_), [ 1, 0 ]),

        relation(mindim(_), [ 1, 0 ]),

        relation(napo(_), [ 0, 0 ]),

        relation(ped(_), [ 0, 0 ]),

        relation(pob(_), [ 0, 0 ]),

        relation(rpf(_), [ 0, 0 ]),

        relation(s(_), [ 1, 1 ]),

        relation(simplev(_), [ 0, 0 ]),

        relation(tun(_), [ 0, 0 ]),

        relation(ucon(_), [ 1, 1 ]),

        relation(v(_), [ 0, 0 ]),

        relation(zex(_), [ 0, 1 ]),

        relation(bcont(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(c(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(cont(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(covers(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(dk1(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(eqdim(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(geq(_,_), [
			   1, 1,
			   0, 1 ]),

        relation(gt(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(hosts(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavity(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavityi(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavityt(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsg(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsh(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostshollow(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hoststunnel(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsv(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsve(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsvi(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(icont(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(inc(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(leq(_,_), [
			   1, 0,
			   1, 1 ]),

        relation(lt(_,_), [
			   0, 0,
			   1, 0 ]),

        relation(p(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(po(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(pp(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(sc(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(strongc(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(tcont(_,_), [
			   1, 0,
			   0, 0 ]),

        relation(vs(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(tsum(_,_,_), [
			   1, 0,
			   1, 0,
			   1, 0,
			   0, 1 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=1339, kept=1309.
Selections=196, assignments=209, propagations=207, current_models=1.
Rewrite_terms=2846, rewrite_bools=2081, indexes=845.
Rules_from_neg_clauses=37, cross_offs=37.

============================== end of statistics =====================

------ process 1624 exit (max_models) ------

User_CPU=0.03, System_CPU=0.03, Wall_clock=1.

Exiting with 1 model.

Process 1624 exit (max_models) Fri Aug 29 13:51:11 2014
The process finished Fri Aug 29 13:51:11 2014
============================= C:\Reasoning\prover9-bin\mace4 ================================
execution finished: Fri Aug 29 13:51:12 2014
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\min_max_in_dim.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\covers.p9 E:\COLORE-local-testbed\multidim_space_spch\conversions\spch.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\dim_basic_defs.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\epp.p9 E:\COLORE-local-testbed\multidim_space_voids\conversions\voids.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_basic.p9 E:\COLORE-local-testbed\multidim_space_voids\conversions\voids_extended.p9 E:\COLORE-local-testbed\multidim_space_space\conversions\space.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\po.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear_unbounded.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\connected.p9 E:\COLORE-local-testbed\multidim_space_cont\definitions\conversions\c.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\sc.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\inc.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\min_max_dim.p9 E:\COLORE-local-testbed\multidim_space_dim\conversions\dim_prime_linear.p9 E:\COLORE-local-testbed\multidim_space_dim\definitions\conversions\eq_dim.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\icon.p9 E:\COLORE-local-testbed\multidim_space_codib\conversions\codib_updown.p9 E:\COLORE-local-testbed\multidim_space_codi\definitions\conversions\ep.p9 E:\COLORE-local-testbed\multidim_space_ped\conversions\ped.p9 E:\COLORE-local-testbed\multidim_space_cont\conversions\cont_basic.p9 E:\COLORE-local-testbed\multidim_space_codi\conversions\codi_down.p9"
Input read from 
============================ end of footer ===========================
