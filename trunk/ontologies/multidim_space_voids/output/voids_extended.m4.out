============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 1236 was started by torsten on torsten-laptop,
Thu Apr 30 19:40:30 2015
The command was "/cygdrive/c/Reasoning/prover9-bin/mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE\multidim_space_voids\conversions\voids_extended.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file E:\COLORE\multidim_space_voids\conversions\voids_extended.p9


formulas(sos).
(all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))).
(all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))).
(all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))).
(all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))).
(all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))).
(all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))).
(all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))).
(all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))).
(all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))).
(all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))).
(all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))).
(all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))).
(all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))).
(all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))).
(all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))).
(all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))).
(all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))).
(all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))).
(all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))).
(all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))).
(all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 all x11 (hostsh(x12,x11) <-> hostsv(x12,x11) & icon(r(x12)))) # label(non_clause).  [assumption].
2 (all x22 all x21 (hostsg(x22,x21) <-> hostsv(x22,x21) & -icon(r(x22)))) # label(non_clause).  [assumption].
3 (all x31 (hole(x31) <-> (exists x32 hostsh(x32,x31)))) # label(non_clause).  [assumption].
4 (all x41 (gap(x41) <-> (exists x42 hostsg(x42,x41)))) # label(non_clause).  [assumption].
5 (all x51 all x52 (hostsv(x51,x52) -> op(x51,x52) = intersection(r(x52),difference(cuni,sum(r(x51),r(x52)))))) # label(non_clause).  [assumption].
6 (all x62 all x61 (hostscavity(x62,x61) <-> hostsv(x62,x61) & -covers(r(x62),op(x62,x61)))) # label(non_clause).  [assumption].
7 (all x71 (cavity(x71) <-> (exists x72 hostscavity(x72,x71)))) # label(non_clause).  [assumption].
8 (all x82 all x81 (hostscavityi(x82,x81) <-> hostscavity(x82,x81) & zex(op(x82,x81)))) # label(non_clause).  [assumption].
9 (all x92 all x91 (hostscavityt(x92,x91) <-> hostscavity(x92,x91) & -zex(op(x92,x91)))) # label(non_clause).  [assumption].
10 (all x102 all x101 (hostshollow(x102,x101) <-> hostsv(x102,x101) & covers(r(x102),op(x102,x101)) & icon(op(x102,x101)))) # label(non_clause).  [assumption].
11 (all x111 (hol(x111) <-> (exists x112 hostshollow(x112,x111)))) # label(non_clause).  [assumption].
12 (all x122 all x121 (hoststunnel(x122,x121) <-> hostsv(x122,x121) & covers(r(x122),op(x122,x121)) & -icon(op(x122,x121)))) # label(non_clause).  [assumption].
13 (all x131 (tun(x131) <-> (exists x132 hoststunnel(x132,x131)))) # label(non_clause).  [assumption].
14 (all x142 all x141 (hostsve(x142,x141) <-> hostsv(x142,x141) & (exists x143 (p(x143,op(x142,x141)) & (all x144 (hostsv(x142,x144) & eqdim(intersection(x143,r(x144)),x143) -> po(r(x141),r(x144)) & cont(intersection(x143,r(x144)),op(x142,x144)))))))) # label(non_clause).  [assumption].
15 (all x152 all x151 (hostsvi(x152,x151) <-> hostsv(x152,x151) & -hostsve(x152,x151))) # label(non_clause).  [assumption].
16 (all x164 all x163 (po(x164,porespace(x163)) <-> (exists x162 (dk1(x162,x163) & (all x161 (hostsv(x163,x161) -> -po(x164,r(x161)))) & (exists x161 (hostsv(x162,x161) & po(x164,r(x161)))))))) # label(non_clause).  [assumption].
17 (all x173 all x172 (po(x173,voidspace(x172)) <-> po(x173,porespace(x172)) | (exists x171 (hostsv(x172,x171) & po(x173,r(x171)))))) # label(non_clause).  [assumption].
18 (all x182 (-zex(porespace(x182)) -> (exists x183 exists x181 (r(x183) = porespace(x182) & hostsv(x181,x183) & dk1(x181,x182))))) # label(non_clause).  [assumption].
19 (all x192 (-zex(voidspace(x192)) -> (exists x193 exists x191 (r(x193) = voidspace(x192) & hostsv(x191,x193) & dk1(x191,x192))))) # label(non_clause).  [assumption].
20 (all x203 all x202 (po(x203,convoidspace(x202)) <-> (exists x201 (po(x203,x201) & icon(x201) & cont(x201,voidspace(x202)) & strongc(x201,difference(cuni,sum(r(x202),voidspace(x202)))))))) # label(non_clause).  [assumption].
21 (all x213 all x212 (po(x213,conporespace(x212)) <-> (exists x211 (po(x213,x211) & icon(x211) & cont(x211,porespace(x212)) & strongc(x211,difference(cuni,sum(r(x212),porespace(x212)))))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-hostsh(x,y) | hostsv(x,y).
-hostsh(x,y) | icon(r(x)).
hostsh(x,y) | -hostsv(x,y) | -icon(r(x)).
-hostsg(x,y) | hostsv(x,y).
-hostsg(x,y) | -icon(r(x)).
hostsg(x,y) | -hostsv(x,y) | icon(r(x)).
-hole(x) | hostsh(f1(x),x).
hole(x) | -hostsh(y,x).
-gap(x) | hostsg(f2(x),x).
gap(x) | -hostsg(y,x).
-hostsv(x,y) | intersection(r(y),difference(cuni,sum(r(x),r(y)))) = op(x,y).
-hostscavity(x,y) | hostsv(x,y).
-hostscavity(x,y) | -covers(r(x),op(x,y)).
hostscavity(x,y) | -hostsv(x,y) | covers(r(x),op(x,y)).
-cavity(x) | hostscavity(f3(x),x).
cavity(x) | -hostscavity(y,x).
-hostscavityi(x,y) | hostscavity(x,y).
-hostscavityi(x,y) | zex(op(x,y)).
hostscavityi(x,y) | -hostscavity(x,y) | -zex(op(x,y)).
-hostscavityt(x,y) | hostscavity(x,y).
-hostscavityt(x,y) | -zex(op(x,y)).
hostscavityt(x,y) | -hostscavity(x,y) | zex(op(x,y)).
-hostshollow(x,y) | hostsv(x,y).
-hostshollow(x,y) | covers(r(x),op(x,y)).
-hostshollow(x,y) | icon(op(x,y)).
hostshollow(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | -icon(op(x,y)).
-hol(x) | hostshollow(f4(x),x).
hol(x) | -hostshollow(y,x).
-hoststunnel(x,y) | hostsv(x,y).
-hoststunnel(x,y) | covers(r(x),op(x,y)).
-hoststunnel(x,y) | -icon(op(x,y)).
hoststunnel(x,y) | -hostsv(x,y) | -covers(r(x),op(x,y)) | icon(op(x,y)).
-tun(x) | hoststunnel(f5(x),x).
tun(x) | -hoststunnel(y,x).
-hostsve(x,y) | hostsv(x,y).
-hostsve(x,y) | p(f6(x,y),op(x,y)).
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | po(r(y),r(z)).
-hostsve(x,y) | -hostsv(x,z) | -eqdim(intersection(f6(x,y),r(z)),f6(x,y)) | cont(intersection(f6(x,y),r(z)),op(x,z)).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | hostsv(x,f7(x,y,z)).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | eqdim(intersection(z,r(f7(x,y,z))),z).
hostsve(x,y) | -hostsv(x,y) | -p(z,op(x,y)) | -po(r(y),r(f7(x,y,z))) | -cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).
-hostsvi(x,y) | hostsv(x,y).
-hostsvi(x,y) | -hostsve(x,y).
hostsvi(x,y) | -hostsv(x,y) | hostsve(x,y).
-po(x,porespace(y)) | dk1(f8(x,y),y).
-po(x,porespace(y)) | -hostsv(y,z) | -po(x,r(z)).
-po(x,porespace(y)) | hostsv(f8(x,y),f9(x,y)).
-po(x,porespace(y)) | po(x,r(f9(x,y))).
po(x,porespace(y)) | -dk1(z,y) | hostsv(y,f10(x,y,z)) | -hostsv(z,u) | -po(x,r(u)).
po(x,porespace(y)) | -dk1(z,y) | po(x,r(f10(x,y,z))) | -hostsv(z,u) | -po(x,r(u)).
-po(x,voidspace(y)) | po(x,porespace(y)) | hostsv(y,f11(x,y)).
-po(x,voidspace(y)) | po(x,porespace(y)) | po(x,r(f11(x,y))).
po(x,voidspace(y)) | -po(x,porespace(y)).
po(x,voidspace(y)) | -hostsv(y,z) | -po(x,r(z)).
zex(porespace(x)) | porespace(x) = r(f12(x)).
zex(porespace(x)) | hostsv(f13(x),f12(x)).
zex(porespace(x)) | dk1(f13(x),x).
zex(voidspace(x)) | voidspace(x) = r(f14(x)).
zex(voidspace(x)) | hostsv(f15(x),f14(x)).
zex(voidspace(x)) | dk1(f15(x),x).
-po(x,convoidspace(y)) | po(x,f16(x,y)).
-po(x,convoidspace(y)) | icon(f16(x,y)).
-po(x,convoidspace(y)) | cont(f16(x,y),voidspace(y)).
-po(x,convoidspace(y)) | strongc(f16(x,y),difference(cuni,sum(r(y),voidspace(y)))).
po(x,convoidspace(y)) | -po(x,z) | -icon(z) | -cont(z,voidspace(y)) | -strongc(z,difference(cuni,sum(r(y),voidspace(y)))).
-po(x,conporespace(y)) | po(x,f17(x,y)).
-po(x,conporespace(y)) | icon(f17(x,y)).
-po(x,conporespace(y)) | cont(f17(x,y),porespace(y)).
-po(x,conporespace(y)) | strongc(f17(x,y),difference(cuni,sum(r(y),porespace(y)))).
po(x,conporespace(y)) | -po(x,z) | -icon(z) | -cont(z,porespace(y)) | -strongc(z,difference(cuni,sum(r(y),porespace(y)))).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(cuni, [ 0 ]),

        function(conporespace(_), [ 0, 0 ]),

        function(convoidspace(_), [ 0, 0 ]),

        function(porespace(_), [ 0, 0 ]),

        function(r(_), [ 0, 0 ]),

        function(voidspace(_), [ 0, 0 ]),

        function(f1(_), [ 0, 0 ]),

        function(f2(_), [ 0, 0 ]),

        function(f3(_), [ 0, 0 ]),

        function(f4(_), [ 0, 0 ]),

        function(f5(_), [ 0, 0 ]),

        function(f12(_), [ 0, 0 ]),

        function(f13(_), [ 0, 0 ]),

        function(f14(_), [ 0, 0 ]),

        function(f15(_), [ 0, 0 ]),

        function(difference(_,_), [
			   0, 0,
			   0, 0 ]),

        function(intersection(_,_), [
			   0, 0,
			   0, 0 ]),

        function(op(_,_), [
			   0, 0,
			   0, 0 ]),

        function(sum(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f6(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f8(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f9(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f11(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f16(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f17(_,_), [
			   0, 0,
			   0, 0 ]),

        function(f7(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        function(f10(_,_,_), [
			   0, 0,
			   0, 0,
			   0, 0,
			   0, 0 ]),

        relation(cavity(_), [ 0, 0 ]),

        relation(gap(_), [ 0, 0 ]),

        relation(hol(_), [ 0, 0 ]),

        relation(hole(_), [ 0, 0 ]),

        relation(icon(_), [ 0, 0 ]),

        relation(tun(_), [ 0, 0 ]),

        relation(zex(_), [ 1, 0 ]),

        relation(cont(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(covers(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(dk1(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(eqdim(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavity(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavityi(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostscavityt(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsg(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsh(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostshollow(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hoststunnel(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsv(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsve(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(hostsvi(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(p(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(po(_,_), [
			   0, 0,
			   0, 0 ]),

        relation(strongc(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=318, kept=318.
Selections=119, assignments=119, propagations=48, current_models=1.
Rewrite_terms=850, rewrite_bools=440, indexes=263.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

------ process 1236 exit (max_models) ------

User_CPU=0.00, System_CPU=0.01, Wall_clock=0.

Exiting with 1 model.

Process 1236 exit (max_models) Thu Apr 30 19:40:30 2015
The process finished Thu Apr 30 19:40:30 2015
============================= C:\Reasoning\prover9-bin\mace4 ================================
execution finished: Thu Apr 30 19:40:32 2015
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\mace4 -v0 -t600 -s60 -n2 -N20 -f E:\COLORE\multidim_space_voids\conversions\voids_extended.p9"
Input read from 
============================ end of footer ===========================
