============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 23716 was started by torsten on stl-ws2,
Fri Nov  2 18:09:00 2012
The command was "prover9 -t 600 -f multidim_space_voids/input/voids_extended.p9 multidim_space_voids/input/voids.p9  multidim_space_spch/input/spch.p9 multidim_space_space/input/space.p9  multidim_space_ped/input/ped.p9  multidim_mereotopology_zex/input/zex.p9 space/input/dim_prime_linear.p9 space/input/cont_c.p9 space/input/codi_down.p9 multidim_space_codib/input/codib_down.p9 multidim_space_codib/input/codib_updown.p9 multidim_space_codib/input/icon.p9  multidim_mereotopology_codi/definitions/input/min_max_in_dim.p9  multidim_mereotopology_codi/definitions/input/po.p9  multidim_mereotopology_codi/definitions/input/inc.p9  multidim_mereotopology_codi/definitions/input/sc.p9  multidim_mereotopology_codib/definitions/input/closed.p9  multidim_mereotopology_codib/definitions/input/icont.p9  multidim_mereotopology_codib/definitions/input/tcont.p9  multidim_mereotopology_codi/definitions/input/epp.p9  multidim_mereotopology_codi/definitions/input/ep.p9 space/theorems/input/options.txt multidim_space_voids/theorems/input/voids_extended_theorems_7.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file multidim_space_voids/input/voids_extended.p9


formulas(sos).
(all x all y (hostsh(x,y) <-> hostsv(x,y) & ICon(r(x)))).
(all x all y (hostsg(x,y) <-> hostsv(x,y) & -ICon(r(x)))).
(all y (Hole(y) <-> (exists x hostsh(x,y)))).
(all y (Gap(y) <-> (exists x hostsg(x,y)))).
(all x all v (hostsv(x,v) -> op(x,v) = intersection(r(v),difference(U,sum(r(x),r(v)))))).
(all x all y (hostscavity(x,y) <-> hostsv(x,y) & -Covers(r(x),op(x,y)))).
(all y (CAVITY(y) <-> (exists x hostscavity(x,y)))).
(all x all y (hostscavityi(x,y) <-> hostscavity(x,y) & ZEX(op(x,y)))).
(all x all y (hostscavityt(x,y) <-> hostscavity(x,y) & -ZEX(op(x,y)))).
(all x all y (hostshollow(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & ICon(op(x,y)))).
(all y (HOL(y) <-> (exists x hostshollow(x,y)))).
(all x all y (hoststunnel(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & -ICon(op(x,y)))).
(all y (TUN(y) <-> (exists x hoststunnel(x,y)))).
(all x all y (hostsve(x,y) <-> hostsv(x,y) & (exists z (P(z,op(x,y)) & (all u (hostsv(x,u) & EqDim(intersection(z,r(u)),z) -> PO(r(y),r(u)) & Cont(intersection(z,r(u)),op(x,u)))))))).
(all x all y (hostsvi(x,y) <-> hostsv(x,y) & -hostsve(x,y))).
(all v all o (PO(v,porespace(o)) <-> (exists m (DK1(m,o) & (all u (hostsv(o,u) -> -PO(v,r(u)))) & (exists u (hostsv(m,u) & PO(v,r(u)))))))).
(all v all o (PO(v,voidspace(o)) <-> PO(v,porespace(o)) | (exists u (hostsv(o,u) & PO(v,r(u)))))).
(all o (-ZEX(porespace(o)) -> (exists v exists m (r(v) = porespace(o) & hostsv(m,v) & DK1(m,o))))).
(all o (-ZEX(voidspace(o)) -> (exists v exists m (r(v) = voidspace(o) & hostsv(m,v) & DK1(m,o))))).
(all v all o (PO(v,convoidspace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,voidspace(o)) & StrongC(u,difference(Uni,sum(r(o),voidspace(o)))))))).
(all v all o (PO(v,conporespace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,porespace(o)) & StrongC(u,difference(Uni,sum(r(o),porespace(o)))))))).
end_of_list.

% Reading from file multidim_space_voids/input/voids.p9


formulas(sos).
(all x all y (VS(x,y) <-> PED(x) & S(y) & Cont(y,ch(x)) & -PO(y,r(x)))).
(all x all y (SimpleV(y) <-> ICon(r(y)) & (exists x hostsv(x,y)))).
(all x all y (ComplexV(y) <-> -ICon(r(y)) & (exists x hostsv(x,y)))).
(all x (V(x) <-> SimpleV(x) | ComplexV(x))).
(all x all y (hostsv(x,y) -> hosts(x,y) & VS(x,r(y)) & StrongC(r(x),r(y)))).
(all x all y all z (hostsv(x,y) & ComplexV(y) & PO(r(z),r(y)) -> (exists v (hostsv(x,v) & SimpleV(v) & PO(r(z),r(v)))))).
(all x all y (hosts(x,y) & V(y) -> -V(x))).
(all x all y (hostsv(x,y) & RPF(x) -> (exists z (hosts(z,x) & -F(z) & hostsv(z,y))))).
(all x all y (hostsv(x,y) & -F(x) -> (exists z (hosts(x,z) & RPF(z) & hostsv(z,y))))).
(all x all y all z (hostsv(x,y) & hostsv(x,z) & PO(r(y),r(z)) -> Cont(r(y),r(z)) | Cont(r(z),r(y)))).
(all x all y all v (hostsv(x,y) & P(r(x),r(y)) & PED(y) & -DPF(y) & -Cont(r(v),r(y)) -> (exists u (Cont(difference(r(v),r(y)),r(u)) & hostsv(y,u))))).
(all x all y all v (hostsv(x,v) & P(r(y),r(x)) & PED(y) & -DPF(y) & PO(r(v),ch(y)) -> (exists u (r(u) = intersection(r(v),ch(y)) & hostsv(y,u))))).
end_of_list.

% Reading from file  multidim_space_spch/input/spch.p9


formulas(sos).
(all x S(ch(x))).
(all x ch(x) = ch(r(x))).
(all x (-ZEX(x) -> ICon(ch(x)))).
(all x ch(x) = ch(ch(x))).
(all x (-ZEX(x) -> Cont(r(x),ch(x)))).
(all x (-ZEX(x) & -Closed(r(x)) -> TCont(r(x),ch(x)))).
(all x all y (Cont(r(x),r(y)) -> Cont(ch(x),ch(y)))).
(all x all y (ch(x) = ch(y) & -ZEX(x) -> C(r(x),r(y)))).
(all x all y (MaxDim(r(x)) & MaxDim(r(y)) & r(x) = ch(x) & r(y) = ch(y) -> intersection(ch(x),ch(y)) = ch(intersection(ch(x),ch(y))))).
(all x all y (ICont(r(x),r(y)) & -Closed(difference(r(y),r(x))) -> difference(r(y),r(x)) != ch(difference(r(y),r(x))))).
(all x all y (ICont(r(x),r(y)) & MaxDim(r(x)) & MaxDim(r(y)) -> Cont(r(x),ch(difference(r(y),r(x)))))).
(all x all y (-ZEX(x) | -ZEX(y) -> (exists z exists v (TSum(r(x),r(y),r(z)) & TSum(ch(x),ch(y),r(v)) & Cont(v,ch(z)))))).
(all x all y all z all v all w (EqDim(x,y) & EqDim(y,z) & SC(x,y) & SC(y,z) & -C(x,z) & TSum(x,y,v) & TSum(y,z,w) & v = ch(v) & w = ch(w) -> y = ch(y))).
end_of_list.

% Reading from file multidim_space_space/input/space.p9


formulas(sos).
(all x (-PED(x) | -S(x))).
(all x S(r(x))).
(all x (S(x) <-> x = r(x))).
(all x all y (Cont(x,y) -> S(x) & S(y))).
(all x all y (x < y -> S(x) & S(y))).
(all x (ZEX(x) -> S(x))).
(all x all y (BCont(x,y) -> S(x) & S(y))).
(all x (PED(x) -> MaxDim(r(x)))).
(all x all y (DK1(x,y) -> P(r(x),r(y)))).
(all x all y (hosts(x,y) -> (RPF(y) <-> P(r(x),r(y))))).
(all x all y all m all n (hosts(x,y) & RPF(y) & DK1(m,x) & DK1(n,y) -> P(r(n),r(m)))).
(all x all y (hosts(x,y) -> (DPF(y) <-> -PO(r(x),r(y))))).
end_of_list.

% Reading from file  multidim_space_ped/input/ped.p9


formulas(sos).
(all x (PED(x) -> POD(x) | M(x) | F(x))).
(all x (POD(x) -> PED(x))).
(all x (M(x) -> PED(x))).
(all x (F(x) -> PED(x))).
(all x (POD(x) -> -M(x))).
(all x (POD(x) -> -F(x))).
(all x (M(x) -> -F(x))).
(all x (NAPO(x) -> POD(x))).
(all x all y (hosts(x,y) -> PED(x) & F(y))).
(all x (F(x) <-> (exists y hosts(y,x)))).
(all x all y (hosts(x,y) -> -hosts(y,x))).
(all x (F(x) <-> RPF(x) | DPF(x))).
(all x (-RPF(x) | -DPF(x))).
(all x all y (DK1(x,y) -> M(x))).
(all x all y (DK1(x,y) -> POD(y) | F(y))).
(all x all y all z (DK1(x,y) & DK1(z,y) -> x = z)).
(all y (POD(y) | RPF(y) -> (exists x DK1(x,y)))).
end_of_list.

% Reading from file  multidim_mereotopology_zex/input/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file space/input/dim_prime_linear.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y <= z -> x < z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) & -ZEX(y) -> x < y)).
(all x all y (EqDim(x,y) <-> S(x) & S(y) & -(x < y) & -(y < x))).
(all x all y (x <= y <-> x < y | EqDim(x,y))).
(all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))).
(all x all y (Covers(x,y) <-> y < x & (all z (S(z) -> -(y < z & z < x))))).
(exists x MinDim(x)).
end_of_list.

% Reading from file space/input/cont_c.p9


formulas(sos).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file space/input/codi_down.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
(all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file multidim_space_codib/input/codib_down.p9


formulas(sos).
(all x (S(x) & -ZEX(x) -> (exists y (P(y,x) & Min(y))))).
(all x all y (S(x) & S(y) & BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (S(x) & S(y) & S(v) & S(z) & SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (S(x) & S(y) & S(v) & S(z) & SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & P(y,z) & (all v all w (S(v) & S(w) & P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & Cont(z,x) -> BCont(z,y))).
(all x all y (S(x) & S(y) & BCont(x,y) <-> S(x) & S(y) & -ZEX(x) & (all z (P(z,x) & Min(z) -> BCont(z,y))))).
end_of_list.

% Reading from file multidim_space_codib/input/codib_updown.p9


formulas(sos).
(all x all y all z all v (TSum(x,y,z) & TSum(x,y,v) -> S(x) & S(y) & S(z) & v = z)).
(all x all y all z (TSum(x,y,z) -> TSum(y,x,z))).
(all x all y (x < y -> TSum(x,y,y))).
(all x all y all z all v (TSum(x,y,z) & x <= y & Cont(v,y) -> Cont(v,z))).
(all x all y all z all v (TSum(x,y,z) & Cont(v,z) & -Cont(v,x) -> Cont(difference(v,x),y))).
(all x all y all z (S(z) & EqDim(x,y) & (all v (PO(v,z) <-> PO(v,x) | PO(v,y))) -> TSum(x,y,z))).
(all x all y (EqDim(x,y) & (all z (Cont(z,x) & Cont(z,y) & Min(z) -> (exists u exists v (P(u,x) & P(v,y) & BCont(z,u) & BCont(z,v))))) -> (exists z TSum(x,y,z)))).
(all x (S(x) & -ZEX(x) -> Cont(x,Uni))).
end_of_list.

% Reading from file multidim_space_codib/input/icon.p9


formulas(sos).
(all x (Con(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> S(x) & Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
(all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/icont.p9


formulas(sos).
(all x all y (ICont(x,y) <-> Cont(x,y) & (all z (Cont(z,x) -> -BCont(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codib/definitions/input/tcont.p9


formulas(sos).
(all x all y (TCont(x,y) <-> Cont(x,y) & (exists z (Cont(z,x) & BCont(z,y))))).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file  multidim_mereotopology_codi/definitions/input/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file space/theorems/input/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file multidim_space_voids/theorems/input/voids_extended_theorems_7.p9


formulas(goals).
(all x all y (hostsv(x,y) -> hostscavity(x,y) | hoststunnel(x,y) | hostshollow(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (hostsh(x,y) <-> hostsv(x,y) & ICon(r(x)))) # label(non_clause).  [assumption].
2 (all x all y (hostsg(x,y) <-> hostsv(x,y) & -ICon(r(x)))) # label(non_clause).  [assumption].
3 (all y (Hole(y) <-> (exists x hostsh(x,y)))) # label(non_clause).  [assumption].
4 (all y (Gap(y) <-> (exists x hostsg(x,y)))) # label(non_clause).  [assumption].
5 (all x all v (hostsv(x,v) -> op(x,v) = intersection(r(v),difference(U,sum(r(x),r(v)))))) # label(non_clause).  [assumption].
6 (all x all y (hostscavity(x,y) <-> hostsv(x,y) & -Covers(r(x),op(x,y)))) # label(non_clause).  [assumption].
7 (all y (CAVITY(y) <-> (exists x hostscavity(x,y)))) # label(non_clause).  [assumption].
8 (all x all y (hostscavityi(x,y) <-> hostscavity(x,y) & ZEX(op(x,y)))) # label(non_clause).  [assumption].
9 (all x all y (hostscavityt(x,y) <-> hostscavity(x,y) & -ZEX(op(x,y)))) # label(non_clause).  [assumption].
10 (all x all y (hostshollow(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & ICon(op(x,y)))) # label(non_clause).  [assumption].
11 (all y (HOL(y) <-> (exists x hostshollow(x,y)))) # label(non_clause).  [assumption].
12 (all x all y (hoststunnel(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & -ICon(op(x,y)))) # label(non_clause).  [assumption].
13 (all y (TUN(y) <-> (exists x hoststunnel(x,y)))) # label(non_clause).  [assumption].
14 (all x all y (hostsve(x,y) <-> hostsv(x,y) & (exists z (P(z,op(x,y)) & (all u (hostsv(x,u) & EqDim(intersection(z,r(u)),z) -> PO(r(y),r(u)) & Cont(intersection(z,r(u)),op(x,u)))))))) # label(non_clause).  [assumption].
15 (all x all y (hostsvi(x,y) <-> hostsv(x,y) & -hostsve(x,y))) # label(non_clause).  [assumption].
16 (all v all o (PO(v,porespace(o)) <-> (exists m (DK1(m,o) & (all u (hostsv(o,u) -> -PO(v,r(u)))) & (exists u (hostsv(m,u) & PO(v,r(u)))))))) # label(non_clause).  [assumption].
17 (all v all o (PO(v,voidspace(o)) <-> PO(v,porespace(o)) | (exists u (hostsv(o,u) & PO(v,r(u)))))) # label(non_clause).  [assumption].
18 (all o (-ZEX(porespace(o)) -> (exists v exists m (r(v) = porespace(o) & hostsv(m,v) & DK1(m,o))))) # label(non_clause).  [assumption].
19 (all o (-ZEX(voidspace(o)) -> (exists v exists m (r(v) = voidspace(o) & hostsv(m,v) & DK1(m,o))))) # label(non_clause).  [assumption].
20 (all v all o (PO(v,convoidspace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,voidspace(o)) & StrongC(u,difference(Uni,sum(r(o),voidspace(o)))))))) # label(non_clause).  [assumption].
21 (all v all o (PO(v,conporespace(o)) <-> (exists u (PO(v,u) & ICon(u) & Cont(u,porespace(o)) & StrongC(u,difference(Uni,sum(r(o),porespace(o)))))))) # label(non_clause).  [assumption].
22 (all x all y (VS(x,y) <-> PED(x) & S(y) & Cont(y,ch(x)) & -PO(y,r(x)))) # label(non_clause).  [assumption].
23 (all x all y (SimpleV(y) <-> ICon(r(y)) & (exists x hostsv(x,y)))) # label(non_clause).  [assumption].
24 (all x all y (ComplexV(y) <-> -ICon(r(y)) & (exists x hostsv(x,y)))) # label(non_clause).  [assumption].
25 (all x (V(x) <-> SimpleV(x) | ComplexV(x))) # label(non_clause).  [assumption].
26 (all x all y (hostsv(x,y) -> hosts(x,y) & VS(x,r(y)) & StrongC(r(x),r(y)))) # label(non_clause).  [assumption].
27 (all x all y all z (hostsv(x,y) & ComplexV(y) & PO(r(z),r(y)) -> (exists v (hostsv(x,v) & SimpleV(v) & PO(r(z),r(v)))))) # label(non_clause).  [assumption].
28 (all x all y (hosts(x,y) & V(y) -> -V(x))) # label(non_clause).  [assumption].
29 (all x all y (hostsv(x,y) & RPF(x) -> (exists z (hosts(z,x) & -F(z) & hostsv(z,y))))) # label(non_clause).  [assumption].
30 (all x all y (hostsv(x,y) & -F(x) -> (exists z (hosts(x,z) & RPF(z) & hostsv(z,y))))) # label(non_clause).  [assumption].
31 (all x all y all z (hostsv(x,y) & hostsv(x,z) & PO(r(y),r(z)) -> Cont(r(y),r(z)) | Cont(r(z),r(y)))) # label(non_clause).  [assumption].
32 (all x all y all v (hostsv(x,y) & P(r(x),r(y)) & PED(y) & -DPF(y) & -Cont(r(v),r(y)) -> (exists u (Cont(difference(r(v),r(y)),r(u)) & hostsv(y,u))))) # label(non_clause).  [assumption].
33 (all x all y all v (hostsv(x,v) & P(r(y),r(x)) & PED(y) & -DPF(y) & PO(r(v),ch(y)) -> (exists u (r(u) = intersection(r(v),ch(y)) & hostsv(y,u))))) # label(non_clause).  [assumption].
34 (all x S(ch(x))) # label(non_clause).  [assumption].
35 (all x ch(x) = ch(r(x))) # label(non_clause).  [assumption].
36 (all x (-ZEX(x) -> ICon(ch(x)))) # label(non_clause).  [assumption].
37 (all x ch(x) = ch(ch(x))) # label(non_clause).  [assumption].
38 (all x (-ZEX(x) -> Cont(r(x),ch(x)))) # label(non_clause).  [assumption].
39 (all x (-ZEX(x) & -Closed(r(x)) -> TCont(r(x),ch(x)))) # label(non_clause).  [assumption].
40 (all x all y (Cont(r(x),r(y)) -> Cont(ch(x),ch(y)))) # label(non_clause).  [assumption].
41 (all x all y (ch(x) = ch(y) & -ZEX(x) -> C(r(x),r(y)))) # label(non_clause).  [assumption].
42 (all x all y (MaxDim(r(x)) & MaxDim(r(y)) & r(x) = ch(x) & r(y) = ch(y) -> intersection(ch(x),ch(y)) = ch(intersection(ch(x),ch(y))))) # label(non_clause).  [assumption].
43 (all x all y (ICont(r(x),r(y)) & -Closed(difference(r(y),r(x))) -> difference(r(y),r(x)) != ch(difference(r(y),r(x))))) # label(non_clause).  [assumption].
44 (all x all y (ICont(r(x),r(y)) & MaxDim(r(x)) & MaxDim(r(y)) -> Cont(r(x),ch(difference(r(y),r(x)))))) # label(non_clause).  [assumption].
45 (all x all y (-ZEX(x) | -ZEX(y) -> (exists z exists v (TSum(r(x),r(y),r(z)) & TSum(ch(x),ch(y),r(v)) & Cont(v,ch(z)))))) # label(non_clause).  [assumption].
46 (all x all y all z all v all w (EqDim(x,y) & EqDim(y,z) & SC(x,y) & SC(y,z) & -C(x,z) & TSum(x,y,v) & TSum(y,z,w) & v = ch(v) & w = ch(w) -> y = ch(y))) # label(non_clause).  [assumption].
47 (all x (-PED(x) | -S(x))) # label(non_clause).  [assumption].
48 (all x S(r(x))) # label(non_clause).  [assumption].
49 (all x (S(x) <-> x = r(x))) # label(non_clause).  [assumption].
50 (all x all y (Cont(x,y) -> S(x) & S(y))) # label(non_clause).  [assumption].
51 (all x all y (x < y -> S(x) & S(y))) # label(non_clause).  [assumption].
52 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
53 (all x all y (BCont(x,y) -> S(x) & S(y))) # label(non_clause).  [assumption].
54 (all x (PED(x) -> MaxDim(r(x)))) # label(non_clause).  [assumption].
55 (all x all y (DK1(x,y) -> P(r(x),r(y)))) # label(non_clause).  [assumption].
56 (all x all y (hosts(x,y) -> (RPF(y) <-> P(r(x),r(y))))) # label(non_clause).  [assumption].
57 (all x all y all m all n (hosts(x,y) & RPF(y) & DK1(m,x) & DK1(n,y) -> P(r(n),r(m)))) # label(non_clause).  [assumption].
58 (all x all y (hosts(x,y) -> (DPF(y) <-> -PO(r(x),r(y))))) # label(non_clause).  [assumption].
59 (all x (PED(x) -> POD(x) | M(x) | F(x))) # label(non_clause).  [assumption].
60 (all x (POD(x) -> PED(x))) # label(non_clause).  [assumption].
61 (all x (M(x) -> PED(x))) # label(non_clause).  [assumption].
62 (all x (F(x) -> PED(x))) # label(non_clause).  [assumption].
63 (all x (POD(x) -> -M(x))) # label(non_clause).  [assumption].
64 (all x (POD(x) -> -F(x))) # label(non_clause).  [assumption].
65 (all x (M(x) -> -F(x))) # label(non_clause).  [assumption].
66 (all x (NAPO(x) -> POD(x))) # label(non_clause).  [assumption].
67 (all x all y (hosts(x,y) -> PED(x) & F(y))) # label(non_clause).  [assumption].
68 (all x (F(x) <-> (exists y hosts(y,x)))) # label(non_clause).  [assumption].
69 (all x all y (hosts(x,y) -> -hosts(y,x))) # label(non_clause).  [assumption].
70 (all x (F(x) <-> RPF(x) | DPF(x))) # label(non_clause).  [assumption].
71 (all x (-RPF(x) | -DPF(x))) # label(non_clause).  [assumption].
72 (all x all y (DK1(x,y) -> M(x))) # label(non_clause).  [assumption].
73 (all x all y (DK1(x,y) -> POD(y) | F(y))) # label(non_clause).  [assumption].
74 (all x all y all z (DK1(x,y) & DK1(z,y) -> x = z)) # label(non_clause).  [assumption].
75 (all y (POD(y) | RPF(y) -> (exists x DK1(x,y)))) # label(non_clause).  [assumption].
76 (exists x ZEX(x)) # label(non_clause).  [assumption].
77 (all x -(x < x)) # label(non_clause).  [assumption].
78 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
79 (all x all y all z (x < y & y <= z -> x < z)) # label(non_clause).  [assumption].
80 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
81 (all x all y (ZEX(x) & S(y) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
82 (all x all y (EqDim(x,y) <-> S(x) & S(y) & -(x < y) & -(y < x))) # label(non_clause).  [assumption].
83 (all x all y (x <= y <-> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
84 (all x (MaxDim(x) <-> S(x) & (all y (S(y) -> y <= x)))) # label(non_clause).  [assumption].
85 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & y < x -> ZEX(y))))) # label(non_clause).  [assumption].
86 (all x all y (Covers(x,y) <-> y < x & (all z (S(z) -> -(y < z & z < x))))) # label(non_clause).  [assumption].
87 (exists x MinDim(x)) # label(non_clause).  [assumption].
88 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
89 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
90 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
91 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
92 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
93 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
94 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
95 (all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
96 (all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
97 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
98 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
99 (all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
100 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
101 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
102 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
103 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
104 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
105 (all x (S(x) & -ZEX(x) -> (exists y (P(y,x) & Min(y))))) # label(non_clause).  [assumption].
106 (all x all y (S(x) & S(y) & BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
107 (all x all y all v all z (S(x) & S(y) & S(v) & S(z) & SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
108 (all x all y all z all v (S(x) & S(y) & S(v) & S(z) & SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
109 (all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & P(y,z) & (all v all w (S(v) & S(w) & P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
110 (all x all y all z (S(x) & S(y) & S(z) & BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
111 (all x all y (S(x) & S(y) & BCont(x,y) <-> S(x) & S(y) & -ZEX(x) & (all z (P(z,x) & Min(z) -> BCont(z,y))))) # label(non_clause).  [assumption].
112 (all x all y all z all v (TSum(x,y,z) & TSum(x,y,v) -> S(x) & S(y) & S(z) & v = z)) # label(non_clause).  [assumption].
113 (all x all y all z (TSum(x,y,z) -> TSum(y,x,z))) # label(non_clause).  [assumption].
114 (all x all y (x < y -> TSum(x,y,y))) # label(non_clause).  [assumption].
115 (all x all y all z all v (TSum(x,y,z) & x <= y & Cont(v,y) -> Cont(v,z))) # label(non_clause).  [assumption].
116 (all x all y all z all v (TSum(x,y,z) & Cont(v,z) & -Cont(v,x) -> Cont(difference(v,x),y))) # label(non_clause).  [assumption].
117 (all x all y all z (S(z) & EqDim(x,y) & (all v (PO(v,z) <-> PO(v,x) | PO(v,y))) -> TSum(x,y,z))) # label(non_clause).  [assumption].
118 (all x all y (EqDim(x,y) & (all z (Cont(z,x) & Cont(z,y) & Min(z) -> (exists u exists v (P(u,x) & P(v,y) & BCont(z,u) & BCont(z,v))))) -> (exists z TSum(x,y,z)))) # label(non_clause).  [assumption].
119 (all x (S(x) & -ZEX(x) -> Cont(x,Uni))) # label(non_clause).  [assumption].
120 (all x (Con(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
121 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
122 (all x (UCon(x) <-> S(x) & Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
123 (all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))) # label(non_clause).  [assumption].
124 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
125 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
126 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
127 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
128 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
129 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
130 (all x all y (ICont(x,y) <-> Cont(x,y) & (all z (Cont(z,x) -> -BCont(z,y))))) # label(non_clause).  [assumption].
131 (all x all y (TCont(x,y) <-> Cont(x,y) & (exists z (Cont(z,x) & BCont(z,y))))) # label(non_clause).  [assumption].
132 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
133 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
134 (all x all y (hostsv(x,y) -> hostscavity(x,y) | hoststunnel(x,y) | hostshollow(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating hostsh/2
135 hostsh(x,y) | -hostsv(x,y) | -ICon(r(x)).  [clausify(1)].
136 -hostsh(x,y) | hostsv(x,y).  [clausify(1)].
137 -hostsh(x,y) | ICon(r(x)).  [clausify(1)].
138 -Hole(x) | hostsh(f1(x),x).  [clausify(3)].
Derived: -Hole(x) | hostsv(f1(x),x).  [resolve(138,b,136,a)].
Derived: -Hole(x) | ICon(r(f1(x))).  [resolve(138,b,137,a)].
139 Hole(x) | -hostsh(y,x).  [clausify(3)].
Derived: Hole(x) | -hostsv(y,x) | -ICon(r(y)).  [resolve(139,b,135,a)].

Eliminating hostsg/2
140 hostsg(x,y) | -hostsv(x,y) | ICon(r(x)).  [clausify(2)].
141 -hostsg(x,y) | hostsv(x,y).  [clausify(2)].
142 -hostsg(x,y) | -ICon(r(x)).  [clausify(2)].
143 -Gap(x) | hostsg(f2(x),x).  [clausify(4)].
Derived: -Gap(x) | hostsv(f2(x),x).  [resolve(143,b,141,a)].
Derived: -Gap(x) | -ICon(r(f2(x))).  [resolve(143,b,142,a)].
144 Gap(x) | -hostsg(y,x).  [clausify(4)].
Derived: Gap(x) | -hostsv(y,x) | ICon(r(y)).  [resolve(144,b,140,a)].

Eliminating CAVITY/1
145 CAVITY(x) | -hostscavity(y,x).  [clausify(7)].
146 -CAVITY(x) | hostscavity(f3(x),x).  [clausify(7)].
Derived: -hostscavity(x,y) | hostscavity(f3(y),y).  [resolve(145,a,146,a)].

Eliminating hostscavityi/2
147 hostscavityi(x,y) | -hostscavity(x,y) | -ZEX(op(x,y)).  [clausify(8)].
148 -hostscavityi(x,y) | hostscavity(x,y).  [clausify(8)].
149 -hostscavityi(x,y) | ZEX(op(x,y)).  [clausify(8)].

Eliminating hostscavityt/2
150 hostscavityt(x,y) | -hostscavity(x,y) | ZEX(op(x,y)).  [clausify(9)].
151 -hostscavityt(x,y) | hostscavity(x,y).  [clausify(9)].
152 -hostscavityt(x,y) | -ZEX(op(x,y)).  [clausify(9)].

Eliminating HOL/1
153 HOL(x) | -hostshollow(y,x).  [clausify(11)].
154 -HOL(x) | hostshollow(f4(x),x).  [clausify(11)].
Derived: -hostshollow(x,y) | hostshollow(f4(y),y).  [resolve(153,a,154,a)].

Eliminating TUN/1
155 TUN(x) | -hoststunnel(y,x).  [clausify(13)].
156 -TUN(x) | hoststunnel(f5(x),x).  [clausify(13)].
Derived: -hoststunnel(x,y) | hoststunnel(f5(y),y).  [resolve(155,a,156,a)].

Eliminating hostsve/2
157 hostsve(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [clausify(14)].
158 -hostsve(x,y) | hostsv(x,y).  [clausify(14)].
159 -hostsve(x,y) | P(f6(x,y),op(x,y)).  [clausify(14)].
160 -hostsve(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)).  [clausify(14)].
161 -hostsve(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)).  [clausify(14)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)) | P(f6(x,y),op(x,y)).  [resolve(157,a,159,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | PO(r(y),r(u)).  [resolve(157,a,160,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | Cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(157,a,161,a)].
162 hostsve(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z).  [clausify(14)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z) | P(f6(x,y),op(x,y)).  [resolve(162,a,159,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | PO(r(y),r(u)).  [resolve(162,a,160,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | Cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(162,a,161,a)].
163 hostsve(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [clausify(14)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | P(f6(x,y),op(x,y)).  [resolve(163,a,159,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | PO(r(y),r(u)).  [resolve(163,a,160,a)].
Derived: -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))) | -hostsv(x,u) | -EqDim(intersection(f6(x,y),r(u)),f6(x,y)) | Cont(intersection(f6(x,y),r(u)),op(x,u)).  [resolve(163,a,161,a)].
164 -hostsvi(x,y) | -hostsve(x,y).  [clausify(15)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(164,b,157,a)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z).  [resolve(164,b,162,a)].
Derived: -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(164,b,163,a)].
165 hostsvi(x,y) | -hostsv(x,y) | hostsve(x,y).  [clausify(15)].
Derived: hostsvi(x,y) | -hostsv(x,y) | P(f6(x,y),op(x,y)).  [resolve(165,c,159,a)].
Derived: hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)).  [resolve(165,c,160,a)].
Derived: hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)).  [resolve(165,c,161,a)].

Eliminating hostsvi/2
166 hostsvi(x,y) | -hostsv(x,y) | P(f6(x,y),op(x,y)).  [resolve(165,c,159,a)].
167 -hostsvi(x,y) | hostsv(x,y).  [clausify(15)].
168 -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(164,b,157,a)].
169 -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z).  [resolve(164,b,162,a)].
170 -hostsvi(x,y) | -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(164,b,163,a)].
Derived: -hostsv(x,y) | P(f6(x,y),op(x,y)) | -hostsv(x,y) | -P(z,op(x,y)) | hostsv(x,f7(x,y,z)).  [resolve(166,a,168,a)].
Derived: -hostsv(x,y) | P(f6(x,y),op(x,y)) | -hostsv(x,y) | -P(z,op(x,y)) | EqDim(intersection(z,r(f7(x,y,z))),z).  [resolve(166,a,169,a)].
Derived: -hostsv(x,y) | P(f6(x,y),op(x,y)) | -hostsv(x,y) | -P(z,op(x,y)) | -PO(r(y),r(f7(x,y,z))) | -Cont(intersection(z,r(f7(x,y,z))),op(x,f7(x,y,z))).  [resolve(166,a,170,a)].
171 hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)).  [resolve(165,c,160,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)) | -hostsv(x,y) | -P(u,op(x,y)) | hostsv(x,f7(x,y,u)).  [resolve(171,a,168,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)) | -hostsv(x,y) | -P(u,op(x,y)) | EqDim(intersection(u,r(f7(x,y,u))),u).  [resolve(171,a,169,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | PO(r(y),r(z)) | -hostsv(x,y) | -P(u,op(x,y)) | -PO(r(y),r(f7(x,y,u))) | -Cont(intersection(u,r(f7(x,y,u))),op(x,f7(x,y,u))).  [resolve(171,a,170,a)].
172 hostsvi(x,y) | -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)).  [resolve(165,c,161,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -P(u,op(x,y)) | hostsv(x,f7(x,y,u)).  [resolve(172,a,168,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -P(u,op(x,y)) | EqDim(intersection(u,r(f7(x,y,u))),u).  [resolve(172,a,169,a)].
Derived: -hostsv(x,y) | -hostsv(x,z) | -EqDim(intersection(f6(x,y),r(z)),f6(x,y)) | Cont(intersection(f6(x,y),r(z)),op(x,z)) | -hostsv(x,y) | -P(u,op(x,y)) | -PO(r(y),r(f7(x,y,u))) | -Cont(intersection(u,r(f7(x,y,u))),op(x,f7(x,y,u))).  [resolve(172,a,170,a)].

Eliminating VS/2
173 VS(x,y) | -PED(x) | -S(y) | -Cont(y,ch(x)) | PO(y,r(x)).  [clausify(22)].
174 -VS(x,y) | PED(x).  [clausify(22)].
175 -VS(x,y) | S(y).  [clausify(22)].
176 -VS(x,y) | Cont(y,ch(x)).  [clausify(22)].
177 -VS(x,y) | -PO(y,r(x)).  [clausify(22)].
178 -hostsv(x,y) | VS(x,r(y)).  [clausify(26)].
Derived: -hostsv(x,y) | PED(x).  [resolve(178,b,174,a)].
Derived: -hostsv(x,y) | Cont(r(y),ch(x)).  [resolve(178,b,176,a)].
Derived: -hostsv(x,y) | -PO(r(y),r(x)).  [resolve(178,b,177,a)].

Eliminating SimpleV/1
179 SimpleV(x) | -ICon(r(x)) | -hostsv(y,x).  [clausify(23)].
180 -SimpleV(x) | ICon(r(x)).  [clausify(23)].
181 -SimpleV(x) | hostsv(f18(y,x),x).  [clausify(23)].
Derived: -ICon(r(x)) | -hostsv(y,x) | hostsv(f18(z,x),x).  [resolve(179,a,181,a)].
182 -V(x) | SimpleV(x) | ComplexV(x).  [clausify(25)].
Derived: -V(x) | ComplexV(x) | ICon(r(x)).  [resolve(182,b,180,a)].
Derived: -V(x) | ComplexV(x) | hostsv(f18(y,x),x).  [resolve(182,b,181,a)].
183 V(x) | -SimpleV(x).  [clausify(25)].
Derived: V(x) | -ICon(r(x)) | -hostsv(y,x).  [resolve(183,b,179,a)].
184 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | SimpleV(f20(x,y,z)).  [clausify(27)].
Derived: -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | ICon(r(f20(x,y,z))).  [resolve(184,d,180,a)].
Derived: -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | hostsv(f18(u,f20(x,y,z)),f20(x,y,z)).  [resolve(184,d,181,a)].
Derived: -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | V(f20(x,y,z)).  [resolve(184,d,183,b)].

Eliminating ComplexV/1
185 ComplexV(x) | ICon(r(x)) | -hostsv(y,x).  [clausify(24)].
186 -ComplexV(x) | -ICon(r(x)).  [clausify(24)].
187 -ComplexV(x) | hostsv(f19(y,x),x).  [clausify(24)].
Derived: ICon(r(x)) | -hostsv(y,x) | hostsv(f19(z,x),x).  [resolve(185,a,187,a)].
188 V(x) | -ComplexV(x).  [clausify(25)].
Derived: V(x) | ICon(r(x)) | -hostsv(y,x).  [resolve(188,b,185,a)].
189 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | hostsv(x,f20(x,y,z)).  [clausify(27)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | hostsv(x,f20(x,y,z)) | ICon(r(y)) | -hostsv(u,y).  [resolve(189,b,185,a)].
190 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | PO(r(z),r(f20(x,y,z))).  [clausify(27)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | PO(r(z),r(f20(x,y,z))) | ICon(r(y)) | -hostsv(u,y).  [resolve(190,b,185,a)].
191 -V(x) | ComplexV(x) | ICon(r(x)).  [resolve(182,b,180,a)].
Derived: -V(x) | ICon(r(x)) | hostsv(f19(y,x),x).  [resolve(191,b,187,a)].
192 -V(x) | ComplexV(x) | hostsv(f18(y,x),x).  [resolve(182,b,181,a)].
Derived: -V(x) | hostsv(f18(y,x),x) | -ICon(r(x)).  [resolve(192,b,186,a)].
Derived: -V(x) | hostsv(f18(y,x),x) | hostsv(f19(z,x),x).  [resolve(192,b,187,a)].
Derived: -V(x) | hostsv(f18(y,x),x) | -hostsv(z,x) | -PO(r(u),r(x)) | hostsv(z,f20(z,x,u)).  [resolve(192,b,189,b)].
Derived: -V(x) | hostsv(f18(y,x),x) | -hostsv(z,x) | -PO(r(u),r(x)) | PO(r(u),r(f20(z,x,u))).  [resolve(192,b,190,b)].
193 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | ICon(r(f20(x,y,z))).  [resolve(184,d,180,a)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | ICon(r(f20(x,y,z))) | ICon(r(y)) | -hostsv(u,y).  [resolve(193,b,185,a)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | ICon(r(f20(x,y,z))) | -V(y) | hostsv(f18(u,y),y).  [resolve(193,b,192,b)].
194 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | hostsv(f18(u,f20(x,y,z)),f20(x,y,z)).  [resolve(184,d,181,a)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | hostsv(f18(u,f20(x,y,z)),f20(x,y,z)) | ICon(r(y)) | -hostsv(w,y).  [resolve(194,b,185,a)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | hostsv(f18(u,f20(x,y,z)),f20(x,y,z)) | -V(y) | hostsv(f18(w,y),y).  [resolve(194,b,192,b)].
195 -hostsv(x,y) | -ComplexV(y) | -PO(r(z),r(y)) | V(f20(x,y,z)).  [resolve(184,d,183,b)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | V(f20(x,y,z)) | ICon(r(y)) | -hostsv(u,y).  [resolve(195,b,185,a)].
Derived: -hostsv(x,y) | -PO(r(z),r(y)) | V(f20(x,y,z)) | -V(y) | hostsv(f18(u,y),y).  [resolve(195,b,192,b)].

Eliminating RPF/1
196 -hostsv(x,y) | F(x) | RPF(f22(x,y)).  [clausify(30)].
197 -hostsv(x,y) | -RPF(x) | hosts(f21(x,y),x).  [clausify(29)].
198 -hostsv(x,y) | -RPF(x) | -F(f21(x,y)).  [clausify(29)].
199 -hostsv(x,y) | -RPF(x) | hostsv(f21(x,y),y).  [clausify(29)].
Derived: -hostsv(x,y) | F(x) | -hostsv(f22(x,y),z) | hosts(f21(f22(x,y),z),f22(x,y)).  [resolve(196,c,197,b)].
Derived: -hostsv(x,y) | F(x) | -hostsv(f22(x,y),z) | -F(f21(f22(x,y),z)).  [resolve(196,c,198,b)].
Derived: -hostsv(x,y) | F(x) | -hostsv(f22(x,y),z) | hostsv(f21(f22(x,y),z),z).  [resolve(196,c,199,b)].
200 -hosts(x,y) | -RPF(y) | P(r(x),r(y)).  [clausify(56)].
Derived: -hosts(x,f22(y,z)) | P(r(x),r(f22(y,z))) | -hostsv(y,z) | F(y).  [resolve(200,b,196,c)].
201 -hosts(x,y) | RPF(y) | -P(r(x),r(y)).  [clausify(56)].
Derived: -hosts(x,y) | -P(r(x),r(y)) | -hostsv(y,z) | hosts(f21(y,z),y).  [resolve(201,b,197,b)].
Derived: -hosts(x,y) | -P(r(x),r(y)) | -hostsv(y,z) | -F(f21(y,z)).  [resolve(201,b,198,b)].
Derived: -hosts(x,y) | -P(r(x),r(y)) | -hostsv(y,z) | hostsv(f21(y,z),z).  [resolve(201,b,199,b)].
Derived: -hosts(x,y) | -P(r(x),r(y)) | -hosts(z,y) | P(r(z),r(y)).  [resolve(201,b,200,b)].
202 -hosts(x,y) | -RPF(y) | -DK1(z,x) | -DK1(u,y) | P(r(u),r(z)).  [clausify(57)].
Derived: -hosts(x,f22(y,z)) | -DK1(u,x) | -DK1(w,f22(y,z)) | P(r(w),r(u)) | -hostsv(y,z) | F(y).  [resolve(202,b,196,c)].
Derived: -hosts(x,y) | -DK1(z,x) | -DK1(u,y) | P(r(u),r(z)) | -hosts(w,y) | -P(r(w),r(y)).  [resolve(202,b,201,b)].
203 -F(x) | RPF(x) | DPF(x).  [clausify(70)].
Derived: -F(x) | DPF(x) | -hostsv(x,y) | hosts(f21(x,y),x).  [resolve(203,b,197,b)].
Derived: -F(x) | DPF(x) | -hostsv(x,y) | -F(f21(x,y)).  [resolve(203,b,198,b)].
Derived: -F(x) | DPF(x) | -hostsv(x,y) | hostsv(f21(x,y),y).  [resolve(203,b,199,b)].
Derived: -F(x) | DPF(x) | -hosts(y,x) | P(r(y),r(x)).  [resolve(203,b,200,b)].
Derived: -F(x) | DPF(x) | -hosts(y,x) | -DK1(z,y) | -DK1(u,x) | P(r(u),r(z)).  [resolve(203,b,202,b)].
204 F(x) | -RPF(x).  [clausify(70)].
Derived: F(f22(x,y)) | -hostsv(x,y) | F(x).  [resolve(204,b,196,c)].
Derived: F(x) | -hosts(y,x) | -P(r(y),r(x)).  [resolve(204,b,201,b)].
205 -RPF(x) | -DPF(x).  [clausify(71)].
Derived: -DPF(f22(x,y)) | -hostsv(x,y) | F(x).  [resolve(205,a,196,c)].
Derived: -DPF(x) | -hosts(y,x) | -P(r(y),r(x)).  [resolve(205,a,201,b)].
206 -RPF(x) | DK1(f28(x),x).  [clausify(75)].
Derived: DK1(f28(f22(x,y)),f22(x,y)) | -hostsv(x,y) | F(x).  [resolve(206,a,196,c)].
Derived: DK1(f28(x),x) | -hosts(y,x) | -P(r(y),r(x)).  [resolve(206,a,201,b)].
Derived: DK1(f28(x),x) | -F(x) | DPF(x).  [resolve(206,a,203,b)].

Eliminating PED/1
207 -POD(x) | PED(x).  [clausify(60)].
208 -hostsv(x,y) | -P(r(x),r(y)) | -PED(y) | DPF(y) | Cont(r(z),r(y)) | Cont(difference(r(z),r(y)),r(f23(x,y,z))).  [clausify(32)].
209 -hostsv(x,y) | -P(r(x),r(y)) | -PED(y) | DPF(y) | Cont(r(z),r(y)) | hostsv(y,f23(x,y,z)).  [clausify(32)].
210 -hostsv(x,y) | -P(r(z),r(x)) | -PED(z) | DPF(z) | -PO(r(y),ch(z)) | intersection(r(y),ch(z)) = r(f24(x,z,y)).  [clausify(33)].
211 -hostsv(x,y) | -P(r(z),r(x)) | -PED(z) | DPF(z) | -PO(r(y),ch(z)) | hostsv(z,f24(x,z,y)).  [clausify(33)].
212 -PED(x) | -S(x).  [clausify(47)].
213 -PED(x) | MaxDim(r(x)).  [clausify(54)].
214 -PED(x) | POD(x) | M(x) | F(x).  [clausify(59)].
Derived: -POD(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | Cont(difference(r(z),r(x)),r(f23(y,x,z))).  [resolve(207,b,208,c)].
Derived: -POD(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | hostsv(x,f23(y,x,z)).  [resolve(207,b,209,c)].
Derived: -POD(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | intersection(r(z),ch(x)) = r(f24(y,x,z)).  [resolve(207,b,210,c)].
Derived: -POD(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | hostsv(x,f24(y,x,z)).  [resolve(207,b,211,c)].
Derived: -POD(x) | -S(x).  [resolve(207,b,212,a)].
Derived: -POD(x) | MaxDim(r(x)).  [resolve(207,b,213,a)].
215 -M(x) | PED(x).  [clausify(61)].
Derived: -M(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | Cont(difference(r(z),r(x)),r(f23(y,x,z))).  [resolve(215,b,208,c)].
Derived: -M(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | hostsv(x,f23(y,x,z)).  [resolve(215,b,209,c)].
Derived: -M(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | intersection(r(z),ch(x)) = r(f24(y,x,z)).  [resolve(215,b,210,c)].
Derived: -M(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | hostsv(x,f24(y,x,z)).  [resolve(215,b,211,c)].
Derived: -M(x) | -S(x).  [resolve(215,b,212,a)].
Derived: -M(x) | MaxDim(r(x)).  [resolve(215,b,213,a)].
216 -F(x) | PED(x).  [clausify(62)].
Derived: -F(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | Cont(difference(r(z),r(x)),r(f23(y,x,z))).  [resolve(216,b,208,c)].
Derived: -F(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | hostsv(x,f23(y,x,z)).  [resolve(216,b,209,c)].
Derived: -F(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | intersection(r(z),ch(x)) = r(f24(y,x,z)).  [resolve(216,b,210,c)].
Derived: -F(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | hostsv(x,f24(y,x,z)).  [resolve(216,b,211,c)].
Derived: -F(x) | -S(x).  [resolve(216,b,212,a)].
Derived: -F(x) | MaxDim(r(x)).  [resolve(216,b,213,a)].
217 -hosts(x,y) | PED(x).  [clausify(67)].
Derived: -hosts(x,y) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(217,b,208,c)].
Derived: -hosts(x,y) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(217,b,209,c)].
Derived: -hosts(x,y) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(217,b,210,c)].
Derived: -hosts(x,y) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(217,b,211,c)].
Derived: -hosts(x,y) | -S(x).  [resolve(217,b,212,a)].
Derived: -hosts(x,y) | MaxDim(r(x)).  [resolve(217,b,213,a)].
Derived: -hosts(x,y) | POD(x) | M(x) | F(x).  [resolve(217,b,214,a)].
218 -hostsv(x,y) | PED(x).  [resolve(178,b,174,a)].
Derived: -hostsv(x,y) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(218,b,208,c)].
Derived: -hostsv(x,y) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(218,b,209,c)].
Derived: -hostsv(x,y) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(218,b,210,c)].
Derived: -hostsv(x,y) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(218,b,211,c)].
Derived: -hostsv(x,y) | -S(x).  [resolve(218,b,212,a)].
Derived: -hostsv(x,y) | MaxDim(r(x)).  [resolve(218,b,213,a)].
Derived: -hostsv(x,y) | POD(x) | M(x) | F(x).  [resolve(218,b,214,a)].

Eliminating Closed/1
219 -Closed(x) | -BCont(y,x).  [clausify(129)].
220 ZEX(x) | Closed(r(x)) | TCont(r(x),ch(x)).  [clausify(39)].
221 -ICont(r(x),r(y)) | Closed(difference(r(y),r(x))) | ch(difference(r(y),r(x))) != difference(r(y),r(x)).  [clausify(43)].
Derived: -BCont(x,r(y)) | ZEX(y) | TCont(r(y),ch(y)).  [resolve(219,a,220,b)].
Derived: -BCont(x,difference(r(y),r(z))) | -ICont(r(z),r(y)) | ch(difference(r(y),r(z))) != difference(r(y),r(z)).  [resolve(219,a,221,b)].
222 Closed(x) | BCont(f51(x),x).  [clausify(129)].
Derived: BCont(f51(x),x) | -BCont(y,x).  [resolve(222,a,219,a)].

Eliminating C/2
223 -C(x,y) | Cont(f32(x,y),x).  [clausify(93)].
224 ch(x) != ch(y) | ZEX(y) | C(r(y),r(x)).  [clausify(41)].
225 -EqDim(x,y) | -EqDim(y,z) | -SC(x,y) | -SC(y,z) | C(x,z) | -TSum(x,y,u) | -TSum(y,z,w) | ch(u) != u | ch(w) != w | ch(y) = y.  [clausify(46)].
Derived: Cont(f32(r(x),r(y)),r(x)) | ch(y) != ch(x) | ZEX(x).  [resolve(223,a,224,c)].
Derived: Cont(f32(x,y),x) | -EqDim(x,z) | -EqDim(z,y) | -SC(x,z) | -SC(z,y) | -TSum(x,z,u) | -TSum(z,y,w) | ch(u) != u | ch(w) != w | ch(z) = z.  [resolve(223,a,225,e)].
226 -C(x,y) | Cont(f32(x,y),y).  [clausify(93)].
Derived: Cont(f32(r(x),r(y)),r(y)) | ch(y) != ch(x) | ZEX(x).  [resolve(226,a,224,c)].
Derived: Cont(f32(x,y),y) | -EqDim(x,z) | -EqDim(z,y) | -SC(x,z) | -SC(z,y) | -TSum(x,z,u) | -TSum(z,y,w) | ch(u) != u | ch(w) != w | ch(z) = z.  [resolve(226,a,225,e)].
227 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(93)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f32(y,z),y).  [resolve(227,a,223,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f32(y,z),z).  [resolve(227,a,226,a)].
228 -S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).  [clausify(95)].
Derived: -S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(f32(x,y),x).  [resolve(228,c,223,a)].
Derived: -S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(f32(x,y),y).  [resolve(228,c,226,a)].
229 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(95)].
Derived: -ZEX(intersection(r(x),r(y))) | ch(y) != ch(x) | ZEX(x).  [resolve(229,a,224,c)].
Derived: -ZEX(intersection(x,y)) | -EqDim(x,z) | -EqDim(z,y) | -SC(x,z) | -SC(z,y) | -TSum(x,z,u) | -TSum(z,y,w) | ch(u) != u | ch(w) != w | ch(z) = z.  [resolve(229,a,225,e)].
Derived: -ZEX(intersection(x,y)) | -Cont(z,x) | -Cont(z,y).  [resolve(229,a,227,a)].

Eliminating POD/1
230 -NAPO(x) | POD(x).  [clausify(66)].
231 -POD(x) | -M(x).  [clausify(63)].
232 -POD(x) | -F(x).  [clausify(64)].
Derived: -NAPO(x) | -M(x).  [resolve(230,b,231,a)].
Derived: -NAPO(x) | -F(x).  [resolve(230,b,232,a)].
233 -DK1(x,y) | POD(y) | F(y).  [clausify(73)].
Derived: -DK1(x,y) | F(y) | -M(y).  [resolve(233,b,231,a)].
234 -POD(x) | DK1(f28(x),x).  [clausify(75)].
Derived: DK1(f28(x),x) | -NAPO(x).  [resolve(234,a,230,b)].
Derived: DK1(f28(x),x) | -DK1(y,x) | F(x).  [resolve(234,a,233,b)].
235 -POD(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | Cont(difference(r(z),r(x)),r(f23(y,x,z))).  [resolve(207,b,208,c)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | Cont(difference(r(z),r(y)),r(f23(x,y,z))) | -NAPO(y).  [resolve(235,a,230,b)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | Cont(difference(r(z),r(y)),r(f23(x,y,z))) | -DK1(u,y) | F(y).  [resolve(235,a,233,b)].
236 -POD(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | hostsv(x,f23(y,x,z)).  [resolve(207,b,209,c)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | hostsv(y,f23(x,y,z)) | -NAPO(y).  [resolve(236,a,230,b)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | hostsv(y,f23(x,y,z)) | -DK1(u,y) | F(y).  [resolve(236,a,233,b)].
237 -POD(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | intersection(r(z),ch(x)) = r(f24(y,x,z)).  [resolve(207,b,210,c)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | intersection(r(y),ch(z)) = r(f24(x,z,y)) | -NAPO(z).  [resolve(237,a,230,b)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | intersection(r(y),ch(z)) = r(f24(x,z,y)) | -DK1(u,z) | F(z).  [resolve(237,a,233,b)].
238 -POD(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | hostsv(x,f24(y,x,z)).  [resolve(207,b,211,c)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | hostsv(z,f24(x,z,y)) | -NAPO(z).  [resolve(238,a,230,b)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | hostsv(z,f24(x,z,y)) | -DK1(u,z) | F(z).  [resolve(238,a,233,b)].
239 -POD(x) | -S(x).  [resolve(207,b,212,a)].
Derived: -S(x) | -NAPO(x).  [resolve(239,a,230,b)].
Derived: -S(x) | -DK1(y,x) | F(x).  [resolve(239,a,233,b)].
240 -POD(x) | MaxDim(r(x)).  [resolve(207,b,213,a)].
Derived: MaxDim(r(x)) | -NAPO(x).  [resolve(240,a,230,b)].
Derived: MaxDim(r(x)) | -DK1(y,x) | F(x).  [resolve(240,a,233,b)].
241 -hosts(x,y) | POD(x) | M(x) | F(x).  [resolve(217,b,214,a)].
Derived: -hosts(x,y) | M(x) | F(x) | DK1(f28(x),x).  [resolve(241,b,234,a)].
Derived: -hosts(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(241,b,235,a)].
Derived: -hosts(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(241,b,236,a)].
Derived: -hosts(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(241,b,237,a)].
Derived: -hosts(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(241,b,238,a)].
Derived: -hosts(x,y) | M(x) | F(x) | -S(x).  [resolve(241,b,239,a)].
Derived: -hosts(x,y) | M(x) | F(x) | MaxDim(r(x)).  [resolve(241,b,240,a)].
242 -hostsv(x,y) | POD(x) | M(x) | F(x).  [resolve(218,b,214,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | DK1(f28(x),x).  [resolve(242,b,234,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(242,b,235,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(242,b,236,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(242,b,237,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(242,b,238,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | -S(x).  [resolve(242,b,239,a)].
Derived: -hostsv(x,y) | M(x) | F(x) | MaxDim(r(x)).  [resolve(242,b,240,a)].

Eliminating M/1
243 -DK1(x,y) | M(x).  [clausify(72)].
244 -M(x) | -F(x).  [clausify(65)].
Derived: -DK1(x,y) | -F(x).  [resolve(243,b,244,a)].
245 -M(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | Cont(difference(r(z),r(x)),r(f23(y,x,z))).  [resolve(215,b,208,c)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | Cont(difference(r(z),r(y)),r(f23(x,y,z))) | -DK1(y,u).  [resolve(245,a,243,b)].
246 -M(x) | -hostsv(y,x) | -P(r(y),r(x)) | DPF(x) | Cont(r(z),r(x)) | hostsv(x,f23(y,x,z)).  [resolve(215,b,209,c)].
Derived: -hostsv(x,y) | -P(r(x),r(y)) | DPF(y) | Cont(r(z),r(y)) | hostsv(y,f23(x,y,z)) | -DK1(y,u).  [resolve(246,a,243,b)].
247 -M(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | intersection(r(z),ch(x)) = r(f24(y,x,z)).  [resolve(215,b,210,c)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | intersection(r(y),ch(z)) = r(f24(x,z,y)) | -DK1(z,u).  [resolve(247,a,243,b)].
248 -M(x) | -hostsv(y,z) | -P(r(x),r(y)) | DPF(x) | -PO(r(z),ch(x)) | hostsv(x,f24(y,x,z)).  [resolve(215,b,211,c)].
Derived: -hostsv(x,y) | -P(r(z),r(x)) | DPF(z) | -PO(r(y),ch(z)) | hostsv(z,f24(x,z,y)) | -DK1(z,u).  [resolve(248,a,243,b)].
249 -M(x) | -S(x).  [resolve(215,b,212,a)].
Derived: -S(x) | -DK1(x,y).  [resolve(249,a,243,b)].
250 -M(x) | MaxDim(r(x)).  [resolve(215,b,213,a)].
Derived: MaxDim(r(x)) | -DK1(x,y).  [resolve(250,a,243,b)].
251 -NAPO(x) | -M(x).  [resolve(230,b,231,a)].
Derived: -NAPO(x) | -DK1(x,y).  [resolve(251,b,243,b)].
252 -DK1(x,y) | F(y) | -M(y).  [resolve(233,b,231,a)].
Derived: -DK1(x,y) | F(y) | -DK1(y,z).  [resolve(252,c,243,b)].
253 -hosts(x,y) | M(x) | F(x) | DK1(f28(x),x).  [resolve(241,b,234,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(253,b,245,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(253,b,246,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(253,b,247,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(253,b,248,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -S(x).  [resolve(253,b,249,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | MaxDim(r(x)).  [resolve(253,b,250,a)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -NAPO(x).  [resolve(253,b,251,b)].
Derived: -hosts(x,y) | F(x) | DK1(f28(x),x) | -DK1(z,x) | F(x).  [resolve(253,b,252,c)].
254 -hosts(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(241,b,235,a)].
Derived: -hosts(x,y) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))) | -hostsv(w,x) | -P(r(w),r(x)) | DPF(x) | Cont(r(v5),r(x)) | Cont(difference(r(v5),r(x)),r(f23(w,x,v5))).  [resolve(254,b,245,a)].
255 -hosts(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(241,b,236,a)].
Derived: -hosts(x,y) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)) | -hostsv(w,x) | -P(r(w),r(x)) | DPF(x) | Cont(r(v5),r(x)) | hostsv(x,f23(w,x,v5)).  [resolve(255,b,246,a)].
256 -hosts(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(241,b,237,a)].
Derived: -hosts(x,y) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)) | -hostsv(w,v5) | -P(r(x),r(w)) | DPF(x) | -PO(r(v5),ch(x)) | intersection(r(v5),ch(x)) = r(f24(w,x,v5)).  [resolve(256,b,247,a)].
257 -hosts(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(241,b,238,a)].
Derived: -hosts(x,y) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)) | -hostsv(w,v5) | -P(r(x),r(w)) | DPF(x) | -PO(r(v5),ch(x)) | hostsv(x,f24(w,x,v5)).  [resolve(257,b,248,a)].
258 -hosts(x,y) | M(x) | F(x) | -S(x).  [resolve(241,b,239,a)].
Derived: -hosts(x,y) | F(x) | -S(x) | -S(x).  [resolve(258,b,249,a)].
259 -hosts(x,y) | M(x) | F(x) | MaxDim(r(x)).  [resolve(241,b,240,a)].
Derived: -hosts(x,y) | F(x) | MaxDim(r(x)) | MaxDim(r(x)).  [resolve(259,b,250,a)].
260 -hostsv(x,y) | M(x) | F(x) | DK1(f28(x),x).  [resolve(242,b,234,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(260,b,245,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(260,b,246,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(260,b,247,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(260,b,248,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -S(x).  [resolve(260,b,249,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | MaxDim(r(x)).  [resolve(260,b,250,a)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -NAPO(x).  [resolve(260,b,251,b)].
Derived: -hostsv(x,y) | F(x) | DK1(f28(x),x) | -DK1(z,x) | F(x).  [resolve(260,b,252,c)].
261 -hostsv(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))).  [resolve(242,b,235,a)].
Derived: -hostsv(x,y) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | Cont(difference(r(u),r(x)),r(f23(z,x,u))) | -hostsv(w,x) | -P(r(w),r(x)) | DPF(x) | Cont(r(v5),r(x)) | Cont(difference(r(v5),r(x)),r(f23(w,x,v5))).  [resolve(261,b,245,a)].
262 -hostsv(x,y) | M(x) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)).  [resolve(242,b,236,a)].
Derived: -hostsv(x,y) | F(x) | -hostsv(z,x) | -P(r(z),r(x)) | DPF(x) | Cont(r(u),r(x)) | hostsv(x,f23(z,x,u)) | -hostsv(w,x) | -P(r(w),r(x)) | DPF(x) | Cont(r(v5),r(x)) | hostsv(x,f23(w,x,v5)).  [resolve(262,b,246,a)].
263 -hostsv(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)).  [resolve(242,b,237,a)].
Derived: -hostsv(x,y) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | intersection(r(u),ch(x)) = r(f24(z,x,u)) | -hostsv(w,v5) | -P(r(x),r(w)) | DPF(x) | -PO(r(v5),ch(x)) | intersection(r(v5),ch(x)) = r(f24(w,x,v5)).  [resolve(263,b,247,a)].
264 -hostsv(x,y) | M(x) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)).  [resolve(242,b,238,a)].
Derived: -hostsv(x,y) | F(x) | -hostsv(z,u) | -P(r(x),r(z)) | DPF(x) | -PO(r(u),ch(x)) | hostsv(x,f24(z,x,u)) | -hostsv(w,v5) | -P(r(x),r(w)) | DPF(x) | -PO(r(v5),ch(x)) | hostsv(x,f24(w,x,v5)).  [resolve(264,b,248,a)].
265 -hostsv(x,y) | M(x) | F(x) | -S(x).  [resolve(242,b,239,a)].
Derived: -hostsv(x,y) | F(x) | -S(x) | -S(x).  [resolve(265,b,249,a)].
266 -hostsv(x,y) | M(x) | F(x) | MaxDim(r(x)).  [resolve(242,b,240,a)].
Derived: -hostsv(x,y) | F(x) | MaxDim(r(x)) | MaxDim(r(x)).  [resolve(266,b,250,a)].

Eliminating MinDim/1
267 MinDim(x) | -S(x) | ZEX(x) | S(f30(x)).  [clausify(85)].
268 -MinDim(x) | S(x).  [clausify(85)].
269 -MinDim(x) | -ZEX(x).  [clausify(85)].
270 -MinDim(x) | -S(y) | -(y < x) | ZEX(y).  [clausify(85)].
Derived: -S(x) | ZEX(x) | S(f30(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(267,a,270,a)].
271 MinDim(x) | -S(x) | ZEX(x) | f30(x) < x.  [clausify(85)].
Derived: -S(x) | ZEX(x) | f30(x) < x | -S(y) | -(y < x) | ZEX(y).  [resolve(271,a,270,a)].
272 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f30(x)).  [clausify(85)].
Derived: -S(x) | ZEX(x) | -ZEX(f30(x)) | -S(y) | -(y < x) | ZEX(y).  [resolve(272,a,270,a)].
273 MinDim(c2).  [clausify(87)].
Derived: S(c2).  [resolve(273,a,268,a)].
Derived: -ZEX(c2).  [resolve(273,a,269,a)].
Derived: -S(x) | -(x < c2) | ZEX(x).  [resolve(273,a,270,a)].

Eliminating Min/1
274 -S(x) | -S(y) | -S(z) | -S(u) | -SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(107)].
275 -S(x) | ZEX(x) | Min(f33(x)).  [clausify(105)].
Derived: -S(f33(x)) | -S(y) | -S(z) | -S(u) | -SC(f33(x),y) | -P(f33(x),z) | -Cont(y,z) | -Cont(u,f33(x)) | -Cont(u,y) | BCont(u,f33(x)) | -S(x) | ZEX(x).  [resolve(274,f,275,c)].
276 -S(x) | -S(y) | -BCont(x,y) | -P(z,x) | -Min(z) | BCont(z,y).  [clausify(111)].
Derived: -S(x) | -S(y) | -BCont(x,y) | -P(f33(z),x) | BCont(f33(z),y) | -S(z) | ZEX(z).  [resolve(276,e,275,c)].
277 BCont(x,y) | -S(x) | -S(y) | ZEX(x) | Min(f36(x,y)).  [clausify(111)].
Derived: BCont(x,y) | -S(x) | -S(y) | ZEX(x) | -S(f36(x,y)) | -S(z) | -S(u) | -S(w) | -SC(f36(x,y),z) | -P(f36(x,y),u) | -Cont(z,u) | -Cont(w,f36(x,y)) | -Cont(w,z) | BCont(w,f36(x,y)).  [resolve(277,e,274,f)].
Derived: BCont(x,y) | -S(x) | -S(y) | ZEX(x) | -S(z) | -S(u) | -BCont(z,u) | -P(f36(x,y),z) | BCont(f36(x,y),u).  [resolve(277,e,276,e)].
278 -EqDim(x,y) | Min(f38(x,y)) | TSum(x,y,f39(x,y)).  [clausify(118)].
Derived: -EqDim(x,y) | TSum(x,y,f39(x,y)) | -S(f38(x,y)) | -S(z) | -S(u) | -S(w) | -SC(f38(x,y),z) | -P(f38(x,y),u) | -Cont(z,u) | -Cont(w,f38(x,y)) | -Cont(w,z) | BCont(w,f38(x,y)).  [resolve(278,b,274,f)].
Derived: -EqDim(x,y) | TSum(x,y,f39(x,y)) | -S(z) | -S(u) | -BCont(z,u) | -P(f38(x,y),z) | BCont(f38(x,y),u).  [resolve(278,b,276,e)].
279 -Min(x) | -ZEX(x).  [clausify(125)].
Derived: -ZEX(f33(x)) | -S(x) | ZEX(x).  [resolve(279,a,275,c)].
Derived: -ZEX(f36(x,y)) | BCont(x,y) | -S(x) | -S(y) | ZEX(x).  [resolve(279,a,277,e)].
Derived: -ZEX(f38(x,y)) | -EqDim(x,y) | TSum(x,y,f39(x,y)).  [resolve(279,a,278,b)].
280 -Min(x) | -PP(y,x).  [clausify(125)].
Derived: -PP(x,f33(y)) | -S(y) | ZEX(y).  [resolve(280,a,275,c)].
Derived: -PP(x,f36(y,z)) | BCont(y,z) | -S(y) | -S(z) | ZEX(y).  [resolve(280,a,277,e)].
Derived: -PP(x,f38(y,z)) | -EqDim(y,z) | TSum(y,z,f39(y,z)).  [resolve(280,a,278,b)].
281 Min(x) | ZEX(x) | PP(f45(x),x).  [clausify(125)].
Derived: ZEX(x) | PP(f45(x),x) | -S(x) | -S(y) | -S(z) | -S(u) | -SC(x,y) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [resolve(281,a,274,f)].
Derived: ZEX(x) | PP(f45(x),x) | -S(y) | -S(z) | -BCont(y,z) | -P(x,y) | BCont(x,z).  [resolve(281,a,276,e)].
Derived: ZEX(x) | PP(f45(x),x) | -PP(y,x).  [resolve(281,a,280,a)].

Eliminating Inc/2
282 -Inc(x,y) | f47(x,y) < x | f48(x,y) < y.  [clausify(127)].
283 -S(x) | -S(y) | -BCont(x,y) | Inc(x,y).  [clausify(106)].
Derived: f47(x,y) < x | f48(x,y) < y | -S(x) | -S(y) | -BCont(x,y).  [resolve(282,a,283,d)].
284 -Inc(x,y) | f47(x,y) < x | Cont(f48(x,y),y).  [clausify(127)].
Derived: f47(x,y) < x | Cont(f48(x,y),y) | -S(x) | -S(y) | -BCont(x,y).  [resolve(284,a,283,d)].
285 -Inc(x,y) | f47(x,y) < x | P(f48(x,y),x).  [clausify(127)].
Derived: f47(x,y) < x | P(f48(x,y),x) | -S(x) | -S(y) | -BCont(x,y).  [resolve(285,a,283,d)].
286 -Inc(x,y) | Cont(f47(x,y),x) | f48(x,y) < y.  [clausify(127)].
Derived: Cont(f47(x,y),x) | f48(x,y) < y | -S(x) | -S(y) | -BCont(x,y).  [resolve(286,a,283,d)].
287 -Inc(x,y) | Cont(f47(x,y),x) | Cont(f48(x,y),y).  [clausify(127)].
Derived: Cont(f47(x,y),x) | Cont(f48(x,y),y) | -S(x) | -S(y) | -BCont(x,y).  [resolve(287,a,283,d)].
288 -Inc(x,y) | Cont(f47(x,y),x) | P(f48(x,y),x).  [clausify(127)].
Derived: Cont(f47(x,y),x) | P(f48(x,y),x) | -S(x) | -S(y) | -BCont(x,y).  [resolve(288,a,283,d)].
289 -Inc(x,y) | P(f47(x,y),y) | f48(x,y) < y.  [clausify(127)].
Derived: P(f47(x,y),y) | f48(x,y) < y | -S(x) | -S(y) | -BCont(x,y).  [resolve(289,a,283,d)].
290 -Inc(x,y) | P(f47(x,y),y) | Cont(f48(x,y),y).  [clausify(127)].
Derived: P(f47(x,y),y) | Cont(f48(x,y),y) | -S(x) | -S(y) | -BCont(x,y).  [resolve(290,a,283,d)].
291 -Inc(x,y) | P(f47(x,y),y) | P(f48(x,y),x).  [clausify(127)].
Derived: P(f47(x,y),y) | P(f48(x,y),x) | -S(x) | -S(y) | -BCont(x,y).  [resolve(291,a,283,d)].
292 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(127)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(y,z) < y | f48(y,z) < z.  [resolve(292,a,282,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(y,z) < y | Cont(f48(y,z),z).  [resolve(292,a,284,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(y,z) < y | P(f48(y,z),y).  [resolve(292,a,285,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(y,z),y) | f48(y,z) < z.  [resolve(292,a,286,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(y,z),y) | Cont(f48(y,z),z).  [resolve(292,a,287,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(y,z),y) | P(f48(y,z),y).  [resolve(292,a,288,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(y,z),z) | f48(y,z) < z.  [resolve(292,a,289,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(y,z),z) | Cont(f48(y,z),z).  [resolve(292,a,290,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(y,z),z) | P(f48(y,z),y).  [resolve(292,a,291,a)].
293 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(127)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(z,y) < z | f48(z,y) < y.  [resolve(293,a,282,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(z,y) < z | Cont(f48(z,y),y).  [resolve(293,a,284,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | f47(z,y) < z | P(f48(z,y),z).  [resolve(293,a,285,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(z,y),z) | f48(z,y) < y.  [resolve(293,a,286,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(z,y),z) | Cont(f48(z,y),y).  [resolve(293,a,287,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | Cont(f47(z,y),z) | P(f48(z,y),z).  [resolve(293,a,288,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(z,y),y) | f48(z,y) < y.  [resolve(293,a,289,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(z,y),y) | Cont(f48(z,y),y).  [resolve(293,a,290,a)].
Derived: -(x < y) | -Cont(x,y) | -P(x,z) | P(f47(z,y),y) | P(f48(z,y),z).  [resolve(293,a,291,a)].

Eliminating Con/1
294 Con(x) | -S(x) | PP(f40(x),x).  [clausify(120)].
295 -Con(x) | S(x).  [clausify(120)].
296 -Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(120)].
Derived: -S(x) | PP(f40(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(294,a,296,a)].
297 Con(x) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [clausify(120)].
Derived: -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(297,a,296,a)].
298 -ICon(x) | Con(x).  [clausify(121)].
Derived: -ICon(x) | S(x).  [resolve(298,b,295,a)].
Derived: -ICon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(298,b,296,a)].
299 ICon(x) | -Con(x) | PP(f41(x),x).  [clausify(121)].
Derived: ICon(x) | PP(f41(x),x) | -S(x) | PP(f40(x),x).  [resolve(299,b,294,a)].
Derived: ICon(x) | PP(f41(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(299,b,297,a)].
300 ICon(x) | -Con(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [clausify(121)].
Derived: ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))) | -S(x) | PP(f40(x),x).  [resolve(300,b,294,a)].
Derived: ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(300,b,297,a)].
301 -UCon(x) | Con(x).  [clausify(122)].
Derived: -UCon(x) | S(x).  [resolve(301,b,295,a)].
Derived: -UCon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(301,b,296,a)].
Derived: -UCon(x) | ICon(x) | PP(f41(x),x).  [resolve(301,b,299,b)].
Derived: -UCon(x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(301,b,300,b)].
302 UCon(x) | -S(x) | -Con(x) | PP(f42(x),x).  [clausify(122)].
Derived: UCon(x) | -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x).  [resolve(302,c,294,a)].
Derived: UCon(x) | -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(302,c,297,a)].
Derived: UCon(x) | -S(x) | PP(f42(x),x) | -ICon(x).  [resolve(302,c,298,b)].
303 UCon(x) | -S(x) | -Con(x) | Cont(f43(x),f42(x)).  [clausify(122)].
Derived: UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x).  [resolve(303,c,294,a)].
Derived: UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(303,c,297,a)].
Derived: UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -ICon(x).  [resolve(303,c,298,b)].
304 UCon(x) | -S(x) | -Con(x) | Cont(f43(x),difference(x,f42(x))).  [clausify(122)].
Derived: UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x).  [resolve(304,c,294,a)].
Derived: UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(304,c,297,a)].
Derived: UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -ICon(x).  [resolve(304,c,298,b)].
305 UCon(x) | -S(x) | -Con(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))).  [clausify(122)].
Derived: UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x).  [resolve(305,c,294,a)].
Derived: UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(305,c,297,a)].
Derived: UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -ICon(x).  [resolve(305,c,298,b)].

Eliminating UCon/1
306 UCon(x) | -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x).  [resolve(302,c,294,a)].
307 -UCon(x) | S(x).  [clausify(122)].
308 -UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(122)].
309 -UCon(x) | S(x).  [resolve(301,b,295,a)].
310 -UCon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(301,b,296,a)].
311 -UCon(x) | ICon(x) | PP(f41(x),x).  [resolve(301,b,299,b)].
312 -UCon(x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(301,b,300,b)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(306,a,308,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(306,a,310,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x) | ICon(x) | PP(f41(x),x).  [resolve(306,a,311,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | PP(f40(x),x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(306,a,312,a)].
313 UCon(x) | -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(302,c,297,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(313,a,308,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(313,a,310,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | PP(f41(x),x).  [resolve(313,a,311,a)].
Derived: -S(x) | PP(f42(x),x) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(313,a,312,a)].
314 UCon(x) | -S(x) | PP(f42(x),x) | -ICon(x).  [resolve(302,c,298,b)].
Derived: -S(x) | PP(f42(x),x) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(314,a,308,a)].
Derived: -S(x) | PP(f42(x),x) | -ICon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(314,a,310,a)].
315 UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x).  [resolve(303,c,294,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(315,a,308,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(315,a,310,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x) | ICon(x) | PP(f41(x),x).  [resolve(315,a,311,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | PP(f40(x),x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(315,a,312,a)].
316 UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(303,c,297,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(316,a,308,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(316,a,310,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | PP(f41(x),x).  [resolve(316,a,311,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(316,a,312,a)].
317 UCon(x) | -S(x) | Cont(f43(x),f42(x)) | -ICon(x).  [resolve(303,c,298,b)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(317,a,308,a)].
Derived: -S(x) | Cont(f43(x),f42(x)) | -ICon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(317,a,310,a)].
318 UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x).  [resolve(304,c,294,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(318,a,308,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(318,a,310,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x) | ICon(x) | PP(f41(x),x).  [resolve(318,a,311,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | PP(f40(x),x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(318,a,312,a)].
319 UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(304,c,297,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(319,a,308,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(319,a,310,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | PP(f41(x),x).  [resolve(319,a,311,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(319,a,312,a)].
320 UCon(x) | -S(x) | Cont(f43(x),difference(x,f42(x))) | -ICon(x).  [resolve(304,c,298,b)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(320,a,308,a)].
Derived: -S(x) | Cont(f43(x),difference(x,f42(x))) | -ICon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(320,a,310,a)].
321 UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x).  [resolve(305,c,294,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(321,a,308,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(321,a,310,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x) | ICon(x) | PP(f41(x),x).  [resolve(321,a,311,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | PP(f40(x),x) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(321,a,312,a)].
322 UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))).  [resolve(305,c,297,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(322,a,308,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(322,a,310,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | PP(f41(x),x).  [resolve(322,a,311,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -S(x) | -SC(f40(x),difference(x,f40(x))) | ICon(x) | -Covers(x,intersection(f41(x),difference(x,f41(x)))).  [resolve(322,a,312,a)].
323 UCon(x) | -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -ICon(x).  [resolve(305,c,298,b)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -ICon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [resolve(323,a,308,a)].
Derived: -S(x) | -Cont(f43(x),intersection(f42(x),difference(x,f42(x)))) | -ICon(x) | -PP(y,x) | SC(y,difference(x,y)).  [resolve(323,a,310,a)].

Eliminating Max/1
324 Max(x) | ZEX(x) | PP(x,f44(x)).  [clausify(124)].
325 -Max(x) | -ZEX(x).  [clausify(124)].
326 -Max(x) | -PP(x,y).  [clausify(124)].
Derived: ZEX(x) | PP(x,f44(x)) | -PP(x,y).  [resolve(324,a,326,a)].

Eliminating TCont/2
327 TCont(x,y) | -Cont(x,y) | -Cont(z,x) | -BCont(z,y).  [clausify(131)].
328 -TCont(x,y) | Cont(x,y).  [clausify(131)].
329 -TCont(x,y) | Cont(f53(x,y),x).  [clausify(131)].
330 -TCont(x,y) | BCont(f53(x,y),y).  [clausify(131)].
Derived: -Cont(x,y) | -Cont(z,x) | -BCont(z,y) | Cont(f53(x,y),x).  [resolve(327,a,329,a)].
Derived: -Cont(x,y) | -Cont(z,x) | -BCont(z,y) | BCont(f53(x,y),y).  [resolve(327,a,330,a)].
331 -BCont(x,r(y)) | ZEX(y) | TCont(r(y),ch(y)).  [resolve(219,a,220,b)].
Derived: -BCont(x,r(y)) | ZEX(y) | Cont(r(y),ch(y)).  [resolve(331,c,328,a)].
Derived: -BCont(x,r(y)) | ZEX(y) | Cont(f53(r(y),ch(y)),r(y)).  [resolve(331,c,329,a)].
Derived: -BCont(x,r(y)) | ZEX(y) | BCont(f53(r(y),ch(y)),ch(y)).  [resolve(331,c,330,a)].

Eliminating Hole/1
332 Hole(x) | -hostsv(y,x) | -ICon(r(y)).  [resolve(139,b,135,a)].
333 -Hole(x) | hostsv(f1(x),x).  [resolve(138,b,136,a)].
334 -Hole(x) | ICon(r(f1(x))).  [resolve(138,b,137,a)].
Derived: -hostsv(x,y) | -ICon(r(x)) | hostsv(f1(y),y).  [resolve(332,a,333,a)].
Derived: -hostsv(x,y) | -ICon(r(x)) | ICon(r(f1(y))).  [resolve(332,a,334,a)].

Eliminating Gap/1
335 Gap(x) | -hostsv(y,x) | ICon(r(y)).  [resolve(144,b,140,a)].
336 -Gap(x) | hostsv(f2(x),x).  [resolve(143,b,141,a)].
337 -Gap(x) | -ICon(r(f2(x))).  [resolve(143,b,142,a)].
Derived: -hostsv(x,y) | ICon(r(x)) | hostsv(f2(y),y).  [resolve(335,a,336,a)].
Derived: -hostsv(x,y) | ICon(r(x)) | -ICon(r(f2(y))).  [resolve(335,a,337,a)].

Eliminating NAPO/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, S, ZEX, F, ICon, DPF, MaxDim, V, Cont, hostsv, P, PO, PP, <, BCont, SC, DK1, EqDim, hosts, Covers, <=, StrongC, hostshollow, hoststunnel, ICont, hostscavity, TSum ]).
Function symbol precedence:  function_order([ Uni, U, c1, c2, c3, c4, difference, intersection, op, sum, f6, f8, f9, f11, f16, f17, f18, f19, f21, f22, f25, f26, f31, f32, f36, f38, f39, f46, f47, f48, f49, f50, f52, f53, r, ch, porespace, voidspace, conporespace, convoidspace, f1, f2, f3, f4, f5, f12, f13, f14, f15, f27, f28, f29, f30, f33, f40, f41, f42, f43, f44, f45, f51, f7, f10, f20, f23, f24, f34, f35, f37 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.27 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 49 (0.00 of 0.31 sec).

============================== PROOF =================================

% Proof 1 at 0.51 (+ 0.01) seconds.
% Length of proof is 14.
% Level of proof is 4.
% Maximum clause weight is 16.000.
% Given clauses 917.

6 (all x all y (hostscavity(x,y) <-> hostsv(x,y) & -Covers(r(x),op(x,y)))) # label(non_clause).  [assumption].
10 (all x all y (hostshollow(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & ICon(op(x,y)))) # label(non_clause).  [assumption].
12 (all x all y (hoststunnel(x,y) <-> hostsv(x,y) & Covers(r(x),op(x,y)) & -ICon(op(x,y)))) # label(non_clause).  [assumption].
134 (all x all y (hostsv(x,y) -> hostscavity(x,y) | hoststunnel(x,y) | hostshollow(x,y))) # label(non_clause) # label(goal).  [goal].
341 hostscavity(x,y) | -hostsv(x,y) | Covers(r(x),op(x,y)).  [clausify(6)].
345 hostshollow(x,y) | -hostsv(x,y) | -Covers(r(x),op(x,y)) | -ICon(op(x,y)).  [clausify(10)].
349 hoststunnel(x,y) | -hostsv(x,y) | -Covers(r(x),op(x,y)) | ICon(op(x,y)).  [clausify(12)].
515 hostsv(c3,c4).  [deny(134)].
516 -hostscavity(c3,c4).  [deny(134)].
517 -hoststunnel(c3,c4).  [deny(134)].
518 -hostshollow(c3,c4).  [deny(134)].
1191 Covers(r(c3),op(c3,c4)).  [resolve(515,a,341,b),unit_del(a,516)].
3849 ICon(op(c3,c4)).  [resolve(1191,a,349,c),unit_del(a,517),unit_del(b,515)].
3850 $F.  [resolve(1191,a,345,c),unit_del(a,518),unit_del(b,515),unit_del(c,3849)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=917. Generated=6357. Kept=3448. proofs=1.
Usable=904. Sos=2360. Demods=41. Limbo=13, Disabled=808. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=2908. Back_subsumed=20.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=45 (0 lex), Back_demodulated=117. Back_unit_deleted=34.
Demod_attempts=116555. Demod_rewrites=1425.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=20107. Nonunit_bsub_feature_tests=6405.
Megabytes=17.81.
User_CPU=0.51, System_CPU=0.01, Wall_clock=1.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 23716 exit (max_proofs) Fri Nov  2 18:09:01 2012
