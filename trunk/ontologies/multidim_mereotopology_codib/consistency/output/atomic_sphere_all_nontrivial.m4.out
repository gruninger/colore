============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 11119 was started by torsten on stl-ws2,
Tue Oct  8 19:08:50 2013
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/areal_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_sphere.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/conversions/atomic_sphere_all_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/areal_region.p9


formulas(sos).
(all x (ArealRegion(x) <-> (all y (Curve(y) <-> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_sphere.p9


formulas(sos).
(all x (AtomicSphere(x) <-> ArealRegion(x) & Min(x) & Closed(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/conversions/atomic_sphere_all_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (x0 <= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 <= x1) & x0 != x1)).
(exists x0 PointRegion(x0)).
(exists x0 -PointRegion(x0)).
(exists x0 exists x1 (x0 > x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 > x1) & x0 != x1)).
(exists x0 exists x1 (P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-P(x0,x1) & x0 != x1)).
(exists x0 MaxDim(x0)).
(exists x0 -MaxDim(x0)).
(exists x0 Max(x0)).
(exists x0 -Max(x0)).
(exists x0 ArealRegion(x0)).
(exists x0 -ArealRegion(x0)).
(exists x0 exists x1 (SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (x0 < x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 < x1) & x0 != x1)).
(exists x0 exists x1 (Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)).
(exists x0 Curve(x0)).
(exists x0 -Curve(x0)).
(exists x0 exists x1 (Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)).
(exists x0 ZEX(x0)).
(exists x0 -ZEX(x0)).
(exists x0 Min(x0)).
(exists x0 -Min(x0)).
(exists x0 exists x1 (Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PP(x0,x1) & x0 != x1)).
(exists x0 MinDim(x0)).
(exists x0 -MinDim(x0)).
(exists x0 exists x1 (BCont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-BCont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-C(x0,x1) & x0 != x1)).
(exists x0 AtomicSphere(x0)).
(exists x0 -AtomicSphere(x0)).
(exists x0 Closed(x0)).
(exists x0 -Closed(x0)).
(exists x0 exists x1 (x0 >= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 >= x1) & x0 != x1)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9


formulas(sos).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
2 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
3 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
4 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
5 (all x (ArealRegion(x) <-> (all y (Curve(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
6 (all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
7 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
9 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
10 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
11 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
13 (all x -SC(x,x)) # label(non_clause).  [assumption].
14 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
15 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
16 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
17 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
18 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
19 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
20 (all x x <= x) # label(non_clause).  [assumption].
21 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
22 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
23 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
24 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
25 (exists x MinDim(x)) # label(non_clause).  [assumption].
26 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
27 (all x -Inc(x,x)) # label(non_clause).  [assumption].
28 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
29 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
30 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
31 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
32 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
33 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
34 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
35 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
36 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
37 (all x -(x < x)) # label(non_clause).  [assumption].
38 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
39 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
40 (all x EqDim(x,x)) # label(non_clause).  [assumption].
41 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
42 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
43 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
44 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
45 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
46 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
47 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
48 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
49 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
50 (all x (AtomicSphere(x) <-> ArealRegion(x) & Min(x) & Closed(x))) # label(non_clause).  [assumption].
51 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
52 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
53 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
54 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
55 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
56 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
57 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
58 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
59 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
60 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
61 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
62 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
63 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
64 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
65 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
66 (exists x0 exists x1 (x0 <= x1 & x0 != x1)) # label(non_clause).  [assumption].
67 (exists x0 exists x1 (-(x0 <= x1) & x0 != x1)) # label(non_clause).  [assumption].
68 (exists x0 PointRegion(x0)) # label(non_clause).  [assumption].
69 (exists x0 -PointRegion(x0)) # label(non_clause).  [assumption].
70 (exists x0 exists x1 (x0 > x1 & x0 != x1)) # label(non_clause).  [assumption].
71 (exists x0 exists x1 (-(x0 > x1) & x0 != x1)) # label(non_clause).  [assumption].
72 (exists x0 exists x1 (P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
73 (exists x0 exists x1 (-P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
74 (exists x0 MaxDim(x0)) # label(non_clause).  [assumption].
75 (exists x0 -MaxDim(x0)) # label(non_clause).  [assumption].
76 (exists x0 Max(x0)) # label(non_clause).  [assumption].
77 (exists x0 -Max(x0)) # label(non_clause).  [assumption].
78 (exists x0 ArealRegion(x0)) # label(non_clause).  [assumption].
79 (exists x0 -ArealRegion(x0)) # label(non_clause).  [assumption].
80 (exists x0 exists x1 (SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
81 (exists x0 exists x1 (-SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
82 (exists x0 exists x1 (x0 < x1 & x0 != x1)) # label(non_clause).  [assumption].
83 (exists x0 exists x1 (-(x0 < x1) & x0 != x1)) # label(non_clause).  [assumption].
84 (exists x0 exists x1 (Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
85 (exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
86 (exists x0 Curve(x0)) # label(non_clause).  [assumption].
87 (exists x0 -Curve(x0)) # label(non_clause).  [assumption].
88 (exists x0 exists x1 (Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
89 (exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
90 (exists x0 ZEX(x0)) # label(non_clause).  [assumption].
91 (exists x0 -ZEX(x0)) # label(non_clause).  [assumption].
92 (exists x0 Min(x0)) # label(non_clause).  [assumption].
93 (exists x0 -Min(x0)) # label(non_clause).  [assumption].
94 (exists x0 exists x1 (Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
95 (exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
96 (exists x0 exists x1 (PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
97 (exists x0 exists x1 (-PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
98 (exists x0 MinDim(x0)) # label(non_clause).  [assumption].
99 (exists x0 -MinDim(x0)) # label(non_clause).  [assumption].
100 (exists x0 exists x1 (BCont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
101 (exists x0 exists x1 (-BCont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
102 (exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
103 (exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
104 (exists x0 exists x1 (PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
105 (exists x0 exists x1 (-PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
106 (exists x0 exists x1 (C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
107 (exists x0 exists x1 (-C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
108 (exists x0 AtomicSphere(x0)) # label(non_clause).  [assumption].
109 (exists x0 -AtomicSphere(x0)) # label(non_clause).  [assumption].
110 (exists x0 Closed(x0)) # label(non_clause).  [assumption].
111 (exists x0 -Closed(x0)) # label(non_clause).  [assumption].
112 (exists x0 exists x1 (x0 >= x1 & x0 != x1)) # label(non_clause).  [assumption].
113 (exists x0 exists x1 (-(x0 >= x1) & x0 != x1)) # label(non_clause).  [assumption].
114 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-SC(x,y) | Cont(f1(x,y),x).
-SC(x,y) | Cont(f1(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f2(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f2(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f2(x,y) < x) | -(f2(x,y) < y).
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-ArealRegion(x) | -Curve(y) | Covers(x,y).
-ArealRegion(x) | Curve(y) | -Covers(x,y).
ArealRegion(x) | Curve(f3(x)) | Covers(x,f3(x)).
ArealRegion(x) | -Curve(f3(x)) | -Covers(x,f3(x)).
-Curve(x) | -PointRegion(y) | Covers(x,y).
-Curve(x) | PointRegion(y) | -Covers(x,y).
Curve(x) | PointRegion(f4(x)) | Covers(x,f4(x)).
Curve(x) | -PointRegion(f4(x)) | -Covers(x,f4(x)).
-C(x,y) | Cont(f5(x,y),x).
-C(x,y) | Cont(f5(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-PO(x,y) | P(f6(x,y),x).
-PO(x,y) | P(f6(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f7(x,y),x) | SC(x,y).
-C(x,y) | Cont(f7(x,y),y) | SC(x,y).
-C(x,y) | P(f7(x,y),x) | P(f7(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | f8(x,y) < x.
-SC(x,y) | f8(x,y) < y.
-SC(x,y) | Cont(f8(x,y),x).
-SC(x,y) | Cont(f8(x,y),y).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f9(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f10(x),x).
-Cont(x,y) | x < y | EqDim(x,y).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
-Inc(x,y) | f11(x,y) < x | f12(x,y) < y.
-Inc(x,y) | f11(x,y) < x | Cont(f12(x,y),y).
-Inc(x,y) | f11(x,y) < x | P(f12(x,y),x).
-Inc(x,y) | Cont(f11(x,y),x) | f12(x,y) < y.
-Inc(x,y) | Cont(f11(x,y),x) | Cont(f12(x,y),y).
-Inc(x,y) | Cont(f11(x,y),x) | P(f12(x,y),x).
-Inc(x,y) | P(f11(x,y),y) | f12(x,y) < y.
-Inc(x,y) | P(f11(x,y),y) | Cont(f12(x,y),y).
-Inc(x,y) | P(f11(x,y),y) | P(f12(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
MinDim(c1).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f13(x,y).
Covers(x,y) | -(y < x) | f13(x,y) < x.
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | x < y | y < x.
-Cont(x,y) | -(x < y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
Cont(f14(x,y),x) | Cont(f14(x,y),y) | y = x.
-Cont(f14(x,y),x) | -Cont(f14(x,y),y) | y = x.
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-Cont(x,y) | x < y | EqDim(x,y).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c2).
-(x < c2) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f15(x),x).
-AtomicSphere(x) | ArealRegion(x).
-AtomicSphere(x) | Min(x).
-AtomicSphere(x) | Closed(x).
AtomicSphere(x) | -ArealRegion(x) | -Min(x) | -Closed(x).
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | Inc(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f16(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f16(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f17(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f17(x,y,z),f16(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f18(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f19(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f19(x)).
ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
c3 <= c4.
c4 != c3.
-(c5 <= c6).
c6 != c5.
PointRegion(c7).
-PointRegion(c8).
c9 > c10.
c10 != c9.
-(c11 > c12).
c12 != c11.
P(c13,c14).
c14 != c13.
-P(c15,c16).
c16 != c15.
MaxDim(c17).
-MaxDim(c18).
Max(c19).
-Max(c20).
ArealRegion(c21).
-ArealRegion(c22).
SC(c23,c24).
c24 != c23.
-SC(c25,c26).
c26 != c25.
c27 < c28.
c28 != c27.
-(c29 < c30).
c30 != c29.
Covers(c31,c32).
c32 != c31.
-Covers(c33,c34).
c34 != c33.
Curve(c35).
-Curve(c36).
Cont(c37,c38).
c38 != c37.
-Cont(c39,c40).
c40 != c39.
ZEX(c41).
-ZEX(c42).
Min(c43).
-Min(c44).
Inc(c45,c46).
c46 != c45.
-Inc(c47,c48).
c48 != c47.
PP(c49,c50).
c50 != c49.
-PP(c51,c52).
c52 != c51.
MinDim(c53).
-MinDim(c54).
BCont(c55,c56).
c56 != c55.
-BCont(c57,c58).
c58 != c57.
EqDim(c59,c60).
c60 != c59.
-EqDim(c61,c62).
c62 != c61.
PO(c63,c64).
c64 != c63.
-PO(c65,c66).
c66 != c65.
C(c67,c68).
c68 != c67.
-C(c69,c70).
c70 != c69.
AtomicSphere(c71).
-AtomicSphere(c72).
Closed(c73).
-Closed(c74).
c75 >= c76.
c76 != c75.
-(c77 >= c78).
c78 != c77.
-PointRegion(x) | MinDim(x).
PointRegion(x) | -MinDim(x).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=658, kept=516.
Selections=1, assignments=1, propagations=72, current_models=0.
Rewrite_terms=22, rewrite_bools=314, indexes=10.
Rules_from_neg_clauses=19, cross_offs=19.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=1647, kept=1338.
Selections=4, assignments=9, propagations=171, current_models=0.
Rewrite_terms=23, rewrite_bools=1355, indexes=9.
Rules_from_neg_clauses=8, cross_offs=29.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===
============================= mace4 ================================
execution finished: Tue Oct 08 19:09:05 2013
total CPU time used: 14
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/areal_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_sphere.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/conversions/atomic_sphere_all_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9"
Input read from 
============================ end of footer ===========================
