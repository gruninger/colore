============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 29143 was started by torsten on stl-ws2,
Wed Aug  7 14:46:57 2013
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/branchpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/branchpoint_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9


formulas(sos).
(all x (Point(x) <-> Max(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/branchpoint.p9


formulas(sos).
(all x all y (Branchpoint(x,y) <-> Point(x) & Curve(y) & Cont(x,y) & ((exists s1 exists s2 (AtomicCurveSegment(s1) & AtomicLoopCurve(s2) & Cont(s1,y) & Cont(s2,y) & s1 != s2 & Cont(x,s1) & Cont(x,s2))) | (exists s1 exists s2 exists s3 (AtomicCurveSegment(s1) & AtomicCurveSegment(s2) & AtomicCurveSegment(s3) & Cont(s1,y) & Cont(s2,y) & Cont(s3,y) & s1 != s2 & s1 != s3 & s2 != s3 & Cont(x,s1) & Cont(x,s2) & Cont(x,s3)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9


formulas(sos).
(all x (AtomicLoopCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Point(y) & Cont(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))) & -(exists y Endpoint(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/branchpoint_all_weak_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (Endpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Endpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Endpoint(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Endpoint(x0,x1) & x1 != x0)).
(exists x0 AtomicCurveSegment(x0)).
(exists x0 -AtomicCurveSegment(x0)).
(exists x0 AtomicRayCurve(x0)).
(exists x0 -AtomicRayCurve(x0)).
(exists x0 exists x1 (Branchpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Branchpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Branchpoint(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Branchpoint(x0,x1) & x1 != x0)).
(exists x0 exists x1 (x0 > x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 > x1) & x0 != x1)).
(exists x0 exists x1 (x0 > x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 > x1) & x1 != x0)).
(exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (EqDim(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-EqDim(x0,x1) & x1 != x0)).
(exists x0 MaxDim(x0)).
(exists x0 -MaxDim(x0)).
(exists x0 Max(x0)).
(exists x0 -Max(x0)).
(exists x0 Point(x0)).
(exists x0 -Point(x0)).
(exists x0 AtomicLoopCurve(x0)).
(exists x0 -AtomicLoopCurve(x0)).
(exists x0 exists x1 (SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (SC(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-SC(x0,x1) & x1 != x0)).
(exists x0 exists x1 (PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PO(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-PO(x0,x1) & x1 != x0)).
(exists x0 AtomicCurve(x0)).
(exists x0 -AtomicCurve(x0)).
(exists x0 Curve(x0)).
(exists x0 -Curve(x0)).
(exists x0 Min(x0)).
(exists x0 -Min(x0)).
(exists x0 exists x1 (Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Inc(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Inc(x0,x1) & x1 != x0)).
(exists x0 exists x1 (PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PP(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-PP(x0,x1) & x1 != x0)).
(exists x0 MinDim(x0)).
(exists x0 -MinDim(x0)).
(exists x0 exists x1 (Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Covers(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Covers(x0,x1) & x1 != x0)).
(exists x0 exists x1 (P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (P(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-P(x0,x1) & x1 != x0)).
(exists x0 exists x1 (x0 < x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 < x1) & x0 != x1)).
(exists x0 exists x1 (x0 < x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 < x1) & x1 != x0)).
(exists x0 exists x1 (C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (C(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-C(x0,x1) & x1 != x0)).
(exists x0 Closed(x0)).
(exists x0 -Closed(x0)).
(exists x0 exists x1 (x0 >= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 >= x1) & x0 != x1)).
(exists x0 exists x1 (x0 >= x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 >= x1) & x1 != x0)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (Point(y) -> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9


formulas(sos).
(all x (Point(x) -> (all y (Cont(y,x) -> x = y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9


formulas(sos).
(all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9


formulas(sos).
(all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9


formulas(sos).
(all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9


formulas(sos).
(all x (AtomicCurve(x) <-> AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9


formulas(sos).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 300).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (Point(x) <-> Max(x) & MinDim(x))) # label(non_clause).  [assumption].
2 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
3 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
4 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
5 (all x all y (Branchpoint(x,y) <-> Point(x) & Curve(y) & Cont(x,y) & ((exists s1 exists s2 (AtomicCurveSegment(s1) & AtomicLoopCurve(s2) & Cont(s1,y) & Cont(s2,y) & s1 != s2 & Cont(x,s1) & Cont(x,s2))) | (exists s1 exists s2 exists s3 (AtomicCurveSegment(s1) & AtomicCurveSegment(s2) & AtomicCurveSegment(s3) & Cont(s1,y) & Cont(s2,y) & Cont(s3,y) & s1 != s2 & s1 != s3 & s2 != s3 & Cont(x,s1) & Cont(x,s2) & Cont(x,s3)))))) # label(non_clause).  [assumption].
6 (all x (AtomicLoopCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Point(y) & Cont(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))) & -(exists y Endpoint(y,x)))) # label(non_clause).  [assumption].
7 (exists x0 exists x1 (Endpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
8 (exists x0 exists x1 (-Endpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
9 (exists x0 exists x1 (Endpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
10 (exists x0 exists x1 (-Endpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
11 (exists x0 AtomicCurveSegment(x0)) # label(non_clause).  [assumption].
12 (exists x0 -AtomicCurveSegment(x0)) # label(non_clause).  [assumption].
13 (exists x0 AtomicRayCurve(x0)) # label(non_clause).  [assumption].
14 (exists x0 -AtomicRayCurve(x0)) # label(non_clause).  [assumption].
15 (exists x0 exists x1 (Branchpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
16 (exists x0 exists x1 (-Branchpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
17 (exists x0 exists x1 (Branchpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
18 (exists x0 exists x1 (-Branchpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
19 (exists x0 exists x1 (x0 > x1 & x0 != x1)) # label(non_clause).  [assumption].
20 (exists x0 exists x1 (-(x0 > x1) & x0 != x1)) # label(non_clause).  [assumption].
21 (exists x0 exists x1 (x0 > x1 & x1 != x0)) # label(non_clause).  [assumption].
22 (exists x0 exists x1 (-(x0 > x1) & x1 != x0)) # label(non_clause).  [assumption].
23 (exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
24 (exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
25 (exists x0 exists x1 (EqDim(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
26 (exists x0 exists x1 (-EqDim(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
27 (exists x0 MaxDim(x0)) # label(non_clause).  [assumption].
28 (exists x0 -MaxDim(x0)) # label(non_clause).  [assumption].
29 (exists x0 Max(x0)) # label(non_clause).  [assumption].
30 (exists x0 -Max(x0)) # label(non_clause).  [assumption].
31 (exists x0 Point(x0)) # label(non_clause).  [assumption].
32 (exists x0 -Point(x0)) # label(non_clause).  [assumption].
33 (exists x0 AtomicLoopCurve(x0)) # label(non_clause).  [assumption].
34 (exists x0 -AtomicLoopCurve(x0)) # label(non_clause).  [assumption].
35 (exists x0 exists x1 (SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
36 (exists x0 exists x1 (-SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
37 (exists x0 exists x1 (SC(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
38 (exists x0 exists x1 (-SC(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
39 (exists x0 exists x1 (PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
40 (exists x0 exists x1 (-PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
41 (exists x0 exists x1 (PO(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
42 (exists x0 exists x1 (-PO(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
43 (exists x0 AtomicCurve(x0)) # label(non_clause).  [assumption].
44 (exists x0 -AtomicCurve(x0)) # label(non_clause).  [assumption].
45 (exists x0 Curve(x0)) # label(non_clause).  [assumption].
46 (exists x0 -Curve(x0)) # label(non_clause).  [assumption].
47 (exists x0 Min(x0)) # label(non_clause).  [assumption].
48 (exists x0 -Min(x0)) # label(non_clause).  [assumption].
49 (exists x0 exists x1 (Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
50 (exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
51 (exists x0 exists x1 (Inc(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
52 (exists x0 exists x1 (-Inc(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
53 (exists x0 exists x1 (PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
54 (exists x0 exists x1 (-PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
55 (exists x0 exists x1 (PP(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
56 (exists x0 exists x1 (-PP(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
57 (exists x0 MinDim(x0)) # label(non_clause).  [assumption].
58 (exists x0 -MinDim(x0)) # label(non_clause).  [assumption].
59 (exists x0 exists x1 (Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
60 (exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
61 (exists x0 exists x1 (Covers(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
62 (exists x0 exists x1 (-Covers(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
63 (exists x0 exists x1 (P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
64 (exists x0 exists x1 (-P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
65 (exists x0 exists x1 (P(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
66 (exists x0 exists x1 (-P(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
67 (exists x0 exists x1 (x0 < x1 & x0 != x1)) # label(non_clause).  [assumption].
68 (exists x0 exists x1 (-(x0 < x1) & x0 != x1)) # label(non_clause).  [assumption].
69 (exists x0 exists x1 (x0 < x1 & x1 != x0)) # label(non_clause).  [assumption].
70 (exists x0 exists x1 (-(x0 < x1) & x1 != x0)) # label(non_clause).  [assumption].
71 (exists x0 exists x1 (C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
72 (exists x0 exists x1 (-C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
73 (exists x0 exists x1 (C(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
74 (exists x0 exists x1 (-C(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
75 (exists x0 Closed(x0)) # label(non_clause).  [assumption].
76 (exists x0 -Closed(x0)) # label(non_clause).  [assumption].
77 (exists x0 exists x1 (x0 >= x1 & x0 != x1)) # label(non_clause).  [assumption].
78 (exists x0 exists x1 (-(x0 >= x1) & x0 != x1)) # label(non_clause).  [assumption].
79 (exists x0 exists x1 (x0 >= x1 & x1 != x0)) # label(non_clause).  [assumption].
80 (exists x0 exists x1 (-(x0 >= x1) & x1 != x0)) # label(non_clause).  [assumption].
81 (all x -(x < x)) # label(non_clause).  [assumption].
82 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
83 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
84 (all x EqDim(x,x)) # label(non_clause).  [assumption].
85 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
86 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
87 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
88 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
89 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
90 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
91 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
92 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
93 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
94 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
95 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
96 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
97 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
98 (all x (Curve(x) <-> (all y (Point(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
99 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
100 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
101 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
102 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
103 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
104 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
105 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
106 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
107 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
108 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
109 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
110 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
111 (all x (Point(x) -> (all y (Cont(y,x) -> x = y)))) # label(non_clause).  [assumption].
112 (all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))) # label(non_clause).  [assumption].
113 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
114 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
115 (all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))) # label(non_clause).  [assumption].
116 (all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))) # label(non_clause).  [assumption].
117 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
118 (exists x MinDim(x)) # label(non_clause).  [assumption].
119 (all x x <= x) # label(non_clause).  [assumption].
120 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
121 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
122 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
123 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
124 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
125 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
126 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
127 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
128 (all x -Inc(x,x)) # label(non_clause).  [assumption].
129 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
130 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
131 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
132 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
133 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
134 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
135 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
136 (all x (AtomicCurve(x) <-> AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x))) # label(non_clause).  [assumption].
137 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
138 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
139 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
140 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
141 (all x -SC(x,x)) # label(non_clause).  [assumption].
142 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
143 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
144 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
145 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-Point(x) | Max(x).
-Point(x) | MinDim(x).
Point(x) | -Max(x) | -MinDim(x).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f1(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f2(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f2(x)).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
-Branchpoint(x,y) | Point(x).
-Branchpoint(x,y) | Curve(y).
-Branchpoint(x,y) | Cont(x,y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(f5(x,y),y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(f6(x,y),y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(f7(x,y),y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | AtomicCurveSegment(f3(x,y)) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(f5(x,y),y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(f6(x,y),y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(f7(x,y),y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | AtomicLoopCurve(f4(x,y)) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(f5(x,y),y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(f6(x,y),y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(f7(x,y),y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | Cont(f3(x,y),y) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(f5(x,y),y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(f6(x,y),y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(f7(x,y),y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | Cont(f4(x,y),y) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(f5(x,y),y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(f6(x,y),y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(f7(x,y),y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | f4(x,y) != f3(x,y) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(f5(x,y),y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(f6(x,y),y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(f7(x,y),y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | Cont(x,f3(x,y)) | Cont(x,f7(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | AtomicCurveSegment(f5(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | AtomicCurveSegment(f6(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | AtomicCurveSegment(f7(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(f5(x,y),y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(f6(x,y),y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(f7(x,y),y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | f6(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | f7(x,y) != f5(x,y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | f7(x,y) != f6(x,y).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(x,f5(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(x,f6(x,y)).
-Branchpoint(x,y) | Cont(x,f4(x,y)) | Cont(x,f7(x,y)).
Branchpoint(x,y) | -Point(x) | -Curve(y) | -Cont(x,y) | -AtomicCurveSegment(z) | -AtomicLoopCurve(u) | -Cont(z,y) | -Cont(u,y) | u = z | -Cont(x,z) | -Cont(x,u).
Branchpoint(x,y) | -Point(x) | -Curve(y) | -Cont(x,y) | -AtomicCurveSegment(z) | -AtomicCurveSegment(u) | -AtomicCurveSegment(w) | -Cont(z,y) | -Cont(u,y) | -Cont(w,y) | u = z | w = z | w = u | -Cont(x,z) | -Cont(x,u) | -Cont(x,w).
-AtomicLoopCurve(x) | Curve(x).
-AtomicLoopCurve(x) | -PP(y,x).
-AtomicLoopCurve(x) | Point(f8(x)).
-AtomicLoopCurve(x) | Cont(f8(x),x).
-AtomicLoopCurve(x) | -Point(y) | -Cont(y,x) | y = f8(x).
-AtomicLoopCurve(x) | -Endpoint(y,x).
AtomicLoopCurve(x) | -Curve(x) | PP(f9(x),x) | -Point(y) | -Cont(y,x) | Point(f10(x,y)) | Endpoint(f11(x),x).
AtomicLoopCurve(x) | -Curve(x) | PP(f9(x),x) | -Point(y) | -Cont(y,x) | Cont(f10(x,y),x) | Endpoint(f11(x),x).
AtomicLoopCurve(x) | -Curve(x) | PP(f9(x),x) | -Point(y) | -Cont(y,x) | f10(x,y) != y | Endpoint(f11(x),x).
Endpoint(c1,c2).
c2 != c1.
-Endpoint(c3,c4).
c4 != c3.
Endpoint(c5,c6).
c6 != c5.
-Endpoint(c7,c8).
c8 != c7.
AtomicCurveSegment(c9).
-AtomicCurveSegment(c10).
AtomicRayCurve(c11).
-AtomicRayCurve(c12).
Branchpoint(c13,c14).
c14 != c13.
-Branchpoint(c15,c16).
c16 != c15.
Branchpoint(c17,c18).
c18 != c17.
-Branchpoint(c19,c20).
c20 != c19.
c21 > c22.
c22 != c21.
-(c23 > c24).
c24 != c23.
c25 > c26.
c26 != c25.
-(c27 > c28).
c28 != c27.
EqDim(c29,c30).
c30 != c29.
-EqDim(c31,c32).
c32 != c31.
EqDim(c33,c34).
c34 != c33.
-EqDim(c35,c36).
c36 != c35.
MaxDim(c37).
-MaxDim(c38).
Max(c39).
-Max(c40).
Point(c41).
-Point(c42).
AtomicLoopCurve(c43).
-AtomicLoopCurve(c44).
SC(c45,c46).
c46 != c45.
-SC(c47,c48).
c48 != c47.
SC(c49,c50).
c50 != c49.
-SC(c51,c52).
c52 != c51.
PO(c53,c54).
c54 != c53.
-PO(c55,c56).
c56 != c55.
PO(c57,c58).
c58 != c57.
-PO(c59,c60).
c60 != c59.
AtomicCurve(c61).
-AtomicCurve(c62).
Curve(c63).
-Curve(c64).
Min(c65).
-Min(c66).
Inc(c67,c68).
c68 != c67.
-Inc(c69,c70).
c70 != c69.
Inc(c71,c72).
c72 != c71.
-Inc(c73,c74).
c74 != c73.
PP(c75,c76).
c76 != c75.
-PP(c77,c78).
c78 != c77.
PP(c79,c80).
c80 != c79.
-PP(c81,c82).
c82 != c81.
MinDim(c83).
-MinDim(c84).
Covers(c85,c86).
c86 != c85.
-Covers(c87,c88).
c88 != c87.
Covers(c89,c90).
c90 != c89.
-Covers(c91,c92).
c92 != c91.
P(c93,c94).
c94 != c93.
-P(c95,c96).
c96 != c95.
P(c97,c98).
c98 != c97.
-P(c99,c100).
c100 != c99.
c101 < c102.
c102 != c101.
-(c103 < c104).
c104 != c103.
c105 < c106.
c106 != c105.
-(c107 < c108).
c108 != c107.
C(c109,c110).
c110 != c109.
-C(c111,c112).
c112 != c111.
C(c113,c114).
c114 != c113.
-C(c115,c116).
c116 != c115.
Closed(c117).
-Closed(c118).
c119 >= c120.
c120 != c119.
-(c121 >= c122).
c122 != c121.
c123 >= c124.
c124 != c123.
-(c125 >= c126).
c126 != c125.
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c127).
-(x < c127) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-Curve(x) | -Point(y) | Covers(x,y).
Curve(x) | Point(f12(x)).
Curve(x) | -Covers(x,f12(x)).
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | Inc(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f13(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f13(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f14(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f14(x,y,z),f13(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
-PO(x,y) | P(f15(x,y),x).
-PO(x,y) | P(f15(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f16(x,y).
Covers(x,y) | -(y < x) | f16(x,y) < x.
-Point(x) | -Cont(y,x) | y = x.
-AtomicCurveSegment(x) | Curve(x).
-AtomicCurveSegment(x) | -PP(y,x).
-AtomicCurveSegment(x) | Endpoint(f17(x),x).
-AtomicCurveSegment(x) | Endpoint(f18(x),x).
-AtomicCurveSegment(x) | f18(x) != f17(x).
-AtomicCurveSegment(x) | -Point(y) | -Cont(y,x) | f17(x) = y | f18(x) = y.
AtomicCurveSegment(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Point(f20(x,y,z)).
AtomicCurveSegment(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f20(x,y,z),x).
AtomicCurveSegment(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f20(x,y,z).
AtomicCurveSegment(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f20(x,y,z).
-Cont(x,y) | x < y | EqDim(x,y).
Cont(f21(x,y),x) | Cont(f21(x,y),y) | y = x.
-Cont(f21(x,y),x) | -Cont(f21(x,y),y) | y = x.
-AtomicRayCurve(x) | Curve(x).
-AtomicRayCurve(x) | -PP(y,x).
-AtomicRayCurve(x) | Endpoint(f22(x),x).
-AtomicRayCurve(x) | -Point(y) | -Cont(y,x) | y = f22(x).
AtomicRayCurve(x) | -Curve(x) | PP(f23(x),x) | -Endpoint(y,x) | Point(f24(x,y)).
AtomicRayCurve(x) | -Curve(x) | PP(f23(x),x) | -Endpoint(y,x) | Cont(f24(x,y),x).
AtomicRayCurve(x) | -Curve(x) | PP(f23(x),x) | -Endpoint(y,x) | f24(x,y) != y.
-Endpoint(x,y) | Point(x).
-Endpoint(x,y) | Curve(y).
-Endpoint(x,y) | BCont(x,y).
Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).
-SC(x,y) | Cont(f25(x,y),x).
-SC(x,y) | Cont(f25(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f26(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f26(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f26(x,y) < x) | -(f26(x,y) < y).
MinDim(c128).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
-Cont(x,y) | x < y | EqDim(x,y).
ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f27(x),x).
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | x < y | y < x.
-Cont(x,y) | -(x < y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f28(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f29(x),x).
-AtomicCurve(x) | AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x).
AtomicCurve(x) | -AtomicCurveSegment(x).
AtomicCurve(x) | -AtomicLoopCurve(x).
AtomicCurve(x) | -AtomicRayCurve(x).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f30(x,y),x) | SC(x,y).
-C(x,y) | Cont(f30(x,y),y) | SC(x,y).
-C(x,y) | P(f30(x,y),x) | P(f30(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | f31(x,y) < x.
-SC(x,y) | f31(x,y) < y.
-SC(x,y) | Cont(f31(x,y),x).
-SC(x,y) | Cont(f31(x,y),y).
-C(x,y) | Cont(f32(x,y),x).
-C(x,y) | Cont(f32(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-Inc(x,y) | f33(x,y) < x | f34(x,y) < y.
-Inc(x,y) | f33(x,y) < x | Cont(f34(x,y),y).
-Inc(x,y) | f33(x,y) < x | P(f34(x,y),x).
-Inc(x,y) | Cont(f33(x,y),x) | f34(x,y) < y.
-Inc(x,y) | Cont(f33(x,y),x) | Cont(f34(x,y),y).
-Inc(x,y) | Cont(f33(x,y),x) | P(f34(x,y),x).
-Inc(x,y) | P(f33(x,y),y) | f34(x,y) < y.
-Inc(x,y) | P(f33(x,y),y) | Cont(f34(x,y),y).
-Inc(x,y) | P(f33(x,y),y) | P(f34(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=1212, kept=1020.
Selections=1, assignments=1, propagations=35, current_models=0.
Rewrite_terms=6, rewrite_bools=247, indexes=2.
Rules_from_neg_clauses=3, cross_offs=3.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=3071, kept=2576.
Selections=3, assignments=6, propagations=189, current_models=0.
Rewrite_terms=132, rewrite_bools=3159, indexes=5.
Rules_from_neg_clauses=34, cross_offs=85.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.15 seconds).
Ground clauses: seen=6688, kept=5544.
Selections=2236, assignments=8938, propagations=35240, current_models=0.
Rewrite_terms=72309, rewrite_bools=388224, indexes=2484.
Rules_from_neg_clauses=6983, cross_offs=13740.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

====== Domain size 5 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 60.16 seconds).
Ground clauses: seen=13233, kept=10848.
Selections=1143122, assignments=5715549, propagations=14354482, current_models=0.
Rewrite_terms=18203230, rewrite_bools=126502367, indexes=2272348.
Rules_from_neg_clauses=2685697, cross_offs=12576345.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===
============================= mace4 ================================
execution finished: Wed Aug 07 14:48:21 2013
total CPU time used: 83
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/branchpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/branchpoint_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9"
Input read from 
============================ end of footer ===========================
