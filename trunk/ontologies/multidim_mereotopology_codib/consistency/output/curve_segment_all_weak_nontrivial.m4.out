============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 7811 was started by torsten on stl-ws2,
Wed Aug  7 17:08:19 2013
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_atomic_curves.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/curve_segment_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_curve_endpoints.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9


formulas(sos).
(all x (AtomicLoopCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Point(y) & Cont(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))) & -(exists y Endpoint(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9


formulas(sos).
(all x (AtomicCurve(x) <-> AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/curve_segment.p9


formulas(sos).
(all x (CurveSegment(x) <-> Curve(x) & (all y (P(y,x) -> (exists z (AtomicCurveSegment(z) & PO(y,z))))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (Point(y) -> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_atomic_curves.p9


formulas(sos).
(all x all y (AtomicCurve(x) & -AtomicLoopCurve(x) & Cont(y,x) & x != y -> Point(y) & BCont(y,x))).
(all x all p1 all p2 all p3 (AtomicCurve(x) & Point(p1) & Point(p2) & Point(p3) & Cont(p1,x) & Cont(p2,x) & Cont(p3,x) -> p1 = p2 | p1 = p3 | p2 = p3)).
(all x all p1 all p2 (AtomicCurve(x) & Point(p1) & Point(p2) & p1 != p2 & Cont(p1,x) & Cont(p2,x) -> -Closed(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9


formulas(sos).
(all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/curve_segment_all_weak_nontrivial.p9


formulas(sos).
(exists x0 exists x1 (Endpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Endpoint(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Endpoint(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Endpoint(x0,x1) & x1 != x0)).
(exists x0 exists x1 (x0 <= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 <= x1) & x0 != x1)).
(exists x0 exists x1 (x0 <= x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 <= x1) & x1 != x0)).
(exists x0 AtomicCurveSegment(x0)).
(exists x0 -AtomicCurveSegment(x0)).
(exists x0 AtomicRayCurve(x0)).
(exists x0 -AtomicRayCurve(x0)).
(exists x0 exists x1 (x0 > x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 > x1) & x0 != x1)).
(exists x0 exists x1 (x0 > x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 > x1) & x1 != x0)).
(exists x0 CurveSegment(x0)).
(exists x0 -CurveSegment(x0)).
(exists x0 exists x1 (P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-P(x0,x1) & x0 != x1)).
(exists x0 exists x1 (P(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-P(x0,x1) & x1 != x0)).
(exists x0 MaxDim(x0)).
(exists x0 -MaxDim(x0)).
(exists x0 Max(x0)).
(exists x0 -Max(x0)).
(exists x0 Point(x0)).
(exists x0 -Point(x0)).
(exists x0 AtomicLoopCurve(x0)).
(exists x0 -AtomicLoopCurve(x0)).
(exists x0 exists x1 (SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-SC(x0,x1) & x0 != x1)).
(exists x0 exists x1 (SC(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-SC(x0,x1) & x1 != x0)).
(exists x0 exists x1 (x0 < x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 < x1) & x0 != x1)).
(exists x0 exists x1 (x0 < x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 < x1) & x1 != x0)).
(exists x0 AtomicCurve(x0)).
(exists x0 -AtomicCurve(x0)).
(exists x0 Curve(x0)).
(exists x0 -Curve(x0)).
(exists x0 exists x1 (Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Cont(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Cont(x0,x1) & x1 != x0)).
(exists x0 ZEX(x0)).
(exists x0 -ZEX(x0)).
(exists x0 Min(x0)).
(exists x0 -Min(x0)).
(exists x0 exists x1 (Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Inc(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Inc(x0,x1) & x1 != x0)).
(exists x0 exists x1 (PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PP(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PP(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-PP(x0,x1) & x1 != x0)).
(exists x0 MinDim(x0)).
(exists x0 -MinDim(x0)).
(exists x0 exists x1 (BCont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-BCont(x0,x1) & x0 != x1)).
(exists x0 exists x1 (BCont(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-BCont(x0,x1) & x1 != x0)).
(exists x0 exists x1 (Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)).
(exists x0 exists x1 (Covers(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-Covers(x0,x1) & x1 != x0)).
(exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)).
(exists x0 exists x1 (EqDim(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-EqDim(x0,x1) & x1 != x0)).
(exists x0 exists x1 (PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-PO(x0,x1) & x0 != x1)).
(exists x0 exists x1 (PO(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-PO(x0,x1) & x1 != x0)).
(exists x0 exists x1 (C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (-C(x0,x1) & x0 != x1)).
(exists x0 exists x1 (C(x0,x1) & x1 != x0)).
(exists x0 exists x1 (-C(x0,x1) & x1 != x0)).
(exists x0 Closed(x0)).
(exists x0 -Closed(x0)).
(exists x0 exists x1 (x0 >= x1 & x0 != x1)).
(exists x0 exists x1 (-(x0 >= x1) & x0 != x1)).
(exists x0 exists x1 (x0 >= x1 & x1 != x0)).
(exists x0 exists x1 (-(x0 >= x1) & x1 != x0)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9


formulas(sos).
(all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9


formulas(sos).
(all x (Point(x) <-> Max(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9


formulas(sos).
(all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_curve_endpoints.p9


formulas(sos).
(all x all y (Point(x) & Curve(y) & -AtomicCurveSegment(y) -> (BCont(x,y) <-> (exists s1 (AtomicCurve(s1) & P(s1,y) & BCont(x,s1) & (all s2 (P(s2,y) & AtomicCurve(s2) & BCont(x,s2) -> s1 = s2))))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9


formulas(sos).
(all x (Point(x) -> (all y (Cont(y,x) -> x = y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 300).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
2 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
3 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
4 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
5 (all x -SC(x,x)) # label(non_clause).  [assumption].
6 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
7 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
8 (all x (AtomicLoopCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Point(y) & Cont(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))) & -(exists y Endpoint(y,x)))) # label(non_clause).  [assumption].
9 (all x (AtomicCurve(x) <-> AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x))) # label(non_clause).  [assumption].
10 (all x (CurveSegment(x) <-> Curve(x) & (all y (P(y,x) -> (exists z (AtomicCurveSegment(z) & PO(y,z))))))) # label(non_clause).  [assumption].
11 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
12 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
14 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
15 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
16 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
17 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
18 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
19 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
20 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
21 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
22 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
23 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
24 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
25 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
26 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
27 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
28 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
29 (all x -Inc(x,x)) # label(non_clause).  [assumption].
30 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
31 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
32 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
33 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
34 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
35 (all x (Curve(x) <-> (all y (Point(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
36 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
37 (all x all y (AtomicCurve(x) & -AtomicLoopCurve(x) & Cont(y,x) & x != y -> Point(y) & BCont(y,x))) # label(non_clause).  [assumption].
38 (all x all p1 all p2 all p3 (AtomicCurve(x) & Point(p1) & Point(p2) & Point(p3) & Cont(p1,x) & Cont(p2,x) & Cont(p3,x) -> p1 = p2 | p1 = p3 | p2 = p3)) # label(non_clause).  [assumption].
39 (all x all p1 all p2 (AtomicCurve(x) & Point(p1) & Point(p2) & p1 != p2 & Cont(p1,x) & Cont(p2,x) -> -Closed(x))) # label(non_clause).  [assumption].
40 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
41 (all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))) # label(non_clause).  [assumption].
42 (all x -(x < x)) # label(non_clause).  [assumption].
43 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
44 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
45 (all x EqDim(x,x)) # label(non_clause).  [assumption].
46 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
47 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
48 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
49 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
50 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
51 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
52 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
53 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
54 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
55 (exists x0 exists x1 (Endpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
56 (exists x0 exists x1 (-Endpoint(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
57 (exists x0 exists x1 (Endpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
58 (exists x0 exists x1 (-Endpoint(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
59 (exists x0 exists x1 (x0 <= x1 & x0 != x1)) # label(non_clause).  [assumption].
60 (exists x0 exists x1 (-(x0 <= x1) & x0 != x1)) # label(non_clause).  [assumption].
61 (exists x0 exists x1 (x0 <= x1 & x1 != x0)) # label(non_clause).  [assumption].
62 (exists x0 exists x1 (-(x0 <= x1) & x1 != x0)) # label(non_clause).  [assumption].
63 (exists x0 AtomicCurveSegment(x0)) # label(non_clause).  [assumption].
64 (exists x0 -AtomicCurveSegment(x0)) # label(non_clause).  [assumption].
65 (exists x0 AtomicRayCurve(x0)) # label(non_clause).  [assumption].
66 (exists x0 -AtomicRayCurve(x0)) # label(non_clause).  [assumption].
67 (exists x0 exists x1 (x0 > x1 & x0 != x1)) # label(non_clause).  [assumption].
68 (exists x0 exists x1 (-(x0 > x1) & x0 != x1)) # label(non_clause).  [assumption].
69 (exists x0 exists x1 (x0 > x1 & x1 != x0)) # label(non_clause).  [assumption].
70 (exists x0 exists x1 (-(x0 > x1) & x1 != x0)) # label(non_clause).  [assumption].
71 (exists x0 CurveSegment(x0)) # label(non_clause).  [assumption].
72 (exists x0 -CurveSegment(x0)) # label(non_clause).  [assumption].
73 (exists x0 exists x1 (P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
74 (exists x0 exists x1 (-P(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
75 (exists x0 exists x1 (P(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
76 (exists x0 exists x1 (-P(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
77 (exists x0 MaxDim(x0)) # label(non_clause).  [assumption].
78 (exists x0 -MaxDim(x0)) # label(non_clause).  [assumption].
79 (exists x0 Max(x0)) # label(non_clause).  [assumption].
80 (exists x0 -Max(x0)) # label(non_clause).  [assumption].
81 (exists x0 Point(x0)) # label(non_clause).  [assumption].
82 (exists x0 -Point(x0)) # label(non_clause).  [assumption].
83 (exists x0 AtomicLoopCurve(x0)) # label(non_clause).  [assumption].
84 (exists x0 -AtomicLoopCurve(x0)) # label(non_clause).  [assumption].
85 (exists x0 exists x1 (SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
86 (exists x0 exists x1 (-SC(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
87 (exists x0 exists x1 (SC(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
88 (exists x0 exists x1 (-SC(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
89 (exists x0 exists x1 (x0 < x1 & x0 != x1)) # label(non_clause).  [assumption].
90 (exists x0 exists x1 (-(x0 < x1) & x0 != x1)) # label(non_clause).  [assumption].
91 (exists x0 exists x1 (x0 < x1 & x1 != x0)) # label(non_clause).  [assumption].
92 (exists x0 exists x1 (-(x0 < x1) & x1 != x0)) # label(non_clause).  [assumption].
93 (exists x0 AtomicCurve(x0)) # label(non_clause).  [assumption].
94 (exists x0 -AtomicCurve(x0)) # label(non_clause).  [assumption].
95 (exists x0 Curve(x0)) # label(non_clause).  [assumption].
96 (exists x0 -Curve(x0)) # label(non_clause).  [assumption].
97 (exists x0 exists x1 (Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
98 (exists x0 exists x1 (-Cont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
99 (exists x0 exists x1 (Cont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
100 (exists x0 exists x1 (-Cont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
101 (exists x0 ZEX(x0)) # label(non_clause).  [assumption].
102 (exists x0 -ZEX(x0)) # label(non_clause).  [assumption].
103 (exists x0 Min(x0)) # label(non_clause).  [assumption].
104 (exists x0 -Min(x0)) # label(non_clause).  [assumption].
105 (exists x0 exists x1 (Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
106 (exists x0 exists x1 (-Inc(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
107 (exists x0 exists x1 (Inc(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
108 (exists x0 exists x1 (-Inc(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
109 (exists x0 exists x1 (PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
110 (exists x0 exists x1 (-PP(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
111 (exists x0 exists x1 (PP(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
112 (exists x0 exists x1 (-PP(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
113 (exists x0 MinDim(x0)) # label(non_clause).  [assumption].
114 (exists x0 -MinDim(x0)) # label(non_clause).  [assumption].
115 (exists x0 exists x1 (BCont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
116 (exists x0 exists x1 (-BCont(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
117 (exists x0 exists x1 (BCont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
118 (exists x0 exists x1 (-BCont(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
119 (exists x0 exists x1 (Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
120 (exists x0 exists x1 (-Covers(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
121 (exists x0 exists x1 (Covers(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
122 (exists x0 exists x1 (-Covers(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
123 (exists x0 exists x1 (EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
124 (exists x0 exists x1 (-EqDim(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
125 (exists x0 exists x1 (EqDim(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
126 (exists x0 exists x1 (-EqDim(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
127 (exists x0 exists x1 (PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
128 (exists x0 exists x1 (-PO(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
129 (exists x0 exists x1 (PO(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
130 (exists x0 exists x1 (-PO(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
131 (exists x0 exists x1 (C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
132 (exists x0 exists x1 (-C(x0,x1) & x0 != x1)) # label(non_clause).  [assumption].
133 (exists x0 exists x1 (C(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
134 (exists x0 exists x1 (-C(x0,x1) & x1 != x0)) # label(non_clause).  [assumption].
135 (exists x0 Closed(x0)) # label(non_clause).  [assumption].
136 (exists x0 -Closed(x0)) # label(non_clause).  [assumption].
137 (exists x0 exists x1 (x0 >= x1 & x0 != x1)) # label(non_clause).  [assumption].
138 (exists x0 exists x1 (-(x0 >= x1) & x0 != x1)) # label(non_clause).  [assumption].
139 (exists x0 exists x1 (x0 >= x1 & x1 != x0)) # label(non_clause).  [assumption].
140 (exists x0 exists x1 (-(x0 >= x1) & x1 != x0)) # label(non_clause).  [assumption].
141 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
142 (all x x <= x) # label(non_clause).  [assumption].
143 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
144 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
145 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
146 (all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))) # label(non_clause).  [assumption].
147 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
148 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
149 (all x (Point(x) <-> Max(x) & MinDim(x))) # label(non_clause).  [assumption].
150 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
151 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
152 (all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))) # label(non_clause).  [assumption].
153 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
154 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
155 (all x all y (Point(x) & Curve(y) & -AtomicCurveSegment(y) -> (BCont(x,y) <-> (exists s1 (AtomicCurve(s1) & P(s1,y) & BCont(x,s1) & (all s2 (P(s2,y) & AtomicCurve(s2) & BCont(x,s2) -> s1 = s2))))))) # label(non_clause).  [assumption].
156 (exists x MinDim(x)) # label(non_clause).  [assumption].
157 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
158 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
159 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
160 (all x (Point(x) -> (all y (Cont(y,x) -> x = y)))) # label(non_clause).  [assumption].
161 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f1(x,y),x) | SC(x,y).
-C(x,y) | Cont(f1(x,y),y) | SC(x,y).
-C(x,y) | P(f1(x,y),x) | P(f1(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | f2(x,y) < x.
-SC(x,y) | f2(x,y) < y.
-SC(x,y) | Cont(f2(x,y),x).
-SC(x,y) | Cont(f2(x,y),y).
-AtomicLoopCurve(x) | Curve(x).
-AtomicLoopCurve(x) | -PP(y,x).
-AtomicLoopCurve(x) | Point(f3(x)).
-AtomicLoopCurve(x) | Cont(f3(x),x).
-AtomicLoopCurve(x) | -Point(y) | -Cont(y,x) | y = f3(x).
-AtomicLoopCurve(x) | -Endpoint(y,x).
AtomicLoopCurve(x) | -Curve(x) | PP(f4(x),x) | -Point(y) | -Cont(y,x) | Point(f5(x,y)) | Endpoint(f6(x),x).
AtomicLoopCurve(x) | -Curve(x) | PP(f4(x),x) | -Point(y) | -Cont(y,x) | Cont(f5(x,y),x) | Endpoint(f6(x),x).
AtomicLoopCurve(x) | -Curve(x) | PP(f4(x),x) | -Point(y) | -Cont(y,x) | f5(x,y) != y | Endpoint(f6(x),x).
-AtomicCurve(x) | AtomicCurveSegment(x) | AtomicLoopCurve(x) | AtomicRayCurve(x).
AtomicCurve(x) | -AtomicCurveSegment(x).
AtomicCurve(x) | -AtomicLoopCurve(x).
AtomicCurve(x) | -AtomicRayCurve(x).
-CurveSegment(x) | Curve(x).
-CurveSegment(x) | -P(y,x) | AtomicCurveSegment(f7(x,y)).
-CurveSegment(x) | -P(y,x) | PO(y,f7(x,y)).
CurveSegment(x) | -Curve(x) | P(f8(x),x).
CurveSegment(x) | -Curve(x) | -AtomicCurveSegment(y) | -PO(f8(x),y).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f9(x,y).
Covers(x,y) | -(y < x) | f9(x,y) < x.
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-SC(x,y) | Cont(f10(x,y),x).
-SC(x,y) | Cont(f10(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f11(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f11(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f11(x,y) < x) | -(f11(x,y) < y).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f12(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f13(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f13(x)).
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | Inc(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f14(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f14(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f15(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f15(x,y,z),f14(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | x < y | y < x.
-Cont(x,y) | -(x < y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-Curve(x) | -Point(y) | Covers(x,y).
Curve(x) | Point(f16(x)).
Curve(x) | -Covers(x,f16(x)).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
-AtomicCurve(x) | AtomicLoopCurve(x) | -Cont(y,x) | y = x | Point(y).
-AtomicCurve(x) | AtomicLoopCurve(x) | -Cont(y,x) | y = x | BCont(y,x).
-AtomicCurve(x) | -Point(y) | -Point(z) | -Point(u) | -Cont(y,x) | -Cont(z,x) | -Cont(u,x) | z = y | u = y | u = z.
-AtomicCurve(x) | -Point(y) | -Point(z) | z = y | -Cont(y,x) | -Cont(z,x) | -Closed(x).
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f17(x),x).
-AtomicRayCurve(x) | Curve(x).
-AtomicRayCurve(x) | -PP(y,x).
-AtomicRayCurve(x) | Endpoint(f18(x),x).
-AtomicRayCurve(x) | -Point(y) | -Cont(y,x) | y = f18(x).
AtomicRayCurve(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | Point(f20(x,y)).
AtomicRayCurve(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | Cont(f20(x,y),x).
AtomicRayCurve(x) | -Curve(x) | PP(f19(x),x) | -Endpoint(y,x) | f20(x,y) != y.
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c1).
-(x < c1) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
-C(x,y) | Cont(f21(x,y),x).
-C(x,y) | Cont(f21(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
Endpoint(c2,c3).
c3 != c2.
-Endpoint(c4,c5).
c5 != c4.
Endpoint(c6,c7).
c7 != c6.
-Endpoint(c8,c9).
c9 != c8.
c10 <= c11.
c11 != c10.
-(c12 <= c13).
c13 != c12.
c14 <= c15.
c15 != c14.
-(c16 <= c17).
c17 != c16.
AtomicCurveSegment(c18).
-AtomicCurveSegment(c19).
AtomicRayCurve(c20).
-AtomicRayCurve(c21).
c22 > c23.
c23 != c22.
-(c24 > c25).
c25 != c24.
c26 > c27.
c27 != c26.
-(c28 > c29).
c29 != c28.
CurveSegment(c30).
-CurveSegment(c31).
P(c32,c33).
c33 != c32.
-P(c34,c35).
c35 != c34.
P(c36,c37).
c37 != c36.
-P(c38,c39).
c39 != c38.
MaxDim(c40).
-MaxDim(c41).
Max(c42).
-Max(c43).
Point(c44).
-Point(c45).
AtomicLoopCurve(c46).
-AtomicLoopCurve(c47).
SC(c48,c49).
c49 != c48.
-SC(c50,c51).
c51 != c50.
SC(c52,c53).
c53 != c52.
-SC(c54,c55).
c55 != c54.
c56 < c57.
c57 != c56.
-(c58 < c59).
c59 != c58.
c60 < c61.
c61 != c60.
-(c62 < c63).
c63 != c62.
AtomicCurve(c64).
-AtomicCurve(c65).
Curve(c66).
-Curve(c67).
Cont(c68,c69).
c69 != c68.
-Cont(c70,c71).
c71 != c70.
Cont(c72,c73).
c73 != c72.
-Cont(c74,c75).
c75 != c74.
ZEX(c76).
-ZEX(c77).
Min(c78).
-Min(c79).
Inc(c80,c81).
c81 != c80.
-Inc(c82,c83).
c83 != c82.
Inc(c84,c85).
c85 != c84.
-Inc(c86,c87).
c87 != c86.
PP(c88,c89).
c89 != c88.
-PP(c90,c91).
c91 != c90.
PP(c92,c93).
c93 != c92.
-PP(c94,c95).
c95 != c94.
MinDim(c96).
-MinDim(c97).
BCont(c98,c99).
c99 != c98.
-BCont(c100,c101).
c101 != c100.
BCont(c102,c103).
c103 != c102.
-BCont(c104,c105).
c105 != c104.
Covers(c106,c107).
c107 != c106.
-Covers(c108,c109).
c109 != c108.
Covers(c110,c111).
c111 != c110.
-Covers(c112,c113).
c113 != c112.
EqDim(c114,c115).
c115 != c114.
-EqDim(c116,c117).
c117 != c116.
EqDim(c118,c119).
c119 != c118.
-EqDim(c120,c121).
c121 != c120.
PO(c122,c123).
c123 != c122.
-PO(c124,c125).
c125 != c124.
PO(c126,c127).
c127 != c126.
-PO(c128,c129).
c129 != c128.
C(c130,c131).
c131 != c130.
-C(c132,c133).
c133 != c132.
C(c134,c135).
c135 != c134.
-C(c136,c137).
c137 != c136.
Closed(c138).
-Closed(c139).
c140 >= c141.
c141 != c140.
-(c142 >= c143).
c143 != c142.
c144 >= c145.
c145 != c144.
-(c146 >= c147).
c147 != c146.
-Inc(x,y) | f22(x,y) < x | f23(x,y) < y.
-Inc(x,y) | f22(x,y) < x | Cont(f23(x,y),y).
-Inc(x,y) | f22(x,y) < x | P(f23(x,y),x).
-Inc(x,y) | Cont(f22(x,y),x) | f23(x,y) < y.
-Inc(x,y) | Cont(f22(x,y),x) | Cont(f23(x,y),y).
-Inc(x,y) | Cont(f22(x,y),x) | P(f23(x,y),x).
-Inc(x,y) | P(f22(x,y),y) | f23(x,y) < y.
-Inc(x,y) | P(f22(x,y),y) | Cont(f23(x,y),y).
-Inc(x,y) | P(f22(x,y),y) | P(f23(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
-AtomicCurveSegment(x) | Curve(x).
-AtomicCurveSegment(x) | -PP(y,x).
-AtomicCurveSegment(x) | Endpoint(f24(x),x).
-AtomicCurveSegment(x) | Endpoint(f25(x),x).
-AtomicCurveSegment(x) | f25(x) != f24(x).
-AtomicCurveSegment(x) | -Point(y) | -Cont(y,x) | f24(x) = y | f25(x) = y.
AtomicCurveSegment(x) | -Curve(x) | PP(f26(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Point(f27(x,y,z)).
AtomicCurveSegment(x) | -Curve(x) | PP(f26(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f27(x,y,z),x).
AtomicCurveSegment(x) | -Curve(x) | PP(f26(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f27(x,y,z).
AtomicCurveSegment(x) | -Curve(x) | PP(f26(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f27(x,y,z).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
Cont(f28(x,y),x) | Cont(f28(x,y),y) | y = x.
-Cont(f28(x,y),x) | -Cont(f28(x,y),y) | y = x.
-Point(x) | Max(x).
-Point(x) | MinDim(x).
Point(x) | -Max(x) | -MinDim(x).
-Cont(x,y) | x < y | EqDim(x,y).
-Cont(x,y) | x < y | EqDim(x,y).
-Endpoint(x,y) | Point(x).
-Endpoint(x,y) | Curve(y).
-Endpoint(x,y) | BCont(x,y).
Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f29(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f30(x),x).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | -BCont(x,y) | AtomicCurve(f31(x,y)).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | -BCont(x,y) | P(f31(x,y),y).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | -BCont(x,y) | BCont(x,f31(x,y)).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | -BCont(x,y) | -P(z,y) | -AtomicCurve(z) | -BCont(x,z) | z = f31(x,y).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | BCont(x,y) | -AtomicCurve(z) | -P(z,y) | -BCont(x,z) | P(f32(x,y,z),y).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | BCont(x,y) | -AtomicCurve(z) | -P(z,y) | -BCont(x,z) | AtomicCurve(f32(x,y,z)).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | BCont(x,y) | -AtomicCurve(z) | -P(z,y) | -BCont(x,z) | BCont(x,f32(x,y,z)).
-Point(x) | -Curve(y) | AtomicCurveSegment(y) | BCont(x,y) | -AtomicCurve(z) | -P(z,y) | -BCont(x,z) | f32(x,y,z) != z.
MinDim(c148).
ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
-Point(x) | -Cont(y,x) | y = x.
-PO(x,y) | P(f33(x,y),x).
-PO(x,y) | P(f33(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=936, kept=730.
Selections=1, assignments=1, propagations=58, current_models=0.
Rewrite_terms=12, rewrite_bools=377, indexes=6.
Rules_from_neg_clauses=9, cross_offs=9.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=2305, kept=1858.
Selections=15, assignments=42, propagations=583, current_models=0.
Rewrite_terms=399, rewrite_bools=5107, indexes=51.
Rules_from_neg_clauses=118, cross_offs=318.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.04 seconds).
Ground clauses: seen=4812, kept=3992.
Selections=65, assignments=250, propagations=4197, current_models=0.
Rewrite_terms=2862, rewrite_bools=47975, indexes=233.
Rules_from_neg_clauses=642, cross_offs=2833.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 8.99 seconds).
Ground clauses: seen=8913, kept=7558.
Selections=169281, assignments=846353, propagations=2651933, current_models=0.
Rewrite_terms=9482051, rewrite_bools=20583876, indexes=119043.
Rules_from_neg_clauses=734226, cross_offs=2872681.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

====== Domain size 6 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 68.99 seconds).
Ground clauses: seen=15136, kept=13054.
Selections=1779016, assignments=10673750, propagations=7929161, current_models=0.
Rewrite_terms=24519271, rewrite_bools=11703359, indexes=25630.
Rules_from_neg_clauses=7247460, cross_offs=37450752.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===
============================= mace4 ================================
execution finished: Wed Aug 07 17:10:01 2013
total CPU time used: 101
The command was "mace4 -v0 -t300 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_loop_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_atomic_curves.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/p9/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/p9/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/consistency/p9/curve_segment_all_weak_nontrivial.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/p9/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/p9/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/p9/codib_curve_endpoints.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/p9/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/p9/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/p9/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/p9/po.p9"
Input read from 
============================ end of footer ===========================
