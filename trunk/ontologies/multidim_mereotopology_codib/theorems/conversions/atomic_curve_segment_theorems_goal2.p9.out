============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 13957 was started by torsten on stl-ws2,
Tue Oct  8 20:02:09 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_point_regions.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9


formulas(sos).
(all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_point_regions.p9


formulas(sos).
(all x (PointRegion(x) -> Point(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9


formulas(sos).
(all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9


formulas(sos).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9


formulas(sos).
(all x (Point(x) <-> Min(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9


formulas(sos).
(all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9


formulas(goals).
(all x (AtomicCurveSegment(x) -> (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9


formulas(sos).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
(all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))) # label(non_clause).  [assumption].
2 (all x (PointRegion(x) -> Point(x))) # label(non_clause).  [assumption].
3 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
4 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
5 (all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))) # label(non_clause).  [assumption].
6 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].
7 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
8 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
9 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
10 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
11 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
12 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
13 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
14 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
15 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
16 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
17 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
18 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
19 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
20 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
21 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
22 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
23 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
24 (all x -Inc(x,x)) # label(non_clause).  [assumption].
25 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
26 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
27 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
28 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
29 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
30 (all x -(x < x)) # label(non_clause).  [assumption].
31 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
32 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
33 (all x EqDim(x,x)) # label(non_clause).  [assumption].
34 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
35 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
36 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
37 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
38 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
39 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
40 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
41 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
42 (all x (Point(x) <-> Min(x) & MinDim(x))) # label(non_clause).  [assumption].
43 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
44 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
45 (exists x MinDim(x)) # label(non_clause).  [assumption].
46 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
47 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
48 (exists x ZEX(x)) # label(non_clause).  [assumption].
49 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
50 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
51 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
52 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
53 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
54 (all x x <= x) # label(non_clause).  [assumption].
55 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
56 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
57 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
58 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
59 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
60 (all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
61 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
62 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
63 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
64 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
65 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
66 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
67 (all x -SC(x,x)) # label(non_clause).  [assumption].
68 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
69 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
70 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
71 (all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
72 (all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))) # label(non_clause).  [assumption].
73 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
74 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
75 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
76 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
77 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
78 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
79 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
80 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
81 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
82 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
83 (all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
84 (all x (AtomicCurveSegment(x) -> (all y -PP(y,x)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-Endpoint(x,y) | Point(x).  [clausify(1)].
-Endpoint(x,y) | Curve(y).  [clausify(1)].
-Endpoint(x,y) | BCont(x,y).  [clausify(1)].
Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).  [clausify(1)].
-PointRegion(x) | Point(x).  [clausify(2)].
-PP(x,y) | P(x,y).  [clausify(3)].
-PP(x,y) | y != x.  [clausify(3)].
PP(x,y) | -P(x,y) | y = x.  [clausify(3)].
Cont(f1(x,y),x) | Cont(f1(x,y),y) | y = x.  [clausify(4)].
-Cont(f1(x,y),x) | -Cont(f1(x,y),y) | y = x.  [clausify(4)].
-AtomicCurveSegment(x) | Curve(x).  [clausify(5)].
-AtomicCurveSegment(x) | -PP(y,x).  [clausify(5)].
-AtomicCurveSegment(x) | Endpoint(f2(x),x).  [clausify(5)].
-AtomicCurveSegment(x) | Endpoint(f3(x),x).  [clausify(5)].
-AtomicCurveSegment(x) | f3(x) != f2(x).  [clausify(5)].
-AtomicCurveSegment(x) | -Point(y) | -Cont(y,x) | f2(x) = y | f3(x) = y.  [clausify(5)].
AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Point(f5(x,y,z)).  [clausify(5)].
AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [clausify(5)].
AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [clausify(5)].
AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [clausify(5)].
-PointRegion(x) | MinDim(x).  [clausify(6)].
PointRegion(x) | -MinDim(x).  [clausify(6)].
ZEX(x) | Cont(x,x).  [clausify(7)].
-ZEX(x) | -Cont(x,x).  [clausify(7)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(8)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(9)].
-ZEX(x) | -Cont(y,x).  [clausify(10)].
-ZEX(x) | -Cont(x,y).  [clausify(10)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(11)].
-(x > y) | y < x.  [clausify(12)].
x > y | -(y < x).  [clausify(12)].
-(x >= y) | y <= x.  [clausify(13)].
x >= y | -(y <= x).  [clausify(13)].
-(x < y) | x <= y.  [clausify(14)].
-(x < y) | -EqDim(x,y).  [clausify(14)].
x < y | -(x <= y) | EqDim(x,y).  [clausify(14)].
ZEX(x) | PO(x,x).  [clausify(15)].
-PO(x,y) | PO(y,x).  [clausify(16)].
-PO(x,y) | EqDim(x,y).  [clausify(17)].
-SC(x,y) | Cont(f6(x,y),x).  [clausify(18)].
-SC(x,y) | Cont(f6(x,y),y).  [clausify(18)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(18)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(18)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f7(x,y),x).  [clausify(18)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f7(x,y),y).  [clausify(18)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f7(x,y) < x) | -(f7(x,y) < y).  [clausify(18)].
-BCont(x,y) | Cont(x,y).  [clausify(19)].
-BCont(x,y) | Inc(x,y).  [clausify(19)].
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(20)].
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(21)].
-BCont(x,y) | -P(y,z) | P(f8(x,y,z),z) | BCont(x,z).  [clausify(22)].
-BCont(x,y) | -P(y,z) | -PO(f8(x,y,z),y) | BCont(x,z).  [clausify(22)].
-BCont(x,y) | -P(y,z) | P(f9(x,y,z),x) | BCont(x,z).  [clausify(22)].
-BCont(x,y) | -P(y,z) | Cont(f9(x,y,z),f8(x,y,z)) | BCont(x,z).  [clausify(22)].
-BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(23)].
-Inc(x,x).  [clausify(24)].
-Inc(x,y) | Inc(y,x).  [clausify(25)].
-EqDim(x,y) | -Inc(x,y).  [clausify(26)].
-Inc(x,y) | x < y | y < x.  [clausify(27)].
-Cont(x,y) | -(x < y) | Inc(x,y).  [clausify(28)].
-Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(29)].
-(x < x).  [clausify(30)].
-(x < y) | -(y < x).  [clausify(31)].
-(x < y) | -(y < z) | x < z.  [clausify(32)].
EqDim(x,x).  [clausify(33)].
-EqDim(x,y) | EqDim(y,x).  [clausify(34)].
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(35)].
-(x < y) | -EqDim(x,y).  [clausify(36)].
-EqDim(x,y) | -(z < x) | z < y.  [clausify(37)].
-EqDim(x,y) | -(x < z) | y < z.  [clausify(38)].
-ZEX(c1).  [clausify(39)].
-(x < c1) | ZEX(x).  [clausify(39)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(40)].
-ZEX(x) | ZEX(y) | x < y.  [clausify(41)].
-Point(x) | Min(x).  [clausify(42)].
-Point(x) | MinDim(x).  [clausify(42)].
Point(x) | -Min(x) | -MinDim(x).  [clausify(42)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(43)].
-P(x,y) | Cont(x,y).  [clausify(44)].
-P(x,y) | EqDim(x,y).  [clausify(44)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(44)].
MinDim(c2).  [clausify(45)].
-C(x,y) | Cont(f10(x,y),x).  [clausify(46)].
-C(x,y) | Cont(f10(x,y),y).  [clausify(46)].
C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(46)].
-EqDim(x,y) | x <= y.  [clausify(47)].
-EqDim(x,y) | y <= x.  [clausify(47)].
EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(47)].
ZEX(c3).  [clausify(48)].
-PO(x,y) | P(f11(x,y),x).  [clausify(49)].
-PO(x,y) | P(f11(x,y),y).  [clausify(49)].
PO(x,y) | -P(z,x) | -P(z,y).  [clausify(49)].
C(x,y) | ZEX(intersection(x,y)).  [clausify(50)].
-C(x,y) | -ZEX(intersection(x,y)).  [clausify(50)].
ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(51)].
-Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(52)].
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(53)].
Cont(x,y) | -P(x,intersection(y,z)).  [clausify(53)].
Cont(x,y) | -P(x,intersection(z,y)).  [clausify(53)].
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).  [clausify(53)].
x <= x.  [clausify(54)].
-(x <= y) | -(y <= z) | x <= z.  [clausify(55)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(56)].
-ZEX(x) | x <= y.  [clausify(57)].
-MaxDim(x) | y <= x.  [clausify(58)].
MaxDim(x) | -(f12(x) <= x).  [clausify(58)].
-MinDim(x) | -ZEX(x).  [clausify(59)].
-MinDim(x) | -(y < x) | ZEX(y).  [clausify(59)].
MinDim(x) | ZEX(x) | f13(x) < x.  [clausify(59)].
MinDim(x) | ZEX(x) | -ZEX(f13(x)).  [clausify(59)].
-Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(60)].
Con(x) | PP(f14(x),x).  [clausify(60)].
Con(x) | -SC(f14(x),difference(x,f14(x))).  [clausify(60)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(61)].
-Covers(x,y) | y < x.  [clausify(62)].
-Covers(x,y) | -(y < z) | -(z < x).  [clausify(62)].
Covers(x,y) | -(y < x) | y < f15(x,y).  [clausify(62)].
Covers(x,y) | -(y < x) | f15(x,y) < x.  [clausify(62)].
-SC(x,y) | C(x,y).  [clausify(63)].
-SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(64)].
-SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(65)].
-C(x,y) | Cont(f16(x,y),x) | SC(x,y).  [clausify(66)].
-C(x,y) | Cont(f16(x,y),y) | SC(x,y).  [clausify(66)].
-C(x,y) | P(f16(x,y),x) | P(f16(x,y),y) | SC(x,y).  [clausify(66)].
-SC(x,x).  [clausify(67)].
-SC(x,y) | SC(y,x).  [clausify(68)].
-SC(x,y) | f17(x,y) < x.  [clausify(69)].
-SC(x,y) | f17(x,y) < y.  [clausify(69)].
-SC(x,y) | Cont(f17(x,y),x).  [clausify(69)].
-SC(x,y) | Cont(f17(x,y),y).  [clausify(69)].
-ICon(x) | Con(x).  [clausify(70)].
-ICon(x) | -PP(y,x) | Covers(x,intersection(y,difference(x,y))).  [clausify(70)].
ICon(x) | -Con(x) | PP(f18(x),x).  [clausify(70)].
ICon(x) | -Con(x) | -Covers(x,intersection(f18(x),difference(x,f18(x)))).  [clausify(70)].
-UCon(x) | Con(x).  [clausify(71)].
-UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(71)].
UCon(x) | -Con(x) | PP(f19(x),x).  [clausify(71)].
UCon(x) | -Con(x) | Cont(f20(x),f19(x)).  [clausify(71)].
UCon(x) | -Con(x) | Cont(f20(x),difference(x,f19(x))).  [clausify(71)].
UCon(x) | -Con(x) | -Cont(f20(x),intersection(f19(x),difference(x,f19(x)))).  [clausify(71)].
-StrongC(x,y) | SC(x,y).  [clausify(72)].
-StrongC(x,y) | EqDim(x,y).  [clausify(72)].
-StrongC(x,y) | Covers(x,intersection(x,y)).  [clausify(72)].
StrongC(x,y) | -SC(x,y) | -EqDim(x,y) | -Covers(x,intersection(x,y)).  [clausify(72)].
-Closed(x) | -BCont(y,x).  [clausify(73)].
Closed(x) | BCont(f21(x),x).  [clausify(73)].
-Max(x) | -ZEX(x).  [clausify(74)].
-Max(x) | -PP(x,y).  [clausify(74)].
Max(x) | ZEX(x) | PP(x,f22(x)).  [clausify(74)].
-Min(x) | -ZEX(x).  [clausify(75)].
-Min(x) | -PP(y,x).  [clausify(75)].
Min(x) | ZEX(x) | PP(f23(x),x).  [clausify(75)].
ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(76)].
-(x < y) | difference(y,x) = y.  [clausify(77)].
-(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(78)].
-(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(79)].
-(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(80)].
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(81)].
ZEX(difference(x,y)) | -ZEX(x).  [clausify(81)].
ZEX(difference(x,y)) | -Cont(x,y).  [clausify(81)].
-Inc(x,y) | f24(x,y) < x | f25(x,y) < y.  [clausify(82)].
-Inc(x,y) | f24(x,y) < x | Cont(f25(x,y),y).  [clausify(82)].
-Inc(x,y) | f24(x,y) < x | P(f25(x,y),x).  [clausify(82)].
-Inc(x,y) | Cont(f24(x,y),x) | f25(x,y) < y.  [clausify(82)].
-Inc(x,y) | Cont(f24(x,y),x) | Cont(f25(x,y),y).  [clausify(82)].
-Inc(x,y) | Cont(f24(x,y),x) | P(f25(x,y),x).  [clausify(82)].
-Inc(x,y) | P(f24(x,y),y) | f25(x,y) < y.  [clausify(82)].
-Inc(x,y) | P(f24(x,y),y) | Cont(f25(x,y),y).  [clausify(82)].
-Inc(x,y) | P(f24(x,y),y) | P(f25(x,y),x).  [clausify(82)].
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(82)].
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(82)].
-Curve(x) | -PointRegion(y) | Covers(x,y).  [clausify(83)].
-Curve(x) | PointRegion(y) | -Covers(x,y).  [clausify(83)].
Curve(x) | PointRegion(f26(x)) | Covers(x,f26(x)).  [clausify(83)].
Curve(x) | -PointRegion(f26(x)) | -Covers(x,f26(x)).  [clausify(83)].
AtomicCurveSegment(c4).  [deny(84)].
PP(c5,c4).  [deny(84)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating Point/1
85 Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).  [clausify(1)].
86 -Endpoint(x,y) | Point(x).  [clausify(1)].
Derived: Endpoint(x,y) | -Curve(y) | -BCont(x,y) | -Endpoint(x,z).  [resolve(85,b,86,b)].
87 -PointRegion(x) | Point(x).  [clausify(2)].
Derived: -PointRegion(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(87,b,85,b)].
88 -AtomicCurveSegment(x) | -Point(y) | -Cont(y,x) | f2(x) = y | f3(x) = y.  [clausify(5)].
Derived: -AtomicCurveSegment(x) | -Cont(y,x) | f2(x) = y | f3(x) = y | -Endpoint(y,z).  [resolve(88,b,86,b)].
Derived: -AtomicCurveSegment(x) | -Cont(y,x) | f2(x) = y | f3(x) = y | -PointRegion(y).  [resolve(88,b,87,b)].
89 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Point(f5(x,y,z)).  [clausify(5)].
Derived: AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(89,g,85,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(89,g,88,b)].
90 -Point(x) | Min(x).  [clausify(42)].
Derived: Min(x) | -Endpoint(x,y).  [resolve(90,a,86,b)].
Derived: Min(x) | -PointRegion(x).  [resolve(90,a,87,b)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y.  [resolve(90,a,89,g)].
91 -Point(x) | MinDim(x).  [clausify(42)].
Derived: MinDim(x) | -Endpoint(x,y).  [resolve(91,a,86,b)].
Derived: MinDim(x) | -PointRegion(x).  [resolve(91,a,87,b)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y.  [resolve(91,a,89,g)].
92 Point(x) | -Min(x) | -MinDim(x).  [clausify(42)].
Derived: -Min(x) | -MinDim(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(92,a,85,b)].
Derived: -Min(x) | -MinDim(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x.  [resolve(92,a,88,b)].

Eliminating PP/2
93 PP(x,y) | -P(x,y) | y = x.  [clausify(3)].
94 -PP(x,y) | P(x,y).  [clausify(3)].
95 -PP(x,y) | y != x.  [clausify(3)].
96 -AtomicCurveSegment(x) | -PP(y,x).  [clausify(5)].
Derived: -AtomicCurveSegment(x) | -P(y,x) | x = y.  [resolve(96,b,93,a)].
97 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [clausify(5)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x) | P(f4(x),x).  [resolve(97,c,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x) | x != f4(x).  [resolve(97,c,95,a)].
98 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [clausify(5)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z) | P(f4(x),x).  [resolve(98,c,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z) | x != f4(x).  [resolve(98,c,95,a)].
99 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [clausify(5)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z) | P(f4(x),x).  [resolve(99,c,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z) | x != f4(x).  [resolve(99,c,95,a)].
100 -Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(60)].
Derived: -Con(x) | SC(y,difference(x,y)) | -P(y,x) | x = y.  [resolve(100,b,93,a)].
Derived: -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(100,b,97,c)].
Derived: -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(100,b,98,c)].
Derived: -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(100,b,99,c)].
101 Con(x) | PP(f14(x),x).  [clausify(60)].
Derived: Con(x) | P(f14(x),x).  [resolve(101,b,94,a)].
Derived: Con(x) | x != f14(x).  [resolve(101,b,95,a)].
Derived: Con(x) | -AtomicCurveSegment(x).  [resolve(101,b,96,b)].
102 -ICon(x) | -PP(y,x) | Covers(x,intersection(y,difference(x,y))).  [clausify(70)].
Derived: -ICon(x) | Covers(x,intersection(y,difference(x,y))) | -P(y,x) | x = y.  [resolve(102,b,93,a)].
Derived: -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(102,b,97,c)].
Derived: -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(102,b,98,c)].
Derived: -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(102,b,99,c)].
Derived: -ICon(x) | Covers(x,intersection(f14(x),difference(x,f14(x)))) | Con(x).  [resolve(102,b,101,b)].
103 ICon(x) | -Con(x) | PP(f18(x),x).  [clausify(70)].
Derived: ICon(x) | -Con(x) | P(f18(x),x).  [resolve(103,c,94,a)].
Derived: ICon(x) | -Con(x) | x != f18(x).  [resolve(103,c,95,a)].
Derived: ICon(x) | -Con(x) | -AtomicCurveSegment(x).  [resolve(103,c,96,b)].
Derived: ICon(x) | -Con(x) | -Con(x) | SC(f18(x),difference(x,f18(x))).  [resolve(103,c,100,b)].
104 -UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(71)].
Derived: -UCon(x) | -Cont(y,z) | -Cont(y,difference(x,z)) | Cont(y,intersection(z,difference(x,z))) | -P(z,x) | x = z.  [resolve(104,b,93,a)].
Derived: -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | Cont(f5(x,z,u),x).  [resolve(104,b,97,c)].
Derived: -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | z != f5(x,z,u).  [resolve(104,b,98,c)].
Derived: -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | u != f5(x,z,u).  [resolve(104,b,99,c)].
Derived: -UCon(x) | -Cont(y,f14(x)) | -Cont(y,difference(x,f14(x))) | Cont(y,intersection(f14(x),difference(x,f14(x)))) | Con(x).  [resolve(104,b,101,b)].
Derived: -UCon(x) | -Cont(y,f18(x)) | -Cont(y,difference(x,f18(x))) | Cont(y,intersection(f18(x),difference(x,f18(x)))) | ICon(x) | -Con(x).  [resolve(104,b,103,c)].
105 UCon(x) | -Con(x) | PP(f19(x),x).  [clausify(71)].
Derived: UCon(x) | -Con(x) | P(f19(x),x).  [resolve(105,c,94,a)].
Derived: UCon(x) | -Con(x) | x != f19(x).  [resolve(105,c,95,a)].
Derived: UCon(x) | -Con(x) | -AtomicCurveSegment(x).  [resolve(105,c,96,b)].
Derived: UCon(x) | -Con(x) | -Con(x) | SC(f19(x),difference(x,f19(x))).  [resolve(105,c,100,b)].
Derived: UCon(x) | -Con(x) | -ICon(x) | Covers(x,intersection(f19(x),difference(x,f19(x)))).  [resolve(105,c,102,b)].
106 -Max(x) | -PP(x,y).  [clausify(74)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(106,b,93,a)].
Derived: -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(106,b,97,c)].
Derived: -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(106,b,98,c)].
Derived: -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(106,b,99,c)].
Derived: -Max(f14(x)) | Con(x).  [resolve(106,b,101,b)].
Derived: -Max(f18(x)) | ICon(x) | -Con(x).  [resolve(106,b,103,c)].
Derived: -Max(f19(x)) | UCon(x) | -Con(x).  [resolve(106,b,105,c)].
107 Max(x) | ZEX(x) | PP(x,f22(x)).  [clausify(74)].
Derived: Max(x) | ZEX(x) | P(x,f22(x)).  [resolve(107,c,94,a)].
Derived: Max(x) | ZEX(x) | f22(x) != x.  [resolve(107,c,95,a)].
Derived: Max(x) | ZEX(x) | -AtomicCurveSegment(f22(x)).  [resolve(107,c,96,b)].
Derived: Max(x) | ZEX(x) | -Con(f22(x)) | SC(x,difference(f22(x),x)).  [resolve(107,c,100,b)].
Derived: Max(x) | ZEX(x) | -ICon(f22(x)) | Covers(f22(x),intersection(x,difference(f22(x),x))).  [resolve(107,c,102,b)].
Derived: Max(x) | ZEX(x) | -UCon(f22(x)) | -Cont(y,x) | -Cont(y,difference(f22(x),x)) | Cont(y,intersection(x,difference(f22(x),x))).  [resolve(107,c,104,b)].
108 -Min(x) | -PP(y,x).  [clausify(75)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(108,b,93,a)].
Derived: -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(108,b,97,c)].
Derived: -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(108,b,98,c)].
Derived: -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(108,b,99,c)].
Derived: -Min(x) | Con(x).  [resolve(108,b,101,b)].
Derived: -Min(x) | ICon(x) | -Con(x).  [resolve(108,b,103,c)].
Derived: -Min(x) | UCon(x) | -Con(x).  [resolve(108,b,105,c)].
Derived: -Min(f22(x)) | Max(x) | ZEX(x).  [resolve(108,b,107,c)].
109 Min(x) | ZEX(x) | PP(f23(x),x).  [clausify(75)].
Derived: Min(x) | ZEX(x) | P(f23(x),x).  [resolve(109,c,94,a)].
Derived: Min(x) | ZEX(x) | x != f23(x).  [resolve(109,c,95,a)].
Derived: Min(x) | ZEX(x) | -AtomicCurveSegment(x).  [resolve(109,c,96,b)].
Derived: Min(x) | ZEX(x) | -Con(x) | SC(f23(x),difference(x,f23(x))).  [resolve(109,c,100,b)].
Derived: Min(x) | ZEX(x) | -ICon(x) | Covers(x,intersection(f23(x),difference(x,f23(x)))).  [resolve(109,c,102,b)].
Derived: Min(x) | ZEX(x) | -UCon(x) | -Cont(y,f23(x)) | -Cont(y,difference(x,f23(x))) | Cont(y,intersection(f23(x),difference(x,f23(x)))).  [resolve(109,c,104,b)].
Derived: Min(x) | ZEX(x) | -Max(f23(x)).  [resolve(109,c,106,b)].
110 PP(c5,c4).  [deny(84)].
Derived: P(c5,c4).  [resolve(110,a,94,a)].
Derived: c4 != c5.  [resolve(110,a,95,a)].
Derived: -AtomicCurveSegment(c4).  [resolve(110,a,96,b)].
Derived: -Con(c4) | SC(c5,difference(c4,c5)).  [resolve(110,a,100,b)].
Derived: -ICon(c4) | Covers(c4,intersection(c5,difference(c4,c5))).  [resolve(110,a,102,b)].
Derived: -UCon(c4) | -Cont(x,c5) | -Cont(x,difference(c4,c5)) | Cont(x,intersection(c5,difference(c4,c5))).  [resolve(110,a,104,b)].
Derived: -Max(c5).  [resolve(110,a,106,b)].
Derived: -Min(c4).  [resolve(110,a,108,b)].
111 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(89,g,85,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | P(f4(x),x).  [resolve(111,c,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | x != f4(x).  [resolve(111,c,95,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | -Con(x) | SC(f4(x),difference(x,f4(x))).  [resolve(111,c,100,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))).  [resolve(111,c,102,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | -UCon(x) | -Cont(w,f4(x)) | -Cont(w,difference(x,f4(x))) | Cont(w,intersection(f4(x),difference(x,f4(x)))).  [resolve(111,c,104,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | -Max(f4(x)).  [resolve(111,c,106,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u) | -Min(x).  [resolve(111,c,108,b)].
112 AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(89,g,88,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | P(f4(x),x).  [resolve(112,c,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | x != f4(x).  [resolve(112,c,95,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | -Con(x) | SC(f4(x),difference(x,f4(x))).  [resolve(112,c,100,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))).  [resolve(112,c,102,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | -UCon(x) | -Cont(w,f4(x)) | -Cont(w,difference(x,f4(x))) | Cont(w,intersection(f4(x),difference(x,f4(x)))).  [resolve(112,c,104,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | -Max(f4(x)).  [resolve(112,c,106,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z) | -Min(x).  [resolve(112,c,108,b)].
113 Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y.  [resolve(90,a,89,g)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x).  [resolve(113,d,94,a)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x).  [resolve(113,d,95,a)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))).  [resolve(113,d,100,b)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))).  [resolve(113,d,102,b)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))).  [resolve(113,d,104,b)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)).  [resolve(113,d,106,b)].
Derived: Min(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x).  [resolve(113,d,108,b)].
114 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | PP(f4(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y.  [resolve(91,a,89,g)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x).  [resolve(114,d,94,a)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x).  [resolve(114,d,95,a)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))).  [resolve(114,d,100,b)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))).  [resolve(114,d,102,b)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))).  [resolve(114,d,104,b)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)).  [resolve(114,d,106,b)].
Derived: MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x).  [resolve(114,d,108,b)].

Eliminating MinDim/1
115 PointRegion(x) | -MinDim(x).  [clausify(6)].
116 -PointRegion(x) | MinDim(x).  [clausify(6)].
117 MinDim(c2).  [clausify(45)].
Derived: PointRegion(c2).  [resolve(117,a,115,b)].
118 -MinDim(x) | -ZEX(x).  [clausify(59)].
Derived: -ZEX(x) | -PointRegion(x).  [resolve(118,a,116,b)].
Derived: -ZEX(c2).  [resolve(118,a,117,a)].
119 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(59)].
Derived: -(x < y) | ZEX(x) | -PointRegion(y).  [resolve(119,a,116,b)].
Derived: -(x < c2) | ZEX(x).  [resolve(119,a,117,a)].
120 MinDim(x) | ZEX(x) | f13(x) < x.  [clausify(59)].
Derived: ZEX(x) | f13(x) < x | PointRegion(x).  [resolve(120,a,115,b)].
Derived: ZEX(x) | f13(x) < x | -(y < x) | ZEX(y).  [resolve(120,a,119,a)].
121 MinDim(x) | ZEX(x) | -ZEX(f13(x)).  [clausify(59)].
Derived: ZEX(x) | -ZEX(f13(x)) | PointRegion(x).  [resolve(121,a,115,b)].
Derived: ZEX(x) | -ZEX(f13(x)) | -(y < x) | ZEX(y).  [resolve(121,a,119,a)].
122 MinDim(x) | -Endpoint(x,y).  [resolve(91,a,86,b)].
Derived: -Endpoint(x,y) | PointRegion(x).  [resolve(122,a,115,b)].
Derived: -Endpoint(x,y) | -ZEX(x).  [resolve(122,a,118,a)].
Derived: -Endpoint(x,y) | -(z < x) | ZEX(z).  [resolve(122,a,119,a)].
123 MinDim(x) | -PointRegion(x).  [resolve(91,a,87,b)].
124 -Min(x) | -MinDim(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(92,a,85,b)].
Derived: -Min(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y) | -PointRegion(x).  [resolve(124,b,116,b)].
Derived: -Min(c2) | Endpoint(c2,x) | -Curve(x) | -BCont(c2,x).  [resolve(124,b,117,a)].
Derived: -Min(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y) | ZEX(x) | f13(x) < x.  [resolve(124,b,120,a)].
Derived: -Min(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y) | ZEX(x) | -ZEX(f13(x)).  [resolve(124,b,121,a)].
Derived: -Min(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y) | -Endpoint(x,z).  [resolve(124,b,122,a)].
125 -Min(x) | -MinDim(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x.  [resolve(92,a,88,b)].
Derived: -Min(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x | -PointRegion(x).  [resolve(125,b,116,b)].
Derived: -Min(c2) | -AtomicCurveSegment(x) | -Cont(c2,x) | f2(x) = c2 | f3(x) = c2.  [resolve(125,b,117,a)].
Derived: -Min(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x | ZEX(x) | f13(x) < x.  [resolve(125,b,120,a)].
Derived: -Min(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x | ZEX(x) | -ZEX(f13(x)).  [resolve(125,b,121,a)].
Derived: -Min(x) | -AtomicCurveSegment(y) | -Cont(x,y) | f2(y) = x | f3(y) = x | -Endpoint(x,z).  [resolve(125,b,122,a)].
126 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x).  [resolve(114,d,94,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x) | PointRegion(f5(x,y,z)).  [resolve(126,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x) | -ZEX(f5(x,y,z)).  [resolve(126,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(126,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(126,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | P(f4(x),x) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(126,a,125,b)].
127 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x).  [resolve(114,d,95,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x) | PointRegion(f5(x,y,z)).  [resolve(127,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x) | -ZEX(f5(x,y,z)).  [resolve(127,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(127,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(127,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | x != f4(x) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(127,a,125,b)].
128 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))).  [resolve(114,d,100,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))) | PointRegion(f5(x,y,z)).  [resolve(128,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))) | -ZEX(f5(x,y,z)).  [resolve(128,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(128,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(128,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Con(x) | SC(f4(x),difference(x,f4(x))) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(128,a,125,b)].
129 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))).  [resolve(114,d,102,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | PointRegion(f5(x,y,z)).  [resolve(129,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | -ZEX(f5(x,y,z)).  [resolve(129,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(129,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(129,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(129,a,125,b)].
130 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))).  [resolve(114,d,104,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))) | PointRegion(f5(x,y,z)).  [resolve(130,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))) | -ZEX(f5(x,y,z)).  [resolve(130,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))) | -(w < f5(x,y,z)) | ZEX(w).  [resolve(130,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),w) | -Curve(w) | -BCont(f5(x,y,z),w).  [resolve(130,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -UCon(x) | -Cont(u,f4(x)) | -Cont(u,difference(x,f4(x))) | Cont(u,intersection(f4(x),difference(x,f4(x)))) | -Min(f5(x,y,z)) | -AtomicCurveSegment(w) | -Cont(f5(x,y,z),w) | f2(w) = f5(x,y,z) | f3(w) = f5(x,y,z).  [resolve(130,a,125,b)].
131 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)).  [resolve(114,d,106,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)) | PointRegion(f5(x,y,z)).  [resolve(131,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)) | -ZEX(f5(x,y,z)).  [resolve(131,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(131,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(131,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Max(f4(x)) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(131,a,125,b)].
132 MinDim(f5(x,y,z)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x).  [resolve(114,d,108,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x) | PointRegion(f5(x,y,z)).  [resolve(132,a,115,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x) | -ZEX(f5(x,y,z)).  [resolve(132,a,118,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x) | -(u < f5(x,y,z)) | ZEX(u).  [resolve(132,a,119,a)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x) | -Min(f5(x,y,z)) | Endpoint(f5(x,y,z),u) | -Curve(u) | -BCont(f5(x,y,z),u).  [resolve(132,a,124,b)].
Derived: AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | -Min(x) | -Min(f5(x,y,z)) | -AtomicCurveSegment(u) | -Cont(f5(x,y,z),u) | f2(u) = f5(x,y,z) | f3(u) = f5(x,y,z).  [resolve(132,a,125,b)].

Eliminating >/2
133 x > y | -(y < x).  [clausify(12)].
134 -(x > y) | y < x.  [clausify(12)].

Eliminating >=/2
135 x >= y | -(y <= x).  [clausify(13)].
136 -(x >= y) | y <= x.  [clausify(13)].

Eliminating C/2
137 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(46)].
138 -C(x,y) | Cont(f10(x,y),x).  [clausify(46)].
139 -C(x,y) | Cont(f10(x,y),y).  [clausify(46)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),y).  [resolve(137,a,138,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f10(y,z),z).  [resolve(137,a,139,a)].
140 C(x,y) | ZEX(intersection(x,y)).  [clausify(50)].
Derived: ZEX(intersection(x,y)) | Cont(f10(x,y),x).  [resolve(140,a,138,a)].
Derived: ZEX(intersection(x,y)) | Cont(f10(x,y),y).  [resolve(140,a,139,a)].
141 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(50)].
Derived: -ZEX(intersection(x,y)) | -Cont(z,x) | -Cont(z,y).  [resolve(141,a,137,a)].
142 -SC(x,y) | C(x,y).  [clausify(63)].
Derived: -SC(x,y) | Cont(f10(x,y),x).  [resolve(142,b,138,a)].
Derived: -SC(x,y) | Cont(f10(x,y),y).  [resolve(142,b,139,a)].
Derived: -SC(x,y) | -ZEX(intersection(x,y)).  [resolve(142,b,141,a)].
143 -C(x,y) | Cont(f16(x,y),x) | SC(x,y).  [clausify(66)].
Derived: Cont(f16(x,y),x) | SC(x,y) | -Cont(z,x) | -Cont(z,y).  [resolve(143,a,137,a)].
Derived: Cont(f16(x,y),x) | SC(x,y) | ZEX(intersection(x,y)).  [resolve(143,a,140,a)].
144 -C(x,y) | Cont(f16(x,y),y) | SC(x,y).  [clausify(66)].
Derived: Cont(f16(x,y),y) | SC(x,y) | -Cont(z,x) | -Cont(z,y).  [resolve(144,a,137,a)].
Derived: Cont(f16(x,y),y) | SC(x,y) | ZEX(intersection(x,y)).  [resolve(144,a,140,a)].
145 -C(x,y) | P(f16(x,y),x) | P(f16(x,y),y) | SC(x,y).  [clausify(66)].
Derived: P(f16(x,y),x) | P(f16(x,y),y) | SC(x,y) | -Cont(z,x) | -Cont(z,y).  [resolve(145,a,137,a)].
Derived: P(f16(x,y),x) | P(f16(x,y),y) | SC(x,y) | ZEX(intersection(x,y)).  [resolve(145,a,140,a)].

Eliminating MaxDim/1
146 MaxDim(x) | -(f12(x) <= x).  [clausify(58)].
147 -MaxDim(x) | y <= x.  [clausify(58)].
Derived: -(f12(x) <= x) | y <= x.  [resolve(146,a,147,a)].

Eliminating StrongC/2
148 StrongC(x,y) | -SC(x,y) | -EqDim(x,y) | -Covers(x,intersection(x,y)).  [clausify(72)].
149 -StrongC(x,y) | SC(x,y).  [clausify(72)].
150 -StrongC(x,y) | EqDim(x,y).  [clausify(72)].
151 -StrongC(x,y) | Covers(x,intersection(x,y)).  [clausify(72)].

Eliminating Closed/1
152 Closed(x) | BCont(f21(x),x).  [clausify(73)].
153 -Closed(x) | -BCont(y,x).  [clausify(73)].
Derived: BCont(f21(x),x) | -BCont(y,x).  [resolve(152,a,153,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, AtomicCurveSegment, Curve, ZEX, Min, Con, UCon, ICon, Max, PointRegion, Endpoint, Cont, P, <, SC, BCont, Covers, EqDim, Inc, <=, PO ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, difference, intersection, f1, f6, f7, f10, f11, f15, f16, f17, f24, f25, f2, f3, f4, f12, f13, f14, f18, f19, f20, f21, f22, f23, f26, f5, f8, f9 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      154 -Endpoint(x,y) | Curve(y).  [clausify(1)].
kept:      155 -Endpoint(x,y) | BCont(x,y).  [clausify(1)].
kept:      156 Cont(f1(x,y),x) | Cont(f1(x,y),y) | y = x.  [clausify(4)].
kept:      157 -Cont(f1(x,y),x) | -Cont(f1(x,y),y) | y = x.  [clausify(4)].
kept:      158 -AtomicCurveSegment(x) | Curve(x).  [clausify(5)].
kept:      159 -AtomicCurveSegment(x) | Endpoint(f2(x),x).  [clausify(5)].
kept:      160 -AtomicCurveSegment(x) | Endpoint(f3(x),x).  [clausify(5)].
kept:      161 -AtomicCurveSegment(x) | f3(x) != f2(x).  [clausify(5)].
kept:      162 ZEX(x) | Cont(x,x).  [clausify(7)].
kept:      163 -ZEX(x) | -Cont(x,x).  [clausify(7)].
kept:      164 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(8)].
kept:      165 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(9)].
kept:      166 -ZEX(x) | -Cont(y,x).  [clausify(10)].
kept:      167 -ZEX(x) | -Cont(x,y).  [clausify(10)].
kept:      168 -ZEX(x) | -ZEX(y) | y = x.  [clausify(11)].
kept:      169 -(x < y) | x <= y.  [clausify(14)].
kept:      170 -(x < y) | -EqDim(x,y).  [clausify(14)].
kept:      171 x < y | -(x <= y) | EqDim(x,y).  [clausify(14)].
kept:      172 ZEX(x) | PO(x,x).  [clausify(15)].
kept:      173 -PO(x,y) | PO(y,x).  [clausify(16)].
kept:      174 -PO(x,y) | EqDim(x,y).  [clausify(17)].
kept:      175 -SC(x,y) | Cont(f6(x,y),x).  [clausify(18)].
kept:      176 -SC(x,y) | Cont(f6(x,y),y).  [clausify(18)].
kept:      177 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(18)].
kept:      178 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(18)].
kept:      179 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f7(x,y),x).  [clausify(18)].
kept:      180 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f7(x,y),y).  [clausify(18)].
kept:      181 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f7(x,y) < x) | -(f7(x,y) < y).  [clausify(18)].
kept:      182 -BCont(x,y) | Cont(x,y).  [clausify(19)].
kept:      183 -BCont(x,y) | Inc(x,y).  [clausify(19)].
kept:      184 -SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(20)].
kept:      185 -SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(21)].
kept:      186 -BCont(x,y) | -P(y,z) | P(f8(x,y,z),z) | BCont(x,z).  [clausify(22)].
kept:      187 -BCont(x,y) | -P(y,z) | -PO(f8(x,y,z),y) | BCont(x,z).  [clausify(22)].
kept:      188 -BCont(x,y) | -P(y,z) | P(f9(x,y,z),x) | BCont(x,z).  [clausify(22)].
kept:      189 -BCont(x,y) | -P(y,z) | Cont(f9(x,y,z),f8(x,y,z)) | BCont(x,z).  [clausify(22)].
kept:      190 -BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(23)].
kept:      191 -Inc(x,x).  [clausify(24)].
kept:      192 -Inc(x,y) | Inc(y,x).  [clausify(25)].
kept:      193 -EqDim(x,y) | -Inc(x,y).  [clausify(26)].
kept:      194 -Inc(x,y) | x < y | y < x.  [clausify(27)].
kept:      195 -Cont(x,y) | -(x < y) | Inc(x,y).  [clausify(28)].
kept:      196 -Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(29)].
kept:      197 -(x < x).  [clausify(30)].
kept:      198 -(x < y) | -(y < x).  [clausify(31)].
kept:      199 -(x < y) | -(y < z) | x < z.  [clausify(32)].
kept:      200 EqDim(x,x).  [clausify(33)].
kept:      201 -EqDim(x,y) | EqDim(y,x).  [clausify(34)].
kept:      202 -EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(35)].
kept:      203 -EqDim(x,y) | -(z < x) | z < y.  [clausify(37)].
kept:      204 -EqDim(x,y) | -(x < z) | y < z.  [clausify(38)].
kept:      205 -ZEX(c1).  [clausify(39)].
kept:      206 -(x < c1) | ZEX(x).  [clausify(39)].
kept:      207 -ZEX(x) | ZEX(y) | x < y.  [clausify(41)].
kept:      208 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(43)].
kept:      209 -P(x,y) | Cont(x,y).  [clausify(44)].
kept:      210 -P(x,y) | EqDim(x,y).  [clausify(44)].
kept:      211 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(44)].
kept:      212 -EqDim(x,y) | x <= y.  [clausify(47)].
kept:      213 -EqDim(x,y) | y <= x.  [clausify(47)].
kept:      214 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(47)].
kept:      215 ZEX(c3).  [clausify(48)].
kept:      216 -PO(x,y) | P(f11(x,y),x).  [clausify(49)].
kept:      217 -PO(x,y) | P(f11(x,y),y).  [clausify(49)].
kept:      218 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(49)].
kept:      219 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(51)].
kept:      220 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(52)].
kept:      221 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(53)].
kept:      222 Cont(x,y) | -P(x,intersection(y,z)).  [clausify(53)].
kept:      223 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(53)].
kept:      224 x <= x.  [clausify(54)].
kept:      225 -(x <= y) | -(y <= z) | x <= z.  [clausify(55)].
kept:      226 -ZEX(x) | x <= y.  [clausify(57)].
kept:      227 Con(x) | -SC(f14(x),difference(x,f14(x))).  [clausify(60)].
kept:      228 -Covers(x,y) | y < x.  [clausify(62)].
kept:      229 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(62)].
kept:      230 Covers(x,y) | -(y < x) | y < f15(x,y).  [clausify(62)].
kept:      231 Covers(x,y) | -(y < x) | f15(x,y) < x.  [clausify(62)].
kept:      232 -SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(64)].
kept:      233 -SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(65)].
kept:      234 -SC(x,x).  [clausify(67)].
kept:      235 -SC(x,y) | SC(y,x).  [clausify(68)].
kept:      236 -SC(x,y) | f17(x,y) < x.  [clausify(69)].
kept:      237 -SC(x,y) | f17(x,y) < y.  [clausify(69)].
kept:      238 -SC(x,y) | Cont(f17(x,y),x).  [clausify(69)].
kept:      239 -SC(x,y) | Cont(f17(x,y),y).  [clausify(69)].
kept:      240 -ICon(x) | Con(x).  [clausify(70)].
kept:      241 ICon(x) | -Con(x) | -Covers(x,intersection(f18(x),difference(x,f18(x)))).  [clausify(70)].
kept:      242 -UCon(x) | Con(x).  [clausify(71)].
kept:      243 UCon(x) | -Con(x) | Cont(f20(x),f19(x)).  [clausify(71)].
kept:      244 UCon(x) | -Con(x) | Cont(f20(x),difference(x,f19(x))).  [clausify(71)].
kept:      245 UCon(x) | -Con(x) | -Cont(f20(x),intersection(f19(x),difference(x,f19(x)))).  [clausify(71)].
kept:      246 -Max(x) | -ZEX(x).  [clausify(74)].
kept:      247 -Min(x) | -ZEX(x).  [clausify(75)].
kept:      248 ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(76)].
kept:      249 -(x < y) | difference(y,x) = y.  [clausify(77)].
kept:      250 -(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(78)].
kept:      251 -(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(79)].
kept:      252 -(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(80)].
kept:      253 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(81)].
kept:      254 ZEX(difference(x,y)) | -ZEX(x).  [clausify(81)].
kept:      255 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(81)].
kept:      256 -Inc(x,y) | f24(x,y) < x | f25(x,y) < y.  [clausify(82)].
kept:      257 -Inc(x,y) | f24(x,y) < x | Cont(f25(x,y),y).  [clausify(82)].
kept:      258 -Inc(x,y) | f24(x,y) < x | P(f25(x,y),x).  [clausify(82)].
kept:      259 -Inc(x,y) | Cont(f24(x,y),x) | f25(x,y) < y.  [clausify(82)].
kept:      260 -Inc(x,y) | Cont(f24(x,y),x) | Cont(f25(x,y),y).  [clausify(82)].
kept:      261 -Inc(x,y) | Cont(f24(x,y),x) | P(f25(x,y),x).  [clausify(82)].
kept:      262 -Inc(x,y) | P(f24(x,y),y) | f25(x,y) < y.  [clausify(82)].
kept:      263 -Inc(x,y) | P(f24(x,y),y) | Cont(f25(x,y),y).  [clausify(82)].
kept:      264 -Inc(x,y) | P(f24(x,y),y) | P(f25(x,y),x).  [clausify(82)].
kept:      265 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(82)].
kept:      266 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(82)].
kept:      267 -Curve(x) | -PointRegion(y) | Covers(x,y).  [clausify(83)].
kept:      268 -Curve(x) | PointRegion(y) | -Covers(x,y).  [clausify(83)].
kept:      269 Curve(x) | PointRegion(f26(x)) | Covers(x,f26(x)).  [clausify(83)].
kept:      270 Curve(x) | -PointRegion(f26(x)) | -Covers(x,f26(x)).  [clausify(83)].
kept:      271 AtomicCurveSegment(c4).  [deny(84)].
kept:      272 Endpoint(x,y) | -Curve(y) | -BCont(x,y) | -Endpoint(x,z).  [resolve(85,b,86,b)].
kept:      273 -PointRegion(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(87,b,85,b)].
kept:      274 -AtomicCurveSegment(x) | -Cont(y,x) | f2(x) = y | f3(x) = y | -Endpoint(y,z).  [resolve(88,b,86,b)].
kept:      275 -AtomicCurveSegment(x) | -Cont(y,x) | f2(x) = y | f3(x) = y | -PointRegion(y).  [resolve(88,b,87,b)].
kept:      276 Min(x) | -Endpoint(x,y).  [resolve(90,a,86,b)].
kept:      277 Min(x) | -PointRegion(x).  [resolve(90,a,87,b)].
kept:      278 -AtomicCurveSegment(x) | -P(y,x) | x = y.  [resolve(96,b,93,a)].
kept:      279 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x) | P(f4(x),x).  [resolve(97,c,94,a)].
           280 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x) | x != f4(x).  [resolve(97,c,95,a)].
kept:      281 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x) | f4(x) != x.  [copy(280),flip(g)].
           282 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z) | P(f4(x),x).  [resolve(98,c,94,a)].
kept:      283 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y | P(f4(x),x).  [copy(282),flip(f)].
           284 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z) | x != f4(x).  [resolve(98,c,95,a)].
kept:      285 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y | f4(x) != x.  [copy(284),flip(f),flip(g)].
           286 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z) | P(f4(x),x).  [resolve(99,c,94,a)].
kept:      287 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z | P(f4(x),x).  [copy(286),flip(f)].
           288 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z) | x != f4(x).  [resolve(99,c,95,a)].
kept:      289 AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z | f4(x) != x.  [copy(288),flip(f),flip(g)].
kept:      290 -Con(x) | SC(y,difference(x,y)) | -P(y,x) | x = y.  [resolve(100,b,93,a)].
kept:      291 -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(100,b,97,c)].
           292 -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(100,b,98,c)].
kept:      293 -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y.  [copy(292),flip(h)].
           294 -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(100,b,99,c)].
kept:      295 -Con(x) | SC(f4(x),difference(x,f4(x))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z.  [copy(294),flip(h)].
kept:      296 Con(x) | P(f14(x),x).  [resolve(101,b,94,a)].
           297 Con(x) | x != f14(x).  [resolve(101,b,95,a)].
kept:      298 Con(x) | f14(x) != x.  [copy(297),flip(b)].
kept:      299 Con(x) | -AtomicCurveSegment(x).  [resolve(101,b,96,b)].
kept:      300 -ICon(x) | Covers(x,intersection(y,difference(x,y))) | -P(y,x) | x = y.  [resolve(102,b,93,a)].
kept:      301 -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(102,b,97,c)].
           302 -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(102,b,98,c)].
kept:      303 -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y.  [copy(302),flip(h)].
           304 -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(102,b,99,c)].
kept:      305 -ICon(x) | Covers(x,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z.  [copy(304),flip(h)].
kept:      306 ICon(x) | -Con(x) | P(f18(x),x).  [resolve(103,c,94,a)].
           307 ICon(x) | -Con(x) | x != f18(x).  [resolve(103,c,95,a)].
kept:      308 ICon(x) | -Con(x) | f18(x) != x.  [copy(307),flip(c)].
kept:      309 ICon(x) | -Con(x) | -AtomicCurveSegment(x).  [resolve(103,c,96,b)].
           310 ICon(x) | -Con(x) | -Con(x) | SC(f18(x),difference(x,f18(x))).  [resolve(103,c,100,b)].
kept:      311 ICon(x) | -Con(x) | SC(f18(x),difference(x,f18(x))).  [copy(310),merge(c)].
kept:      312 -UCon(x) | -Cont(y,z) | -Cont(y,difference(x,z)) | Cont(y,intersection(z,difference(x,z))) | -P(z,x) | x = z.  [resolve(104,b,93,a)].
kept:      313 -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | Cont(f5(x,z,u),x).  [resolve(104,b,97,c)].
           314 -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | z != f5(x,z,u).  [resolve(104,b,98,c)].
kept:      315 -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | f5(x,z,u) != z.  [copy(314),flip(j)].
           316 -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | u != f5(x,z,u).  [resolve(104,b,99,c)].
kept:      317 -UCon(x) | -Cont(y,f4(x)) | -Cont(y,difference(x,f4(x))) | Cont(y,intersection(f4(x),difference(x,f4(x)))) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(z,x) | -Endpoint(u,x) | u = z | f5(x,z,u) != u.  [copy(316),flip(j)].
kept:      318 -UCon(x) | -Cont(y,f18(x)) | -Cont(y,difference(x,f18(x))) | Cont(y,intersection(f18(x),difference(x,f18(x)))) | ICon(x) | -Con(x).  [resolve(104,b,103,c)].
kept:      319 UCon(x) | -Con(x) | P(f19(x),x).  [resolve(105,c,94,a)].
           320 UCon(x) | -Con(x) | x != f19(x).  [resolve(105,c,95,a)].
kept:      321 UCon(x) | -Con(x) | f19(x) != x.  [copy(320),flip(c)].
kept:      322 UCon(x) | -Con(x) | -AtomicCurveSegment(x).  [resolve(105,c,96,b)].
           323 UCon(x) | -Con(x) | -Con(x) | SC(f19(x),difference(x,f19(x))).  [resolve(105,c,100,b)].
kept:      324 UCon(x) | -Con(x) | SC(f19(x),difference(x,f19(x))).  [copy(323),merge(c)].
kept:      325 UCon(x) | -Con(x) | -ICon(x) | Covers(x,intersection(f19(x),difference(x,f19(x)))).  [resolve(105,c,102,b)].
kept:      326 -Max(x) | -P(x,y) | y = x.  [resolve(106,b,93,a)].
kept:      327 -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(106,b,97,c)].
           328 -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(106,b,98,c)].
kept:      329 -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y.  [copy(328),flip(g)].
           330 -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(106,b,99,c)].
kept:      331 -Max(f4(x)) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z.  [copy(330),flip(g)].
kept:      332 -Max(f14(x)) | Con(x).  [resolve(106,b,101,b)].
kept:      333 -Max(f18(x)) | ICon(x) | -Con(x).  [resolve(106,b,103,c)].
kept:      334 -Max(f19(x)) | UCon(x) | -Con(x).  [resolve(106,b,105,c)].
kept:      335 Max(x) | ZEX(x) | P(x,f22(x)).  [resolve(107,c,94,a)].
kept:      336 Max(x) | ZEX(x) | f22(x) != x.  [resolve(107,c,95,a)].
kept:      337 Max(x) | ZEX(x) | -AtomicCurveSegment(f22(x)).  [resolve(107,c,96,b)].
kept:      338 Max(x) | ZEX(x) | -Con(f22(x)) | SC(x,difference(f22(x),x)).  [resolve(107,c,100,b)].
kept:      339 Max(x) | ZEX(x) | -ICon(f22(x)) | Covers(f22(x),intersection(x,difference(f22(x),x))).  [resolve(107,c,102,b)].
kept:      340 Max(x) | ZEX(x) | -UCon(f22(x)) | -Cont(y,x) | -Cont(y,difference(f22(x),x)) | Cont(y,intersection(x,difference(f22(x),x))).  [resolve(107,c,104,b)].
kept:      341 -Min(x) | -P(y,x) | x = y.  [resolve(108,b,93,a)].
kept:      342 -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f5(x,y,z),x).  [resolve(108,b,97,c)].
           343 -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f5(x,y,z).  [resolve(108,b,98,c)].
kept:      344 -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != y.  [copy(343),flip(g)].
           345 -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f5(x,y,z).  [resolve(108,b,99,c)].
kept:      346 -Min(x) | AtomicCurveSegment(x) | -Curve(x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | f5(x,y,z) != z.  [copy(345),flip(g)].
kept:      347 -Min(x) | Con(x).  [resolve(108,b,101,b)].
kept:      348 -Min(x) | ICon(x) | -Con(x).  [resolve(108,b,103,c)].
kept:      349 -Min(x) | UCon(x) | -Con(x).  [resolve(108,b,105,c)].
kept:      350 -Min(f22(x)) | Max(x) | ZEX(x).  [resolve(108,b,107,c)].
kept:      351 Min(x) | ZEX(x) | P(f23(x),x).  [resolve(109,c,94,a)].
           352 Min(x) | ZEX(x) | x != f23(x).  [resolve(109,c,95,a)].
kept:      353 Min(x) | ZEX(x) | f23(x) != x.  [copy(352),flip(c)].
kept:      354 Min(x) | ZEX(x) | -AtomicCurveSegment(x).  [resolve(109,c,96,b)].
kept:      355 Min(x) | ZEX(x) | -Con(x) | SC(f23(x),difference(x,f23(x))).  [resolve(109,c,100,b)].
kept:      356 Min(x) | ZEX(x) | -ICon(x) | Covers(x,intersection(f23(x),difference(x,f23(x)))).  [resolve(109,c,102,b)].
kept:      357 Min(x) | ZEX(x) | -UCon(x) | -Cont(y,f23(x)) | -Cont(y,difference(x,f23(x))) | Cont(y,intersection(f23(x),difference(x,f23(x)))).  [resolve(109,c,104,b)].
kept:      358 Min(x) | ZEX(x) | -Max(f23(x)).  [resolve(109,c,106,b)].
kept:      359 P(c5,c4).  [resolve(110,a,94,a)].
           360 c4 != c5.  [resolve(110,a,95,a)].
kept:      361 c5 != c4.  [copy(360),flip(a)].
           362 -AtomicCurveSegment(c4).  [resolve(110,a,96,b)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.06 (+ 0.01) seconds.
% Length of proof is 7.
% Level of proof is 3.
% Maximum clause weight is 2.000.
% Given clauses 0.

5 (all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))) # label(non_clause).  [assumption].
84 (all x (AtomicCurveSegment(x) -> (all y -PP(y,x)))) # label(non_clause) # label(goal).  [goal].
96 -AtomicCurveSegment(x) | -PP(y,x).  [clausify(5)].
110 PP(c5,c4).  [deny(84)].
271 AtomicCurveSegment(c4).  [deny(84)].
362 -AtomicCurveSegment(c4).  [resolve(110,a,96,b)].
363 $F.  [copy(362),unit_del(a,271)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=194. Kept=186. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=186, Disabled=263. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=7. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=66. Nonunit_bsub_feature_tests=0.
Megabytes=1.13.
User_CPU=0.06, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 13957 exit (max_proofs) ------

Process 13957 exit (max_proofs) Tue Oct  8 20:02:09 2013
============================= prover9 ================================
execution finished: Tue Oct 08 20:02:10 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_point_regions.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9"
Input read from 
============================ end of footer ===========================
