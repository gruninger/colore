============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 4376 was started by torsten on stl-ws2,
Mon Oct  7 16:13:21 2013
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9


formulas(sos).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9


formulas(sos).
(all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9


formulas(sos).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
(all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9


formulas(sos).
(all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9


formulas(sos).
(all x (Point(x) <-> Max(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9


formulas(goals).
(all x (AtomicCurveSegment(x) -> (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9


formulas(sos).
(all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9


formulas(sos).
(all x (Point(x) -> (all y (Cont(y,x) -> x = y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].
2 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
4 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
5 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
6 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
7 (all x (AtomicCurveSegment(x) <-> Curve(x) & (all y -PP(y,x)) & (exists p1 exists p2 (Endpoint(p1,x) & Endpoint(p2,x) & p1 != p2 & (all z (Point(z) & Cont(z,x) -> p1 = z | p2 = z)))))) # label(non_clause).  [assumption].
8 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
9 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
10 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
11 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
12 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
13 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
14 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
15 (all x -Inc(x,x)) # label(non_clause).  [assumption].
16 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
17 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
18 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
19 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
20 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
21 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
22 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
23 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
24 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
25 (all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
26 (exists x MinDim(x)) # label(non_clause).  [assumption].
27 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
28 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
29 (all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
30 (all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))) # label(non_clause).  [assumption].
31 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
32 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
33 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
34 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
35 (all x -(x < x)) # label(non_clause).  [assumption].
36 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
37 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
38 (all x EqDim(x,x)) # label(non_clause).  [assumption].
39 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
40 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
41 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
42 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
43 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
44 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
45 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
46 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
47 (all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))) # label(non_clause).  [assumption].
48 (all x (Point(x) <-> Max(x) & MinDim(x))) # label(non_clause).  [assumption].
49 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
50 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
51 (all x x <= x) # label(non_clause).  [assumption].
52 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
53 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
54 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
55 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
56 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
57 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
58 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
59 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
60 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
61 (exists x ZEX(x)) # label(non_clause).  [assumption].
62 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
63 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
64 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
65 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
66 (all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
67 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
68 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
69 (all x (Point(x) -> (all y (Cont(y,x) -> x = y)))) # label(non_clause).  [assumption].
70 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
71 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
72 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
73 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
74 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
75 (all x -SC(x,x)) # label(non_clause).  [assumption].
76 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
77 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
78 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
79 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
80 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
81 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
82 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
83 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
84 (all x (AtomicCurveSegment(x) -> (all y -PP(y,x)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-PointRegion(x) | MinDim(x).
PointRegion(x) | -MinDim(x).
-Cont(x,y) | x < y | EqDim(x,y).
-Inc(x,y) | f1(x,y) < x | f2(x,y) < y.
-Inc(x,y) | f1(x,y) < x | Cont(f2(x,y),y).
-Inc(x,y) | f1(x,y) < x | P(f2(x,y),x).
-Inc(x,y) | Cont(f1(x,y),x) | f2(x,y) < y.
-Inc(x,y) | Cont(f1(x,y),x) | Cont(f2(x,y),y).
-Inc(x,y) | Cont(f1(x,y),x) | P(f2(x,y),x).
-Inc(x,y) | P(f1(x,y),y) | f2(x,y) < y.
-Inc(x,y) | P(f1(x,y),y) | Cont(f2(x,y),y).
-Inc(x,y) | P(f1(x,y),y) | P(f2(x,y),x).
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).
-(x > y) | y < x.
x > y | -(y < x).
-(x >= y) | y <= x.
x >= y | -(y <= x).
-(x < y) | x <= y.
-(x < y) | -EqDim(x,y).
x < y | -(x <= y) | EqDim(x,y).
-AtomicCurveSegment(x) | Curve(x).
-AtomicCurveSegment(x) | -PP(y,x).
-AtomicCurveSegment(x) | Endpoint(f3(x),x).
-AtomicCurveSegment(x) | Endpoint(f4(x),x).
-AtomicCurveSegment(x) | f4(x) != f3(x).
-AtomicCurveSegment(x) | -Point(y) | -Cont(y,x) | f3(x) = y | f4(x) = y.
AtomicCurveSegment(x) | -Curve(x) | PP(f5(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Point(f6(x,y,z)).
AtomicCurveSegment(x) | -Curve(x) | PP(f5(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | Cont(f6(x,y,z),x).
AtomicCurveSegment(x) | -Curve(x) | PP(f5(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | y != f6(x,y,z).
AtomicCurveSegment(x) | -Curve(x) | PP(f5(x),x) | -Endpoint(y,x) | -Endpoint(z,x) | z = y | z != f6(x,y,z).
-MaxDim(x) | y <= x.
MaxDim(x) | -(f7(x) <= x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -(y < x) | ZEX(y).
MinDim(x) | ZEX(x) | f8(x) < x.
MinDim(x) | ZEX(x) | -ZEX(f8(x)).
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | Inc(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f9(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f9(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f10(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f10(x,y,z),f9(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | x < y | y < x.
-Cont(x,y) | -(x < y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-Cont(x,y) | x < y | EqDim(x,y).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | ZEX(x) | PP(x,f11(x)).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | ZEX(x) | PP(f12(x),x).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-Curve(x) | -PointRegion(y) | Covers(x,y).
-Curve(x) | PointRegion(y) | -Covers(x,y).
Curve(x) | PointRegion(f13(x)) | Covers(x,f13(x)).
Curve(x) | -PointRegion(f13(x)) | -Covers(x,f13(x)).
MinDim(c1).
-PO(x,y) | P(f14(x,y),x).
-PO(x,y) | P(f14(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-ICon(x) | Con(x).
-ICon(x) | -PP(y,x) | Covers(x,intersection(y,difference(x,y))).
ICon(x) | -Con(x) | PP(f15(x),x).
ICon(x) | -Con(x) | -Covers(x,intersection(f15(x),difference(x,f15(x)))).
-UCon(x) | Con(x).
-UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).
UCon(x) | -Con(x) | PP(f16(x),x).
UCon(x) | -Con(x) | Cont(f17(x),f16(x)).
UCon(x) | -Con(x) | Cont(f17(x),difference(x,f16(x))).
UCon(x) | -Con(x) | -Cont(f17(x),intersection(f16(x),difference(x,f16(x)))).
-StrongC(x,y) | SC(x,y).
-StrongC(x,y) | EqDim(x,y).
-StrongC(x,y) | Covers(x,intersection(x,y)).
StrongC(x,y) | -SC(x,y) | -EqDim(x,y) | -Covers(x,intersection(x,y)).
C(x,y) | ZEX(intersection(x,y)).
-C(x,y) | -ZEX(intersection(x,y)).
ZEX(intersection(x,y)) | Cont(intersection(x,y),x).
-Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(z,y)).
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).
-(x < x).
-(x < y) | -(y < x).
-(x < y) | -(y < z) | x < z.
EqDim(x,x).
-EqDim(x,y) | EqDim(y,x).
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).
-(x < y) | -EqDim(x,y).
-EqDim(x,y) | -(z < x) | z < y.
-EqDim(x,y) | -(x < z) | y < z.
-ZEX(c2).
-(x < c2) | ZEX(x).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | ZEX(y) | x < y.
-Endpoint(x,y) | Point(x).
-Endpoint(x,y) | Curve(y).
-Endpoint(x,y) | BCont(x,y).
Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).
-Point(x) | Max(x).
-Point(x) | MinDim(x).
Point(x) | -Max(x) | -MinDim(x).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-EqDim(x,y) | x <= y.
-EqDim(x,y) | y <= x.
EqDim(x,y) | -(x <= y) | -(y <= x).
x <= x.
-(x <= y) | -(y <= z) | x <= z.
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | x <= y.
ZEX(x) | Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f18(x),x).
ZEX(c3).
ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
-C(x,y) | Cont(f19(x,y),x).
-C(x,y) | Cont(f19(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-Con(x) | -PP(y,x) | SC(y,difference(x,y)).
Con(x) | PP(f20(x),x).
Con(x) | -SC(f20(x),difference(x,f20(x))).
-Covers(x,y) | y < x.
-Covers(x,y) | -(y < z) | -(z < x).
Covers(x,y) | -(y < x) | y < f21(x,y).
Covers(x,y) | -(y < x) | f21(x,y) < x.
Cont(f22(x,y),x) | Cont(f22(x,y),y) | y = x.
-Cont(f22(x,y),x) | -Cont(f22(x,y),y) | y = x.
-Point(x) | -Cont(y,x) | y = x.
-SC(x,y) | Cont(f23(x,y),x).
-SC(x,y) | Cont(f23(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f24(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f24(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f24(x,y) < x) | -(f24(x,y) < y).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f25(x,y),x) | SC(x,y).
-C(x,y) | Cont(f25(x,y),y) | SC(x,y).
-C(x,y) | P(f25(x,y),x) | P(f25(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | f26(x,y) < x.
-SC(x,y) | f26(x,y) < y.
-SC(x,y) | Cont(f26(x,y),x).
-SC(x,y) | Cont(f26(x,y),y).
ZEX(difference(x,y)) | EqDim(x,difference(x,y)).
-(x < y) | difference(y,x) = y.
-(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).
-(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).
-(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).
ZEX(difference(x,y)) | -ZEX(x).
ZEX(difference(x,y)) | -Cont(x,y).
AtomicCurveSegment(c4).
PP(c5,c4).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=787, kept=667.
Selections=1, assignments=1, propagations=60, current_models=0.
Rewrite_terms=5, rewrite_bools=543, indexes=2.
Rules_from_neg_clauses=3, cross_offs=3.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=2129, kept=1901.
Selections=2, assignments=3, propagations=129, current_models=0.
Rewrite_terms=68, rewrite_bools=1655, indexes=28.
Rules_from_neg_clauses=6, cross_offs=19.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.03 seconds).
Ground clauses: seen=4545, kept=4177.
Selections=3, assignments=6, propagations=224, current_models=0.
Rewrite_terms=602, rewrite_bools=4534, indexes=87.
Rules_from_neg_clauses=17, cross_offs=92.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.06 seconds).
Ground clauses: seen=8425, kept=7885.
Selections=3, assignments=6, propagations=282, current_models=0.
Rewrite_terms=918, rewrite_bools=7599, indexes=140.
Rules_from_neg_clauses=21, cross_offs=132.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.11 seconds).
Ground clauses: seen=14207, kept=13463.
Selections=3, assignments=6, propagations=340, current_models=0.
Rewrite_terms=1300, rewrite_bools=11717, indexes=205.
Rules_from_neg_clauses=25, cross_offs=180.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 0.19 seconds).
Ground clauses: seen=22377, kept=21397.
Selections=3, assignments=6, propagations=398, current_models=0.
Rewrite_terms=1748, rewrite_bools=17026, indexes=282.
Rules_from_neg_clauses=29, cross_offs=236.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

=== Mace4 starting on domain size 8. ===

============================== STATISTICS ============================

For domain size 8.

Current CPU time: 0.00 seconds (total CPU time: 0.30 seconds).
Ground clauses: seen=33469, kept=32221.
Selections=3, assignments=6, propagations=456, current_models=0.
Rewrite_terms=2262, rewrite_bools=23664, indexes=371.
Rules_from_neg_clauses=33, cross_offs=300.

============================== end of statistics =====================

============================== DOMAIN SIZE 9 =========================

=== Mace4 starting on domain size 9. ===

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 0.46 seconds).
Ground clauses: seen=48065, kept=46517.
Selections=3, assignments=6, propagations=514, current_models=0.
Rewrite_terms=2842, rewrite_bools=31769, indexes=472.
Rules_from_neg_clauses=37, cross_offs=372.

============================== end of statistics =====================

============================== DOMAIN SIZE 10 ========================

=== Mace4 starting on domain size 10. ===

============================== STATISTICS ============================

For domain size 10.

Current CPU time: 0.00 seconds (total CPU time: 0.73 seconds).
Ground clauses: seen=66795, kept=64915.
Selections=3, assignments=6, propagations=572, current_models=0.
Rewrite_terms=3488, rewrite_bools=41479, indexes=585.
Rules_from_neg_clauses=41, cross_offs=452.

============================== end of statistics =====================

============================== DOMAIN SIZE 11 ========================

=== Mace4 starting on domain size 11. ===

============================== STATISTICS ============================

For domain size 11.

Current CPU time: 0.00 seconds (total CPU time: 1.10 seconds).
Ground clauses: seen=90337, kept=88093.
Selections=3, assignments=6, propagations=630, current_models=0.
Rewrite_terms=4200, rewrite_bools=52932, indexes=710.
Rules_from_neg_clauses=45, cross_offs=540.

============================== end of statistics =====================

============================== DOMAIN SIZE 12 ========================

=== Mace4 starting on domain size 12. ===

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 1.57 seconds).
Ground clauses: seen=119417, kept=116777.
Selections=3, assignments=6, propagations=688, current_models=0.
Rewrite_terms=4978, rewrite_bools=66266, indexes=847.
Rules_from_neg_clauses=49, cross_offs=636.

============================== end of statistics =====================

============================== DOMAIN SIZE 13 ========================

=== Mace4 starting on domain size 13. ===
============================= mace4 ================================
execution finished: Mon Oct 07 16:13:24 2013
total CPU time used: 2
The command was "mace4 -v0 -t600 -s60 -n2 -N40 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_curve_segment.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_curve_segment_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9"
Input read from 
============================ end of footer ===========================
