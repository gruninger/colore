============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 1394 was started by torsten on stl-ws2,
Mon Oct  7 16:06:08 2013
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_ray_curve_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9


formulas(sos).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9


formulas(sos).
(all x (MaxDim(x) <-> (all y y <= x))).
(all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9


formulas(sos).
(exists x MinDim(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9


formulas(sos).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9


formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9


formulas(sos).
(all x all y (x > y <-> y < x)).
(all x all y (x >= y <-> y <= x)).
(all x all y (x < y <-> x <= y & -EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9


formulas(sos).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> x < y | y < x)).
(all x all y (Cont(x,y) & x < y -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9


formulas(sos).
(all x all y (EqDim(x,y) <-> x <= y & y <= x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9


formulas(sos).
(all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9


formulas(sos).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_ray_curve_theorems_goal2.p9


formulas(goals).
(all x (AtomicRayCurve(x) -> (all y -PP(y,x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9


formulas(sos).
(all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))).
(all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))).
(all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9


formulas(sos).
(all x (Point(x) -> (all y (Cont(y,x) -> x = y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9


formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_ray_curve.p9


formulas(sos).
(all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9


formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9


formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9


formulas(sos).
(all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9


formulas(sos).
(all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9


formulas(sos).
(all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9


formulas(sos).
(all x x <= x).
(all x all y all z (x <= y & y <= z -> x <= z)).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) -> x <= y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9


formulas(sos).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9


formulas(sos).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9


formulas(sos).
(all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9


formulas(sos).
(all x all y (-C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9


formulas(sos).
(all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9


formulas(sos).
(exists x ZEX(x)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9


formulas(sos).
(all x (Point(x) <-> Max(x) & MinDim(x))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9


formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9


formulas(sos).
(all x (-ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9


formulas(sos).
(all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9


formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9


formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
(exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & -ZEX(y) -> x < y)).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9


formulas(sos).
(all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (y < x -> x = difference(x,y))).
(all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))).
(all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
end_of_list.

% Reading from file /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
2 (all x (MaxDim(x) <-> (all y y <= x))) # label(non_clause).  [assumption].
3 (all x (MinDim(x) <-> -ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
4 (exists x MinDim(x)) # label(non_clause).  [assumption].
5 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
6 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
8 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
9 (all x -SC(x,x)) # label(non_clause).  [assumption].
10 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
11 (all x all y (SC(x,y) -> (exists z (z < x & z < y & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
12 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
13 (all x all y (x > y <-> y < x)) # label(non_clause).  [assumption].
14 (all x all y (x >= y <-> y <= x)) # label(non_clause).  [assumption].
15 (all x all y (x < y <-> x <= y & -EqDim(x,y))) # label(non_clause).  [assumption].
16 (all x -Inc(x,x)) # label(non_clause).  [assumption].
17 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
18 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
19 (all x all y (Inc(x,y) -> x < y | y < x)) # label(non_clause).  [assumption].
20 (all x all y (Cont(x,y) & x < y -> Inc(x,y))) # label(non_clause).  [assumption].
21 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
22 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
23 (all x all y (EqDim(x,y) <-> x <= y & y <= x)) # label(non_clause).  [assumption].
24 (all x (Max(x) <-> -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
25 (all x (Min(x) <-> -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
26 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
27 (all x (ICon(x) <-> Con(x) & (all y (PP(y,x) -> Covers(x,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
28 (all x (UCon(x) <-> Con(x) & (all y all z (PP(y,x) & Cont(z,y) & Cont(z,difference(x,y)) -> Cont(z,intersection(y,difference(x,y))))))) # label(non_clause).  [assumption].
29 (all x all y (StrongC(x,y) <-> SC(x,y) & EqDim(x,y) & Covers(x,intersection(x,y)))) # label(non_clause).  [assumption].
30 (all x (Point(x) -> (all y (Cont(y,x) -> x = y)))) # label(non_clause).  [assumption].
31 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
32 (all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))) # label(non_clause).  [assumption].
33 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
34 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
35 (all x (Curve(x) <-> (all y (PointRegion(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
36 (all x all y (BCont(x,y) -> Cont(x,y) & Inc(x,y))) # label(non_clause).  [assumption].
37 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
38 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
39 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
40 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
41 (all x (Con(x) <-> (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
42 (all x x <= x) # label(non_clause).  [assumption].
43 (all x all y all z (x <= y & y <= z -> x <= z)) # label(non_clause).  [assumption].
44 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
45 (all x all y (ZEX(x) -> x <= y)) # label(non_clause).  [assumption].
46 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].
47 (all x all y (Covers(x,y) <-> y < x & (all z -(y < z & z < x)))) # label(non_clause).  [assumption].
48 (all x all y (-C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
49 (all x all y (-ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
50 (all x all y all z (Cont(z,x) & Cont(z,y) -> z <= intersection(x,y))) # label(non_clause).  [assumption].
51 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
52 (all x all y ((all z (Cont(z,x) <-> Cont(z,y))) -> x = y)) # label(non_clause).  [assumption].
53 (exists x ZEX(x)) # label(non_clause).  [assumption].
54 (all x (Point(x) <-> Max(x) & MinDim(x))) # label(non_clause).  [assumption].
55 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
56 (all x (-ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
57 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
58 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
59 (all x all y (Endpoint(x,y) <-> Point(x) & Curve(y) & BCont(x,y))) # label(non_clause).  [assumption].
60 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
61 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
62 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
63 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
64 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
65 (all x -(x < x)) # label(non_clause).  [assumption].
66 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
67 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
68 (all x EqDim(x,x)) # label(non_clause).  [assumption].
69 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
70 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
71 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
72 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
73 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
74 (exists x (-ZEX(x) & (all y (y < x -> ZEX(y))))) # label(non_clause).  [assumption].
75 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
76 (all x all y (ZEX(x) & -ZEX(y) -> x < y)) # label(non_clause).  [assumption].
77 (all x all y (-ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
78 (all x all y (y < x -> x = difference(x,y))) # label(non_clause).  [assumption].
79 (all x all y all z (x <= y & Cont(z,x) & intersection(z,y) < z -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
80 (all x all y all z (x <= y & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
81 (all x all y all z (x <= y & P(z,difference(x,y)) -> intersection(z,y) < z)) # label(non_clause).  [assumption].
82 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
83 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
84 (all x (AtomicRayCurve(x) -> (all y -PP(y,x)))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
-PP(x,y) | P(x,y).  [clausify(1)].
-PP(x,y) | y != x.  [clausify(1)].
PP(x,y) | -P(x,y) | y = x.  [clausify(1)].
-MaxDim(x) | y <= x.  [clausify(2)].
MaxDim(x) | -(f1(x) <= x).  [clausify(2)].
-MinDim(x) | -ZEX(x).  [clausify(3)].
-MinDim(x) | -(y < x) | ZEX(y).  [clausify(3)].
MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(3)].
MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(3)].
MinDim(c1).  [clausify(4)].
-SC(x,y) | C(x,y).  [clausify(5)].
-SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(6)].
-SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(7)].
-C(x,y) | Cont(f3(x,y),x) | SC(x,y).  [clausify(8)].
-C(x,y) | Cont(f3(x,y),y) | SC(x,y).  [clausify(8)].
-C(x,y) | P(f3(x,y),x) | P(f3(x,y),y) | SC(x,y).  [clausify(8)].
-SC(x,x).  [clausify(9)].
-SC(x,y) | SC(y,x).  [clausify(10)].
-SC(x,y) | f4(x,y) < x.  [clausify(11)].
-SC(x,y) | f4(x,y) < y.  [clausify(11)].
-SC(x,y) | Cont(f4(x,y),x).  [clausify(11)].
-SC(x,y) | Cont(f4(x,y),y).  [clausify(11)].
-PO(x,y) | P(f5(x,y),x).  [clausify(12)].
-PO(x,y) | P(f5(x,y),y).  [clausify(12)].
PO(x,y) | -P(z,x) | -P(z,y).  [clausify(12)].
-(x > y) | y < x.  [clausify(13)].
x > y | -(y < x).  [clausify(13)].
-(x >= y) | y <= x.  [clausify(14)].
x >= y | -(y <= x).  [clausify(14)].
-(x < y) | x <= y.  [clausify(15)].
-(x < y) | -EqDim(x,y).  [clausify(15)].
x < y | -(x <= y) | EqDim(x,y).  [clausify(15)].
-Inc(x,x).  [clausify(16)].
-Inc(x,y) | Inc(y,x).  [clausify(17)].
-EqDim(x,y) | -Inc(x,y).  [clausify(18)].
-Inc(x,y) | x < y | y < x.  [clausify(19)].
-Cont(x,y) | -(x < y) | Inc(x,y).  [clausify(20)].
-Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(21)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(22)].
-EqDim(x,y) | x <= y.  [clausify(23)].
-EqDim(x,y) | y <= x.  [clausify(23)].
EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(23)].
-Max(x) | -ZEX(x).  [clausify(24)].
-Max(x) | -PP(x,y).  [clausify(24)].
Max(x) | ZEX(x) | PP(x,f6(x)).  [clausify(24)].
-Min(x) | -ZEX(x).  [clausify(25)].
-Min(x) | -PP(y,x).  [clausify(25)].
Min(x) | ZEX(x) | PP(f7(x),x).  [clausify(25)].
-Closed(x) | -BCont(y,x).  [clausify(26)].
Closed(x) | BCont(f8(x),x).  [clausify(26)].
-ICon(x) | Con(x).  [clausify(27)].
-ICon(x) | -PP(y,x) | Covers(x,intersection(y,difference(x,y))).  [clausify(27)].
ICon(x) | -Con(x) | PP(f9(x),x).  [clausify(27)].
ICon(x) | -Con(x) | -Covers(x,intersection(f9(x),difference(x,f9(x)))).  [clausify(27)].
-UCon(x) | Con(x).  [clausify(28)].
-UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(28)].
UCon(x) | -Con(x) | PP(f10(x),x).  [clausify(28)].
UCon(x) | -Con(x) | Cont(f11(x),f10(x)).  [clausify(28)].
UCon(x) | -Con(x) | Cont(f11(x),difference(x,f10(x))).  [clausify(28)].
UCon(x) | -Con(x) | -Cont(f11(x),intersection(f10(x),difference(x,f10(x)))).  [clausify(28)].
-StrongC(x,y) | SC(x,y).  [clausify(29)].
-StrongC(x,y) | EqDim(x,y).  [clausify(29)].
-StrongC(x,y) | Covers(x,intersection(x,y)).  [clausify(29)].
StrongC(x,y) | -SC(x,y) | -EqDim(x,y) | -Covers(x,intersection(x,y)).  [clausify(29)].
-Point(x) | -Cont(y,x) | y = x.  [clausify(30)].
-SC(x,y) | Cont(f12(x,y),x).  [clausify(31)].
-SC(x,y) | Cont(f12(x,y),y).  [clausify(31)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(31)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(31)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f13(x,y),x).  [clausify(31)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f13(x,y),y).  [clausify(31)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f13(x,y) < x) | -(f13(x,y) < y).  [clausify(31)].
-AtomicRayCurve(x) | Curve(x).  [clausify(32)].
-AtomicRayCurve(x) | -PP(y,x).  [clausify(32)].
-AtomicRayCurve(x) | Endpoint(f14(x),x).  [clausify(32)].
-AtomicRayCurve(x) | -Point(y) | -Cont(y,x) | y = f14(x).  [clausify(32)].
AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | Point(f16(x,y)).  [clausify(32)].
AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | Cont(f16(x,y),x).  [clausify(32)].
AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | f16(x,y) != y.  [clausify(32)].
-P(x,y) | Cont(x,y).  [clausify(33)].
-P(x,y) | EqDim(x,y).  [clausify(33)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(33)].
-C(x,y) | Cont(f17(x,y),x).  [clausify(34)].
-C(x,y) | Cont(f17(x,y),y).  [clausify(34)].
C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(34)].
-Curve(x) | -PointRegion(y) | Covers(x,y).  [clausify(35)].
-Curve(x) | PointRegion(y) | -Covers(x,y).  [clausify(35)].
Curve(x) | PointRegion(f18(x)) | Covers(x,f18(x)).  [clausify(35)].
Curve(x) | -PointRegion(f18(x)) | -Covers(x,f18(x)).  [clausify(35)].
-BCont(x,y) | Cont(x,y).  [clausify(36)].
-BCont(x,y) | Inc(x,y).  [clausify(36)].
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(37)].
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(38)].
-BCont(x,y) | -P(y,z) | P(f19(x,y,z),z) | BCont(x,z).  [clausify(39)].
-BCont(x,y) | -P(y,z) | -PO(f19(x,y,z),y) | BCont(x,z).  [clausify(39)].
-BCont(x,y) | -P(y,z) | P(f20(x,y,z),x) | BCont(x,z).  [clausify(39)].
-BCont(x,y) | -P(y,z) | Cont(f20(x,y,z),f19(x,y,z)) | BCont(x,z).  [clausify(39)].
-BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(40)].
-Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(41)].
Con(x) | PP(f21(x),x).  [clausify(41)].
Con(x) | -SC(f21(x),difference(x,f21(x))).  [clausify(41)].
x <= x.  [clausify(42)].
-(x <= y) | -(y <= z) | x <= z.  [clausify(43)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(44)].
-ZEX(x) | x <= y.  [clausify(45)].
-PointRegion(x) | MinDim(x).  [clausify(46)].
PointRegion(x) | -MinDim(x).  [clausify(46)].
-Covers(x,y) | y < x.  [clausify(47)].
-Covers(x,y) | -(y < z) | -(z < x).  [clausify(47)].
Covers(x,y) | -(y < x) | y < f22(x,y).  [clausify(47)].
Covers(x,y) | -(y < x) | f22(x,y) < x.  [clausify(47)].
C(x,y) | ZEX(intersection(x,y)).  [clausify(48)].
-C(x,y) | -ZEX(intersection(x,y)).  [clausify(48)].
ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(49)].
-Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(50)].
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(51)].
Cont(x,y) | -P(x,intersection(y,z)).  [clausify(51)].
Cont(x,y) | -P(x,intersection(z,y)).  [clausify(51)].
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).  [clausify(51)].
Cont(f23(x,y),x) | Cont(f23(x,y),y) | y = x.  [clausify(52)].
-Cont(f23(x,y),x) | -Cont(f23(x,y),y) | y = x.  [clausify(52)].
ZEX(c2).  [clausify(53)].
-Point(x) | Max(x).  [clausify(54)].
-Point(x) | MinDim(x).  [clausify(54)].
Point(x) | -Max(x) | -MinDim(x).  [clausify(54)].
-Inc(x,y) | f24(x,y) < x | f25(x,y) < y.  [clausify(55)].
-Inc(x,y) | f24(x,y) < x | Cont(f25(x,y),y).  [clausify(55)].
-Inc(x,y) | f24(x,y) < x | P(f25(x,y),x).  [clausify(55)].
-Inc(x,y) | Cont(f24(x,y),x) | f25(x,y) < y.  [clausify(55)].
-Inc(x,y) | Cont(f24(x,y),x) | Cont(f25(x,y),y).  [clausify(55)].
-Inc(x,y) | Cont(f24(x,y),x) | P(f25(x,y),x).  [clausify(55)].
-Inc(x,y) | P(f24(x,y),y) | f25(x,y) < y.  [clausify(55)].
-Inc(x,y) | P(f24(x,y),y) | Cont(f25(x,y),y).  [clausify(55)].
-Inc(x,y) | P(f24(x,y),y) | P(f25(x,y),x).  [clausify(55)].
Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(55)].
Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(55)].
ZEX(x) | PO(x,x).  [clausify(56)].
-PO(x,y) | PO(y,x).  [clausify(57)].
-PO(x,y) | EqDim(x,y).  [clausify(58)].
-Endpoint(x,y) | Point(x).  [clausify(59)].
-Endpoint(x,y) | Curve(y).  [clausify(59)].
-Endpoint(x,y) | BCont(x,y).  [clausify(59)].
Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).  [clausify(59)].
ZEX(x) | Cont(x,x).  [clausify(60)].
-ZEX(x) | -Cont(x,x).  [clausify(60)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(61)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(62)].
-ZEX(x) | -Cont(y,x).  [clausify(63)].
-ZEX(x) | -Cont(x,y).  [clausify(63)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(64)].
-(x < x).  [clausify(65)].
-(x < y) | -(y < x).  [clausify(66)].
-(x < y) | -(y < z) | x < z.  [clausify(67)].
EqDim(x,x).  [clausify(68)].
-EqDim(x,y) | EqDim(y,x).  [clausify(69)].
-EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(70)].
-(x < y) | -EqDim(x,y).  [clausify(71)].
-EqDim(x,y) | -(z < x) | z < y.  [clausify(72)].
-EqDim(x,y) | -(x < z) | y < z.  [clausify(73)].
-ZEX(c3).  [clausify(74)].
-(x < c3) | ZEX(x).  [clausify(74)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(75)].
-ZEX(x) | ZEX(y) | x < y.  [clausify(76)].
ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(77)].
-(x < y) | difference(y,x) = y.  [clausify(78)].
-(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(79)].
-(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(80)].
-(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(81)].
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(82)].
ZEX(difference(x,y)) | -ZEX(x).  [clausify(82)].
ZEX(difference(x,y)) | -Cont(x,y).  [clausify(82)].
-Cont(x,y) | x < y | EqDim(x,y).  [clausify(83)].
AtomicRayCurve(c4).  [deny(84)].
PP(c5,c4).  [deny(84)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating PP/2
85 PP(x,y) | -P(x,y) | y = x.  [clausify(1)].
86 -PP(x,y) | P(x,y).  [clausify(1)].
87 -PP(x,y) | y != x.  [clausify(1)].
88 -Max(x) | -PP(x,y).  [clausify(24)].
Derived: -Max(x) | -P(x,y) | y = x.  [resolve(88,b,85,a)].
89 Max(x) | ZEX(x) | PP(x,f6(x)).  [clausify(24)].
Derived: Max(x) | ZEX(x) | P(x,f6(x)).  [resolve(89,c,86,a)].
Derived: Max(x) | ZEX(x) | f6(x) != x.  [resolve(89,c,87,a)].
90 -Min(x) | -PP(y,x).  [clausify(25)].
Derived: -Min(x) | -P(y,x) | x = y.  [resolve(90,b,85,a)].
Derived: -Min(f6(x)) | Max(x) | ZEX(x).  [resolve(90,b,89,c)].
91 Min(x) | ZEX(x) | PP(f7(x),x).  [clausify(25)].
Derived: Min(x) | ZEX(x) | P(f7(x),x).  [resolve(91,c,86,a)].
Derived: Min(x) | ZEX(x) | x != f7(x).  [resolve(91,c,87,a)].
Derived: Min(x) | ZEX(x) | -Max(f7(x)).  [resolve(91,c,88,b)].
92 -ICon(x) | -PP(y,x) | Covers(x,intersection(y,difference(x,y))).  [clausify(27)].
Derived: -ICon(x) | Covers(x,intersection(y,difference(x,y))) | -P(y,x) | x = y.  [resolve(92,b,85,a)].
Derived: -ICon(f6(x)) | Covers(f6(x),intersection(x,difference(f6(x),x))) | Max(x) | ZEX(x).  [resolve(92,b,89,c)].
Derived: -ICon(x) | Covers(x,intersection(f7(x),difference(x,f7(x)))) | Min(x) | ZEX(x).  [resolve(92,b,91,c)].
93 ICon(x) | -Con(x) | PP(f9(x),x).  [clausify(27)].
Derived: ICon(x) | -Con(x) | P(f9(x),x).  [resolve(93,c,86,a)].
Derived: ICon(x) | -Con(x) | x != f9(x).  [resolve(93,c,87,a)].
Derived: ICon(x) | -Con(x) | -Max(f9(x)).  [resolve(93,c,88,b)].
Derived: ICon(x) | -Con(x) | -Min(x).  [resolve(93,c,90,b)].
94 -UCon(x) | -PP(y,x) | -Cont(z,y) | -Cont(z,difference(x,y)) | Cont(z,intersection(y,difference(x,y))).  [clausify(28)].
Derived: -UCon(x) | -Cont(y,z) | -Cont(y,difference(x,z)) | Cont(y,intersection(z,difference(x,z))) | -P(z,x) | x = z.  [resolve(94,b,85,a)].
Derived: -UCon(f6(x)) | -Cont(y,x) | -Cont(y,difference(f6(x),x)) | Cont(y,intersection(x,difference(f6(x),x))) | Max(x) | ZEX(x).  [resolve(94,b,89,c)].
Derived: -UCon(x) | -Cont(y,f7(x)) | -Cont(y,difference(x,f7(x))) | Cont(y,intersection(f7(x),difference(x,f7(x)))) | Min(x) | ZEX(x).  [resolve(94,b,91,c)].
Derived: -UCon(x) | -Cont(y,f9(x)) | -Cont(y,difference(x,f9(x))) | Cont(y,intersection(f9(x),difference(x,f9(x)))) | ICon(x) | -Con(x).  [resolve(94,b,93,c)].
95 UCon(x) | -Con(x) | PP(f10(x),x).  [clausify(28)].
Derived: UCon(x) | -Con(x) | P(f10(x),x).  [resolve(95,c,86,a)].
Derived: UCon(x) | -Con(x) | x != f10(x).  [resolve(95,c,87,a)].
Derived: UCon(x) | -Con(x) | -Max(f10(x)).  [resolve(95,c,88,b)].
Derived: UCon(x) | -Con(x) | -Min(x).  [resolve(95,c,90,b)].
Derived: UCon(x) | -Con(x) | -ICon(x) | Covers(x,intersection(f10(x),difference(x,f10(x)))).  [resolve(95,c,92,b)].
96 -AtomicRayCurve(x) | -PP(y,x).  [clausify(32)].
Derived: -AtomicRayCurve(x) | -P(y,x) | x = y.  [resolve(96,b,85,a)].
Derived: -AtomicRayCurve(f6(x)) | Max(x) | ZEX(x).  [resolve(96,b,89,c)].
Derived: -AtomicRayCurve(x) | Min(x) | ZEX(x).  [resolve(96,b,91,c)].
Derived: -AtomicRayCurve(x) | ICon(x) | -Con(x).  [resolve(96,b,93,c)].
Derived: -AtomicRayCurve(x) | UCon(x) | -Con(x).  [resolve(96,b,95,c)].
97 AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | Point(f16(x,y)).  [clausify(32)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | P(f15(x),x).  [resolve(97,c,86,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | x != f15(x).  [resolve(97,c,87,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -Max(f15(x)).  [resolve(97,c,88,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -Min(x).  [resolve(97,c,90,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(97,c,92,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(97,c,94,b)].
98 AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | Cont(f16(x,y),x).  [clausify(32)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | P(f15(x),x).  [resolve(98,c,86,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | x != f15(x).  [resolve(98,c,87,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -Max(f15(x)).  [resolve(98,c,88,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -Min(x).  [resolve(98,c,90,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(98,c,92,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(98,c,94,b)].
99 AtomicRayCurve(x) | -Curve(x) | PP(f15(x),x) | -Endpoint(y,x) | f16(x,y) != y.  [clausify(32)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | P(f15(x),x).  [resolve(99,c,86,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | x != f15(x).  [resolve(99,c,87,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -Max(f15(x)).  [resolve(99,c,88,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -Min(x).  [resolve(99,c,90,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(99,c,92,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(99,c,94,b)].
100 -Con(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(41)].
Derived: -Con(x) | SC(y,difference(x,y)) | -P(y,x) | x = y.  [resolve(100,b,85,a)].
Derived: -Con(f6(x)) | SC(x,difference(f6(x),x)) | Max(x) | ZEX(x).  [resolve(100,b,89,c)].
Derived: -Con(x) | SC(f7(x),difference(x,f7(x))) | Min(x) | ZEX(x).  [resolve(100,b,91,c)].
Derived: -Con(x) | SC(f9(x),difference(x,f9(x))) | ICon(x) | -Con(x).  [resolve(100,b,93,c)].
Derived: -Con(x) | SC(f10(x),difference(x,f10(x))) | UCon(x) | -Con(x).  [resolve(100,b,95,c)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)).  [resolve(100,b,97,c)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x).  [resolve(100,b,98,c)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y.  [resolve(100,b,99,c)].
101 Con(x) | PP(f21(x),x).  [clausify(41)].
Derived: Con(x) | P(f21(x),x).  [resolve(101,b,86,a)].
Derived: Con(x) | x != f21(x).  [resolve(101,b,87,a)].
Derived: Con(x) | -Max(f21(x)).  [resolve(101,b,88,b)].
Derived: Con(x) | -Min(x).  [resolve(101,b,90,b)].
Derived: Con(x) | -ICon(x) | Covers(x,intersection(f21(x),difference(x,f21(x)))).  [resolve(101,b,92,b)].
Derived: Con(x) | -UCon(x) | -Cont(y,f21(x)) | -Cont(y,difference(x,f21(x))) | Cont(y,intersection(f21(x),difference(x,f21(x)))).  [resolve(101,b,94,b)].
Derived: Con(x) | -AtomicRayCurve(x).  [resolve(101,b,96,b)].
102 PP(c5,c4).  [deny(84)].
Derived: P(c5,c4).  [resolve(102,a,86,a)].
Derived: c4 != c5.  [resolve(102,a,87,a)].
Derived: -Max(c5).  [resolve(102,a,88,b)].
Derived: -Min(c4).  [resolve(102,a,90,b)].
Derived: -ICon(c4) | Covers(c4,intersection(c5,difference(c4,c5))).  [resolve(102,a,92,b)].
Derived: -UCon(c4) | -Cont(x,c5) | -Cont(x,difference(c4,c5)) | Cont(x,intersection(c5,difference(c4,c5))).  [resolve(102,a,94,b)].
Derived: -AtomicRayCurve(c4).  [resolve(102,a,96,b)].
Derived: -Con(c4) | SC(c5,difference(c4,c5)).  [resolve(102,a,100,b)].

Eliminating MaxDim/1
103 MaxDim(x) | -(f1(x) <= x).  [clausify(2)].
104 -MaxDim(x) | y <= x.  [clausify(2)].
Derived: -(f1(x) <= x) | y <= x.  [resolve(103,a,104,a)].

Eliminating MinDim/1
105 MinDim(x) | ZEX(x) | f2(x) < x.  [clausify(3)].
106 -MinDim(x) | -ZEX(x).  [clausify(3)].
107 -MinDim(x) | -(y < x) | ZEX(y).  [clausify(3)].
Derived: ZEX(x) | f2(x) < x | -(y < x) | ZEX(y).  [resolve(105,a,107,a)].
108 MinDim(x) | ZEX(x) | -ZEX(f2(x)).  [clausify(3)].
Derived: ZEX(x) | -ZEX(f2(x)) | -(y < x) | ZEX(y).  [resolve(108,a,107,a)].
109 MinDim(c1).  [clausify(4)].
Derived: -ZEX(c1).  [resolve(109,a,106,a)].
Derived: -(x < c1) | ZEX(x).  [resolve(109,a,107,a)].
110 -PointRegion(x) | MinDim(x).  [clausify(46)].
Derived: -PointRegion(x) | -ZEX(x).  [resolve(110,b,106,a)].
Derived: -PointRegion(x) | -(y < x) | ZEX(y).  [resolve(110,b,107,a)].
111 PointRegion(x) | -MinDim(x).  [clausify(46)].
Derived: PointRegion(x) | ZEX(x) | f2(x) < x.  [resolve(111,b,105,a)].
Derived: PointRegion(x) | ZEX(x) | -ZEX(f2(x)).  [resolve(111,b,108,a)].
Derived: PointRegion(c1).  [resolve(111,b,109,a)].
112 -Point(x) | MinDim(x).  [clausify(54)].
Derived: -Point(x) | -ZEX(x).  [resolve(112,b,106,a)].
Derived: -Point(x) | -(y < x) | ZEX(y).  [resolve(112,b,107,a)].
Derived: -Point(x) | PointRegion(x).  [resolve(112,b,111,b)].
113 Point(x) | -Max(x) | -MinDim(x).  [clausify(54)].
Derived: Point(x) | -Max(x) | ZEX(x) | f2(x) < x.  [resolve(113,c,105,a)].
Derived: Point(x) | -Max(x) | ZEX(x) | -ZEX(f2(x)).  [resolve(113,c,108,a)].
Derived: Point(c1) | -Max(c1).  [resolve(113,c,109,a)].
Derived: Point(x) | -Max(x) | -PointRegion(x).  [resolve(113,c,110,b)].

Eliminating C/2
114 -C(x,y) | Cont(f3(x,y),x) | SC(x,y).  [clausify(8)].
115 -SC(x,y) | C(x,y).  [clausify(5)].
116 -C(x,y) | Cont(f3(x,y),y) | SC(x,y).  [clausify(8)].
117 -C(x,y) | P(f3(x,y),x) | P(f3(x,y),y) | SC(x,y).  [clausify(8)].
118 -C(x,y) | Cont(f17(x,y),x).  [clausify(34)].
Derived: Cont(f17(x,y),x) | -SC(x,y).  [resolve(118,a,115,b)].
119 -C(x,y) | Cont(f17(x,y),y).  [clausify(34)].
Derived: Cont(f17(x,y),y) | -SC(x,y).  [resolve(119,a,115,b)].
120 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(34)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),y) | SC(y,z).  [resolve(120,a,114,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f3(y,z),z) | SC(y,z).  [resolve(120,a,116,a)].
Derived: -Cont(x,y) | -Cont(x,z) | P(f3(y,z),y) | P(f3(y,z),z) | SC(y,z).  [resolve(120,a,117,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f17(y,z),y).  [resolve(120,a,118,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f17(y,z),z).  [resolve(120,a,119,a)].
121 C(x,y) | ZEX(intersection(x,y)).  [clausify(48)].
Derived: ZEX(intersection(x,y)) | Cont(f3(x,y),x) | SC(x,y).  [resolve(121,a,114,a)].
Derived: ZEX(intersection(x,y)) | Cont(f3(x,y),y) | SC(x,y).  [resolve(121,a,116,a)].
Derived: ZEX(intersection(x,y)) | P(f3(x,y),x) | P(f3(x,y),y) | SC(x,y).  [resolve(121,a,117,a)].
Derived: ZEX(intersection(x,y)) | Cont(f17(x,y),x).  [resolve(121,a,118,a)].
Derived: ZEX(intersection(x,y)) | Cont(f17(x,y),y).  [resolve(121,a,119,a)].
122 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(48)].
Derived: -ZEX(intersection(x,y)) | -SC(x,y).  [resolve(122,a,115,b)].
Derived: -ZEX(intersection(x,y)) | -Cont(z,x) | -Cont(z,y).  [resolve(122,a,120,a)].

Eliminating >/2
123 x > y | -(y < x).  [clausify(13)].
124 -(x > y) | y < x.  [clausify(13)].

Eliminating >=/2
125 x >= y | -(y <= x).  [clausify(14)].
126 -(x >= y) | y <= x.  [clausify(14)].

Eliminating Closed/1
127 Closed(x) | BCont(f8(x),x).  [clausify(26)].
128 -Closed(x) | -BCont(y,x).  [clausify(26)].
Derived: BCont(f8(x),x) | -BCont(y,x).  [resolve(127,a,128,a)].

Eliminating StrongC/2
129 StrongC(x,y) | -SC(x,y) | -EqDim(x,y) | -Covers(x,intersection(x,y)).  [clausify(29)].
130 -StrongC(x,y) | SC(x,y).  [clausify(29)].
131 -StrongC(x,y) | EqDim(x,y).  [clausify(29)].
132 -StrongC(x,y) | Covers(x,intersection(x,y)).  [clausify(29)].

Eliminating Point/1
133 -Endpoint(x,y) | Point(x).  [clausify(59)].
134 -Point(x) | -Cont(y,x) | y = x.  [clausify(30)].
135 -AtomicRayCurve(x) | -Point(y) | -Cont(y,x) | y = f14(x).  [clausify(32)].
136 -Point(x) | Max(x).  [clausify(54)].
Derived: -Endpoint(x,y) | -Cont(z,x) | z = x.  [resolve(133,b,134,a)].
Derived: -Endpoint(x,y) | -AtomicRayCurve(z) | -Cont(x,z) | x = f14(z).  [resolve(133,b,135,b)].
Derived: -Endpoint(x,y) | Max(x).  [resolve(133,b,136,a)].
137 Endpoint(x,y) | -Point(x) | -Curve(y) | -BCont(x,y).  [clausify(59)].
Derived: Endpoint(x,y) | -Curve(y) | -BCont(x,y) | -Endpoint(x,z).  [resolve(137,b,133,b)].
138 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | P(f15(x),x).  [resolve(97,c,86,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(138,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(138,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x) | Max(f16(x,y)).  [resolve(138,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(138,d,137,b)].
139 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | x != f15(x).  [resolve(97,c,87,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(139,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(139,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x) | Max(f16(x,y)).  [resolve(139,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(139,d,137,b)].
140 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -Max(f15(x)).  [resolve(97,c,88,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(140,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(140,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)) | Max(f16(x,y)).  [resolve(140,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(140,d,137,b)].
141 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -Min(x).  [resolve(97,c,90,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(141,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(141,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x) | Max(f16(x,y)).  [resolve(141,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(141,d,137,b)].
142 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(97,c,92,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(142,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(142,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))) | Max(f16(x,y)).  [resolve(142,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(142,d,137,b)].
143 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(97,c,94,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))) | -Cont(u,f16(x,y)) | u = f16(x,y).  [resolve(143,d,134,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))) | -AtomicRayCurve(u) | -Cont(f16(x,y),u) | f16(x,y) = f14(u).  [resolve(143,d,135,b)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))) | Max(f16(x,y)).  [resolve(143,d,136,a)].
Derived: AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))) | Endpoint(f16(x,y),u) | -Curve(u) | -BCont(f16(x,y),u).  [resolve(143,d,137,b)].
144 -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Point(f16(x,y)).  [resolve(100,b,97,c)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Cont(z,f16(x,y)) | z = f16(x,y).  [resolve(144,f,134,a)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -AtomicRayCurve(z) | -Cont(f16(x,y),z) | f16(x,y) = f14(z).  [resolve(144,f,135,b)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Max(f16(x,y)).  [resolve(144,f,136,a)].
Derived: -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Endpoint(f16(x,y),z) | -Curve(z) | -BCont(f16(x,y),z).  [resolve(144,f,137,b)].
145 -Point(x) | -ZEX(x).  [resolve(112,b,106,a)].
Derived: -ZEX(x) | -Endpoint(x,y).  [resolve(145,a,133,b)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x).  [resolve(145,a,138,d)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x).  [resolve(145,a,139,d)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)).  [resolve(145,a,140,d)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x).  [resolve(145,a,141,d)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(145,a,142,d)].
Derived: -ZEX(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(145,a,143,d)].
Derived: -ZEX(f16(x,y)) | -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x).  [resolve(145,a,144,f)].
146 -Point(x) | -(y < x) | ZEX(y).  [resolve(112,b,107,a)].
Derived: -(x < y) | ZEX(x) | -Endpoint(y,z).  [resolve(146,a,133,b)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | P(f15(y),y).  [resolve(146,a,138,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | y != f15(y).  [resolve(146,a,139,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | -Max(f15(y)).  [resolve(146,a,140,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | -Min(y).  [resolve(146,a,141,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | -ICon(y) | Covers(y,intersection(f15(y),difference(y,f15(y)))).  [resolve(146,a,142,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y) | -UCon(y) | -Cont(u,f15(y)) | -Cont(u,difference(y,f15(y))) | Cont(u,intersection(f15(y),difference(y,f15(y)))).  [resolve(146,a,143,d)].
Derived: -(x < f16(y,z)) | ZEX(x) | -Con(y) | SC(f15(y),difference(y,f15(y))) | AtomicRayCurve(y) | -Curve(y) | -Endpoint(z,y).  [resolve(146,a,144,f)].
147 -Point(x) | PointRegion(x).  [resolve(112,b,111,b)].
Derived: PointRegion(x) | -Endpoint(x,y).  [resolve(147,a,133,b)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | P(f15(x),x).  [resolve(147,a,138,d)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | x != f15(x).  [resolve(147,a,139,d)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Max(f15(x)).  [resolve(147,a,140,d)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -Min(x).  [resolve(147,a,141,d)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(147,a,142,d)].
Derived: PointRegion(f16(x,y)) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(147,a,143,d)].
Derived: PointRegion(f16(x,y)) | -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x).  [resolve(147,a,144,f)].
148 Point(x) | -Max(x) | ZEX(x) | f2(x) < x.  [resolve(113,c,105,a)].
Derived: -Max(x) | ZEX(x) | f2(x) < x | -Cont(y,x) | y = x.  [resolve(148,a,134,a)].
Derived: -Max(x) | ZEX(x) | f2(x) < x | -AtomicRayCurve(y) | -Cont(x,y) | x = f14(y).  [resolve(148,a,135,b)].
Derived: -Max(x) | ZEX(x) | f2(x) < x | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(148,a,137,b)].
Derived: -Max(x) | ZEX(x) | f2(x) < x | -(y < x) | ZEX(y).  [resolve(148,a,146,a)].
Derived: -Max(x) | ZEX(x) | f2(x) < x | PointRegion(x).  [resolve(148,a,147,a)].
149 Point(x) | -Max(x) | ZEX(x) | -ZEX(f2(x)).  [resolve(113,c,108,a)].
Derived: -Max(x) | ZEX(x) | -ZEX(f2(x)) | -Cont(y,x) | y = x.  [resolve(149,a,134,a)].
Derived: -Max(x) | ZEX(x) | -ZEX(f2(x)) | -AtomicRayCurve(y) | -Cont(x,y) | x = f14(y).  [resolve(149,a,135,b)].
Derived: -Max(x) | ZEX(x) | -ZEX(f2(x)) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(149,a,137,b)].
Derived: -Max(x) | ZEX(x) | -ZEX(f2(x)) | -(y < x) | ZEX(y).  [resolve(149,a,146,a)].
Derived: -Max(x) | ZEX(x) | -ZEX(f2(x)) | PointRegion(x).  [resolve(149,a,147,a)].
150 Point(c1) | -Max(c1).  [resolve(113,c,109,a)].
Derived: -Max(c1) | -Cont(x,c1) | x = c1.  [resolve(150,a,134,a)].
Derived: -Max(c1) | -AtomicRayCurve(x) | -Cont(c1,x) | c1 = f14(x).  [resolve(150,a,135,b)].
Derived: -Max(c1) | Endpoint(c1,x) | -Curve(x) | -BCont(c1,x).  [resolve(150,a,137,b)].
Derived: -Max(c1) | -ZEX(c1).  [resolve(150,a,145,a)].
Derived: -Max(c1) | -(x < c1) | ZEX(x).  [resolve(150,a,146,a)].
Derived: -Max(c1) | PointRegion(c1).  [resolve(150,a,147,a)].
151 Point(x) | -Max(x) | -PointRegion(x).  [resolve(113,c,110,b)].
Derived: -Max(x) | -PointRegion(x) | -Cont(y,x) | y = x.  [resolve(151,a,134,a)].
Derived: -Max(x) | -PointRegion(x) | -AtomicRayCurve(y) | -Cont(x,y) | x = f14(y).  [resolve(151,a,135,b)].
Derived: -Max(x) | -PointRegion(x) | Endpoint(x,y) | -Curve(y) | -BCont(x,y).  [resolve(151,a,137,b)].
Derived: -Max(x) | -PointRegion(x) | -ZEX(x).  [resolve(151,a,145,a)].
Derived: -Max(x) | -PointRegion(x) | -(y < x) | ZEX(y).  [resolve(151,a,146,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, AtomicRayCurve, ZEX, Curve, Max, Con, UCon, ICon, PointRegion, Min, Cont, Endpoint, <, P, SC, BCont, Covers, EqDim, Inc, <=, PO ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, difference, intersection, f3, f4, f5, f12, f13, f16, f17, f22, f23, f24, f25, f1, f2, f6, f7, f8, f9, f10, f11, f14, f15, f18, f21, f19, f20 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

kept:      152 -SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(6)].
kept:      153 -SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(7)].
kept:      154 -SC(x,x).  [clausify(9)].
kept:      155 -SC(x,y) | SC(y,x).  [clausify(10)].
kept:      156 -SC(x,y) | f4(x,y) < x.  [clausify(11)].
kept:      157 -SC(x,y) | f4(x,y) < y.  [clausify(11)].
kept:      158 -SC(x,y) | Cont(f4(x,y),x).  [clausify(11)].
kept:      159 -SC(x,y) | Cont(f4(x,y),y).  [clausify(11)].
kept:      160 -PO(x,y) | P(f5(x,y),x).  [clausify(12)].
kept:      161 -PO(x,y) | P(f5(x,y),y).  [clausify(12)].
kept:      162 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(12)].
kept:      163 -(x < y) | x <= y.  [clausify(15)].
kept:      164 -(x < y) | -EqDim(x,y).  [clausify(15)].
kept:      165 x < y | -(x <= y) | EqDim(x,y).  [clausify(15)].
kept:      166 -Inc(x,x).  [clausify(16)].
kept:      167 -Inc(x,y) | Inc(y,x).  [clausify(17)].
kept:      168 -EqDim(x,y) | -Inc(x,y).  [clausify(18)].
kept:      169 -Inc(x,y) | x < y | y < x.  [clausify(19)].
kept:      170 -Cont(x,y) | -(x < y) | Inc(x,y).  [clausify(20)].
kept:      171 -Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(21)].
kept:      172 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(22)].
kept:      173 -EqDim(x,y) | x <= y.  [clausify(23)].
kept:      174 -EqDim(x,y) | y <= x.  [clausify(23)].
kept:      175 EqDim(x,y) | -(x <= y) | -(y <= x).  [clausify(23)].
kept:      176 -Max(x) | -ZEX(x).  [clausify(24)].
kept:      177 -Min(x) | -ZEX(x).  [clausify(25)].
kept:      178 -ICon(x) | Con(x).  [clausify(27)].
kept:      179 ICon(x) | -Con(x) | -Covers(x,intersection(f9(x),difference(x,f9(x)))).  [clausify(27)].
kept:      180 -UCon(x) | Con(x).  [clausify(28)].
kept:      181 UCon(x) | -Con(x) | Cont(f11(x),f10(x)).  [clausify(28)].
kept:      182 UCon(x) | -Con(x) | Cont(f11(x),difference(x,f10(x))).  [clausify(28)].
kept:      183 UCon(x) | -Con(x) | -Cont(f11(x),intersection(f10(x),difference(x,f10(x)))).  [clausify(28)].
kept:      184 -SC(x,y) | Cont(f12(x,y),x).  [clausify(31)].
kept:      185 -SC(x,y) | Cont(f12(x,y),y).  [clausify(31)].
kept:      186 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < x.  [clausify(31)].
kept:      187 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | z < y.  [clausify(31)].
kept:      188 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f13(x,y),x).  [clausify(31)].
kept:      189 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f13(x,y),y).  [clausify(31)].
kept:      190 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f13(x,y) < x) | -(f13(x,y) < y).  [clausify(31)].
kept:      191 -AtomicRayCurve(x) | Curve(x).  [clausify(32)].
kept:      192 -AtomicRayCurve(x) | Endpoint(f14(x),x).  [clausify(32)].
kept:      193 -P(x,y) | Cont(x,y).  [clausify(33)].
kept:      194 -P(x,y) | EqDim(x,y).  [clausify(33)].
kept:      195 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(33)].
kept:      196 -Curve(x) | -PointRegion(y) | Covers(x,y).  [clausify(35)].
kept:      197 -Curve(x) | PointRegion(y) | -Covers(x,y).  [clausify(35)].
kept:      198 Curve(x) | PointRegion(f18(x)) | Covers(x,f18(x)).  [clausify(35)].
kept:      199 Curve(x) | -PointRegion(f18(x)) | -Covers(x,f18(x)).  [clausify(35)].
kept:      200 -BCont(x,y) | Cont(x,y).  [clausify(36)].
kept:      201 -BCont(x,y) | Inc(x,y).  [clausify(36)].
kept:      202 -SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(37)].
kept:      203 -SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(38)].
kept:      204 -BCont(x,y) | -P(y,z) | P(f19(x,y,z),z) | BCont(x,z).  [clausify(39)].
kept:      205 -BCont(x,y) | -P(y,z) | -PO(f19(x,y,z),y) | BCont(x,z).  [clausify(39)].
kept:      206 -BCont(x,y) | -P(y,z) | P(f20(x,y,z),x) | BCont(x,z).  [clausify(39)].
kept:      207 -BCont(x,y) | -P(y,z) | Cont(f20(x,y,z),f19(x,y,z)) | BCont(x,z).  [clausify(39)].
kept:      208 -BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(40)].
kept:      209 Con(x) | -SC(f21(x),difference(x,f21(x))).  [clausify(41)].
kept:      210 x <= x.  [clausify(42)].
kept:      211 -(x <= y) | -(y <= z) | x <= z.  [clausify(43)].
kept:      212 -ZEX(x) | -ZEX(y) | y = x.  [clausify(44)].
kept:      213 -ZEX(x) | x <= y.  [clausify(45)].
kept:      214 -Covers(x,y) | y < x.  [clausify(47)].
kept:      215 -Covers(x,y) | -(y < z) | -(z < x).  [clausify(47)].
kept:      216 Covers(x,y) | -(y < x) | y < f22(x,y).  [clausify(47)].
kept:      217 Covers(x,y) | -(y < x) | f22(x,y) < x.  [clausify(47)].
kept:      218 ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(49)].
kept:      219 -Cont(x,y) | -Cont(x,z) | x <= intersection(y,z).  [clausify(50)].
kept:      220 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(51)].
kept:      221 Cont(x,y) | -P(x,intersection(y,z)).  [clausify(51)].
kept:      222 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(51)].
kept:      223 Cont(f23(x,y),x) | Cont(f23(x,y),y) | y = x.  [clausify(52)].
kept:      224 -Cont(f23(x,y),x) | -Cont(f23(x,y),y) | y = x.  [clausify(52)].
kept:      225 ZEX(c2).  [clausify(53)].
kept:      226 -Inc(x,y) | f24(x,y) < x | f25(x,y) < y.  [clausify(55)].
kept:      227 -Inc(x,y) | f24(x,y) < x | Cont(f25(x,y),y).  [clausify(55)].
kept:      228 -Inc(x,y) | f24(x,y) < x | P(f25(x,y),x).  [clausify(55)].
kept:      229 -Inc(x,y) | Cont(f24(x,y),x) | f25(x,y) < y.  [clausify(55)].
kept:      230 -Inc(x,y) | Cont(f24(x,y),x) | Cont(f25(x,y),y).  [clausify(55)].
kept:      231 -Inc(x,y) | Cont(f24(x,y),x) | P(f25(x,y),x).  [clausify(55)].
kept:      232 -Inc(x,y) | P(f24(x,y),y) | f25(x,y) < y.  [clausify(55)].
kept:      233 -Inc(x,y) | P(f24(x,y),y) | Cont(f25(x,y),y).  [clausify(55)].
kept:      234 -Inc(x,y) | P(f24(x,y),y) | P(f25(x,y),x).  [clausify(55)].
kept:      235 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(55)].
kept:      236 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(55)].
kept:      237 ZEX(x) | PO(x,x).  [clausify(56)].
kept:      238 -PO(x,y) | PO(y,x).  [clausify(57)].
kept:      239 -PO(x,y) | EqDim(x,y).  [clausify(58)].
kept:      240 -Endpoint(x,y) | Curve(y).  [clausify(59)].
kept:      241 -Endpoint(x,y) | BCont(x,y).  [clausify(59)].
kept:      242 ZEX(x) | Cont(x,x).  [clausify(60)].
kept:      243 -ZEX(x) | -Cont(x,x).  [clausify(60)].
kept:      244 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(61)].
kept:      245 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(62)].
kept:      246 -ZEX(x) | -Cont(y,x).  [clausify(63)].
kept:      247 -ZEX(x) | -Cont(x,y).  [clausify(63)].
kept:      248 -(x < x).  [clausify(65)].
kept:      249 -(x < y) | -(y < x).  [clausify(66)].
kept:      250 -(x < y) | -(y < z) | x < z.  [clausify(67)].
kept:      251 EqDim(x,x).  [clausify(68)].
kept:      252 -EqDim(x,y) | EqDim(y,x).  [clausify(69)].
kept:      253 -EqDim(x,y) | -EqDim(y,z) | EqDim(x,z).  [clausify(70)].
kept:      254 -EqDim(x,y) | -(z < x) | z < y.  [clausify(72)].
kept:      255 -EqDim(x,y) | -(x < z) | y < z.  [clausify(73)].
kept:      256 -ZEX(c3).  [clausify(74)].
kept:      257 -(x < c3) | ZEX(x).  [clausify(74)].
kept:      258 -ZEX(x) | ZEX(y) | x < y.  [clausify(76)].
kept:      259 ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(77)].
kept:      260 -(x < y) | difference(y,x) = y.  [clausify(78)].
kept:      261 -(x <= y) | -Cont(z,x) | -(intersection(z,y) < z) | Cont(z,difference(x,y)).  [clausify(79)].
kept:      262 -(x <= y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(80)].
kept:      263 -(x <= y) | -P(z,difference(x,y)) | intersection(z,y) < z.  [clausify(81)].
kept:      264 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(82)].
kept:      265 ZEX(difference(x,y)) | -ZEX(x).  [clausify(82)].
kept:      266 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(82)].
kept:      267 AtomicRayCurve(c4).  [deny(84)].
kept:      268 -Max(x) | -P(x,y) | y = x.  [resolve(88,b,85,a)].
kept:      269 Max(x) | ZEX(x) | P(x,f6(x)).  [resolve(89,c,86,a)].
kept:      270 Max(x) | ZEX(x) | f6(x) != x.  [resolve(89,c,87,a)].
kept:      271 -Min(x) | -P(y,x) | x = y.  [resolve(90,b,85,a)].
kept:      272 -Min(f6(x)) | Max(x) | ZEX(x).  [resolve(90,b,89,c)].
kept:      273 Min(x) | ZEX(x) | P(f7(x),x).  [resolve(91,c,86,a)].
           274 Min(x) | ZEX(x) | x != f7(x).  [resolve(91,c,87,a)].
kept:      275 Min(x) | ZEX(x) | f7(x) != x.  [copy(274),flip(c)].
kept:      276 Min(x) | ZEX(x) | -Max(f7(x)).  [resolve(91,c,88,b)].
kept:      277 -ICon(x) | Covers(x,intersection(y,difference(x,y))) | -P(y,x) | x = y.  [resolve(92,b,85,a)].
kept:      278 -ICon(f6(x)) | Covers(f6(x),intersection(x,difference(f6(x),x))) | Max(x) | ZEX(x).  [resolve(92,b,89,c)].
kept:      279 -ICon(x) | Covers(x,intersection(f7(x),difference(x,f7(x)))) | Min(x) | ZEX(x).  [resolve(92,b,91,c)].
kept:      280 ICon(x) | -Con(x) | P(f9(x),x).  [resolve(93,c,86,a)].
           281 ICon(x) | -Con(x) | x != f9(x).  [resolve(93,c,87,a)].
kept:      282 ICon(x) | -Con(x) | f9(x) != x.  [copy(281),flip(c)].
kept:      283 ICon(x) | -Con(x) | -Max(f9(x)).  [resolve(93,c,88,b)].
kept:      284 ICon(x) | -Con(x) | -Min(x).  [resolve(93,c,90,b)].
kept:      285 -UCon(x) | -Cont(y,z) | -Cont(y,difference(x,z)) | Cont(y,intersection(z,difference(x,z))) | -P(z,x) | x = z.  [resolve(94,b,85,a)].
kept:      286 -UCon(f6(x)) | -Cont(y,x) | -Cont(y,difference(f6(x),x)) | Cont(y,intersection(x,difference(f6(x),x))) | Max(x) | ZEX(x).  [resolve(94,b,89,c)].
kept:      287 -UCon(x) | -Cont(y,f7(x)) | -Cont(y,difference(x,f7(x))) | Cont(y,intersection(f7(x),difference(x,f7(x)))) | Min(x) | ZEX(x).  [resolve(94,b,91,c)].
kept:      288 -UCon(x) | -Cont(y,f9(x)) | -Cont(y,difference(x,f9(x))) | Cont(y,intersection(f9(x),difference(x,f9(x)))) | ICon(x) | -Con(x).  [resolve(94,b,93,c)].
kept:      289 UCon(x) | -Con(x) | P(f10(x),x).  [resolve(95,c,86,a)].
           290 UCon(x) | -Con(x) | x != f10(x).  [resolve(95,c,87,a)].
kept:      291 UCon(x) | -Con(x) | f10(x) != x.  [copy(290),flip(c)].
kept:      292 UCon(x) | -Con(x) | -Max(f10(x)).  [resolve(95,c,88,b)].
kept:      293 UCon(x) | -Con(x) | -Min(x).  [resolve(95,c,90,b)].
kept:      294 UCon(x) | -Con(x) | -ICon(x) | Covers(x,intersection(f10(x),difference(x,f10(x)))).  [resolve(95,c,92,b)].
kept:      295 -AtomicRayCurve(x) | -P(y,x) | x = y.  [resolve(96,b,85,a)].
kept:      296 -AtomicRayCurve(f6(x)) | Max(x) | ZEX(x).  [resolve(96,b,89,c)].
kept:      297 -AtomicRayCurve(x) | Min(x) | ZEX(x).  [resolve(96,b,91,c)].
kept:      298 -AtomicRayCurve(x) | ICon(x) | -Con(x).  [resolve(96,b,93,c)].
kept:      299 -AtomicRayCurve(x) | UCon(x) | -Con(x).  [resolve(96,b,95,c)].
kept:      300 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | P(f15(x),x).  [resolve(98,c,86,a)].
           301 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | x != f15(x).  [resolve(98,c,87,a)].
kept:      302 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | f15(x) != x.  [copy(301),flip(e)].
kept:      303 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -Max(f15(x)).  [resolve(98,c,88,b)].
kept:      304 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -Min(x).  [resolve(98,c,90,b)].
kept:      305 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(98,c,92,b)].
kept:      306 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x) | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(98,c,94,b)].
kept:      307 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | P(f15(x),x).  [resolve(99,c,86,a)].
           308 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | x != f15(x).  [resolve(99,c,87,a)].
kept:      309 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | f15(x) != x.  [copy(308),flip(e)].
kept:      310 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -Max(f15(x)).  [resolve(99,c,88,b)].
kept:      311 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -Min(x).  [resolve(99,c,90,b)].
kept:      312 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -ICon(x) | Covers(x,intersection(f15(x),difference(x,f15(x)))).  [resolve(99,c,92,b)].
kept:      313 AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y | -UCon(x) | -Cont(z,f15(x)) | -Cont(z,difference(x,f15(x))) | Cont(z,intersection(f15(x),difference(x,f15(x)))).  [resolve(99,c,94,b)].
kept:      314 -Con(x) | SC(y,difference(x,y)) | -P(y,x) | x = y.  [resolve(100,b,85,a)].
kept:      315 -Con(f6(x)) | SC(x,difference(f6(x),x)) | Max(x) | ZEX(x).  [resolve(100,b,89,c)].
kept:      316 -Con(x) | SC(f7(x),difference(x,f7(x))) | Min(x) | ZEX(x).  [resolve(100,b,91,c)].
           317 -Con(x) | SC(f9(x),difference(x,f9(x))) | ICon(x) | -Con(x).  [resolve(100,b,93,c)].
kept:      318 -Con(x) | SC(f9(x),difference(x,f9(x))) | ICon(x).  [copy(317),merge(d)].
           319 -Con(x) | SC(f10(x),difference(x,f10(x))) | UCon(x) | -Con(x).  [resolve(100,b,95,c)].
kept:      320 -Con(x) | SC(f10(x),difference(x,f10(x))) | UCon(x).  [copy(319),merge(d)].
kept:      321 -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | Cont(f16(x,y),x).  [resolve(100,b,98,c)].
kept:      322 -Con(x) | SC(f15(x),difference(x,f15(x))) | AtomicRayCurve(x) | -Curve(x) | -Endpoint(y,x) | f16(x,y) != y.  [resolve(100,b,99,c)].
kept:      323 Con(x) | P(f21(x),x).  [resolve(101,b,86,a)].
           324 Con(x) | x != f21(x).  [resolve(101,b,87,a)].
kept:      325 Con(x) | f21(x) != x.  [copy(324),flip(b)].
kept:      326 Con(x) | -Max(f21(x)).  [resolve(101,b,88,b)].
kept:      327 Con(x) | -Min(x).  [resolve(101,b,90,b)].
kept:      328 Con(x) | -AtomicRayCurve(x).  [resolve(101,b,96,b)].
kept:      329 P(c5,c4).  [resolve(102,a,86,a)].
           330 c4 != c5.  [resolve(102,a,87,a)].
kept:      331 c5 != c4.  [copy(330),flip(a)].
kept:      332 -Max(c5).  [resolve(102,a,88,b)].
kept:      333 -Min(c4).  [resolve(102,a,90,b)].
kept:      334 -ICon(c4) | Covers(c4,intersection(c5,difference(c4,c5))).  [resolve(102,a,92,b)].
kept:      335 -UCon(c4) | -Cont(x,c5) | -Cont(x,difference(c4,c5)) | Cont(x,intersection(c5,difference(c4,c5))).  [resolve(102,a,94,b)].
           336 -AtomicRayCurve(c4).  [resolve(102,a,96,b)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.04 (+ 0.01) seconds.
% Length of proof is 7.
% Level of proof is 3.
% Maximum clause weight is 2.000.
% Given clauses 0.

32 (all x (AtomicRayCurve(x) <-> Curve(x) & (all y -PP(y,x)) & (exists y (Endpoint(y,x) & (all z (Point(z) & Cont(z,x) -> y = z)))))) # label(non_clause).  [assumption].
84 (all x (AtomicRayCurve(x) -> (all y -PP(y,x)))) # label(non_clause) # label(goal).  [goal].
96 -AtomicRayCurve(x) | -PP(y,x).  [clausify(32)].
102 PP(c5,c4).  [deny(84)].
267 AtomicRayCurve(c4).  [deny(84)].
336 -AtomicRayCurve(c4).  [resolve(102,a,96,b)].
337 $F.  [copy(336),unit_del(a,267)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=183. Kept=175. proofs=1.
Usable=0. Sos=0. Demods=0. Limbo=175, Disabled=250. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=7. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=57. Nonunit_bsub_feature_tests=0.
Megabytes=1.06.
User_CPU=0.04, System_CPU=0.01, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 1394 exit (max_proofs) ------

Process 1394 exit (max_proofs) Mon Oct  7 16:06:08 2013
============================= prover9 ================================
execution finished: Mon Oct 07 16:06:09 2013
total CPU time used: 0
The command was "prover9 -t600 -f /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/epp.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/min_max_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/sc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/po.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_basic_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/inc_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_linear.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/eq_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/min_max_in_dim.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/dim_defs.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/closed.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/theorems/conversions/atomic_ray_curve_theorems_goal2.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/icon.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_atomic_points.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/sc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codib.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/atomic_ray_curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/ep.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/definitions/conversions/c.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_c_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/curve.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/conversions/codi_bcont.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/connected.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_prime_linear_unbounded.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point_region.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/definitions/conversions/covers.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_int.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_ext.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_zex/conversions/zex.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/point.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/definitions/conversions/inc.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/theorems/conversions/po_theorems.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codib/definitions/conversions/endpoint.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_cont/conversions/cont_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_dim/conversions/dim_basic.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_down.p9 /stl/torsten/git/macleod/qs/multidim_mereotopology_codi/conversions/codi_basic.p9"
Input read from 
============================ end of footer ===========================
