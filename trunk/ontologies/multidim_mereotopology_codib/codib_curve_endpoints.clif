/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 3.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/3.0/legalcode.
 *
 * Contributors:
 *    Torsten Hahmann - initial implementation
 *******************************************************************************/

(cl-text multidim_mereotopology_codib/codib_curve_endpoints.clif

(cl-imports multidim_mereotopology_codib/definitions/endpoint.clif)

(cl-imports multidim_mereotopology_codi/definitions/point.clif)

(cl-imports multidim_mereotopology_codi/definitions/curve.clif)

(cl-imports multidim_mereotopology_codib/definitions/atomic_curve.clif)

(cl-imports multidim_mereotopology_codib/codib_atomic_curves.clif)

(cl-comment 'We need the closure under intersections and differences in order to ensure that (atomic) curve parts have complements.')

(cl-imports multidim_mereotopology_codi/codi_down.clif)


(cl-comment 'Every Curve has an atomic part. Together with the existence of complements, this ensures that all curves are entirely constituted of atomic parts.')

(forall (x)
    (if
        (Curve x)
        (exists (y)
            (and
                (P y x)
                (AtomicCurve y)
            )
        )
    )
)


(cl-comment 'A point is boundary contained in a non-atomic curve segment iff it is boundary contained in exactly one constituent atomic curve.')

(forall (x y)
	(if
        (and
            (Point x)
            (Curve y)
            (not (AtomicCurveSegment y))
        )
		(iff
			(BCont x y)
			(exists (s1)
				(and
					(AtomicCurve s1)
					(P s1 y)
					(BCont x s1)
					(forall (s2)
						(if
							(and
								(P s2 y)
								(AtomicCurve s2)
								(BCont x s2)
							)
							(= s1 s2)
						)
					)
				)
			)		
		)
	)
)

)
