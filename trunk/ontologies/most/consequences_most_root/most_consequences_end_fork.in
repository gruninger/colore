% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, 600).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

% 'http://colore.oor.net/most/most_root.clif'

% 'An atom can be bonded if there exists another atom for which it can be bonded.'

 all x ((atom(x) ->  exists b exists y ((atom(y) & hasBond(b, x, y))))).

% 'A bond is possible between two atoms.'

 all b ((bond(b) ->  exists x exists y (hasBond(b, x, y)))).

% 'An atom x is in a functional group y.'

 all x all y ((inGroup(x, y) -> (atom(x) & functional_group(y)))).

% 'Two atoms are bonded if a bond exists between them.'

 all b all x all y ((hasBond(b, x, y) -> (bond(b) & atom(x) & atom(y)))).

% 'Additional axioms to ensure that the same bond can only be between two atoms.'

 all b all x all y all z (((hasBond(b, x, y) & hasBond(b, x, z)) -> (y = z))).

 all b all x all y all z (((hasBond(b, x, y) & hasBond(b, z, y)) -> (x = z))).

% 'A bond is symmetric between two atoms.'

 all b all x all y ((hasBond(b, x, y) -> hasBond(b, y, x))).

% 'Definition for an end atom in a linear functional group.'

 all x all y ((end(x, y) <-> (inGroup(x, y) &  

all b1 all b2 all w all z (((hasBond(b1, x, z) & hasBond(b2, x, w) &

 inGroup(z, y) & inGroup(w, y)) -> (w = z)))))).

% 'Definition for a fork atom in a branched functional group: an atom in the same functional group has at least 3 other atoms in bonds.'

 all x all y ((fork(x, y) <-> (inGroup(x, y) &  

exists b1 exists b2 exists b3 exists a1 exists a2 exists a3 

((-((b1 = b2)) & -((b2 = b3)) & -((b1 = b3)) & hasBond(b1, x, a1) & hasBond(b2, x, a2) &

 hasBond(b3, x, a3) & inGroup(a1, y) & inGroup(a2, y) & inGroup(a3, y)))))).

end_of_list.

formulas(goals).

all x all y (end(x,y) -> -fork(x,y)).

end_of_list.

