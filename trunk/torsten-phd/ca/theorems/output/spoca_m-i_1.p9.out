============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22310 was started by torsten on scotus.mie.utoronto.ca,
Mon Nov  5 17:44:28 2012
The command was "prover9 -t 600 -f ca/p9/spoca.p9 ca/p9/oca.p9 contact/p9/weak_contact.p9 lat/p9/ortho_complemented_lattice_meet_join.p9 lat/p9/bounded_lattice_meet_join.p9 lat/p9/lattice_meet_join.p9 ca//theorems/p9/options.txt ca//theorems/p9/spoca_m-i_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ca/p9/spoca.p9


formulas(sos).
(all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))).
pc("zero") = "one".
pc("one") = "zero".
(all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))).
end_of_list.

% Reading from file ca/p9/oca.p9


formulas(sos).
end_of_list.

% Reading from file contact/p9/weak_contact.p9


formulas(sos).
(all x -C("zero",x)).
(all x (x != "zero" -> C(x,x))).
(all x all y (C(x,y) -> C(y,x))).
(all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))).
end_of_list.

% Reading from file lat/p9/ortho_complemented_lattice_meet_join.p9


formulas(sos).
(all x x = oc(oc(x))).
(all x "one" = join(x,oc(x))).
(all x all y meet(x,y) = oc(join(oc(y),oc(x)))).
end_of_list.

% Reading from file lat/p9/bounded_lattice_meet_join.p9


formulas(sos).
(all x join("zero",x) = x).
(all x join("one",x) = "one").
end_of_list.

% Reading from file lat/p9/lattice_meet_join.p9


formulas(sos).
(all x x = meet(x,x)).
(all x x = join(x,x)).
(all x all y meet(x,y) = meet(y,x)).
(all x all y join(x,y) = join(y,x)).
(all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))).
(all x all y all z join(x,join(y,z)) = join(z,join(x,y))).
(all x all y meet(x,join(x,y)) = x).
(all x all y join(x,meet(x,y)) = x).
end_of_list.

% Reading from file ca//theorems/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file ca//theorems/p9/spoca_m-i_1.p9


formulas(goals).
(all x all y all z (meet(x,y) != "zero" -> (meet(z,meet(x,y)) = z <-> meet(z,x) = z & meet(z,y) = z))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))) # label(non_clause).  [assumption].
2 (all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))) # label(non_clause).  [assumption].
3 (all x -C("zero",x)) # label(non_clause).  [assumption].
4 (all x (x != "zero" -> C(x,x))) # label(non_clause).  [assumption].
5 (all x all y (C(x,y) -> C(y,x))) # label(non_clause).  [assumption].
6 (all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))) # label(non_clause).  [assumption].
7 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
8 (all x "one" = join(x,oc(x))) # label(non_clause).  [assumption].
9 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
10 (all x join("zero",x) = x) # label(non_clause).  [assumption].
11 (all x join("one",x) = "one") # label(non_clause).  [assumption].
12 (all x x = meet(x,x)) # label(non_clause).  [assumption].
13 (all x x = join(x,x)) # label(non_clause).  [assumption].
14 (all x all y meet(x,y) = meet(y,x)) # label(non_clause).  [assumption].
15 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
16 (all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))) # label(non_clause).  [assumption].
17 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
18 (all x all y meet(x,join(x,y)) = x) # label(non_clause).  [assumption].
19 (all x all y join(x,meet(x,y)) = x) # label(non_clause).  [assumption].
20 (all x all y all z (meet(x,y) != "zero" -> (meet(z,meet(x,y)) = z <-> meet(z,x) = z & meet(z,y) = z))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, C ]).
Function symbol precedence:  function_order([ "one", "zero", c1, c2, c3, meet, join, pc, oc ]).
After inverse_order: Function symbol precedence:  function_order([ "one", "zero", c1, c2, c3, join, oc, meet, pc ]).
Unfolding symbols: meet/2.

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

% Operation join is commutative; C redundancy checks enabled.
% back CAC tautology: 40 oc(join(oc(x),oc(y))) = oc(join(oc(y),oc(x))).  [copy(39),rewrite([33(1),33(5)])].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

% Operation join is associative-commutative; CAC redundancy checks enabled.
% back CAC tautology: 45 join(x,join(y,z)) = join(z,join(x,y)).  [copy(44),flip(a)].
% back CAC tautology: 90 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),oc(u))) = oc(join(oc(join(oc(z),join(oc(x),oc(y)))),oc(u))).  [back_rewrite(75),rewrite([80(6),80(15)])].
% back CAC tautology: 89 oc(join(oc(x),oc(join(oc(y),join(oc(z),oc(u)))))) = oc(join(oc(x),oc(join(oc(u),join(oc(y),oc(z)))))).  [back_rewrite(76),rewrite([80(7),80(16)])].
% back CAC tautology: 88 oc(join(oc(x),join(oc(y),oc(z)))) = oc(join(oc(z),join(oc(y),oc(x)))).  [back_rewrite(79),rewrite([80(6),80(12)])].
% back CAC tautology: 87 oc(join(oc(x),join(oc(join(oc(y),join(oc(z),oc(u)))),oc(w)))) = oc(join(oc(w),join(oc(x),oc(join(oc(u),join(oc(y),oc(z))))))).  [para(43(a,1),43(a,2,1,2)),rewrite([80(7),80(11),80(20),80(22)])].
% back CAC tautology: 86 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(w),join(oc(join(oc(z),join(oc(x),oc(y)))),oc(u)))).  [para(43(a,1),43(a,2,1,1,2)),rewrite([80(6),80(11),80(18),80(22)])].
% back CAC tautology: 85 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(u),join(oc(w),oc(join(oc(y),join(oc(z),oc(x))))))).  [para(43(a,1),43(a,2,1,1,1)),rewrite([80(9),80(11),80(17),80(22)]),flip(a)].
% back CAC tautology: 84 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(u),join(oc(w),oc(join(oc(z),join(oc(x),oc(y))))))).  [para(43(a,1),43(a,1,1,2)),rewrite([80(9),80(11),80(17),80(22)]),flip(a)].
% back CAC tautology: 83 oc(join(oc(x),join(oc(join(oc(y),join(oc(z),oc(u)))),oc(w)))) = oc(join(oc(w),join(oc(x),oc(join(oc(z),join(oc(u),oc(y))))))).  [para(43(a,1),43(a,1,1,1,2)),rewrite([80(7),80(11),80(20),80(22)])].
% back CAC tautology: 82 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(w),join(oc(join(oc(y),join(oc(z),oc(x)))),oc(u)))).  [para(43(a,1),43(a,1,1,1,1)),rewrite([80(6),80(11),80(18),80(22)])].
% back CAC tautology: 81 oc(join(oc(x),join(oc(y),oc(z)))) = oc(join(oc(z),join(oc(x),oc(y)))).  [para(41(a,1),43(a,2,1)),rewrite([80(6)]),flip(a)].

============================== PROOF =================================

% Proof 1 at 0.03 (+ 0.00) seconds.
% Length of proof is 37.
% Level of proof is 9.
% Maximum clause weight is 31.000.
% Given clauses 54.

7 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
9 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
15 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
16 (all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))) # label(non_clause).  [assumption].
17 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
19 (all x all y join(x,meet(x,y)) = x) # label(non_clause).  [assumption].
20 (all x all y all z (meet(x,y) != "zero" -> (meet(z,meet(x,y)) = z <-> meet(z,x) = z & meet(z,y) = z))) # label(non_clause) # label(goal).  [goal].
30 oc(oc(x)) = x.  [clausify(7)].
32 oc(join(oc(x),oc(y))) = meet(y,x).  [clausify(9)].
33 meet(x,y) = oc(join(oc(y),oc(x))).  [copy(32),flip(a)].
41 join(x,y) = join(y,x).  [clausify(15)].
42 meet(x,meet(y,z)) = meet(y,meet(z,x)).  [clausify(16)].
43 oc(join(join(oc(x),oc(y)),oc(z))) = oc(join(join(oc(z),oc(x)),oc(y))).  [copy(42),rewrite([33(1),33(5),30(5),33(7),33(11),30(11)])].
44 join(x,join(y,z)) = join(y,join(z,x)).  [clausify(17)].
45 join(x,join(y,z)) = join(z,join(x,y)).  [copy(44),flip(a)].
48 join(x,meet(x,y)) = x.  [clausify(19)].
49 join(x,oc(join(oc(y),oc(x)))) = x.  [copy(48),rewrite([33(1)])].
52 meet(c3,meet(c1,c2)) = c3 | meet(c3,c1) = c3.  [deny(20)].
53 oc(join(join(oc(c1),oc(c2)),oc(c3))) = c3 | oc(join(oc(c1),oc(c3))) = c3.  [copy(52),rewrite([33(4),41(6),33(8),30(7),33(14)])].
54 meet(c3,meet(c1,c2)) = c3 | meet(c3,c2) = c3.  [deny(20)].
55 oc(join(join(oc(c1),oc(c2)),oc(c3))) = c3 | oc(join(oc(c2),oc(c3))) = c3.  [copy(54),rewrite([33(4),41(6),33(8),30(7),33(14)])].
56 meet(c3,meet(c1,c2)) != c3 | meet(c3,c1) != c3 | meet(c3,c2) != c3.  [deny(20)].
57 oc(join(join(oc(c1),oc(c2)),oc(c3))) != c3 | oc(join(oc(c1),oc(c3))) != c3 | oc(join(oc(c2),oc(c3))) != c3.  [copy(56),rewrite([33(4),41(6),33(8),30(7),33(14),33(22)])].
80 oc(join(join(oc(x),oc(y)),oc(z))) = oc(join(oc(x),join(oc(y),oc(z)))).  [para(41(a,1),43(a,1,1)),flip(a)].
93 oc(join(oc(c1),join(oc(c2),oc(c3)))) != c3 | oc(join(oc(c1),oc(c3))) != c3 | oc(join(oc(c2),oc(c3))) != c3.  [back_rewrite(57),rewrite([80(9)])].
94 oc(join(oc(c1),join(oc(c2),oc(c3)))) = c3 | oc(join(oc(c2),oc(c3))) = c3.  [back_rewrite(55),rewrite([80(9)])].
95 oc(join(oc(c1),join(oc(c2),oc(c3)))) = c3 | oc(join(oc(c1),oc(c3))) = c3.  [back_rewrite(53),rewrite([80(9)])].
102 join(join(x,y),z) = join(x,join(y,z)).  [para(45(a,2),41(a,1)),flip(a)].
116 join(x,oc(join(y,oc(x)))) = x.  [para(30(a,1),49(a,1,2,1,1))].
143 join(oc(x),oc(join(y,x))) = oc(x).  [para(30(a,1),116(a,1,2,1,2))].
179 join(x,oc(join(y,join(z,oc(x))))) = x.  [para(102(a,1),116(a,1,2,1))].
241 oc(join(oc(c2),oc(c3))) = c3.  [para(94(a,1),143(a,1,2)),rewrite([41(16),116(16)]),flip(b),merge(b)].
242 oc(join(oc(c1),oc(c3))) = c3 | join(c3,oc(join(x,join(oc(c1),join(oc(c2),oc(c3)))))) = oc(join(oc(c1),join(oc(c2),oc(c3)))).  [para(95(a,1),143(a,1,1))].
247 oc(join(oc(c1),join(oc(c2),oc(c3)))) != c3 | oc(join(oc(c1),oc(c3))) != c3.  [back_rewrite(93),rewrite([241(25)]),xx(c)].
265 join(oc(c2),oc(c3)) = oc(c3).  [para(241(a,1),30(a,1,1)),flip(a)].
273 oc(join(oc(c1),oc(c3))) != c3.  [back_rewrite(247),rewrite([265(7)]),merge(b)].
274 $F.  [back_rewrite(242),rewrite([265(16),179(17),265(16)]),flip(b),merge(b),unit_del(a,273)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=54. Generated=1208. Kept=241. proofs=1.
Usable=43. Sos=101. Demods=125. Limbo=9, Disabled=113. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=966. Back_subsumed=26.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=162 (4 lex), Back_demodulated=50. Back_unit_deleted=0.
Demod_attempts=14297. Demod_rewrites=2364.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=180. Nonunit_bsub_feature_tests=604.
Megabytes=0.56.
User_CPU=0.04, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22310 exit (max_proofs) Mon Nov  5 17:44:28 2012
