============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22397 was started by torsten on scotus.mie.utoronto.ca,
Mon Nov  5 17:44:59 2012
The command was "prover9 -t 600 -f ca/p9/spoca.p9 ca/p9/m-c.p9 ca/p9/oca.p9 contact/p9/weak_contact.p9 lat/p9/ortho_complemented_lattice_meet_join.p9 lat/p9/bounded_lattice_meet_join.p9 lat/p9/lattice_meet_join.p9 ca//theorems/p9/options.txt ca//theorems/p9/spoca_m-c_o-ext_2.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ca/p9/spoca.p9


formulas(sos).
(all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))).
pc("zero") = "one".
pc("one") = "zero".
(all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))).
end_of_list.

% Reading from file ca/p9/m-c.p9


formulas(sos).
(all x all z (meet(z,oc(x)) = "zero" <-> meet(z,x) = z)).
end_of_list.

% Reading from file ca/p9/oca.p9


formulas(sos).
end_of_list.

% Reading from file contact/p9/weak_contact.p9


formulas(sos).
(all x -C("zero",x)).
(all x (x != "zero" -> C(x,x))).
(all x all y (C(x,y) -> C(y,x))).
(all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))).
end_of_list.

% Reading from file lat/p9/ortho_complemented_lattice_meet_join.p9


formulas(sos).
(all x x = oc(oc(x))).
(all x "one" = join(x,oc(x))).
(all x all y meet(x,y) = oc(join(oc(y),oc(x)))).
end_of_list.

% Reading from file lat/p9/bounded_lattice_meet_join.p9


formulas(sos).
(all x join("zero",x) = x).
(all x join("one",x) = "one").
end_of_list.

% Reading from file lat/p9/lattice_meet_join.p9


formulas(sos).
(all x x = meet(x,x)).
(all x x = join(x,x)).
(all x all y meet(x,y) = meet(y,x)).
(all x all y join(x,y) = join(y,x)).
(all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))).
(all x all y all z join(x,join(y,z)) = join(z,join(x,y))).
(all x all y meet(x,join(x,y)) = x).
(all x all y join(x,meet(x,y)) = x).
end_of_list.

% Reading from file ca//theorems/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file ca//theorems/p9/spoca_m-c_o-ext_2.p9


formulas(goals).
(all x all y (x = y -> (all z (meet(x,z) = "zero" <-> meet(y,z) = "zero")))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))) # label(non_clause).  [assumption].
2 (all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))) # label(non_clause).  [assumption].
3 (all x all z (meet(z,oc(x)) = "zero" <-> meet(z,x) = z)) # label(non_clause).  [assumption].
4 (all x -C("zero",x)) # label(non_clause).  [assumption].
5 (all x (x != "zero" -> C(x,x))) # label(non_clause).  [assumption].
6 (all x all y (C(x,y) -> C(y,x))) # label(non_clause).  [assumption].
7 (all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))) # label(non_clause).  [assumption].
8 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
9 (all x "one" = join(x,oc(x))) # label(non_clause).  [assumption].
10 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
11 (all x join("zero",x) = x) # label(non_clause).  [assumption].
12 (all x join("one",x) = "one") # label(non_clause).  [assumption].
13 (all x x = meet(x,x)) # label(non_clause).  [assumption].
14 (all x x = join(x,x)) # label(non_clause).  [assumption].
15 (all x all y meet(x,y) = meet(y,x)) # label(non_clause).  [assumption].
16 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
17 (all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))) # label(non_clause).  [assumption].
18 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
19 (all x all y meet(x,join(x,y)) = x) # label(non_clause).  [assumption].
20 (all x all y join(x,meet(x,y)) = x) # label(non_clause).  [assumption].
21 (all x all y (x = y -> (all z (meet(x,z) = "zero" <-> meet(y,z) = "zero")))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, C ]).
Function symbol precedence:  function_order([ "zero", "one", c1, c2, c3, meet, join, pc, oc ]).
After inverse_order: Function symbol precedence:  function_order([ "zero", "one", c1, c2, c3, join, oc, meet, pc ]).
Unfolding symbols: meet/2.

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

% Operation join is commutative; C redundancy checks enabled.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 11.
% Level of proof is 4.
% Maximum clause weight is 10.000.
% Given clauses 0.

10 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
16 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
21 (all x all y (x = y -> (all z (meet(x,z) = "zero" <-> meet(y,z) = "zero")))) # label(non_clause) # label(goal).  [goal].
35 oc(join(oc(x),oc(y))) = meet(y,x).  [clausify(10)].
36 meet(x,y) = oc(join(oc(y),oc(x))).  [copy(35),flip(a)].
44 join(x,y) = join(y,x).  [clausify(16)].
53 c2 = c1.  [deny(21)].
54 meet(c1,c3) = "zero" | meet(c2,c3) = "zero".  [deny(21)].
55 oc(join(oc(c1),oc(c3))) = "zero".  [copy(54),rewrite([36(3),44(5),53(9),36(11),44(13)]),merge(b)].
56 meet(c1,c3) != "zero" | meet(c2,c3) != "zero".  [deny(21)].
57 $F.  [copy(56),rewrite([36(3),44(5),55(6),53(4),36(6),44(8),55(9)]),xx(a),xx(b)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=26. Kept=25. proofs=1.
Usable=0. Sos=0. Demods=17. Limbo=25, Disabled=26. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=17 (2 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=290. Demod_rewrites=24.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=1. Nonunit_bsub_feature_tests=0.
Megabytes=0.10.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22397 exit (max_proofs) Mon Nov  5 17:44:59 2012
