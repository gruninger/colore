============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 22730 was started by torsten on scotus.mie.utoronto.ca,
Mon Nov  5 17:47:05 2012
The command was "prover9 -t 600 -f ca/p9/spoca.p9 ca/p9/c5.p9 ca/p9/oca.p9 contact/p9/weak_contact.p9 lat/p9/ortho_complemented_lattice_meet_join.p9 lat/p9/bounded_lattice_meet_join.p9 lat/p9/lattice_meet_join.p9 ca//theorems/p9/options.txt ca//theorems/p9/spoca_c5_c4_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ca/p9/spoca.p9


formulas(sos).
(all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))).
pc("zero") = "one".
pc("one") = "zero".
(all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))).
end_of_list.

% Reading from file ca/p9/c5.p9


formulas(sos).
(all x all z (meet(z,oc(x)) = z <-> -C(z,x))).
end_of_list.

% Reading from file ca/p9/oca.p9


formulas(sos).
end_of_list.

% Reading from file contact/p9/weak_contact.p9


formulas(sos).
(all x -C("zero",x)).
(all x (x != "zero" -> C(x,x))).
(all x all y (C(x,y) -> C(y,x))).
(all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))).
end_of_list.

% Reading from file lat/p9/ortho_complemented_lattice_meet_join.p9


formulas(sos).
(all x x = oc(oc(x))).
(all x "one" = join(x,oc(x))).
(all x all y meet(x,y) = oc(join(oc(y),oc(x)))).
end_of_list.

% Reading from file lat/p9/bounded_lattice_meet_join.p9


formulas(sos).
(all x join("zero",x) = x).
(all x join("one",x) = "one").
end_of_list.

% Reading from file lat/p9/lattice_meet_join.p9


formulas(sos).
(all x x = meet(x,x)).
(all x x = join(x,x)).
(all x all y meet(x,y) = meet(y,x)).
(all x all y join(x,y) = join(y,x)).
(all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))).
(all x all y all z join(x,join(y,z)) = join(z,join(x,y))).
(all x all y meet(x,join(x,y)) = x).
(all x all y join(x,meet(x,y)) = x).
end_of_list.

% Reading from file ca//theorems/p9/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file ca//theorems/p9/spoca_c5_c4_1.p9


formulas(goals).
(all x all y all z (C(z,join(x,y)) -> C(z,x) | C(z,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))) # label(non_clause).  [assumption].
2 (all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))) # label(non_clause).  [assumption].
3 (all x all z (meet(z,oc(x)) = z <-> -C(z,x))) # label(non_clause).  [assumption].
4 (all x -C("zero",x)) # label(non_clause).  [assumption].
5 (all x (x != "zero" -> C(x,x))) # label(non_clause).  [assumption].
6 (all x all y (C(x,y) -> C(y,x))) # label(non_clause).  [assumption].
7 (all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))) # label(non_clause).  [assumption].
8 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
9 (all x "one" = join(x,oc(x))) # label(non_clause).  [assumption].
10 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
11 (all x join("zero",x) = x) # label(non_clause).  [assumption].
12 (all x join("one",x) = "one") # label(non_clause).  [assumption].
13 (all x x = meet(x,x)) # label(non_clause).  [assumption].
14 (all x x = join(x,x)) # label(non_clause).  [assumption].
15 (all x all y meet(x,y) = meet(y,x)) # label(non_clause).  [assumption].
16 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
17 (all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))) # label(non_clause).  [assumption].
18 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
19 (all x all y meet(x,join(x,y)) = x) # label(non_clause).  [assumption].
20 (all x all y join(x,meet(x,y)) = x) # label(non_clause).  [assumption].
21 (all x all y all z (C(z,join(x,y)) -> C(z,x) | C(z,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, C ]).
Function symbol precedence:  function_order([ "one", "zero", c1, c2, c3, join, meet, pc, oc ]).
After inverse_order: Function symbol precedence:  function_order([ "one", "zero", c1, c2, c3, join, oc, meet, pc ]).
Unfolding symbols: meet/2.

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

% Operation join is commutative; C redundancy checks enabled.
% back CAC tautology: 43 oc(join(oc(x),oc(y))) = oc(join(oc(y),oc(x))).  [copy(42),rewrite([36(1),36(5)])].

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

% Operation join is associative-commutative; CAC redundancy checks enabled.
% back CAC tautology: 48 join(x,join(y,z)) = join(z,join(x,y)).  [copy(47),flip(a)].
% back CAC tautology: 90 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),oc(u))) = oc(join(oc(join(oc(z),join(oc(x),oc(y)))),oc(u))).  [back_rewrite(75),rewrite([80(6),80(15)])].
% back CAC tautology: 89 oc(join(oc(x),oc(join(oc(y),join(oc(z),oc(u)))))) = oc(join(oc(x),oc(join(oc(u),join(oc(y),oc(z)))))).  [back_rewrite(76),rewrite([80(7),80(16)])].
% back CAC tautology: 88 oc(join(oc(x),join(oc(y),oc(z)))) = oc(join(oc(z),join(oc(y),oc(x)))).  [back_rewrite(79),rewrite([80(6),80(12)])].
% back CAC tautology: 87 oc(join(oc(x),join(oc(join(oc(y),join(oc(z),oc(u)))),oc(w)))) = oc(join(oc(w),join(oc(x),oc(join(oc(u),join(oc(y),oc(z))))))).  [para(46(a,1),46(a,2,1,2)),rewrite([80(7),80(11),80(20),80(22)])].
% back CAC tautology: 86 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(w),join(oc(join(oc(z),join(oc(x),oc(y)))),oc(u)))).  [para(46(a,1),46(a,2,1,1,2)),rewrite([80(6),80(11),80(18),80(22)])].
% back CAC tautology: 85 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(u),join(oc(w),oc(join(oc(y),join(oc(z),oc(x))))))).  [para(46(a,1),46(a,2,1,1,1)),rewrite([80(9),80(11),80(17),80(22)]),flip(a)].
% back CAC tautology: 84 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(u),join(oc(w),oc(join(oc(z),join(oc(x),oc(y))))))).  [para(46(a,1),46(a,1,1,2)),rewrite([80(9),80(11),80(17),80(22)]),flip(a)].
% back CAC tautology: 83 oc(join(oc(x),join(oc(join(oc(y),join(oc(z),oc(u)))),oc(w)))) = oc(join(oc(w),join(oc(x),oc(join(oc(z),join(oc(u),oc(y))))))).  [para(46(a,1),46(a,1,1,1,2)),rewrite([80(7),80(11),80(20),80(22)])].
% back CAC tautology: 82 oc(join(oc(join(oc(x),join(oc(y),oc(z)))),join(oc(u),oc(w)))) = oc(join(oc(w),join(oc(join(oc(y),join(oc(z),oc(x)))),oc(u)))).  [para(46(a,1),46(a,1,1,1,1)),rewrite([80(6),80(11),80(18),80(22)])].
% back CAC tautology: 81 oc(join(oc(x),join(oc(y),oc(z)))) = oc(join(oc(z),join(oc(x),oc(y)))).  [para(44(a,1),46(a,2,1)),rewrite([80(6)]),flip(a)].

============================== PROOF =================================

% Proof 1 at 0.02 (+ 0.00) seconds.
% Length of proof is 25.
% Level of proof is 6.
% Maximum clause weight is 11.000.
% Given clauses 38.

3 (all x all z (meet(z,oc(x)) = z <-> -C(z,x))) # label(non_clause).  [assumption].
8 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
10 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
16 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
18 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
21 (all x all y all z (C(z,join(x,y)) -> C(z,x) | C(z,y))) # label(non_clause) # label(goal).  [goal].
27 meet(x,oc(y)) != x | -C(x,y).  [clausify(3)].
28 meet(x,oc(y)) = x | C(x,y).  [clausify(3)].
33 oc(oc(x)) = x.  [clausify(8)].
35 oc(join(oc(x),oc(y))) = meet(y,x).  [clausify(10)].
36 meet(x,y) = oc(join(oc(y),oc(x))).  [copy(35),flip(a)].
44 join(x,y) = join(y,x).  [clausify(16)].
47 join(x,join(y,z)) = join(y,join(z,x)).  [clausify(18)].
48 join(x,join(y,z)) = join(z,join(x,y)).  [copy(47),flip(a)].
53 C(c3,join(c1,c2)).  [deny(21)].
54 -C(c3,c1).  [deny(21)].
55 -C(c3,c2).  [deny(21)].
57 oc(join(x,oc(y))) = y | C(y,x).  [back_rewrite(28),rewrite([36(2),33(2)])].
58 oc(join(x,oc(y))) != y | -C(y,x).  [back_rewrite(27),rewrite([36(2),33(2)])].
99 join(join(x,y),z) = join(x,join(y,z)).  [para(48(a,2),44(a,1)),flip(a)].
124 oc(join(c2,oc(c3))) = c3.  [resolve(57,b,55,a)].
125 oc(join(c1,oc(c3))) = c3.  [resolve(57,b,54,a)].
127 oc(join(c1,join(c2,oc(c3)))) != c3.  [resolve(58,b,53,a),rewrite([99(6)])].
144 join(c2,oc(c3)) = oc(c3).  [para(124(a,1),33(a,1,1)),flip(a)].
145 $F.  [back_rewrite(127),rewrite([144(5),125(5)]),xx(a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=38. Generated=340. Kept=115. proofs=1.
Usable=32. Sos=37. Demods=47. Limbo=1, Disabled=71. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=224. Back_subsumed=2.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=68 (4 lex), Back_demodulated=31. Back_unit_deleted=0.
Demod_attempts=4824. Demod_rewrites=581.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=6. Nonunit_bsub_feature_tests=20.
Megabytes=0.28.
User_CPU=0.02, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 22730 exit (max_proofs) Mon Nov  5 17:47:05 2012
