============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 21652 was started by torsten on scotus.mie.utoronto.ca,
Mon Nov  5 16:03:05 2012
The command was "mace4 -c -t 600 -s 60 -n 2 -N 20 -f ca//consistency/p9/wbca_notc4_atom_con_nontrivial.p9 ca/p9/wbca.p9 ca/p9/c4.p9 ca/p9/atom.p9 ca/p9/conn.p9 ca/p9/nottriv.p9 ca/p9/spoca.p9 ca/p9/uni.p9 ca/p9/oca.p9 contact/p9/weak_contact.p9 lat/p9/ortho_complemented_lattice_meet_join.p9 lat/p9/bounded_lattice_meet_join.p9 lat/p9/lattice_meet_join.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file ca//consistency/p9/wbca_notc4_atom_con_nontrivial.p9


formulas(sos).
end_of_list.

% Reading from file ca/p9/wbca.p9


formulas(sos).
(all x x = oc(oc(x))).
oc("zero") = "one".
oc("one") = "zero".
(all x "zero" = meet(x,oc(x))).
(all x "one" = join(x,oc(x))).
(all x (x != "zero" -> C(x,"one"))).
end_of_list.

% Reading from file ca/p9/c4.p9


formulas(sos).
(all x all y all z (C(z,join(x,y)) -> C(z,x) | C(z,y))).
end_of_list.

% Reading from file ca/p9/atom.p9


formulas(sos).
(exists x (-x("zero") & (all y (y = "zero" | y = x | meet(x,y) != y)))).
end_of_list.

% Reading from file ca/p9/conn.p9


formulas(sos).
(all x (x != "one" -> (exists y (y != "zero" & -C(x,y))))).
end_of_list.

% Reading from file ca/p9/nottriv.p9


formulas(sos).
(exists y (y != "zero" & y != "one")).
end_of_list.

% Reading from file ca/p9/spoca.p9


formulas(sos).
(all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))).
pc("zero") = "one".
pc("one") = "zero".
(all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))).
end_of_list.

% Reading from file ca/p9/uni.p9


formulas(sos).
(all x all y all z (meet(x,y) = "zero" & join(x,y) = "one" & meet(x,z) = "zero" & join(x,z) = "one" -> y = z)).
end_of_list.

% Reading from file ca/p9/oca.p9


formulas(sos).
end_of_list.

% Reading from file contact/p9/weak_contact.p9


formulas(sos).
(all x -C("zero",x)).
(all x (x != "zero" -> C(x,x))).
(all x all y (C(x,y) -> C(y,x))).
(all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))).
end_of_list.

% Reading from file lat/p9/ortho_complemented_lattice_meet_join.p9


formulas(sos).
(all x x = oc(oc(x))).
(all x "one" = join(x,oc(x))).
(all x all y meet(x,y) = oc(join(oc(y),oc(x)))).
end_of_list.

% Reading from file lat/p9/bounded_lattice_meet_join.p9


formulas(sos).
(all x join("zero",x) = x).
(all x join("one",x) = "one").
end_of_list.

% Reading from file lat/p9/lattice_meet_join.p9


formulas(sos).
(all x x = meet(x,x)).
(all x x = join(x,x)).
(all x all y meet(x,y) = meet(y,x)).
(all x all y join(x,y) = join(y,x)).
(all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))).
(all x all y all z join(x,join(y,z)) = join(z,join(x,y))).
(all x all y meet(x,join(x,y)) = x).
(all x all y join(x,meet(x,y)) = x).
end_of_list.

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 20).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
2 (all x "zero" = meet(x,oc(x))) # label(non_clause).  [assumption].
3 (all x "one" = join(x,oc(x))) # label(non_clause).  [assumption].
4 (all x (x != "zero" -> C(x,"one"))) # label(non_clause).  [assumption].
5 (all x all y all z (C(z,join(x,y)) -> C(z,x) | C(z,y))) # label(non_clause).  [assumption].
6 (exists x (-x("zero") & (all y (y = "zero" | y = x | meet(x,y) != y)))) # label(non_clause).  [assumption].
7 (all x (x != "one" -> (exists y (y != "zero" & -C(x,y))))) # label(non_clause).  [assumption].
8 (exists y (y != "zero" & y != "one")) # label(non_clause).  [assumption].
9 (all x all y meet(x,pc(meet(x,y))) = meet(x,pc(y))) # label(non_clause).  [assumption].
10 (all x all y pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y)))) # label(non_clause).  [assumption].
11 (all x all y all z (meet(x,y) = "zero" & join(x,y) = "one" & meet(x,z) = "zero" & join(x,z) = "one" -> y = z)) # label(non_clause).  [assumption].
12 (all x -C("zero",x)) # label(non_clause).  [assumption].
13 (all x (x != "zero" -> C(x,x))) # label(non_clause).  [assumption].
14 (all x all y (C(x,y) -> C(y,x))) # label(non_clause).  [assumption].
15 (all x all y all z (x = meet(x,y) & C(z,x) -> C(z,y))) # label(non_clause).  [assumption].
16 (all x x = oc(oc(x))) # label(non_clause).  [assumption].
17 (all x "one" = join(x,oc(x))) # label(non_clause).  [assumption].
18 (all x all y meet(x,y) = oc(join(oc(y),oc(x)))) # label(non_clause).  [assumption].
19 (all x join("zero",x) = x) # label(non_clause).  [assumption].
20 (all x join("one",x) = "one") # label(non_clause).  [assumption].
21 (all x x = meet(x,x)) # label(non_clause).  [assumption].
22 (all x x = join(x,x)) # label(non_clause).  [assumption].
23 (all x all y meet(x,y) = meet(y,x)) # label(non_clause).  [assumption].
24 (all x all y join(x,y) = join(y,x)) # label(non_clause).  [assumption].
25 (all x all y all z meet(x,meet(y,z)) = meet(z,meet(x,y))) # label(non_clause).  [assumption].
26 (all x all y all z join(x,join(y,z)) = join(z,join(x,y))) # label(non_clause).  [assumption].
27 (all x all y meet(x,join(x,y)) = x) # label(non_clause).  [assumption].
28 (all x all y join(x,meet(x,y)) = x) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
oc(oc(x)) = x.
oc("zero") = "one".
oc("one") = "zero".
meet(x,oc(x)) = "zero".
join(x,oc(x)) = "one".
"zero" = x | C(x,"one").
-C(x,join(y,z)) | C(x,y) | C(x,z).
-x("zero").
x = "zero" | x = c1 | meet(c1,x) != x.
"one" = x | f1(x) != "zero".
"one" = x | - C(x,f1(x)).
c2 != "zero".
c2 != "one".
meet(x,pc(meet(x,y))) = meet(x,pc(y)).
pc("zero") = "one".
pc("one") = "zero".
pc(pc(join(x,y))) = join(pc(pc(x)),pc(pc(y))).
meet(x,y) != "zero" | join(x,y) != "one" | meet(x,z) != "zero" | join(x,z) != "one" | z = y.
-C("zero",x).
"zero" = x | C(x,x).
-C(x,y) | C(y,x).
meet(x,y) != x | -C(z,x) | C(z,y).
oc(oc(x)) = x.
join(x,oc(x)) = "one".
meet(x,y) = oc(join(oc(y),oc(x))).
join("zero",x) = x.
join("one",x) = "one".
meet(x,x) = x.
join(x,x) = x.
meet(x,y) = meet(y,x).
join(x,y) = join(y,x).
meet(x,meet(y,z)) = meet(y,meet(z,x)).
join(x,join(y,z)) = join(y,join(z,x)).
meet(x,join(x,y)) = x.
join(x,meet(x,y)) = x.
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=109, kept=93.
Selections=1, assignments=1, propagations=17, current_models=0.
Rewrite_terms=147, rewrite_bools=44, indexes=25.
Rules_from_neg_clauses=2, cross_offs=2.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=259, kept=232.
Selections=2, assignments=3, propagations=28, current_models=0.
Rewrite_terms=416, rewrite_bools=134, indexes=66.
Rules_from_neg_clauses=2, cross_offs=10.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

============================== MODEL =================================

interpretation( 4, [number=1, seconds=0], [

        function("one", [ 0 ]),

        function("zero", [ 1 ]),

        function(c1, [ 1 ]),

        function(c2, [ 2 ]),

        function(oc(_), [ 1, 0, 3, 2 ]),

        function(pc(_), [ 1, 0, 3, 2 ]),

        function(f1(_), [ 0, 0, 3, 2 ]),

        function(join(_,_), [
			   0, 0, 0, 0,
			   0, 1, 2, 3,
			   0, 2, 2, 0,
			   0, 3, 0, 3 ]),

        function(meet(_,_), [
			   0, 1, 2, 3,
			   1, 1, 1, 1,
			   2, 1, 2, 1,
			   3, 1, 1, 3 ]),

        relation(x(_), [ 0, 0, 0, 0 ]),

        relation(C(_,_), [
			   1, 0, 1, 1,
			   0, 0, 0, 0,
			   1, 0, 1, 0,
			   1, 0, 0, 1 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=515, kept=475.
Selections=9, assignments=13, propagations=59, current_models=1.
Rewrite_terms=1484, rewrite_bools=656, indexes=146.
Rules_from_neg_clauses=6, cross_offs=32.

============================== end of statistics =====================

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 21652 exit (max_models) Mon Nov  5 16:03:05 2012
The process finished Mon Nov  5 16:03:05 2012
