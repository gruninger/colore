(cl-text space/space

(cl-imports space/ped)

(cl-imports zex/zex)

(cl-imports space/dim_prime_linear)

(cl-imports space/cont_c)

(cl-imports space/codi_down)

(cl-imports space/codib_down)

(cl-imports space/codib_updown)

(cl-imports space/defs/icon)

(cl-comment 'S-A1: ')

(forall (x)
	(or
		(not (PED x))
		(not (S x))
	)
)

(cl-comment 'S-A2: ')

(forall (x)
	(S (r x))
)

(cl-comment 'S-A3: ')

(forall (x)
	(iff
		(S x)
		(= x (r x))
	)
)

(cl-comment 'S-A4: ')

(forall (x y)
	(if
		(Cont x y)
		(and
			(S x)
			(S y)
		)
	)
)

(cl-comment 'S-A5: ')

(forall (x y)
	(if
		(< x y)
		(and
			(S x)
			(S y)
		)
	)
)

(cl-comment 'S-A6: ')

(forall (x)
	(if
		(ZEX x)
		(S x)
	)
)


(cl-comment 'S-A7: ')

(forall (x y)
	(if
		(BCont x y)
		(and
			(S x)
			(S y)
		)
	)
)


(cl-comment 'S-A8: ')

(forall (x)
	(if
		(PED x)
		(MaxDim (r x))
	)
)


(cl-comment 'S-A9: ')

(forall (x y)
	(if
		(DK1 x y)
		(P (r x) (r y))
	)
)

(cl-comment 'S-A10: ')

(forall (x y)
	(if
		(hosts x y)
		(iff
			(RPF y)
			(P (r x) (r y))
		)
	)
)

(cl-comment 'S-A11: ')

(forall (x y m n)
	(if
		(and
			(hosts x y)
			(RPF y)
			(DK1 m x)
			(DK1 n y)
		)
		(P (r n) (r m))
	)
)


(cl-comment 'S-A12: ')

(forall (x y)
	(if
		(hosts x y)
		(iff
			(DPF y)
			(not (PO (r x) (r y)))
		)
	)
)





		
)
