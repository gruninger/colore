% Automatically generated from CL/KIF
formulas(sos).
% 'space/spch'
%imports("space/space").
% 'CH1: '
 all x (S(ch(x))).
% 'CH2: '
 all x ((ch(x) = ch(r(x)))).
% 'CH3: '
 all x ((-(ZEX(x)) -> ICon(ch(x)))).
% 'CH4: '
 all x ((ch(x) = ch(ch(x)))).
% 'CH5: '
 all x ((-(ZEX(x)) -> Cont(r(x), ch(x)))).
% 'CH6: '
 all x ((-(ZEX(x)) & -(Closed(r(x))) -> TCont(r(x), ch(x)))).
% 'CH7: '
 all x all y ((Cont(r(x), r(y)) -> Cont(ch(x), ch(y)))).
% 'CH8: '
 all x all y (((ch(x) = ch(y)) & -(ZEX(x)) -> C(r(x), r(y)))).
% 'CH9: '
 all x all y ((MaxDim(r(x)) & MaxDim(r(y)) & (r(x) = ch(x)) & (r(y) = ch(y)) -> (intersection(ch(x), ch(y)) = ch(intersection(ch(x), ch(y)))))).
% 'CH10: '
 all x all y ((ICont(r(x), r(y)) & -(Closed(difference(r(y), r(x)))) -> -((difference(r(y), r(x)) = ch(difference(r(y), r(x))))))).
% 'CH11: '
 all x all y ((ICont(r(x), r(y)) & MaxDim(r(x)) & MaxDim(r(y)) -> Cont(r(x), ch(difference(r(y), r(x)))))).
% 'CH12: '
 all x all y ((-(ZEX(x)) | -(ZEX(y)) ->  exists z exists v (TSum(r(x), r(y), r(z)) & TSum(ch(x), ch(y), r(v)) & Cont(v, ch(z))))).
% 'CH13: '
 all x all y all z all v all w ((EqDim(x, y) & EqDim(y, z) & SC(x, y) & SC(y, z) & -(C(x, z)) & TSum(x, y, v) & TSum(y, z, w) & (v = ch(v)) & (w = ch(w)) -> (y = ch(y)))).

end_of_list.
