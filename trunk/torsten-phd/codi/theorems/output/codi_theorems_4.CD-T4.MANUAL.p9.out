============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 24966 was started by torsten on stl-ws2,
Fri Oct 21 16:19:50 2011
The command was "prover9 -t 60 -f codi_theorems_4.MANUAL.p9.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file codi_theorems_4.MANUAL.p9.in


formulas(sos).
(all x all y (Cont(x,y) -> x < y | EqDim(x,y))).
end_of_list.

formulas(sos).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
end_of_list.

formulas(sos).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
end_of_list.

formulas(sos).
(all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))).
end_of_list.

formulas(sos).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))).
end_of_list.

formulas(sos).
(all x -(x < x)).
(all x all y (x < y -> -(y < x))).
(all x all y all z (x < y & y < z -> x < z)).
(all x EqDim(x,x)).
(all x all y (EqDim(x,y) -> EqDim(y,x))).
(all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))).
(all x all y (x < y -> -EqDim(x,y))).
(all x all y all z (EqDim(x,y) -> (z < x -> z < y))).
(all x all y all z (EqDim(x,y) -> (x < z -> y < z))).
end_of_list.

formulas(sos).
end_of_list.

formulas(sos).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

formulas(sos).
(all x (-ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))).
end_of_list.
clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).
predicate_order([P,=,SC,EqDim,PO,SC,C,<,Inc,Cont]).
set(inverse_order).
assign(order,kbo).

formulas(goals).
(all x all y (C(x,y) -> PO(x,y) | SC(x,y) | Inc(x,y))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 60).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
4 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
5 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
6 (all x -(x < x)) # label(non_clause).  [assumption].
7 (all x all y (x < y -> -(y < x))) # label(non_clause).  [assumption].
8 (all x all y all z (x < y & y < z -> x < z)) # label(non_clause).  [assumption].
9 (all x EqDim(x,x)) # label(non_clause).  [assumption].
10 (all x all y (EqDim(x,y) -> EqDim(y,x))) # label(non_clause).  [assumption].
11 (all x all y all z (EqDim(x,y) & EqDim(y,z) -> EqDim(x,z))) # label(non_clause).  [assumption].
12 (all x all y (x < y -> -EqDim(x,y))) # label(non_clause).  [assumption].
13 (all x all y all z (EqDim(x,y) -> (z < x -> z < y))) # label(non_clause).  [assumption].
14 (all x all y all z (EqDim(x,y) -> (x < z -> y < z))) # label(non_clause).  [assumption].
15 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
16 (all x (-ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
17 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
18 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
19 (all x all y (ZEX(x) -> -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
20 (all x all y (C(x,y) -> PO(x,y) | SC(x,y) | Inc(x,y))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating C/2
21 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(15)].
22 -C(x,y) | Cont(f6(x,y),x).  [clausify(15)].
23 -C(x,y) | Cont(f6(x,y),y).  [clausify(15)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f6(y,z),y).  [resolve(21,a,22,a)].
Derived: -Cont(x,y) | -Cont(x,z) | Cont(f6(y,z),z).  [resolve(21,a,23,a)].
24 C(c1,c2).  [deny(20)].
Derived: Cont(f6(c1,c2),c1).  [resolve(24,a,22,a)].
Derived: Cont(f6(c1,c2),c2).  [resolve(24,a,23,a)].

Eliminating ZEX/1
25 -ZEX(x) | -Cont(x,x).  [clausify(16)].
26 ZEX(x) | Cont(x,x).  [clausify(16)].
27 -ZEX(x) | -Cont(y,x).  [clausify(19)].
Derived: -Cont(x,y) | Cont(y,y).  [resolve(27,a,26,a)].
28 -ZEX(x) | -Cont(x,y).  [clausify(19)].
Derived: -Cont(x,y) | Cont(x,x).  [resolve(28,a,26,a)].

============================== end predicate elimination =============

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. f1=1. f2=1. f3=1. f4=1. f5=1. f6=1.
Predicate symbol precedence:  predicate_order([ P, =, SC, EqDim, PO, <, Inc, Cont ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f5, f6 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 66 (0.00 of 0.09 sec).

Low Water (keep): wt=36.000, iters=6829

Low Water (keep): wt=22.000, iters=6689

Low Water (keep): wt=21.000, iters=6672

Low Water (keep): wt=19.000, iters=6895

Low Water (keep): wt=18.000, iters=6675

============================== PROOF =================================

% Proof 1 at 5.27 (+ 0.02) seconds.
% Length of proof is 46.
% Level of proof is 13.
% Maximum clause weight is 19.000.
% Given clauses 5585.

1 (all x all y (Cont(x,y) -> x < y | EqDim(x,y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
3 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
4 (all x all y (Inc(x,y) <-> (exists z (z < x & Cont(z,x) & P(z,y))) | (exists z (z < y & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
5 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> z < x & z < y)))) # label(non_clause).  [assumption].
15 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
20 (all x all y (C(x,y) -> PO(x,y) | SC(x,y) | Inc(x,y))) # label(non_clause) # label(goal).  [goal].
22 -C(x,y) | Cont(f6(x,y),x).  [clausify(15)].
23 -C(x,y) | Cont(f6(x,y),y).  [clausify(15)].
24 C(c1,c2).  [deny(20)].
29 -Cont(x,y) | x < y | EqDim(x,y).  [clausify(1)].
32 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(2)].
35 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(3)].
45 Inc(x,y) | -(z < x) | -Cont(z,x) | -P(z,y).  [clausify(4)].
46 Inc(x,y) | -(z < y) | -Cont(z,y) | -P(z,x).  [clausify(4)].
51 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),x).  [clausify(5)].
52 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f5(x,y),y).  [clausify(5)].
53 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -(f5(x,y) < x) | -(f5(x,y) < y).  [clausify(5)].
65 -PO(c1,c2).  [deny(20)].
66 -SC(c1,c2).  [deny(20)].
67 -Inc(c1,c2).  [deny(20)].
70 Cont(f6(c1,c2),c1).  [resolve(24,a,22,a)].
71 Cont(f6(c1,c2),c2).  [resolve(24,a,23,a)].
87 SC(c1,x) | -Cont(f6(c1,c2),x) | -(f5(c1,x) < c1) | -(f5(c1,x) < x).  [resolve(70,a,53,b)].
89 SC(c1,x) | -Cont(f6(c1,c2),x) | Cont(f5(c1,x),x).  [resolve(70,a,52,b)].
91 SC(c1,x) | -Cont(f6(c1,c2),x) | Cont(f5(c1,x),c1).  [resolve(70,a,51,b)].
439 -(f5(c1,c2) < c1) | -(f5(c1,c2) < c2).  [resolve(87,b,71,a),unit_del(a,66)].
621 Cont(f5(c1,c2),c2).  [resolve(89,b,71,a),unit_del(a,66)].
640 Inc(x,c2) | -(f5(c1,c2) < c2) | -P(f5(c1,c2),x).  [resolve(621,a,46,c)].
642 P(f5(c1,c2),c2) | -EqDim(f5(c1,c2),c2).  [resolve(621,a,32,b)].
643 f5(c1,c2) < c2 | EqDim(f5(c1,c2),c2).  [resolve(621,a,29,a)].
687 Cont(f5(c1,c2),c1).  [resolve(91,b,71,a),unit_del(a,66)].
706 Inc(c1,x) | -(f5(c1,c2) < c1) | -P(f5(c1,c2),x).  [resolve(687,a,45,c)].
707 P(f5(c1,c2),c1) | -EqDim(f5(c1,c2),c1).  [resolve(687,a,32,b)].
708 f5(c1,c2) < c1 | EqDim(f5(c1,c2),c1).  [resolve(687,a,29,a)].
3156 EqDim(f5(c1,c2),c2) | -(f5(c1,c2) < c1).  [resolve(643,a,439,b)].
4027 EqDim(f5(c1,c2),c2) | EqDim(f5(c1,c2),c1).  [resolve(3156,b,708,a)].
4038 EqDim(f5(c1,c2),c1) | P(f5(c1,c2),c2).  [resolve(4027,a,642,b)].
4091 P(f5(c1,c2),c2) | P(f5(c1,c2),c1).  [resolve(4038,a,707,b)].
8756 Inc(x,c2) | -P(f5(c1,c2),x) | EqDim(f5(c1,c2),c2).  [resolve(640,b,643,a)].
9375 Inc(c1,x) | -P(f5(c1,c2),x) | EqDim(f5(c1,c2),c1).  [resolve(706,b,708,a)].
16604 EqDim(f5(c1,c2),c1) | P(f5(c1,c2),c1).  [resolve(9375,b,4091,a),unit_del(a,67)].
16632 P(f5(c1,c2),c1).  [resolve(16604,a,707,b),merge(b)].
16635 EqDim(f5(c1,c2),c2).  [resolve(16632,a,8756,b),unit_del(a,67)].
16642 -P(f5(c1,c2),c2).  [ur(35,a,65,a,b,16632,a)].
16643 $F.  [back_unit_del(642),unit_del(a,16642),unit_del(b,16635)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=5585. Generated=52831. Kept=16614. proofs=1.
Usable=5583. Sos=10841. Demods=0. Limbo=8, Disabled=235. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=34965. Back_subsumed=25.
Sos_limit_deleted=1251. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=157.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=694757. Nonunit_bsub_feature_tests=7484.
Megabytes=23.09.
User_CPU=5.27, System_CPU=0.02, Wall_clock=5.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 24966 exit (max_proofs) Fri Oct 21 16:19:55 2011
