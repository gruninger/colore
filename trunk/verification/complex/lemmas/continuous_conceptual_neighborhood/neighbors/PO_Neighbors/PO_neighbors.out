============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 4080 was started,
Mon Jan 21 03:10:31 2013
The command was "/cygdrive/c/Program Files/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.11 (+ 0.08) seconds.
% Length of proof is 52.
% Level of proof is 13.
% Maximum clause weight is 38.
% Given clauses 48.

1 (all o all x all y (continuous(o) <-> arboreal(o) & (-changes(o,region(x)) & -changes(o,region(y)) -> (changes(o,connect(x,y)) -> -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y)) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x))) & (changes(o,connect(x,compl(y))) -> -changes(o,connect(x,y)) & -changes(o,connect(compl(x),y)) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x))) & (changes(o,connect(compl(x),y)) -> -changes(o,connect(x,y)) & -changes(o,connect(x,y)) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x))) & (changes(o,Os(x,y)) -> -changes(o,connect(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y))) & (changes(o,Ps(x,y)) -> -changes(o,connect(x,y)) & -changes(o,Os(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y))) & (changes(o,Ps(y,x)) -> -changes(o,connect(x,y)) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,connect(x,compl(y))) & -changes(o,connect(compl(x),y)))))) # label(non_clause).  [assumption].
2 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,ECs(x,y)))) # label(non_clause).  [assumption].
3 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & changes(o,Ps(x,y)) & -changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,TPPs(x,y)))) # label(non_clause).  [assumption].
4 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) & -changes(o,Os(x,y)) & -changes(o,Ps(x,y)) & changes(o,Ps(y,x)) & -changes(o,connect(x,y)) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,TPPs(y,x)))) # label(non_clause).  [assumption].
5 (all x all y all o (changes(o,POs(x,y)) & arboreal(o) -> changes(o,Os(x,y)) | changes(o,Ps(x,y)) | changes(o,Ps(y,x)))) # label(non_clause).  [assumption].
6 (all x all y all o (changes(o,POs(x,y)) & continuous(o) & -changes(o,region(x)) & -changes(o,region(y)) -> changes(o,ECs(x,y)) | changes(o,TPPs(x,y)) | changes(o,TPPs(y,x)))) # label(non_clause) # label(goal).  [goal].
8 -continuous(x) | arboreal(x).  [clausify(1)].
11 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,connect(y,z)) | -changes(x,Os(y,z)).  [clausify(1)].
12 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,connect(y,z)) | -changes(x,Ps(y,z)).  [clausify(1)].
13 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,connect(y,z)) | -changes(x,Ps(z,y)).  [clausify(1)].
21 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,Os(y,z)) | -changes(x,Ps(y,z)).  [clausify(1)].
22 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,Os(y,z)) | -changes(x,Ps(z,y)).  [clausify(1)].
23 -continuous(x) | changes(x,region(y)) | changes(x,region(z)) | -changes(x,Ps(y,z)) | -changes(x,Ps(z,y)).  [clausify(1)].
31 continuous(c3).  [deny(6)].
32 arboreal(c3).  [resolve(31,a,8,a)].
33 -changes(x,POs(y,z)) | -arboreal(x) | -changes(x,Os(y,z)) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,ECs(y,z)).  [clausify(2)].
34 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | -changes(x,Ps(y,z)) | changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,TPPs(y,z)).  [clausify(3)].
35 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | -changes(x,Ps(z,y)) | changes(x,connect(y,z)) | changes(x,region(y)) | changes(x,region(z)) | changes(x,TPPs(z,y)).  [clausify(4)].
36 -changes(x,POs(y,z)) | -arboreal(x) | changes(x,Os(y,z)) | changes(x,Ps(y,z)) | changes(x,Ps(z,y)).  [clausify(5)].
142 changes(c3,POs(c1,c2)).  [deny(6)].
143 -changes(c3,region(c1)).  [deny(6)].
144 -changes(c3,region(c2)).  [deny(6)].
145 -changes(c3,ECs(c1,c2)).  [deny(6)].
146 -changes(c3,TPPs(c1,c2)).  [deny(6)].
147 -changes(c3,TPPs(c2,c1)).  [deny(6)].
150 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,connect(x,y)) | -changes(c3,Os(x,y)).  [resolve(31,a,11,a)].
151 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,connect(x,y)) | -changes(c3,Ps(x,y)).  [resolve(31,a,12,a)].
152 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,connect(x,y)) | -changes(c3,Ps(y,x)).  [resolve(31,a,13,a)].
160 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,Os(x,y)) | -changes(c3,Ps(x,y)).  [resolve(31,a,21,a)].
161 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,Os(x,y)) | -changes(c3,Ps(y,x)).  [resolve(31,a,22,a)].
162 changes(c3,region(x)) | changes(c3,region(y)) | -changes(c3,Ps(x,y)) | -changes(c3,Ps(y,x)).  [resolve(31,a,23,a)].
163 -changes(c3,POs(x,y)) | -changes(c3,Os(x,y)) | changes(c3,Ps(x,y)) | changes(c3,Ps(y,x)) | changes(c3,connect(x,y)) | changes(c3,region(x)) | changes(c3,region(y)) | changes(c3,ECs(x,y)).  [resolve(32,a,33,b)].
164 -changes(c3,POs(x,y)) | changes(c3,Os(x,y)) | -changes(c3,Ps(x,y)) | changes(c3,Ps(y,x)) | changes(c3,connect(x,y)) | changes(c3,region(x)) | changes(c3,region(y)) | changes(c3,TPPs(x,y)).  [resolve(32,a,34,b)].
165 -changes(c3,POs(x,y)) | changes(c3,Os(x,y)) | changes(c3,Ps(x,y)) | -changes(c3,Ps(y,x)) | changes(c3,connect(x,y)) | changes(c3,region(x)) | changes(c3,region(y)) | changes(c3,TPPs(y,x)).  [resolve(32,a,35,b)].
166 -changes(c3,POs(x,y)) | changes(c3,Os(x,y)) | changes(c3,Ps(x,y)) | changes(c3,Ps(y,x)).  [resolve(32,a,36,b)].
180 -changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(163,a,142,a),unit_del(e,143),unit_del(f,144),unit_del(g,145)].
181 changes(c3,Os(c1,c2)) | -changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(164,a,142,a),unit_del(e,143),unit_del(f,144),unit_del(g,146)].
182 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(165,a,142,a),unit_del(e,143),unit_del(f,144),unit_del(g,147)].
183 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(166,a,142,a)].
186 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [resolve(183,a,180,a),merge(c),merge(d)].
189 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)) | -changes(c3,connect(c1,c2)).  [resolve(183,a,150,d),unit_del(c,143),unit_del(d,144)].
190 changes(c3,Ps(c1,c2)) | changes(c3,Ps(c2,c1)).  [resolve(189,c,186,c),merge(c),merge(d)].
191 changes(c3,Os(c1,c2)) | changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(182,c,190,b),merge(d)].
192 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(191,a,161,c),unit_del(c,143),unit_del(d,144)].
195 changes(c3,Ps(c1,c2)) | changes(c3,connect(c1,c2)).  [resolve(192,c,190,b),merge(c)].
196 changes(c3,Ps(c1,c2)) | -changes(c3,Ps(c2,c1)).  [resolve(195,b,152,c),unit_del(b,143),unit_del(c,144)].
197 changes(c3,Ps(c1,c2)).  [resolve(196,b,190,b),merge(b)].
198 changes(c3,Os(c1,c2)) | changes(c3,Ps(c2,c1)) | changes(c3,connect(c1,c2)).  [back_unit_del(181),unit_del(b,197)].
199 -changes(c3,Ps(c2,c1)).  [resolve(197,a,162,d),unit_del(a,144),unit_del(b,143)].
201 -changes(c3,Os(c1,c2)).  [ur(160,a,143,a,b,144,a,d,197,a)].
207 -changes(c3,connect(c1,c2)).  [ur(151,a,143,a,b,144,a,d,197,a)].
208 $F.  [back_unit_del(198),unit_del(a,201),unit_del(b,199),unit_del(c,207)].

============================== end of proof ==========================
