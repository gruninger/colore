============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 10154 was started by cchui on stl1.mie.utoronto.ca,
Tue Mar 26 21:36:42 2013
The command was "prover9 -t 600 -f test/p9/20130326/dolce_time_mereology/cem_mereology.p9 test/p9/20130326/dolce_time_mereology/dolce_time_mereology_reduction.p9 test/p9/20130326/dolce_time_mereology/cm_mereology.p9 test/p9/20130326/dolce_time_mereology/em_mereology.p9 test/p9/20130326/dolce_time_mereology/mereology_def.p9 test/p9/20130326/dolce_time_mereology/sum_mereology.p9 test/p9/20130326/dolce_time_mereology/prod_mereology.p9 test/p9/20130326/dolce_time_mereology/m_mereology.p9 test/p9/20130326/dolce_time_mereology/options.txt test/p9/20130326/dolce_time_mereology/ex0326_reduction_6.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/20130326/dolce_time_mereology/cem_mereology.p9


formulas(sos).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/dolce_time_mereology_reduction.p9


formulas(sos).
(all x (T(x) <-> x = x)).
(all x all y (P(x,y) <-> part(x,y))).
(all x all y (O(x,y) <-> overlaps(x,y))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/cm_mereology.p9


formulas(sos).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/em_mereology.p9


formulas(sos).
(all x all y (-part(x,y) -> (exists z (part(z,x) & disjoint(z,y))))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/mereology_def.p9


formulas(sos).
(all x all y (ppart(x,y) <-> part(x,y) & -part(y,x))).
(all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))).
(all x all y (disjoint(x,y) <-> -overlaps(x,y))).
(all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))).
(all x (atomic_part(x) <-> (all y (part(y,x) -> y = x)))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/sum_mereology.p9


formulas(sos).
(all x all y (underlaps(x,y) -> (exists z all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/prod_mereology.p9


formulas(sos).
(all x all y (overlaps(x,y) -> (exists z all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/m_mereology.p9


formulas(sos).
(all x part(x,x)).
(all x all y (part(x,y) & part(y,x) -> x = y)).
(all x all y all z (part(x,y) & part(y,z) -> part(x,z))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/20130326/dolce_time_mereology/ex0326_reduction_6.p9


formulas(goals).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (T(x) <-> x = x)) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> part(x,y))) # label(non_clause).  [assumption].
3 (all x all y (O(x,y) <-> overlaps(x,y))) # label(non_clause).  [assumption].
4 (all x all y (-part(x,y) -> (exists z (part(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
5 (all x all y (ppart(x,y) <-> part(x,y) & -part(y,x))) # label(non_clause).  [assumption].
6 (all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (disjoint(x,y) <-> -overlaps(x,y))) # label(non_clause).  [assumption].
8 (all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))) # label(non_clause).  [assumption].
9 (all x (atomic_part(x) <-> (all y (part(y,x) -> y = x)))) # label(non_clause).  [assumption].
10 (all x all y (underlaps(x,y) -> (exists z all v (overlaps(v,z) <-> overlaps(v,x) | overlaps(v,y))))) # label(non_clause).  [assumption].
11 (all x all y (overlaps(x,y) -> (exists z all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))) # label(non_clause).  [assumption].
12 (all x part(x,x)) # label(non_clause).  [assumption].
13 (all x all y (part(x,y) & part(y,x) -> x = y)) # label(non_clause).  [assumption].
14 (all x all y all z (part(x,y) & part(y,z) -> part(x,z))) # label(non_clause).  [assumption].
15 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating T/1
16 T(x) | x != x.  [clausify(1)].
17 -T(x) | x = x.  [clausify(1)].
18 T(c1).  [deny(15)].
Derived: c1 = c1.  [resolve(18,a,17,a)].
19 T(c2).  [deny(15)].
Derived: c2 = c2.  [resolve(19,a,17,a)].
20 -T(x) | -P(x,c1) | O(x,c2).  [deny(15)].
Derived: -P(x,c1) | O(x,c2) | x != x.  [resolve(20,a,16,a)].
Derived: -P(c1,c1) | O(c1,c2).  [resolve(20,a,18,a)].
Derived: -P(c2,c1) | O(c2,c2).  [resolve(20,a,19,a)].

Eliminating O/2
21 O(x,y) | -overlaps(x,y).  [clausify(3)].
22 -O(x,y) | overlaps(x,y).  [clausify(3)].
23 -P(x,c1) | O(x,c2) | x != x.  [resolve(20,a,16,a)].
Derived: -P(x,c1) | x != x | overlaps(x,c2).  [resolve(23,b,22,a)].
24 -P(c1,c1) | O(c1,c2).  [resolve(20,a,18,a)].
Derived: -P(c1,c1) | overlaps(c1,c2).  [resolve(24,b,22,a)].
25 -P(c2,c1) | O(c2,c2).  [resolve(20,a,19,a)].
Derived: -P(c2,c1) | overlaps(c2,c2).  [resolve(25,b,22,a)].

Eliminating disjoint/2
26 -disjoint(x,y) | -overlaps(x,y).  [clausify(7)].
27 part(x,y) | disjoint(f1(x,y),y).  [clausify(4)].
Derived: -overlaps(f1(x,y),y) | part(x,y).  [resolve(26,a,27,b)].
28 disjoint(x,y) | overlaps(x,y).  [clausify(7)].

Eliminating underlaps/2
29 underlaps(x,y) | -part(x,z) | -part(y,z).  [clausify(8)].
30 -underlaps(x,y) | part(x,f3(x,y)).  [clausify(8)].
31 -underlaps(x,y) | part(y,f3(x,y)).  [clausify(8)].
Derived: -part(x,y) | -part(z,y) | part(x,f3(x,z)).  [resolve(29,a,30,a)].
Derived: -part(x,y) | -part(z,y) | part(z,f3(x,z)).  [resolve(29,a,31,a)].
32 -underlaps(x,y) | -overlaps(z,f5(x,y)) | overlaps(z,x) | overlaps(z,y).  [clausify(10)].
Derived: -overlaps(x,f5(y,z)) | overlaps(x,y) | overlaps(x,z) | -part(y,u) | -part(z,u).  [resolve(32,a,29,a)].
33 -underlaps(x,y) | overlaps(z,f5(x,y)) | -overlaps(z,x).  [clausify(10)].
Derived: overlaps(x,f5(y,z)) | -overlaps(x,y) | -part(y,u) | -part(z,u).  [resolve(33,a,29,a)].
34 -underlaps(x,y) | overlaps(z,f5(x,y)) | -overlaps(z,y).  [clausify(10)].
Derived: overlaps(x,f5(y,z)) | -overlaps(x,z) | -part(y,u) | -part(z,u).  [resolve(34,a,29,a)].

Eliminating atomic_part/1
35 atomic_part(x) | part(f4(x),x).  [clausify(9)].
36 -atomic_part(x) | -part(y,x) | y = x.  [clausify(9)].
Derived: part(f4(x),x) | -part(y,x) | y = x.  [resolve(35,a,36,a)].
37 atomic_part(x) | f4(x) != x.  [clausify(9)].
Derived: f4(x) != x | -part(y,x) | y = x.  [resolve(37,a,36,a)].

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, part, overlaps, ppart, P ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f5, f6, f4 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

============================== PROOF =================================

% Proof 1 at 0.01 (+ 0.00) seconds.
% Length of proof is 23.
% Level of proof is 6.
% Maximum clause weight is 8.000.
% Given clauses 40.

1 (all x (T(x) <-> x = x)) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) <-> part(x,y))) # label(non_clause).  [assumption].
3 (all x all y (O(x,y) <-> overlaps(x,y))) # label(non_clause).  [assumption].
4 (all x all y (-part(x,y) -> (exists z (part(z,x) & disjoint(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (disjoint(x,y) <-> -overlaps(x,y))) # label(non_clause).  [assumption].
15 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause) # label(goal).  [goal].
16 T(x) | x != x.  [clausify(1)].
20 -T(x) | -P(x,c1) | O(x,c2).  [deny(15)].
22 -O(x,y) | overlaps(x,y).  [clausify(3)].
23 -P(x,c1) | O(x,c2) | x != x.  [resolve(20,a,16,a)].
26 -disjoint(x,y) | -overlaps(x,y).  [clausify(7)].
27 part(x,y) | disjoint(f1(x,y),y).  [clausify(4)].
39 P(x,y) | -part(x,y).  [clausify(2)].
40 part(x,y) | part(f1(x,y),x).  [clausify(4)].
53 -P(c1,c2).  [deny(15)].
54 -P(x,c1) | x != x | overlaps(x,c2).  [resolve(23,b,22,a)].
55 -P(x,c1) | overlaps(x,c2).  [copy(54),xx(b)].
56 -overlaps(f1(x,y),y) | part(x,y).  [resolve(26,a,27,b)].
69 part(x,y) | P(f1(x,y),x).  [resolve(40,b,39,b)].
80 -part(c1,c2).  [ur(39,a,53,a)].
95 -overlaps(f1(c1,c2),c2).  [ur(56,b,80,a)].
98 -P(f1(c1,c2),c1).  [ur(55,b,95,a)].
136 $F.  [resolve(98,a,69,b),unit_del(a,80)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=40. Generated=141. Kept=97. proofs=1.
Usable=38. Sos=56. Demods=0. Limbo=0, Disabled=54. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=43. Back_subsumed=2.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=1.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=180. Nonunit_bsub_feature_tests=265.
Megabytes=0.22.
User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 10154 exit (max_proofs) Tue Mar 26 21:36:42 2013
