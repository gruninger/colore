============================== Prover9 ===============================
Prover9 (64) version 2009-11A, November 2009.
Process 10040 was started by cchui on stl1.mie.utoronto.ca,
Tue Mar 26 21:11:15 2013
The command was "prover9 -t 600 -f test/p9/20130326/dolce_time_mereology/dolce_time_mereology.p9 test/p9/20130326/dolce_time_mereology/dolce_time_mereology2cem_mereology.p9 test/p9/20130326/dolce_time_mereology/dolce_taxonomy_pdedq.p9 test/p9/20130326/dolce_time_mereology/options.txt test/p9/20130326/dolce_time_mereology/ex0326_1.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file test/p9/20130326/dolce_time_mereology/dolce_time_mereology.p9


formulas(sos).
(all x all y (P(x,y) -> T(y) & T(y))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & disjoint(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (disjoint(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (T(x) -> (AtP(x) <-> (all y (T(y) & P(y,x) -> y = x))))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/dolce_time_mereology2cem_mereology.p9


formulas(sos).
(all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))).
(all x (x = x <-> T(x))).
(all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))).
(all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))).
(all x all y (disjoint(x,y) <-> -overlaps(x,y))).
(all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))).
(all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/dolce_taxonomy_pdedq.p9


formulas(sos).
(all x (ED(x) | PD(x) | Q(x) | T(x) -> PT(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | T(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -T(x))).
(all x (PD(x) -> -Q(x) & -T(x))).
(all x (Q(x) -> -T(x))).
(all x (T(x) -> AB(x))).
end_of_list.

% Reading from file test/p9/20130326/dolce_time_mereology/options.txt

clear(auto_denials).
clear(print_initial_clauses).
clear(print_kept).
clear(print_given).

% Reading from file test/p9/20130326/dolce_time_mereology/ex0326_1.p9


formulas(goals).
(all x all y (overlaps(x,y) -> (exists z all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (P(x,y) -> T(y) & T(y))) # label(non_clause).  [assumption].
2 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
3 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
4 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
5 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
6 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & disjoint(z,y) & T(z))))) # label(non_clause).  [assumption].
8 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
9 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
10 (all x all y (T(x) & T(y) -> (disjoint(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
11 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
12 (all x (T(x) -> (AtP(x) <-> (all y (T(y) & P(y,x) -> y = x))))) # label(non_clause).  [assumption].
13 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
14 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
15 (all x all y (part(x,y) <-> P(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
16 (all x (x = x <-> T(x))) # label(non_clause).  [assumption].
17 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
19 (all x all y (disjoint(x,y) <-> -overlaps(x,y))) # label(non_clause).  [assumption].
20 (all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))) # label(non_clause).  [assumption].
21 (all x all y (underlaps(x,y) <-> (exists z (part(x,z) & part(y,z))))) # label(non_clause).  [assumption].
22 (all x (ED(x) | PD(x) | Q(x) | T(x) -> PT(x))) # label(non_clause).  [assumption].
23 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | T(x))) # label(non_clause).  [assumption].
24 (all x (ED(x) -> -PD(x) & -Q(x) & -T(x))) # label(non_clause).  [assumption].
25 (all x (PD(x) -> -Q(x) & -T(x))) # label(non_clause).  [assumption].
26 (all x (Q(x) -> -T(x))) # label(non_clause).  [assumption].
27 (all x (T(x) -> AB(x))) # label(non_clause).  [assumption].
28 (all x all y (overlaps(x,y) -> (exists z all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

============================== PREDICATE ELIMINATION =================

Eliminating disjoint/2
29 -T(x) | -T(y) | -disjoint(x,y) | -O(x,y).  [clausify(10)].
30 -T(x) | -T(y) | P(x,y) | disjoint(f2(x,y),y).  [clausify(7)].
Derived: -T(f2(x,y)) | -T(y) | -O(f2(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(29,c,30,d)].
31 -T(x) | -T(y) | disjoint(x,y) | O(x,y).  [clausify(10)].
32 -disjoint(x,y) | -overlaps(x,y).  [clausify(19)].
Derived: -overlaps(f2(x,y),y) | -T(x) | -T(y) | P(x,y).  [resolve(32,a,30,d)].
Derived: -overlaps(x,y) | -T(x) | -T(y) | O(x,y).  [resolve(32,a,31,c)].
33 disjoint(x,y) | overlaps(x,y).  [clausify(19)].
Derived: overlaps(x,y) | -T(x) | -T(y) | -O(x,y).  [resolve(33,a,29,c)].

Eliminating U/2
34 -T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).  [clausify(11)].
35 -T(x) | -T(y) | -U(x,y) | P(x,f4(x,y)).  [clausify(11)].
36 -T(x) | -T(y) | -U(x,y) | P(y,f4(x,y)).  [clausify(11)].
37 -T(x) | -T(y) | -U(x,y) | T(f4(x,y)).  [clausify(11)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(x,f4(x,y)).  [resolve(34,c,35,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | P(y,f4(x,y)).  [resolve(34,c,36,c)].
Derived: -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z) | -T(x) | -T(y) | T(f4(x,y)).  [resolve(34,c,37,c)].
38 -T(x) | -T(y) | -U(x,y) | T(f6(x,y)).  [clausify(13)].
Derived: -T(x) | -T(y) | T(f6(x,y)) | -T(x) | -T(y) | -P(x,z) | -P(y,z) | -T(z).  [resolve(38,c,34,c)].
39 -T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f6(x,y)) | O(z,x) | O(z,y).  [clausify(13)].
Derived: -T(x) | -T(y) | -T(z) | -O(z,f6(x,y)) | O(z,x) | O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(39,c,34,c)].
40 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f6(x,y)) | -O(z,x).  [clausify(13)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f6(x,y)) | -O(z,x) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(40,c,34,c)].
41 -T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f6(x,y)) | -O(z,y).  [clausify(13)].
Derived: -T(x) | -T(y) | -T(z) | O(z,f6(x,y)) | -O(z,y) | -T(x) | -T(y) | -P(x,u) | -P(y,u) | -T(u).  [resolve(41,c,34,c)].

Eliminating AtP/1
42 -T(x) | AtP(x) | T(f5(x)).  [clausify(12)].
43 -T(x) | -AtP(x) | -T(y) | -P(y,x) | y = x.  [clausify(12)].
Derived: -T(x) | T(f5(x)) | -T(x) | -T(y) | -P(y,x) | y = x.  [resolve(42,b,43,b)].
44 -T(x) | AtP(x) | P(f5(x),x).  [clausify(12)].
Derived: -T(x) | P(f5(x),x) | -T(x) | -T(y) | -P(y,x) | y = x.  [resolve(44,b,43,b)].
45 -T(x) | AtP(x) | f5(x) != x.  [clausify(12)].
Derived: -T(x) | f5(x) != x | -T(x) | -T(y) | -P(y,x) | y = x.  [resolve(45,b,43,b)].

Eliminating underlaps/2
46 underlaps(x,y) | -part(x,z) | -part(y,z).  [clausify(21)].
47 -underlaps(x,y) | part(x,f9(x,y)).  [clausify(21)].
48 -underlaps(x,y) | part(y,f9(x,y)).  [clausify(21)].
Derived: -part(x,y) | -part(z,y) | part(x,f9(x,z)).  [resolve(46,a,47,a)].
Derived: -part(x,y) | -part(z,y) | part(z,f9(x,z)).  [resolve(46,a,48,a)].

Eliminating ED/1
49 -PT(x) | ED(x) | PD(x) | Q(x) | T(x).  [clausify(23)].
50 -ED(x) | PT(x).  [clausify(22)].
51 PT(x) | -ED(x).  [clausify(23)].
52 -ED(x) | -PD(x).  [clausify(24)].
53 -ED(x) | -Q(x).  [clausify(24)].
54 -ED(x) | -T(x).  [clausify(24)].

Eliminating PD/1

Eliminating Q/1

Eliminating PT/1

Eliminating AB/1

============================== end predicate elimination =============

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, T, P, O, part, PP, overlaps, ppart ]).
Function symbol precedence:  function_order([ c1, c2, f1, f2, f3, f4, f6, f7, f8, f9, f5, f10 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.01 seconds.

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 69 (0.00 of 0.17 sec).

Low Water (keep): wt=24.000, iters=6748

Low Water (keep): wt=22.000, iters=6736

Low Water (keep): wt=18.000, iters=6729

Low Water (keep): wt=16.000, iters=6675

Low Water (keep): wt=15.000, iters=6761

Low Water (keep): wt=14.000, iters=6690

Low Water (keep): wt=13.000, iters=6672

Low Water (keep): wt=12.000, iters=6670

Low Water (displace): id=10604, wt=25.000

Low Water (displace): id=11222, wt=24.000

Low Water (displace): id=14069, wt=21.000

Low Water (displace): id=11730, wt=19.000

Low Water (displace): id=23215, wt=11.000

Low Water (displace): id=24629, wt=10.000

Low Water (displace): id=24792, wt=9.000

Low Water (keep): wt=11.000, iters=6690

Low Water (displace): id=29931, wt=8.000

Low Water (keep): wt=10.000, iters=6682

Low Water (keep): wt=9.000, iters=6667

============================== PROOF =================================

% Proof 1 at 399.83 (+ 3.90) seconds.
% Length of proof is 45.
% Level of proof is 9.
% Maximum clause weight is 20.000.
% Given clauses 36240.

14 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
16 (all x (x = x <-> T(x))) # label(non_clause).  [assumption].
17 (all x all y (ppart(x,y) <-> PP(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
18 (all x all y (overlaps(x,y) <-> O(x,y) & T(x) & T(y))) # label(non_clause).  [assumption].
20 (all x all y (overlaps(x,y) <-> (exists z (part(z,x) & part(z,y))))) # label(non_clause).  [assumption].
28 (all x all y (overlaps(x,y) -> (exists z all v (ppart(v,z) <-> ppart(v,x) & ppart(v,y))))) # label(non_clause) # label(goal).  [goal].
73 -T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f7(x,y)) | PP(z,x).  [clausify(14)].
74 -T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f7(x,y)) | PP(z,y).  [clausify(14)].
75 -T(x) | -T(y) | -O(x,y) | -T(z) | PP(z,f7(x,y)) | -PP(z,x) | -PP(z,y).  [clausify(14)].
80 x != x | T(x).  [clausify(16)].
81 T(x).  [copy(80),xx(a)].
82 -ppart(x,y) | PP(x,y).  [clausify(17)].
83 ppart(x,y) | -PP(x,y) | -T(x) | -T(y).  [clausify(17)].
84 ppart(x,y) | -PP(x,y).  [copy(83),unit_del(c,81),unit_del(d,81)].
85 -overlaps(x,y) | O(x,y).  [clausify(18)].
88 -overlaps(x,y) | part(f8(x,y),x).  [clausify(20)].
89 -overlaps(x,y) | part(f8(x,y),y).  [clausify(20)].
90 overlaps(x,y) | -part(z,x) | -part(z,y).  [clausify(20)].
91 overlaps(c1,c2).  [deny(28)].
92 ppart(f10(x),x) | ppart(f10(x),c1).  [deny(28)].
93 ppart(f10(x),x) | ppart(f10(x),c2).  [deny(28)].
94 -ppart(f10(x),x) | -ppart(f10(x),c1) | -ppart(f10(x),c2).  [deny(28)].
139 -O(x,y) | PP(z,f7(x,y)) | -PP(z,x) | -PP(z,y).  [back_unit_del(75),unit_del(a,81),unit_del(b,81),unit_del(d,81)].
140 -O(x,y) | -PP(z,f7(x,y)) | PP(z,y).  [back_unit_del(74),unit_del(a,81),unit_del(b,81),unit_del(d,81)].
141 -O(x,y) | -PP(z,f7(x,y)) | PP(z,x).  [back_unit_del(73),unit_del(a,81),unit_del(b,81),unit_del(d,81)].
166 part(f8(c1,c2),c2).  [resolve(91,a,89,a)].
167 part(f8(c1,c2),c1).  [resolve(91,a,88,a)].
169 ppart(f10(x),c1) | PP(f10(x),x).  [resolve(92,a,82,a)].
171 ppart(f10(x),c2) | PP(f10(x),x).  [resolve(93,a,82,a)].
225 overlaps(c2,x) | -part(f8(c1,c2),x).  [resolve(166,a,90,b)].
302 PP(f10(x),x) | PP(f10(x),c1).  [resolve(169,a,82,a)].
412 PP(f10(x),x) | PP(f10(x),c2).  [resolve(171,a,82,a)].
4227 overlaps(c2,c1).  [resolve(225,b,167,a)].
4254 O(c2,c1).  [resolve(4227,a,85,a)].
8713 PP(f10(f7(x,y)),c1) | -O(x,y) | PP(f10(f7(x,y)),y).  [resolve(302,a,140,b)].
8719 PP(f10(x),x) | -O(y,c1) | PP(f10(x),f7(y,c1)) | -PP(f10(x),y).  [resolve(302,b,139,d)].
8722 PP(f10(f7(x,c1)),c1) | -O(x,c1).  [factor(8713,a,c)].
8724 PP(f10(f7(x,c1)),f7(x,c1)) | -O(x,c1) | -PP(f10(f7(x,c1)),x).  [factor(8719,a,c)].
44357 PP(f10(f7(c2,c1)),c1).  [resolve(8722,b,4254,a)].
44380 ppart(f10(f7(c2,c1)),c1).  [resolve(44357,a,84,b)].
65542 PP(f10(f7(c2,c1)),f7(c2,c1)).  [resolve(8724,c,412,b),merge(c),unit_del(b,4254)].
65551 PP(f10(f7(c2,c1)),c2).  [resolve(65542,a,141,b),unit_del(a,4254)].
65552 ppart(f10(f7(c2,c1)),f7(c2,c1)).  [resolve(65542,a,84,b)].
65556 ppart(f10(f7(c2,c1)),c2).  [resolve(65551,a,84,b)].
65581 $F.  [resolve(65556,a,94,c),unit_del(a,65552),unit_del(b,44380)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=36240. Generated=9435893. Kept=65509. proofs=1.
Usable=36234. Sos=18067. Demods=0. Limbo=0, Disabled=11303. Hints=0.
Kept_by_rule=0, Deleted_by_rule=0.
Forward_subsumed=109870. Back_subsumed=66.
Sos_limit_deleted=9260513. Sos_displaced=11115. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=27.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=91896. Nonunit_bsub_feature_tests=14407.
Megabytes=70.00.
User_CPU=399.83, System_CPU=3.90, Wall_clock=404.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 10040 exit (max_proofs) Tue Mar 26 21:17:59 2013
