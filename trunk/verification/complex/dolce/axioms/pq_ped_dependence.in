% Automatically generated from CL/KIF
formulas(sos).
% 'PQ_PED_dependence'
% 'Source: WonderWeb Deliverable D18 Ontology Library final by: Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari (2003).'
% 'Comment: DOLCE axioms from 4.3.7 Dependence and Spatial Dependence'
% 'Import the DOLCE present theory.'
%imports("test/dolce_present").
% dolce_present
% 'Source: WonderWeb Deliverable D18 Ontology Library final by: Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari (2003).'
% 'Comment: DOLCE axioms from 4.3.8 Being Present'
% 'Import the DOLCE time mereology theory.'
%imports("test/dolce_time_mereology").

% 'Import the DOLCE taxonomy.'
%imports("test/dolce_taxonomy").
% 'Subsumption Constraints.'
% 'Level 1 Hierarchy.'
 all x ((ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
% 'Level 2 Hierarchy.'
 all x ((PED(x) | NPED(x) | AS(x) -> ED(x))).
 all x ((EV(x) | STV(x) -> PD(x))).
 all x ((TQ(x) | PQ(x) | AQ(x) -> Q(x))).
 all x ((R(x) -> AB(x))).
% 'Level 3 Hierarchy.'
 all x ((M(x) | F(x) | POB(x) -> PED(x))).
 all x ((NPOB(x) -> NPED(x))).
 all x ((ACH(x) | ACC(x) -> EV(x))).
 all x ((ST(x) | PRO(x) -> STV(x))).
 all x ((TL(x) -> TQ(x))).
 all x ((SL(x) -> PQ(x))).
 all x ((TR(x) | PR(x) | AR(x) -> R(x))).
% 'Level 4 Hierarchy.'
 all x ((APO(x) | NAPO(x) -> POB(x))).
 all x ((MOB(x) | SOB(x) -> NPOB(x))).
 all x ((T(x) -> TR(x))).
 all x ((S(x) -> PR(x))).
% 'Level 5 Hierarchy.'
 all x ((ASO(x) | NASO(x) -> SOB(x))).
% 'Level 6 of Hierarchy'
 all x ((SAG(x) | SC(x) -> ASO(x))).
% 'Partitioning classes in a taxonomy.'
% 'Level 0.'
 all x ((PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
 all x ((ED(x) -> -(PD(x)) & -(Q(x)) & -(AB(x)))).
 all x ((PD(x) -> -(Q(x)) & -(AB(x)))).
 all x ((Q(x) -> -(AB(x)))).
% 'Level 1: Endurant.'
 all x ((ED(x) <-> PED(x) | NPED(x) | AS(x))).
 all x ((PED(x) -> -(NPED(x)) & -(AS(x)))).
 all x ((NPED(x) -> -(AS(x)))).
% 'Level 1: Perdurant.'
 all x ((PD(x) <-> EV(x) | STV(x))).
 all x ((EV(x) -> -(STV(x)))).
% 'Level 1: Quality.'
 all x ((Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
 all x ((TQ(x) -> -(PQ(x)) & -(AQ(x)))).
 all x ((PQ(x) -> -(AQ(x)))).
% 'Level 2: Physical Endurant.'
 all x ((PED(x) <-> M(x) | F(x) | POB(x))).
 all x ((M(x) -> -(F(x)) & -(POB(x)))).
 all x ((F(x) -> -(POB(x)))).
% 'Level 2: Event.'
 all x ((EV(x) <-> ACH(x) | ACC(x))).
 all x ((ACH(x) -> -(ACC(x)))).
% 'Level 2: Stative.'
 all x ((STV(x) <-> ST(x) | PRO(x))).
 all x ((ST(x) -> -(PRO(x)))).
% 'Level 2: Region.'
 all x ((R(x) <-> TR(x) | PR(x) | AR(x))).
 all x ((TR(x) -> -(PR(x)) & -(AR(x)))).
 all x ((PR(x) -> -(AR(x)))).
% 'Level 3: Physical Object.'
 all x ((POB(x) <-> APO(x) | NAPO(x))).
 all x ((APO(x) -> -(NAPO(x)))).
% 'Level 3: Non-Physical Object.'
 all x ((NPOB(x) <-> MOB(x) | SOB(x))).
 all x ((MOB(x) -> -(SOB(x)))).
% 'Level 4: Social Object.'
 all x ((SOB(x) <-> ASO(x) | NASO(x))).
 all x ((ASO(x) -> -(NASO(x)))).
% 'Level 5: Agentive Social Object.'
 all x ((ASO(x) <-> SAG(x) | SC(x))).
 all x ((SAG(x) -> -(SC(x)))).

% 'Argument Restrictions'
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad1'
 all x all y ((P(x, y) -> T(y) & T(y))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad2'
 all x all y ((P(x, y) -> (T(x) <-> T(y)))).
% 'Ground Axioms'
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad5'
 all x all y ((T(x) -> P(x, x))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad6'
 all x all y ((T(x) & T(y) & P(x, y) & P(y, x) -> (x = y))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad7'
 all x all y all z ((T(x) & T(y) & P(x, y) & P(y, z) -> P(x, z))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad8'
 all x all y ((T(x) & T(y) & -(P(x, y)) ->  exists z (T(z) & P(z, x) & -(O(z, y))))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Ad9 - original DOLCE axiom'
% '(if (or (and (exists x (phi x))\r\n\t\t\t(if (forall (x)(phi x))\r\n\t\t\t\t\t(T x)))\r\n\t\t(forall (x) (if (phi x)(T x))))\r\n\t(exists k (= k sigma_x_phi x)))'
% 'Ad9 - edited with argument restrictions and binary sum'
 all x all y ( exists k (Sum(k, x, y) & T(x) & T(y))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Binary Sum'
 all x all y all z ((Sum(z, x, y) <->  all w ((O(w, z) <-> O(w, x) | O(w, y))))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Binary Difference'
 all x all y all z ((Dif(z, x, y) <->  all w ((P(w, z) <-> P(w, x) & -(O(w, y)))))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Additional Axioms for extensionality, existence of the difference and sum'
 all x all y ((-(P(x, y)) ->  exists z (Dif(z, x, y)))).
 all x all y ( exists z (Sum(z, x, y))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Implied parts of sum'
 all x all y all z ((Sum(z, x, y) -> P(x, z) & P(y, z))).
% 'Source: Michael Gruninger, Carmen Chui, and WonderWeb Deliverable D18.'
% 'Implied proper parts of sum'
 all x all y all z ((-(P(x, y)) & Sum(z, x, y) -> PP(y, z))).

% 'Td15 to Td18'
% 'Section 4.3.8 Being Present - WITHOUT EXPANSION'
% 'Argument Restrictions'
% 'Source: WonderWeb Deliverable D18 Ontology Library final by: Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari (2003).'
% 'Identifier: dolce_Td15'
 all x ((ED(x) | PD(x) | Q(x) ->  exists t (PRE(x, t)))).
% 'Ground Axioms'
% 'Source: WonderWeb Deliverable D18 Ontology Library final by: Claudio Masolo, Stefano Borgo, Aldo Gangemi, Nicola Guarino, and Alessandro Oltramari (2003).'
% 'Identifier: dolce_Td17'
 all x all t all t1 ((PRE(x, t) & P(t1, t) -> PRE(x, t1))).
% 'Source: Foundational Choices in DOLCE by: Stefano Borgo, and Claudio Masolo In: Handbook on Ontologies Springer (2009).'
% 'Identifier: dolcecore_A7'
 all x all t ((PRE(x, t) -> T(t))).
% 'Source: Foundational Choices in DOLCE by: Stefano Borgo, and Claudio Masolo In: Handbook on Ontologies Springer (2009).'
% 'Identifier: dolcecore_A9'
% 'Additivity'
 all x all t all t1 all t2 ((PRE(x, t1) & PRE(x, t2) & SUM(t, t1, t2) -> PRE(x, t))).


% 'Taken directly from HETS axioms - going from sorted logic to unsorted logic.'
 all x all y ((PED(x) & PQ(y) -> (SD(x, y) <->  exists t (PRE(x, t)) &  all t ((PRE(x, t) -> PRE(y, t)))))).
 all x ((PED(x) ->  exists y (PQ(y) & SD(x, y)))).
 all x all y ((PQ(x) & PED(y) -> (SD(x, y) <->  exists t (PRE(x, t)) &  all t ((PRE(x, t) -> PRE(y, t)))))).
 all x ((PQ(x) ->  exists y (PED(y) & SD(x, y)))).

end_of_list.
